2023-07-10 14:22:35,711 p=7698 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 14:22:39,022 p=7698 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 14:22:39,023 p=7698 u=kubernetmachine n=ansible | PLAY [localhost] ******************************************************************************************************************************
2023-07-10 14:22:39,036 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.014)       0:00:00.014 ****** 
2023-07-10 14:22:39,061 p=7698 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] ***********************************************************************************************
2023-07-10 14:22:39,062 p=7698 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:22:39,065 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.028)       0:00:00.043 ****** 
2023-07-10 14:22:39,120 p=7698 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] *************************************************************************************************
2023-07-10 14:22:39,121 p=7698 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:22:39,124 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.058)       0:00:00.102 ****** 
2023-07-10 14:22:39,141 p=7698 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] **************************************************************************************
2023-07-10 14:22:39,142 p=7698 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:22:39,153 p=7698 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 14:22:39,153 p=7698 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] ********************************************************************************************
2023-07-10 14:22:39,153 p=7698 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:22:39,154 p=7698 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 14:22:39,154 p=7698 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] *******************************************************************************************************
2023-07-10 14:22:39,154 p=7698 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:22:39,154 p=7698 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 14:22:39,156 p=7698 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] ***************************************************************************************************
2023-07-10 14:22:39,156 p=7698 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:22:39,156 p=7698 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 14:22:39,156 p=7698 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] *******************************************************************************************************
2023-07-10 14:22:39,157 p=7698 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:22:39,157 p=7698 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 14:22:39,157 p=7698 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] ***************************************************************************************************
2023-07-10 14:22:39,157 p=7698 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:22:39,158 p=7698 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 14:22:39,158 p=7698 u=kubernetmachine n=ansible | PLAY [bastion[0]] *****************************************************************************************************************************
2023-07-10 14:22:39,159 p=7698 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:22:39,160 p=7698 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] *************************************************************************************************************
2023-07-10 14:22:39,187 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.063)       0:00:00.166 ****** 
2023-07-10 14:22:39,227 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.039)       0:00:00.205 ****** 
2023-07-10 14:22:39,266 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.038)       0:00:00.244 ****** 
2023-07-10 14:22:39,303 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.037)       0:00:00.281 ****** 
2023-07-10 14:22:39,339 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.036)       0:00:00.317 ****** 
2023-07-10 14:22:39,376 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.036)       0:00:00.354 ****** 
2023-07-10 14:22:39,415 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.038)       0:00:00.393 ****** 
2023-07-10 14:22:39,455 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.040)       0:00:00.433 ****** 
2023-07-10 14:22:39,491 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.036)       0:00:00.469 ****** 
2023-07-10 14:22:39,528 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.036)       0:00:00.506 ****** 
2023-07-10 14:22:39,727 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.198)       0:00:00.705 ****** 
2023-07-10 14:22:39,777 p=7698 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ************************************************************************************************
2023-07-10 14:22:39,778 p=7698 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:22:39,819 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.092)       0:00:00.797 ****** 
2023-07-10 14:22:39,846 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.026)       0:00:00.824 ****** 
2023-07-10 14:22:39,865 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.019)       0:00:00.843 ****** 
2023-07-10 14:22:39,888 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.022)       0:00:00.866 ****** 
2023-07-10 14:22:39,908 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.019)       0:00:00.886 ****** 
2023-07-10 14:22:39,928 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.019)       0:00:00.906 ****** 
2023-07-10 14:22:39,958 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:39 +0300 (0:00:00.030)       0:00:00.936 ****** 
2023-07-10 14:22:39,993 p=7698 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:22:42,844 p=7698 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] ***************************************************************************************************
2023-07-10 14:22:42,844 p=7698 u=kubernetmachine n=ansible | fatal: [node1]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.", "unreachable": true}
2023-07-10 14:22:42,845 p=7698 u=kubernetmachine n=ansible | NO MORE HOSTS LEFT ****************************************************************************************************************************
2023-07-10 14:22:42,846 p=7698 u=kubernetmachine n=ansible | PLAY RECAP ************************************************************************************************************************************
2023-07-10 14:22:42,846 p=7698 u=kubernetmachine n=ansible | localhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-10 14:22:42,846 p=7698 u=kubernetmachine n=ansible | node1                      : ok=1    changed=0    unreachable=1    failed=0    skipped=16   rescued=0    ignored=0   
2023-07-10 14:22:42,847 p=7698 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:22:42 +0300 (0:00:02.888)       0:00:03.825 ****** 
2023-07-10 14:22:42,847 p=7698 u=kubernetmachine n=ansible | =============================================================================== 
2023-07-10 14:22:42,847 p=7698 u=kubernetmachine n=ansible | bootstrap-os : Fetch /etc/os-release --------------------------------------------------------------------------------------------------- 2.89s
2023-07-10 14:22:42,847 p=7698 u=kubernetmachine n=ansible | download : download | Download files / images ------------------------------------------------------------------------------------------ 0.20s
2023-07-10 14:22:42,847 p=7698 u=kubernetmachine n=ansible | kubespray-defaults : Configure defaults ------------------------------------------------------------------------------------------------ 0.09s
2023-07-10 14:22:42,847 p=7698 u=kubernetmachine n=ansible | Check that jinja is not too old (install via pip) -------------------------------------------------------------------------------------- 0.06s
2023-07-10 14:22:42,848 p=7698 u=kubernetmachine n=ansible | Check that python netaddr is installed ------------------------------------------------------------------------------------------------- 0.06s
2023-07-10 14:22:42,848 p=7698 u=kubernetmachine n=ansible | download : prep_download | Create staging directory on remote node --------------------------------------------------------------------- 0.04s
2023-07-10 14:22:42,848 p=7698 u=kubernetmachine n=ansible | download : prep_download | Set a few facts --------------------------------------------------------------------------------------------- 0.04s
2023-07-10 14:22:42,848 p=7698 u=kubernetmachine n=ansible | download : prep_download | Register docker images info --------------------------------------------------------------------------------- 0.04s
2023-07-10 14:22:42,848 p=7698 u=kubernetmachine n=ansible | download : prep_download | On localhost, check if passwordless root is possible -------------------------------------------------------- 0.04s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | download : prep_download | On localhost, check if user has access to the container runtime without using sudo -------------------------- 0.04s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | download : prep_download | Check that local user is in group or can become root -------------------------------------------------------- 0.04s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | download : prep_download | Parse the outputs of the previous commands ------------------------------------------------------------------ 0.04s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | download : download | Get kubeadm binary and list of required images ------------------------------------------------------------------- 0.04s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | download : prep_download | Create local cache for files and images on control node ----------------------------------------------------- 0.04s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true ----------------------------------------- 0.03s
2023-07-10 14:22:42,849 p=7698 u=kubernetmachine n=ansible | Check 2.14.0 <= Ansible version < 2.16.0 ----------------------------------------------------------------------------------------------- 0.03s
2023-07-10 14:22:42,850 p=7698 u=kubernetmachine n=ansible | kubespray-defaults : Gather ansible_default_ipv4 from all hosts ------------------------------------------------------------------------ 0.03s
2023-07-10 14:22:42,850 p=7698 u=kubernetmachine n=ansible | kubespray-defaults : set fallback_ips -------------------------------------------------------------------------------------------------- 0.02s
2023-07-10 14:22:42,850 p=7698 u=kubernetmachine n=ansible | kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames ------------------------------------------------------------ 0.02s
2023-07-10 14:22:42,850 p=7698 u=kubernetmachine n=ansible | kubespray-defaults : Populates no_proxy to all hosts ----------------------------------------------------------------------------------- 0.02s
2023-07-10 14:26:08,933 p=7844 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 14:26:13,249 p=7844 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 14:26:13,251 p=7844 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************
2023-07-10 14:26:13,273 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.023)       0:00:00.023 ****** 
2023-07-10 14:26:13,312 p=7844 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************
2023-07-10 14:26:13,312 p=7844 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:26:13,317 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.044)       0:00:00.068 ****** 
2023-07-10 14:26:13,374 p=7844 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************
2023-07-10 14:26:13,374 p=7844 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:26:13,377 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.060)       0:00:00.128 ****** 
2023-07-10 14:26:13,394 p=7844 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************
2023-07-10 14:26:13,395 p=7844 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:26:13,405 p=7844 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 14:26:13,406 p=7844 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************
2023-07-10 14:26:13,406 p=7844 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:26:13,407 p=7844 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 14:26:13,407 p=7844 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************
2023-07-10 14:26:13,407 p=7844 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:26:13,408 p=7844 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 14:26:13,408 p=7844 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************
2023-07-10 14:26:13,408 p=7844 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:26:13,409 p=7844 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 14:26:13,409 p=7844 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************
2023-07-10 14:26:13,409 p=7844 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:26:13,409 p=7844 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 14:26:13,410 p=7844 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************
2023-07-10 14:26:13,410 p=7844 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:26:13,411 p=7844 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 14:26:13,412 p=7844 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************
2023-07-10 14:26:13,412 p=7844 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:26:13,414 p=7844 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************
2023-07-10 14:26:13,440 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.062)       0:00:00.191 ****** 
2023-07-10 14:26:13,478 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.038)       0:00:00.229 ****** 
2023-07-10 14:26:13,517 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.038)       0:00:00.267 ****** 
2023-07-10 14:26:13,552 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.035)       0:00:00.302 ****** 
2023-07-10 14:26:13,587 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.035)       0:00:00.338 ****** 
2023-07-10 14:26:13,623 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.035)       0:00:00.373 ****** 
2023-07-10 14:26:13,667 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.043)       0:00:00.417 ****** 
2023-07-10 14:26:13,710 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.043)       0:00:00.461 ****** 
2023-07-10 14:26:13,749 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.038)       0:00:00.500 ****** 
2023-07-10 14:26:13,788 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.038)       0:00:00.539 ****** 
2023-07-10 14:26:13,978 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:13 +0300 (0:00:00.190)       0:00:00.729 ****** 
2023-07-10 14:26:14,024 p=7844 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************
2023-07-10 14:26:14,024 p=7844 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:26:14,064 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.086)       0:00:00.815 ****** 
2023-07-10 14:26:14,090 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.025)       0:00:00.841 ****** 
2023-07-10 14:26:14,110 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.020)       0:00:00.861 ****** 
2023-07-10 14:26:14,132 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.021)       0:00:00.883 ****** 
2023-07-10 14:26:14,151 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.018)       0:00:00.902 ****** 
2023-07-10 14:26:14,171 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.020)       0:00:00.922 ****** 
2023-07-10 14:26:14,204 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:14 +0300 (0:00:00.032)       0:00:00.955 ****** 
2023-07-10 14:26:14,240 p=7844 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:26:17,086 p=7844 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************
2023-07-10 14:26:17,087 p=7844 u=kubernetmachine n=ansible | fatal: [node1]: UNREACHABLE! => {"changed": false, "msg": "Invalid/incorrect password: Permission denied, please try again.", "unreachable": true}
2023-07-10 14:26:17,088 p=7844 u=kubernetmachine n=ansible | NO MORE HOSTS LEFT ***************************************************************************
2023-07-10 14:26:17,088 p=7844 u=kubernetmachine n=ansible | PLAY RECAP ***********************************************************************************
2023-07-10 14:26:17,089 p=7844 u=kubernetmachine n=ansible | localhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-10 14:26:17,089 p=7844 u=kubernetmachine n=ansible | node1                      : ok=1    changed=0    unreachable=1    failed=0    skipped=16   rescued=0    ignored=0   
2023-07-10 14:26:17,089 p=7844 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:26:17 +0300 (0:00:02.885)       0:00:03.840 ****** 
2023-07-10 14:26:17,089 p=7844 u=kubernetmachine n=ansible | =============================================================================== 
2023-07-10 14:26:17,089 p=7844 u=kubernetmachine n=ansible | bootstrap-os : Fetch /etc/os-release -------------------------------------------------- 2.89s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | download : download | Download files / images ----------------------------------------- 0.19s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | kubespray-defaults : Configure defaults ----------------------------------------------- 0.09s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | Check that jinja is not too old (install via pip) ------------------------------------- 0.06s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | Check that python netaddr is installed ------------------------------------------------ 0.06s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | Check 2.14.0 <= Ansible version < 2.16.0 ---------------------------------------------- 0.04s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | download : prep_download | Create staging directory on remote node -------------------- 0.04s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | download : prep_download | Register docker images info -------------------------------- 0.04s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | download : prep_download | Create local cache for files and images on control node ---- 0.04s
2023-07-10 14:26:17,090 p=7844 u=kubernetmachine n=ansible | download : download | Get kubeadm binary and list of required images ------------------ 0.04s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | download : prep_download | Set a few facts -------------------------------------------- 0.04s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | download : prep_download | On localhost, check if passwordless root is possible ------- 0.04s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | download : prep_download | Check that local user is in group or can become root ------- 0.04s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | download : prep_download | On localhost, check if user has access to the container runtime without using sudo --- 0.04s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | download : prep_download | Parse the outputs of the previous commands ----------------- 0.04s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true --- 0.03s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | kubespray-defaults : Gather ansible_default_ipv4 from all hosts ----------------------- 0.03s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | kubespray-defaults : set fallback_ips ------------------------------------------------- 0.02s
2023-07-10 14:26:17,091 p=7844 u=kubernetmachine n=ansible | kubespray-defaults : Populates no_proxy to all hosts ---------------------------------- 0.02s
2023-07-10 14:26:17,092 p=7844 u=kubernetmachine n=ansible | kubespray-defaults : create fallback_ips_base ----------------------------------------- 0.02s
2023-07-10 14:40:24,960 p=8199 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 14:40:29,147 p=8199 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 14:40:29,148 p=8199 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************
2023-07-10 14:40:29,161 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.014)       0:00:00.014 ****** 
2023-07-10 14:40:29,186 p=8199 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************
2023-07-10 14:40:29,186 p=8199 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:29,190 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.029)       0:00:00.043 ****** 
2023-07-10 14:40:29,245 p=8199 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************
2023-07-10 14:40:29,245 p=8199 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:29,249 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.059)       0:00:00.102 ****** 
2023-07-10 14:40:29,266 p=8199 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************
2023-07-10 14:40:29,266 p=8199 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:29,277 p=8199 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 14:40:29,277 p=8199 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************
2023-07-10 14:40:29,277 p=8199 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:40:29,278 p=8199 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 14:40:29,278 p=8199 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************
2023-07-10 14:40:29,278 p=8199 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:40:29,279 p=8199 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 14:40:29,280 p=8199 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************
2023-07-10 14:40:29,280 p=8199 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:40:29,280 p=8199 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 14:40:29,281 p=8199 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************
2023-07-10 14:40:29,281 p=8199 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:40:29,281 p=8199 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 14:40:29,281 p=8199 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************
2023-07-10 14:40:29,281 p=8199 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:40:29,282 p=8199 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 14:40:29,283 p=8199 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************
2023-07-10 14:40:29,283 p=8199 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:40:29,285 p=8199 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************
2023-07-10 14:40:29,311 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.061)       0:00:00.164 ****** 
2023-07-10 14:40:29,350 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.039)       0:00:00.203 ****** 
2023-07-10 14:40:29,389 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.038)       0:00:00.242 ****** 
2023-07-10 14:40:29,425 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.036)       0:00:00.279 ****** 
2023-07-10 14:40:29,462 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.036)       0:00:00.315 ****** 
2023-07-10 14:40:29,499 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.037)       0:00:00.353 ****** 
2023-07-10 14:40:29,538 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.039)       0:00:00.392 ****** 
2023-07-10 14:40:29,578 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.039)       0:00:00.431 ****** 
2023-07-10 14:40:29,613 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.035)       0:00:00.466 ****** 
2023-07-10 14:40:29,648 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.035)       0:00:00.502 ****** 
2023-07-10 14:40:29,835 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.186)       0:00:00.688 ****** 
2023-07-10 14:40:29,879 p=8199 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************
2023-07-10 14:40:29,880 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:40:29,920 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.085)       0:00:00.773 ****** 
2023-07-10 14:40:29,946 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.026)       0:00:00.800 ****** 
2023-07-10 14:40:29,965 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.018)       0:00:00.819 ****** 
2023-07-10 14:40:29,986 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:29 +0300 (0:00:00.020)       0:00:00.840 ****** 
2023-07-10 14:40:30,005 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.018)       0:00:00.858 ****** 
2023-07-10 14:40:30,023 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.017)       0:00:00.876 ****** 
2023-07-10 14:40:30,053 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.029)       0:00:00.906 ****** 
2023-07-10 14:40:30,088 p=8199 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:40:30,578 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************
2023-07-10 14:40:30,579 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"\r\nNAME=\"Ubuntu\"\r\nVERSION_ID=\"22.04\"\r\nVERSION=\"22.04.2 LTS (Jammy Jellyfish)\"\r\nVERSION_CODENAME=jammy\r\nID=ubuntu\r\nID_LIKE=debian\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nUBUNTU_CODENAME=jammy\r\n", "stdout_lines": ["PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"", "NAME=\"Ubuntu\"", "VERSION_ID=\"22.04\"", "VERSION=\"22.04.2 LTS (Jammy Jellyfish)\"", "VERSION_CODENAME=jammy", "ID=ubuntu", "ID_LIKE=debian", "HOME_URL=\"https://www.ubuntu.com/\"", "SUPPORT_URL=\"https://help.ubuntu.com/\"", "BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"", "PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"", "UBUNTU_CODENAME=jammy"]}
2023-07-10 14:40:30,584 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.531)       0:00:01.437 ****** 
2023-07-10 14:40:30,606 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.021)       0:00:01.459 ****** 
2023-07-10 14:40:30,626 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.020)       0:00:01.479 ****** 
2023-07-10 14:40:30,646 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.020)       0:00:01.499 ****** 
2023-07-10 14:40:30,665 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.019)       0:00:01.518 ****** 
2023-07-10 14:40:30,684 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.018)       0:00:01.537 ****** 
2023-07-10 14:40:30,701 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.017)       0:00:01.555 ****** 
2023-07-10 14:40:30,716 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : include_tasks] **********************************************************
2023-07-10 14:40:30,730 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1
2023-07-10 14:40:30,739 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.037)       0:00:01.592 ****** 
2023-07-10 14:40:30,773 p=8199 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:40:30,787 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check if bootstrap is needed] *******************************************
2023-07-10 14:40:30,787 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "/usr/bin/python3\r\n", "stdout_lines": ["/usr/bin/python3"]}
2023-07-10 14:40:30,792 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.053)       0:00:01.645 ****** 
2023-07-10 14:40:30,829 p=8199 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:40:30,847 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check http::proxy in apt configuration files] ***************************
2023-07-10 14:40:30,848 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 14:40:30,851 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.059)       0:00:01.705 ****** 
2023-07-10 14:40:30,877 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.025)       0:00:01.731 ****** 
2023-07-10 14:40:30,913 p=8199 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:40:30,930 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check https::proxy in apt configuration files] **************************
2023-07-10 14:40:30,931 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 14:40:30,935 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.057)       0:00:01.788 ****** 
2023-07-10 14:40:30,960 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.025)       0:00:01.814 ****** 
2023-07-10 14:40:30,979 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.018)       0:00:01.833 ****** 
2023-07-10 14:40:30,998 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:30 +0300 (0:00:00.018)       0:00:01.851 ****** 
2023-07-10 14:40:31,035 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Set the ansible_python_interpreter fact] ********************************
2023-07-10 14:40:31,035 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_python_interpreter": "/usr/bin/python3"}, "changed": false}
2023-07-10 14:40:31,044 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:31 +0300 (0:00:00.046)       0:00:01.897 ****** 
2023-07-10 14:40:31,869 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Install dbus for the hostname module] ***********************************
2023-07-10 14:40:31,869 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688975246, "cache_updated": false, "changed": false}
2023-07-10 14:40:31,873 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:31 +0300 (0:00:00.829)       0:00:02.727 ****** 
2023-07-10 14:40:31,891 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:31 +0300 (0:00:00.018)       0:00:02.745 ****** 
2023-07-10 14:40:31,911 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:31 +0300 (0:00:00.019)       0:00:02.764 ****** 
2023-07-10 14:40:32,288 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Create remote_tmp for it is used by another module] *********************
2023-07-10 14:40:32,288 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.ansible/tmp", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:40:32,292 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:32 +0300 (0:00:00.381)       0:00:03.145 ****** 
2023-07-10 14:40:32,938 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Gather host facts to get ansible_os_family] *****************************
2023-07-10 14:40:32,938 p=8199 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:40:32,943 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:32 +0300 (0:00:00.650)       0:00:03.796 ****** 
2023-07-10 14:40:33,652 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
2023-07-10 14:40:33,652 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"ansible_facts": {"ansible_domain": "", "ansible_fqdn": "kubernetmachinetwo", "ansible_hostname": "node1", "ansible_nodename": "node1"}, "changed": true, "name": "node1"}
2023-07-10 14:40:33,656 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:33 +0300 (0:00:00.713)       0:00:04.509 ****** 
2023-07-10 14:40:33,676 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:33 +0300 (0:00:00.019)       0:00:04.529 ****** 
2023-07-10 14:40:33,696 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:33 +0300 (0:00:00.020)       0:00:04.550 ****** 
2023-07-10 14:40:33,721 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:33 +0300 (0:00:00.024)       0:00:04.574 ****** 
2023-07-10 14:40:33,942 p=8199 u=kubernetmachine n=ansible | TASK [bootstrap-os : Ensure bash_completion.d folder exists] *********************************
2023-07-10 14:40:33,942 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:40:33,959 p=8199 u=kubernetmachine n=ansible | PLAY [Gather facts] **************************************************************************
2023-07-10 14:40:33,969 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:33 +0300 (0:00:00.248)       0:00:04.823 ****** 
2023-07-10 14:40:34,264 p=8199 u=kubernetmachine n=ansible | TASK [Gather minimal facts] ******************************************************************
2023-07-10 14:40:34,264 p=8199 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:40:34,268 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:34 +0300 (0:00:00.298)       0:00:05.121 ****** 
2023-07-10 14:40:34,555 p=8199 u=kubernetmachine n=ansible | TASK [Gather necessary facts (network)] ******************************************************
2023-07-10 14:40:34,556 p=8199 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:40:34,559 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:34 +0300 (0:00:00.291)       0:00:05.412 ****** 
2023-07-10 14:40:35,227 p=8199 u=kubernetmachine n=ansible | TASK [Gather necessary facts (hardware)] *****************************************************
2023-07-10 14:40:35,227 p=8199 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:40:35,249 p=8199 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd] **********************************************************************
2023-07-10 14:40:35,451 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.891)       0:00:06.304 ****** 
2023-07-10 14:40:35,481 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.030)       0:00:06.335 ****** 
2023-07-10 14:40:35,512 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.030)       0:00:06.365 ****** 
2023-07-10 14:40:35,601 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.088)       0:00:06.454 ****** 
2023-07-10 14:40:35,630 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.029)       0:00:06.484 ****** 
2023-07-10 14:40:35,659 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.029)       0:00:06.513 ****** 
2023-07-10 14:40:35,690 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.030)       0:00:06.543 ****** 
2023-07-10 14:40:35,723 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.033)       0:00:06.576 ****** 
2023-07-10 14:40:35,751 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.028)       0:00:06.605 ****** 
2023-07-10 14:40:35,780 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:35 +0300 (0:00:00.028)       0:00:06.633 ****** 
2023-07-10 14:40:37,361 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:01.580)       0:00:08.214 ****** 
2023-07-10 14:40:37,399 p=8199 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************
2023-07-10 14:40:37,400 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:40:37,436 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.075)       0:00:08.289 ****** 
2023-07-10 14:40:37,491 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.054)       0:00:08.344 ****** 
2023-07-10 14:40:37,554 p=8199 u=kubernetmachine n=ansible | TASK [kubespray-defaults : create fallback_ips_base] *****************************************
2023-07-10 14:40:37,555 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"fallback_ips_base": "---\nnode1: \"192.168.122.29\"\n"}, "changed": false}
2023-07-10 14:40:37,560 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.069)       0:00:08.414 ****** 
2023-07-10 14:40:37,609 p=8199 u=kubernetmachine n=ansible | TASK [kubespray-defaults : set fallback_ips] *************************************************
2023-07-10 14:40:37,610 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"fallback_ips": {"node1": "192.168.122.29"}}, "changed": false}
2023-07-10 14:40:37,619 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.058)       0:00:08.472 ****** 
2023-07-10 14:40:37,652 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.033)       0:00:08.506 ****** 
2023-07-10 14:40:37,688 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.035)       0:00:08.541 ****** 
2023-07-10 14:40:37,726 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.038)       0:00:08.580 ****** 
2023-07-10 14:40:37,994 p=8199 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************
2023-07-10 14:40:37,994 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 14:40:38,000 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:37 +0300 (0:00:00.273)       0:00:08.853 ****** 
2023-07-10 14:40:38,420 p=8199 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************
2023-07-10 14:40:38,421 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "comment": "Kubernetes user", "create_home": false, "group": 999, "home": "/home/kube", "name": "kube", "shell": "/sbin/nologin", "state": "present", "system": true, "uid": 998}
2023-07-10 14:40:38,430 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:38 +0300 (0:00:00.430)       0:00:09.283 ****** 
2023-07-10 14:40:38,749 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *******************************
2023-07-10 14:40:38,750 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=swap) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "swap", "name": "swap", "opts": "defaults", "passno": "0"}
2023-07-10 14:40:38,897 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=none) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": true, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "none", "name": "none", "opts": "defaults", "passno": "0"}
2023-07-10 14:40:38,905 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:38 +0300 (0:00:00.475)       0:00:09.759 ****** 
2023-07-10 14:40:39,143 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check swap] ****************************************************
2023-07-10 14:40:39,144 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/sbin/swapon", "-s"], "delta": "0:00:00.002149", "end": "2023-07-10 11:40:39.131393", "msg": "", "rc": 0, "start": "2023-07-10 11:40:39.129244", "stderr": "", "stderr_lines": [], "stdout": "Filename\t\t\t\tType\t\tSize\t\tUsed\t\tPriority\n/swap.img                               file\t\t2248700\t\t0\t\t-2", "stdout_lines": ["Filename\t\t\t\tType\t\tSize\t\tUsed\t\tPriority", "/swap.img                               file\t\t2248700\t\t0\t\t-2"]}
2023-07-10 14:40:39,149 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.243)       0:00:10.002 ****** 
2023-07-10 14:40:39,341 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Disable swap] **************************************************
2023-07-10 14:40:39,341 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/sbin/swapoff", "-a"], "delta": "0:00:00.024348", "end": "2023-07-10 11:40:39.328195", "msg": "", "rc": 0, "start": "2023-07-10 11:40:39.303847", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:40:39,347 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.197)       0:00:10.200 ****** 
2023-07-10 14:40:39,374 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.027)       0:00:10.228 ****** 
2023-07-10 14:40:39,398 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.023)       0:00:10.251 ****** 
2023-07-10 14:40:39,423 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.025)       0:00:10.276 ****** 
2023-07-10 14:40:39,450 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.027)       0:00:10.304 ****** 
2023-07-10 14:40:39,762 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************
2023-07-10 14:40:39,763 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:40:39,769 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:39 +0300 (0:00:00.318)       0:00:10.622 ****** 
2023-07-10 14:40:40,011 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************
2023-07-10 14:40:40,012 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 14:40:40,017 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.248)       0:00:10.871 ****** 
2023-07-10 14:40:40,060 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************
2023-07-10 14:40:40,061 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 14:40:40,066 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.048)       0:00:10.919 ****** 
2023-07-10 14:40:40,233 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************
2023-07-10 14:40:40,233 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.002113", "end": "2023-07-10 11:40:40.221602", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 11:40:40.219489", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:40:40,239 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.173)       0:00:11.093 ****** 
2023-07-10 14:40:40,406 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************
2023-07-10 14:40:40,406 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 14:40:40,413 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.173)       0:00:11.266 ****** 
2023-07-10 14:40:40,580 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************
2023-07-10 14:40:40,581 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 14:40:40,587 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.174)       0:00:11.441 ****** 
2023-07-10 14:40:40,838 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************
2023-07-10 14:40:40,838 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 14:40:40,845 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.257)       0:00:11.698 ****** 
2023-07-10 14:40:40,932 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************
2023-07-10 14:40:40,933 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 14:40:40,939 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:40 +0300 (0:00:00.093)       0:00:11.792 ****** 
2023-07-10 14:40:41,021 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********
2023-07-10 14:40:41,022 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:41,028 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.089)       0:00:11.882 ****** 
2023-07-10 14:40:41,201 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************
2023-07-10 14:40:41,202 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.003642", "end": "2023-07-10 11:40:41.188546", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 11:40:41.184904", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:40:41,207 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.178)       0:00:12.060 ****** 
2023-07-10 14:40:41,396 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************
2023-07-10 14:40:41,396 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.003557", "end": "2023-07-10 11:40:41.383383", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 11:40:41.379826", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 14:40:41,402 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.194)       0:00:12.255 ****** 
2023-07-10 14:40:41,493 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******
2023-07-10 14:40:41,494 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 14:40:41,500 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.098)       0:00:12.353 ****** 
2023-07-10 14:40:41,574 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************
2023-07-10 14:40:41,575 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 14:40:41,581 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.080)       0:00:12.434 ****** 
2023-07-10 14:40:41,748 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************
2023-07-10 14:40:41,749 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:40:41,755 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.174)       0:00:12.608 ****** 
2023-07-10 14:40:41,798 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************
2023-07-10 14:40:41,799 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": true}, "changed": false}
2023-07-10 14:40:41,804 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.049)       0:00:12.658 ****** 
2023-07-10 14:40:41,849 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************
2023-07-10 14:40:41,850 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 14:40:41,857 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.052)       0:00:12.710 ****** 
2023-07-10 14:40:41,879 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:41 +0300 (0:00:00.022)       0:00:12.732 ****** 
2023-07-10 14:40:42,045 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************
2023-07-10 14:40:42,046 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:40:42,052 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.172)       0:00:12.905 ****** 
2023-07-10 14:40:42,075 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.023)       0:00:12.929 ****** 
2023-07-10 14:40:42,245 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************
2023-07-10 14:40:42,246 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688974668.0911162, "block_size": 4096, "blocks": 8, "ctime": 1688974668.0911162, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 132267, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1651738684.0, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1735, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 14:40:42,252 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.176)       0:00:13.105 ****** 
2023-07-10 14:40:42,294 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********
2023-07-10 14:40:42,295 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 14:40:42,300 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.048)       0:00:13.153 ****** 
2023-07-10 14:40:42,325 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.024)       0:00:13.178 ****** 
2023-07-10 14:40:42,368 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************
2023-07-10 14:40:42,368 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 14:40:42,373 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.048)       0:00:13.227 ****** 
2023-07-10 14:40:42,452 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************
2023-07-10 14:40:42,453 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 14:40:42,458 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.084)       0:00:13.311 ****** 
2023-07-10 14:40:42,542 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************
2023-07-10 14:40:42,543 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": []}, "changed": false}
2023-07-10 14:40:42,549 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.090)       0:00:13.402 ****** 
2023-07-10 14:40:42,571 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.022)       0:00:13.424 ****** 
2023-07-10 14:40:42,676 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ***
2023-07-10 14:40:42,677 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "127.0.0.53", "supersede_nameserver": "supersede domain-name-servers ;"}, "changed": false}
2023-07-10 14:40:42,688 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.117)       0:00:13.541 ****** 
2023-07-10 14:40:42,780 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************
2023-07-10 14:40:42,780 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 14:40:42,788 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.099)       0:00:13.641 ****** 
2023-07-10 14:40:42,810 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.022)       0:00:13.664 ****** 
2023-07-10 14:40:42,978 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************
2023-07-10 14:40:42,978 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 14:40:42,984 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:42 +0300 (0:00:00.173)       0:00:13.837 ****** 
2023-07-10 14:40:43,008 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.023)       0:00:13.861 ****** 
2023-07-10 14:40:43,069 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] ***
2023-07-10 14:40:43,070 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,088 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,096 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.087)       0:00:13.949 ****** 
2023-07-10 14:40:43,146 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] *************
2023-07-10 14:40:43,147 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,153 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.057)       0:00:14.006 ****** 
2023-07-10 14:40:43,197 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if non systemd OS type] ***********************************
2023-07-10 14:40:43,198 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,203 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.050)       0:00:14.057 ****** 
2023-07-10 14:40:43,254 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if the os does not support] *******************************
2023-07-10 14:40:43,255 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,261 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.057)       0:00:14.114 ****** 
2023-07-10 14:40:43,310 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown network plugin] ********************************
2023-07-10 14:40:43,311 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,317 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.056)       0:00:14.170 ****** 
2023-07-10 14:40:43,367 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *********************
2023-07-10 14:40:43,368 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,374 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.056)       0:00:14.227 ****** 
2023-07-10 14:40:43,428 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
2023-07-10 14:40:43,428 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,454 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,481 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,506 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'helm_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,528 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,536 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.162)       0:00:14.390 ****** 
2023-07-10 14:40:43,597 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *****************************
2023-07-10 14:40:43,597 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,604 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.067)       0:00:14.457 ****** 
2023-07-10 14:40:43,651 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for masters] ***********************
2023-07-10 14:40:43,651 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,657 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.052)       0:00:14.510 ****** 
2023-07-10 14:40:43,705 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for nodes] *************************
2023-07-10 14:40:43,706 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,712 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.055)       0:00:14.566 ****** 
2023-07-10 14:40:43,748 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.035)       0:00:14.601 ****** 
2023-07-10 14:40:43,797 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if ip var does not match local ips] ***********************
2023-07-10 14:40:43,798 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:43,805 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:43 +0300 (0:00:00.057)       0:00:14.659 ****** 
2023-07-10 14:40:44,435 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure ping package] *******************************************
2023-07-10 14:40:44,435 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688975246, "cache_updated": false, "changed": false}
2023-07-10 14:40:44,440 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.634)       0:00:15.293 ****** 
2023-07-10 14:40:44,631 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *****************************
2023-07-10 14:40:44,632 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["ping", "-c1", "192.168.122.29"], "delta": "0:00:00.007565", "end": "2023-07-10 11:40:44.619053", "msg": "", "rc": 0, "start": "2023-07-10 11:40:44.611488", "stderr": "", "stderr_lines": [], "stdout": "PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.\n64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.027 ms\n\n--- 192.168.122.29 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 0.027/0.027/0.027/0.000 ms", "stdout_lines": ["PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.", "64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.027 ms", "", "--- 192.168.122.29 ping statistics ---", "1 packets transmitted, 1 received, 0% packet loss, time 0ms", "rtt min/avg/max/mdev = 0.027/0.027/0.027/0.000 ms"]}
2023-07-10 14:40:44,637 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.197)       0:00:15.491 ****** 
2023-07-10 14:40:44,684 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] *********
2023-07-10 14:40:44,685 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:44,692 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.054)       0:00:15.545 ****** 
2023-07-10 14:40:44,725 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.033)       0:00:15.578 ****** 
2023-07-10 14:40:44,760 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.034)       0:00:15.613 ****** 
2023-07-10 14:40:44,807 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if bad hostname] ******************************************
2023-07-10 14:40:44,807 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:44,813 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.052)       0:00:15.666 ****** 
2023-07-10 14:40:44,844 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.031)       0:00:15.697 ****** 
2023-07-10 14:40:44,916 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] **********
2023-07-10 14:40:44,917 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:44,923 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:44 +0300 (0:00:00.079)       0:00:15.776 ****** 
2023-07-10 14:40:44,997 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ****************
2023-07-10 14:40:44,997 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,003 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.080)       0:00:15.857 ****** 
2023-07-10 14:40:45,127 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
2023-07-10 14:40:45,128 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,137 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.133)       0:00:15.990 ****** 
2023-07-10 14:40:45,176 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.039)       0:00:16.029 ****** 
2023-07-10 14:40:45,252 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown dns mode] **************************************
2023-07-10 14:40:45,253 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,262 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.086)       0:00:16.115 ****** 
2023-07-10 14:40:45,338 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *******************************
2023-07-10 14:40:45,339 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,348 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.085)       0:00:16.201 ****** 
2023-07-10 14:40:45,427 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown cert_management] *******************************
2023-07-10 14:40:45,428 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,437 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.089)       0:00:16.290 ****** 
2023-07-10 14:40:45,514 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *******************************
2023-07-10 14:40:45,515 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,524 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.086)       0:00:16.377 ****** 
2023-07-10 14:40:45,598 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***
2023-07-10 14:40:45,599 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,608 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.084)       0:00:16.461 ****** 
2023-07-10 14:40:45,679 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***
2023-07-10 14:40:45,680 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,688 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.080)       0:00:16.542 ****** 
2023-07-10 14:40:45,763 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] ***
2023-07-10 14:40:45,764 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:45,774 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.085)       0:00:16.628 ****** 
2023-07-10 14:40:45,824 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.049)       0:00:16.677 ****** 
2023-07-10 14:40:45,873 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.048)       0:00:16.726 ****** 
2023-07-10 14:40:45,910 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.037)       0:00:16.763 ****** 
2023-07-10 14:40:45,948 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.038)       0:00:16.801 ****** 
2023-07-10 14:40:45,984 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:45 +0300 (0:00:00.036)       0:00:16.837 ****** 
2023-07-10 14:40:46,021 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:46 +0300 (0:00:00.037)       0:00:16.875 ****** 
2023-07-10 14:40:46,095 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure minimum containerd version] *****************************
2023-07-10 14:40:46,096 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:40:46,105 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:46 +0300 (0:00:00.083)       0:00:16.958 ****** 
2023-07-10 14:40:46,155 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:46 +0300 (0:00:00.050)       0:00:17.009 ****** 
2023-07-10 14:40:46,196 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:46 +0300 (0:00:00.040)       0:00:17.049 ****** 
2023-07-10 14:40:46,252 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:46 +0300 (0:00:00.055)       0:00:17.105 ****** 
2023-07-10 14:40:46,561 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create kubernetes directories] *********************************
2023-07-10 14:40:46,562 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/etc/kubernetes) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/etc/kubernetes", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:46,812 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/etc/kubernetes/manifests) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/etc/kubernetes/manifests", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/manifests", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:47,055 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/usr/local/bin/kubernetes-scripts) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/usr/local/bin/kubernetes-scripts", "mode": "0755", "owner": "kube", "path": "/usr/local/bin/kubernetes-scripts", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:47,296 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "mode": "0755", "owner": "kube", "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:47,308 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:47 +0300 (0:00:01.056)       0:00:18.162 ****** 
2023-07-10 14:40:47,605 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create other directories of root owner] ************************
2023-07-10 14:40:47,606 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/etc/kubernetes/ssl) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/etc/kubernetes/ssl", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/ssl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:40:47,848 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin", "mode": "0755", "owner": "root", "path": "/usr/local/bin", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:40:47,861 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:47 +0300 (0:00:00.552)       0:00:18.714 ****** 
2023-07-10 14:40:48,137 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ************
2023-07-10 14:40:48,137 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:40:48,146 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:48 +0300 (0:00:00.285)       0:00:19.000 ****** 
2023-07-10 14:40:48,436 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***
2023-07-10 14:40:48,436 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/etc/kubernetes/pki", "gid": 0, "group": "root", "mode": "0777", "owner": "root", "size": 19, "src": "/etc/kubernetes/ssl", "state": "link", "uid": 0}
2023-07-10 14:40:48,445 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:48 +0300 (0:00:00.298)       0:00:19.298 ****** 
2023-07-10 14:40:48,738 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create cni directories] ****************************************
2023-07-10 14:40:48,739 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/etc/cni/net.d) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/etc/cni/net.d", "mode": "0755", "owner": "kube", "path": "/etc/cni/net.d", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:48,982 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/opt/cni/bin) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/opt/cni/bin", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:48,994 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:48 +0300 (0:00:00.549)       0:00:19.848 ****** 
2023-07-10 14:40:49,284 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create calico cni directories] *********************************
2023-07-10 14:40:49,285 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/var/lib/calico) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/var/lib/calico", "mode": "0755", "owner": "kube", "path": "/var/lib/calico", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 14:40:49,297 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.302)       0:00:20.150 ****** 
2023-07-10 14:40:49,356 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.059)       0:00:20.210 ****** 
2023-07-10 14:40:49,381 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.024)       0:00:20.234 ****** 
2023-07-10 14:40:49,406 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.025)       0:00:20.260 ****** 
2023-07-10 14:40:49,470 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.063)       0:00:20.323 ****** 
2023-07-10 14:40:49,532 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.062)       0:00:20.386 ****** 
2023-07-10 14:40:49,562 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.029)       0:00:20.415 ****** 
2023-07-10 14:40:49,587 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:49 +0300 (0:00:00.024)       0:00:20.440 ****** 
2023-07-10 14:40:50,193 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************
2023-07-10 14:40:50,194 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "b768c1a73df64294ab36e62a1f29e66a8ab15fd2", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "md5sum": "290fd82e6d5138e8dd790b056ae24a88", "mode": "0644", "owner": "root", "size": 114, "src": "/root/.ansible/tmp/ansible-tmp-1688989249.6364577-8707-58876220527021/source", "state": "file", "uid": 0}
2023-07-10 14:40:50,199 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.612)       0:00:21.053 ****** 
2023-07-10 14:40:50,224 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.024)       0:00:21.078 ****** 
2023-07-10 14:40:50,248 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.024)       0:00:21.102 ****** 
2023-07-10 14:40:50,272 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.024)       0:00:21.126 ****** 
2023-07-10 14:40:50,298 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.025)       0:00:21.152 ****** 
2023-07-10 14:40:50,325 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.026)       0:00:21.178 ****** 
2023-07-10 14:40:50,352 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.026)       0:00:21.205 ****** 
2023-07-10 14:40:50,377 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.026)       0:00:21.231 ****** 
2023-07-10 14:40:50,401 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.023)       0:00:21.255 ****** 
2023-07-10 14:40:50,427 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.025)       0:00:21.281 ****** 
2023-07-10 14:40:50,456 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:50 +0300 (0:00:00.028)       0:00:21.309 ****** 
2023-07-10 14:40:54,552 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update package management cache (APT)] *************************
2023-07-10 14:40:54,553 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"cache_update_time": 1688989251, "cache_updated": true, "changed": true}
2023-07-10 14:40:54,558 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:54 +0300 (0:00:04.102)       0:00:25.411 ****** 
2023-07-10 14:40:54,583 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:54 +0300 (0:00:00.024)       0:00:25.436 ****** 
2023-07-10 14:40:54,608 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:54 +0300 (0:00:00.025)       0:00:25.461 ****** 
2023-07-10 14:40:54,631 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:54 +0300 (0:00:00.023)       0:00:25.484 ****** 
2023-07-10 14:40:54,683 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] ***
2023-07-10 14:40:54,683 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"common_required_pkgs": ["openssl", "curl", "rsync", "socat", "unzip", "e2fsprogs", "xfsprogs", "ebtables", "bash-completion", "tar", "ipvsadm", "ipset"]}, "changed": false}
2023-07-10 14:40:54,689 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:54 +0300 (0:00:00.057)       0:00:25.542 ****** 
2023-07-10 14:40:59,868 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Install packages requirements] *********************************
2023-07-10 14:40:59,869 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "cache_update_time": 1688989251, "cache_updated": false, "changed": true, "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  libipset13\nSuggested packages:\n  heartbeat keepalived ldirectord zip\nThe following NEW packages will be installed:\n  apt-transport-https conntrack ebtables ipset ipvsadm libipset13 socat unzip\n0 upgraded, 8 newly installed, 0 to remove and 60 not upgraded.\nNeed to get 782 kB of archives.\nAfter this operation, 2834 kB of additional disk space will be used.\nGet:1 http://tr.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 apt-transport-https all 2.4.9 [1510 B]\nGet:2 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 conntrack amd64 1:1.4.6-2build2 [33.5 kB]\nGet:3 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 ebtables amd64 2.0.11-4build2 [84.9 kB]\nGet:4 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 libipset13 amd64 7.15-1build1 [63.4 kB]\nGet:5 http://tr.archive.ubuntu.com/ubuntu jammy-updates/main amd64 unzip amd64 6.0-26ubuntu3.1 [174 kB]\nGet:6 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 ipset amd64 7.15-1build1 [32.8 kB]\nGet:7 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 ipvsadm amd64 1:1.31-1build2 [42.2 kB]\nGet:8 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 socat amd64 1.7.4.1-3ubuntu4 [349 kB]\nFetched 782 kB in 1s (1311 kB/s)\nSelecting previously unselected package apt-transport-https.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 74047 files and directories currently installed.)\r\nPreparing to unpack .../0-apt-transport-https_2.4.9_all.deb ...\r\nUnpacking apt-transport-https (2.4.9) ...\r\nSelecting previously unselected package conntrack.\r\nPreparing to unpack .../1-conntrack_1%3a1.4.6-2build2_amd64.deb ...\r\nUnpacking conntrack (1:1.4.6-2build2) ...\r\nSelecting previously unselected package ebtables.\r\nPreparing to unpack .../2-ebtables_2.0.11-4build2_amd64.deb ...\r\nUnpacking ebtables (2.0.11-4build2) ...\r\nSelecting previously unselected package libipset13:amd64.\r\nPreparing to unpack .../3-libipset13_7.15-1build1_amd64.deb ...\r\nUnpacking libipset13:amd64 (7.15-1build1) ...\r\nSelecting previously unselected package unzip.\r\nPreparing to unpack .../4-unzip_6.0-26ubuntu3.1_amd64.deb ...\r\nUnpacking unzip (6.0-26ubuntu3.1) ...\r\nSelecting previously unselected package ipset.\r\nPreparing to unpack .../5-ipset_7.15-1build1_amd64.deb ...\r\nUnpacking ipset (7.15-1build1) ...\r\nSelecting previously unselected package ipvsadm.\r\nPreparing to unpack .../6-ipvsadm_1%3a1.31-1build2_amd64.deb ...\r\nUnpacking ipvsadm (1:1.31-1build2) ...\r\nSelecting previously unselected package socat.\r\nPreparing to unpack .../7-socat_1.7.4.1-3ubuntu4_amd64.deb ...\r\nUnpacking socat (1.7.4.1-3ubuntu4) ...\r\nSetting up ipvsadm (1:1.31-1build2) ...\r\nSetting up apt-transport-https (2.4.9) ...\r\nSetting up unzip (6.0-26ubuntu3.1) ...\r\nSetting up conntrack (1:1.4.6-2build2) ...\r\nSetting up ebtables (2.0.11-4build2) ...\r\nSetting up socat (1.7.4.1-3ubuntu4) ...\r\nSetting up libipset13:amd64 (7.15-1build1) ...\r\nSetting up ipset (7.15-1build1) ...\r\nProcessing triggers for man-db (2.10.2-1) ...\r\nProcessing triggers for libc-bin (2.35-0ubuntu3.1) ...\r\nNEEDRESTART-VER: 3.5\nNEEDRESTART-KCUR: 5.15.0-76-generic\nNEEDRESTART-KEXP: 5.15.0-76-generic\nNEEDRESTART-KSTA: 1\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following additional packages will be installed:", "  libipset13", "Suggested packages:", "  heartbeat keepalived ldirectord zip", "The following NEW packages will be installed:", "  apt-transport-https conntrack ebtables ipset ipvsadm libipset13 socat unzip", "0 upgraded, 8 newly installed, 0 to remove and 60 not upgraded.", "Need to get 782 kB of archives.", "After this operation, 2834 kB of additional disk space will be used.", "Get:1 http://tr.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 apt-transport-https all 2.4.9 [1510 B]", "Get:2 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 conntrack amd64 1:1.4.6-2build2 [33.5 kB]", "Get:3 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 ebtables amd64 2.0.11-4build2 [84.9 kB]", "Get:4 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 libipset13 amd64 7.15-1build1 [63.4 kB]", "Get:5 http://tr.archive.ubuntu.com/ubuntu jammy-updates/main amd64 unzip amd64 6.0-26ubuntu3.1 [174 kB]", "Get:6 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 ipset amd64 7.15-1build1 [32.8 kB]", "Get:7 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 ipvsadm amd64 1:1.31-1build2 [42.2 kB]", "Get:8 http://tr.archive.ubuntu.com/ubuntu jammy/main amd64 socat amd64 1.7.4.1-3ubuntu4 [349 kB]", "Fetched 782 kB in 1s (1311 kB/s)", "Selecting previously unselected package apt-transport-https.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 74047 files and directories currently installed.)", "Preparing to unpack .../0-apt-transport-https_2.4.9_all.deb ...", "Unpacking apt-transport-https (2.4.9) ...", "Selecting previously unselected package conntrack.", "Preparing to unpack .../1-conntrack_1%3a1.4.6-2build2_amd64.deb ...", "Unpacking conntrack (1:1.4.6-2build2) ...", "Selecting previously unselected package ebtables.", "Preparing to unpack .../2-ebtables_2.0.11-4build2_amd64.deb ...", "Unpacking ebtables (2.0.11-4build2) ...", "Selecting previously unselected package libipset13:amd64.", "Preparing to unpack .../3-libipset13_7.15-1build1_amd64.deb ...", "Unpacking libipset13:amd64 (7.15-1build1) ...", "Selecting previously unselected package unzip.", "Preparing to unpack .../4-unzip_6.0-26ubuntu3.1_amd64.deb ...", "Unpacking unzip (6.0-26ubuntu3.1) ...", "Selecting previously unselected package ipset.", "Preparing to unpack .../5-ipset_7.15-1build1_amd64.deb ...", "Unpacking ipset (7.15-1build1) ...", "Selecting previously unselected package ipvsadm.", "Preparing to unpack .../6-ipvsadm_1%3a1.31-1build2_amd64.deb ...", "Unpacking ipvsadm (1:1.31-1build2) ...", "Selecting previously unselected package socat.", "Preparing to unpack .../7-socat_1.7.4.1-3ubuntu4_amd64.deb ...", "Unpacking socat (1.7.4.1-3ubuntu4) ...", "Setting up ipvsadm (1:1.31-1build2) ...", "Setting up apt-transport-https (2.4.9) ...", "Setting up unzip (6.0-26ubuntu3.1) ...", "Setting up conntrack (1:1.4.6-2build2) ...", "Setting up ebtables (2.0.11-4build2) ...", "Setting up socat (1.7.4.1-3ubuntu4) ...", "Setting up libipset13:amd64 (7.15-1build1) ...", "Setting up ipset (7.15-1build1) ...", "Processing triggers for man-db (2.10.2-1) ...", "Processing triggers for libc-bin (2.35-0ubuntu3.1) ...", "NEEDRESTART-VER: 3.5", "NEEDRESTART-KCUR: 5.15.0-76-generic", "NEEDRESTART-KEXP: 5.15.0-76-generic", "NEEDRESTART-KSTA: 1"]}
2023-07-10 14:40:59,874 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:59 +0300 (0:00:05.184)       0:00:30.727 ****** 
2023-07-10 14:40:59,898 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:59 +0300 (0:00:00.024)       0:00:30.752 ****** 
2023-07-10 14:40:59,924 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:59 +0300 (0:00:00.025)       0:00:30.778 ****** 
2023-07-10 14:40:59,950 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:59 +0300 (0:00:00.025)       0:00:30.803 ****** 
2023-07-10 14:40:59,977 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:40:59 +0300 (0:00:00.026)       0:00:30.830 ****** 
2023-07-10 14:41:00,168 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *******************
2023-07-10 14:41:00,169 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=ipv4-ip_forward.conf) => {"ansible_loop_var": "item", "changed": false, "item": "ipv4-ip_forward.conf", "path": "/etc/sysctl.d/ipv4-ip_forward.conf", "state": "absent"}
2023-07-10 14:41:00,319 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=bridge-nf-call.conf) => {"ansible_loop_var": "item", "changed": false, "item": "bridge-nf-call.conf", "path": "/etc/sysctl.d/bridge-nf-call.conf", "state": "absent"}
2023-07-10 14:41:00,327 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:00 +0300 (0:00:00.349)       0:00:31.180 ****** 
2023-07-10 14:41:00,500 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stat sysctl file configuration] ********************************
2023-07-10 14:41:00,501 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975452.148, "block_size": 4096, "blocks": 0, "ctime": 1688975046.4383185, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 161054, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/sysctl.conf", "lnk_target": "../sysctl.conf", "mode": "0777", "mtime": 1677761882.0, "nlink": 1, "path": "/etc/sysctl.d/99-sysctl.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 14, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 14:41:00,506 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:00 +0300 (0:00:00.179)       0:00:31.360 ****** 
2023-07-10 14:41:00,558 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] **************
2023-07-10 14:41:00,558 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sysctl_file_path": "/etc/sysctl.conf"}, "changed": false}
2023-07-10 14:41:00,564 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:00 +0300 (0:00:00.057)       0:00:31.418 ****** 
2023-07-10 14:41:00,736 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] **********************
2023-07-10 14:41:00,736 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:41:00,741 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:00 +0300 (0:00:00.176)       0:00:31.594 ****** 
2023-07-10 14:41:00,994 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Enable ip forwarding] ******************************************
2023-07-10 14:41:00,995 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true}
2023-07-10 14:41:01,000 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:00 +0300 (0:00:00.258)       0:00:31.853 ****** 
2023-07-10 14:41:01,025 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:01 +0300 (0:00:00.025)       0:00:31.878 ****** 
2023-07-10 14:41:01,195 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ******************
2023-07-10 14:41:01,196 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:01,202 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:01 +0300 (0:00:00.176)       0:00:32.055 ****** 
2023-07-10 14:41:01,235 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:01 +0300 (0:00:00.032)       0:00:32.088 ****** 
2023-07-10 14:41:01,424 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] **************************
2023-07-10 14:41:01,425 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) => {"ansible_loop_var": "item", "changed": true, "item": {"name": "kernel.keys.root_maxbytes", "value": 25000000}}
2023-07-10 14:41:01,577 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) => {"ansible_loop_var": "item", "changed": true, "item": {"name": "kernel.keys.root_maxkeys", "value": 1000000}}
2023-07-10 14:41:01,730 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'kernel.panic', 'value': 10}) => {"ansible_loop_var": "item", "changed": true, "item": {"name": "kernel.panic", "value": 10}}
2023-07-10 14:41:01,882 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) => {"ansible_loop_var": "item", "changed": true, "item": {"name": "kernel.panic_on_oops", "value": 1}}
2023-07-10 14:41:02,035 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1}) => {"ansible_loop_var": "item", "changed": true, "item": {"name": "vm.overcommit_memory", "value": 1}}
2023-07-10 14:41:02,183 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0}) => {"ansible_loop_var": "item", "changed": true, "item": {"name": "vm.panic_on_oom", "value": 0}}
2023-07-10 14:41:02,192 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:02 +0300 (0:00:00.957)       0:00:33.045 ****** 
2023-07-10 14:41:02,499 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check dummy module] ********************************************
2023-07-10 14:41:02,499 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "dummy", "params": "numdummies=0", "state": "present"}
2023-07-10 14:41:02,505 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:02 +0300 (0:00:00.313)       0:00:33.358 ****** 
2023-07-10 14:41:02,528 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:02 +0300 (0:00:00.022)       0:00:33.381 ****** 
2023-07-10 14:41:03,010 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Disable fapolicyd service] *************************************
2023-07-10 14:41:03,010 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "Could not find the requested service fapolicyd: host"}
2023-07-10 14:41:03,016 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.487)       0:00:33.869 ****** 
2023-07-10 14:41:03,041 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.025)       0:00:33.894 ****** 
2023-07-10 14:41:03,066 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.025)       0:00:33.919 ****** 
2023-07-10 14:41:03,090 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.024)       0:00:33.944 ****** 
2023-07-10 14:41:03,113 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.022)       0:00:33.967 ****** 
2023-07-10 14:41:03,139 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.025)       0:00:33.992 ****** 
2023-07-10 14:41:03,162 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.023)       0:00:34.016 ****** 
2023-07-10 14:41:03,189 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.026)       0:00:34.042 ****** 
2023-07-10 14:41:03,213 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.024)       0:00:34.067 ****** 
2023-07-10 14:41:03,242 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.028)       0:00:34.095 ****** 
2023-07-10 14:41:03,311 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************
2023-07-10 14:41:03,312 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 14:41:03,317 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.075)       0:00:34.171 ****** 
2023-07-10 14:41:03,638 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************
2023-07-10 14:41:03,638 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"backup_file": "/etc/hosts.4576.2023-07-10@11:41:03~", "changed": true, "msg": "Block inserted"}
2023-07-10 14:41:03,644 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.326)       0:00:34.497 ****** 
2023-07-10 14:41:03,676 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.031)       0:00:34.529 ****** 
2023-07-10 14:41:03,836 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************
2023-07-10 14:41:03,836 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdAoxMjcuMC4xLjEga3ViZXJuZXRtYWNoaW5ldHdvCgojIFRoZSBmb2xsb3dpbmcgbGluZXMgYXJlIGRlc2lyYWJsZSBmb3IgSVB2NiBjYXBhYmxlIGhvc3RzCjo6MSAgICAgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sKZmUwMDo6MCBpcDYtbG9jYWxuZXQKZmYwMDo6MCBpcDYtbWNhc3RwcmVmaXgKZmYwMjo6MSBpcDYtYWxsbm9kZXMKZmYwMjo6MiBpcDYtYWxscm91dGVycwojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEJFR0lOCjE5Mi4xNjguMTIyLjI5IG5vZGUxLmxpbnV4dGVjaGkubG9jYWwgbm9kZTEgCiMgQW5zaWJsZSBpbnZlbnRvcnkgaG9zdHMgRU5ECg==", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 14:41:03,841 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:03 +0300 (0:00:00.165)       0:00:34.695 ****** 
2023-07-10 14:41:03,912 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ***
2023-07-10 14:41:03,912 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost"}
2023-07-10 14:41:03,980 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=::1     ip6-localhost ip6-loopback) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost"], "::1": ["ip6-localhost", "ip6-loopback"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1     ip6-localhost ip6-loopback"}
2023-07-10 14:41:04,060 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:04 +0300 (0:00:00.218)       0:00:34.913 ****** 
2023-07-10 14:41:04,125 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] ***
2023-07-10 14:41:04,126 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 14:41:04,160 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 14:41:04,168 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:04 +0300 (0:00:00.107)       0:00:35.021 ****** 
2023-07-10 14:41:04,356 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************
2023-07-10 14:41:04,356 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "/etc/hosts.4588.2023-07-10@11:41:04~", "changed": true, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": "line replaced"}
2023-07-10 14:41:04,510 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "/etc/hosts.4594.2023-07-10@11:41:04~", "changed": true, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": "line replaced"}
2023-07-10 14:41:04,518 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:04 +0300 (0:00:00.349)       0:00:35.371 ****** 
2023-07-10 14:41:04,856 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update facts] **************************************************
2023-07-10 14:41:04,856 p=8199 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:41:04,863 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:04 +0300 (0:00:00.345)       0:00:35.716 ****** 
2023-07-10 14:41:05,050 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****
2023-07-10 14:41:05,051 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"backup_file": "/etc/dhcp/dhclient.conf.4611.2023-07-10@11:41:05~", "changed": true, "msg": "Block inserted"}
2023-07-10 14:41:05,057 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.194)       0:00:35.911 ****** 
2023-07-10 14:41:05,453 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************
2023-07-10 14:41:05,453 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "md5sum": "74d27ef787521fdd84d68d9b08b15b61", "mode": "0755", "owner": "root", "size": 456, "src": "/root/.ansible/tmp/ansible-tmp-1688989265.1156206-8887-233661810416774/source", "state": "file", "uid": 0}
2023-07-10 14:41:05,460 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.402)       0:00:36.313 ****** 
2023-07-10 14:41:05,497 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.036)       0:00:36.350 ****** 
2023-07-10 14:41:05,525 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.028)       0:00:36.379 ****** 
2023-07-10 14:41:05,555 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.029)       0:00:36.408 ****** 
2023-07-10 14:41:05,562 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.007)       0:00:36.416 ****** 
2023-07-10 14:41:05,731 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ***
2023-07-10 14:41:05,731 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001736", "end": "2023-07-10 11:41:05.716746", "msg": "", "rc": 0, "start": "2023-07-10 11:41:05.715010", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:41:05,737 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.174)       0:00:36.590 ****** 
2023-07-10 14:41:05,759 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.022)       0:00:36.613 ****** 
2023-07-10 14:41:05,927 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] *************
2023-07-10 14:41:05,928 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:05,933 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:05 +0300 (0:00:00.173)       0:00:36.786 ****** 
2023-07-10 14:41:06,100 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ************
2023-07-10 14:41:06,100 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:06,105 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.172)       0:00:36.958 ****** 
2023-07-10 14:41:06,125 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.020)       0:00:36.979 ****** 
2023-07-10 14:41:06,152 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.026)       0:00:37.006 ****** 
2023-07-10 14:41:06,175 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.022)       0:00:37.028 ****** 
2023-07-10 14:41:06,205 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.030)       0:00:37.059 ****** 
2023-07-10 14:41:06,227 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.021)       0:00:37.080 ****** 
2023-07-10 14:41:06,555 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | Restart systemd-resolved] **************
2023-07-10 14:41:06,556 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "systemd-resolved", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 07:50:53 UTC", "ActiveEnterTimestampMonotonic": "4898463", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "systemd-tmpfiles-setup.service systemd-networkd.service system.slice systemd-sysusers.service tmp.mount -.mount systemd-journald.socket", "AllowIsolate": "no", "AmbientCapabilities": "cap_setpcap cap_net_bind_service cap_net_raw", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 07:50:53 UTC", "AssertTimestampMonotonic": "4824867", "Before": "nss-lookup.target network.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "BusName": "org.freedesktop.resolve1", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "72319000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanClean": "runtime", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_setpcap cap_net_bind_service cap_net_raw", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 07:50:53 UTC", "ConditionTimestampMonotonic": "4824865", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/systemd-resolved.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "no", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Network Name Resolution", "DeviceAllow": "char-rtc r", "DevicePolicy": "closed", "Documentation": "\"man:systemd-resolved.service(8)\" \"man:org.freedesktop.resolve1(5)\" https://www.freedesktop.org/wiki/Software/systemd/writing-network-configuration-managers https://www.freedesktop.org/wiki/Software/systemd/writing-resolver-clients", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "635", "ExecMainStartTimestamp": "Mon 2023-07-10 07:50:53 UTC", "ExecMainStartTimestampMonotonic": "4828008", "ExecMainStatus": "0", "ExecStart": "{ path=/lib/systemd/systemd-resolved ; argv[]=/lib/systemd/systemd-resolved ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/lib/systemd/systemd-resolved ; argv[]=/lib/systemd/systemd-resolved ; flags=ambient ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/lib/systemd/system/systemd-resolved.service", "FreezerState": "running", "GID": "103", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "systemd-resolved.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Mon 2023-07-10 07:50:53 UTC", "InactiveExitTimestampMonotonic": "4828059", "InvocationID": "8119b59e850e41aeb80450a3654d95f5", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "yes", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "635", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "9359360", "MemoryDenyWriteExecute": "yes", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "systemd-resolved.service dbus-org.freedesktop.resolve1.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "yes", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "yes", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "yes", "ProtectControlGroups": "yes", "ProtectHome": "yes", "ProtectHostname": "no", "ProtectKernelLogs": "yes", "ProtectKernelModules": "yes", "ProtectKernelTunables": "yes", "ProtectProc": "invisible", "ProtectSystem": "strict", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice -.mount", "RequiresMountsFor": "/run/systemd/resolve /var/tmp", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "0", "RestrictAddressFamilies": "AF_INET AF_INET6 AF_NETLINK AF_UNIX", "RestrictNamespaces": "yes", "RestrictRealtime": "yes", "RestrictSUIDSGID": "yes", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectory": "systemd/resolve", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "yes", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 07:50:53 UTC", "StateChangeTimestampMonotonic": "4898463", "StateDirectoryMode": "0755", "StatusErrno": "0", "StatusText": "Processing requests...", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallArchitectures": "native", "SystemCallErrorNumber": "1", "SystemCallFilter": "_llseek _newselect accept accept4 access add_key alarm arch_prctl bind brk cacheflush capget capset chdir chmod chown chown32 clock_getres clock_getres_time64 clock_gettime clock_gettime64 clock_nanosleep clock_nanosleep_time64 clone clone3 close close_range connect copy_file_range creat dup dup2 dup3 epoll_create epoll_create1 epoll_ctl epoll_ctl_old epoll_pwait epoll_pwait2 epoll_wait epoll_wait_old eventfd eventfd2 execve execveat exit exit_group faccessat faccessat2 fadvise64 fadvise64_64 fallocate fchdir fchmod fchmodat fchown fchown32 fchownat fcntl fcntl64 fdatasync fgetxattr flistxattr flock fork fremovexattr fsetxattr fstat fstat64 fstatat64 fstatfs fstatfs64 fsync ftruncate ftruncate64 futex futex_time64 futimesat get_mempolicy get_robust_list get_thread_area getcpu getcwd getdents getdents64 getegid getegid32 geteuid geteuid32 getgid getgid32 getgroups getgroups32 getitimer getpeername getpgid getpgrp getpid getppid getpriority getrandom getresgid getresgid32 getresuid getresuid32 getrlimit getrusage getsid getsockname getsockopt gettid gettimeofday getuid getuid32 getxattr inotify_add_watch inotify_init inotify_init1 inotify_rm_watch io_cancel io_destroy io_getevents io_pgetevents io_pgetevents_time64 io_setup io_submit io_uring_enter io_uring_register io_uring_setup ioctl ioprio_get ioprio_set ipc kcmp keyctl kill lchown lchown32 lgetxattr link linkat listen listxattr llistxattr lremovexattr lseek lsetxattr lstat lstat64 madvise mbind membarrier memfd_create migrate_pages mkdir mkdirat mknod mknodat mlock mlock2 mlockall mmap mmap2 move_pages mprotect mq_getsetattr mq_notify mq_open mq_timedreceive mq_timedreceive_time64 mq_timedsend mq_timedsend_time64 mq_unlink mremap msgctl msgget msgrcv msgsnd msync munlock munlockall munmap name_to_handle_at nanosleep newfstatat nice oldfstat oldlstat oldolduname oldstat olduname open openat openat2 pause personality pidfd_open pidfd_send_signal pipe pipe2 poll ppoll ppoll_time64 prctl pread64 preadv preadv2 prlimit64 process_madvise process_vm_readv process_vm_writev pselect6 pselect6_time64 pwrite64 pwritev pwritev2 read readahead readdir readlink readlinkat readv recv recvfrom recvmmsg recvmmsg_time64 recvmsg remap_file_pages removexattr rename renameat renameat2 request_key restart_syscall rmdir rseq rt_sigaction rt_sigpending rt_sigprocmask rt_sigqueueinfo rt_sigreturn rt_sigsuspend rt_sigtimedwait rt_sigtimedwait_time64 rt_tgsigqueueinfo sched_get_priority_max sched_get_priority_min sched_getaffinity sched_getattr sched_getparam sched_getscheduler sched_rr_get_interval sched_rr_get_interval_time64 sched_setaffinity sched_setattr sched_setparam sched_setscheduler sched_yield select semctl semget semop semtimedop semtimedop_time64 send sendfile sendfile64 sendmmsg sendmsg sendto set_mempolicy set_robust_list set_thread_area set_tid_address set_tls setfsgid setfsgid32 setfsuid setfsuid32 setgid setgid32 setgroups setgroups32 setitimer setns setpgid setpriority setregid setregid32 setresgid setresgid32 setresuid setresuid32 setreuid setreuid32 setrlimit setsid setsockopt setuid setuid32 setxattr shmat shmctl shmdt shmget shutdown sigaction sigaltstack signal signalfd signalfd4 sigpending sigprocmask sigreturn sigsuspend socket socketcall socketpair splice stat stat64 statfs statfs64 statx swapcontext symlink symlinkat sync sync_file_range sync_file_range2 syncfs sysinfo tee tgkill time timer_create timer_delete timer_getoverrun timer_gettime timer_gettime64 timer_settime timer_settime64 timerfd_create timerfd_gettime timerfd_gettime64 timerfd_settime timerfd_settime64 times tkill truncate truncate64 ugetrlimit umask uname unlink unlinkat unshare userfaultfd utime utimensat utimensat_time64 utimes vfork vmsplice wait4 waitid waitpid write writev", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "1", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "102", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "User": "systemd-resolve", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "nss-lookup.target tmp.mount", "WatchdogSignal": "6", "WatchdogTimestamp": "Mon 2023-07-10 11:40:24 UTC", "WatchdogTimestampMonotonic": "13775273085", "WatchdogUSec": "3min"}}
2023-07-10 14:41:06,561 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.333)       0:00:37.414 ****** 
2023-07-10 14:41:06,729 p=8199 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *********************
2023-07-10 14:41:06,729 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:06,736 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.175)       0:00:37.590 ****** 
2023-07-10 14:41:06,760 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.024)       0:00:37.614 ****** 
2023-07-10 14:41:06,785 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.024)       0:00:37.638 ****** 
2023-07-10 14:41:06,812 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.027)       0:00:37.665 ****** 
2023-07-10 14:41:06,836 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.024)       0:00:37.690 ****** 
2023-07-10 14:41:06,863 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.026)       0:00:37.716 ****** 
2023-07-10 14:41:06,886 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.023)       0:00:37.740 ****** 
2023-07-10 14:41:06,910 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:06 +0300 (0:00:00.023)       0:00:37.763 ****** 
2023-07-10 14:41:06,929 p=8199 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************
2023-07-10 14:41:07,070 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.160)       0:00:37.923 ****** 
2023-07-10 14:41:07,117 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****
2023-07-10 14:41:07,117 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,128 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.057)       0:00:37.981 ****** 
2023-07-10 14:41:07,178 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
2023-07-10 14:41:07,179 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,189 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.060)       0:00:38.042 ****** 
2023-07-10 14:41:07,237 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
2023-07-10 14:41:07,238 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,247 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.058)       0:00:38.101 ****** 
2023-07-10 14:41:07,284 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.037)       0:00:38.138 ****** 
2023-07-10 14:41:07,330 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************
2023-07-10 14:41:07,330 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,340 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.055)       0:00:38.194 ****** 
2023-07-10 14:41:07,503 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************
2023-07-10 14:41:07,504 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:07,513 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.172)       0:00:38.366 ****** 
2023-07-10 14:41:07,542 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.028)       0:00:38.395 ****** 
2023-07-10 14:41:07,571 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.028)       0:00:38.424 ****** 
2023-07-10 14:41:07,600 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.029)       0:00:38.453 ****** 
2023-07-10 14:41:07,639 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.039)       0:00:38.492 ****** 
2023-07-10 14:41:07,667 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.028)       0:00:38.521 ****** 
2023-07-10 14:41:07,714 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************
2023-07-10 14:41:07,715 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,726 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.058)       0:00:38.579 ****** 
2023-07-10 14:41:07,769 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************
2023-07-10 14:41:07,770 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,781 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.055)       0:00:38.634 ****** 
2023-07-10 14:41:07,829 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************
2023-07-10 14:41:07,830 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,841 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.059)       0:00:38.694 ****** 
2023-07-10 14:41:07,871 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.029)       0:00:38.724 ****** 
2023-07-10 14:41:07,915 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********
2023-07-10 14:41:07,916 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:41:07,926 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:07 +0300 (0:00:00.055)       0:00:38.779 ****** 
2023-07-10 14:41:08,091 p=8199 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************
2023-07-10 14:41:08,091 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ipPool default-pool -o json", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/calicoctl.sh'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:41:08,101 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.174)       0:00:38.954 ****** 
2023-07-10 14:41:08,129 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.027)       0:00:38.982 ****** 
2023-07-10 14:41:08,163 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.033)       0:00:39.016 ****** 
2023-07-10 14:41:08,191 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.028)       0:00:39.044 ****** 
2023-07-10 14:41:08,221 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.029)       0:00:39.074 ****** 
2023-07-10 14:41:08,252 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.031)       0:00:39.105 ****** 
2023-07-10 14:41:08,413 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***
2023-07-10 14:41:08,414 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:08,419 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.167)       0:00:39.273 ****** 
2023-07-10 14:41:08,462 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ***
2023-07-10 14:41:08,463 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 14:41:08,469 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.049)       0:00:39.322 ****** 
2023-07-10 14:41:08,631 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] *******
2023-07-10 14:41:08,631 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:08,637 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:08 +0300 (0:00:00.167)       0:00:39.490 ****** 
2023-07-10 14:41:10,623 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Populate service facts] *******************
2023-07-10 14:41:10,626 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"services": {"ModemManager.service": {"name": "ModemManager.service", "source": "systemd", "state": "running", "status": "enabled"}, "NetworkManager.service": {"name": "NetworkManager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "apparmor": {"name": "apparmor", "source": "sysv", "state": "running"}, "apparmor.service": {"name": "apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "apport": {"name": "apport", "source": "sysv", "state": "running"}, "apport-autoreport.service": {"name": "apport-autoreport.service", "source": "systemd", "state": "stopped", "status": "static"}, "apport-forward@.service": {"name": "apport-forward@.service", "source": "systemd", "state": "unknown", "status": "static"}, "apport.service": {"name": "apport.service", "source": "systemd", "state": "stopped", "status": "generated"}, "apt-daily-upgrade.service": {"name": "apt-daily-upgrade.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-daily.service": {"name": "apt-daily.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-news.service": {"name": "apt-news.service", "source": "systemd", "state": "inactive", "status": "static"}, "auditd.service": {"name": "auditd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autovt@.service": {"name": "autovt@.service", "source": "systemd", "state": "unknown", "status": "alias"}, "blk-availability.service": {"name": "blk-availability.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "bolt.service": {"name": "bolt.service", "source": "systemd", "state": "inactive", "status": "static"}, "cloud-config.service": {"name": "cloud-config.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-final.service": {"name": "cloud-final.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init-hotplugd.service": {"name": "cloud-init-hotplugd.service", "source": "systemd", "state": "stopped", "status": "static"}, "cloud-init-local.service": {"name": "cloud-init-local.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init.service": {"name": "cloud-init.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "connman.service": {"name": "connman.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-getty.service": {"name": "console-getty.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "console-screen.service": {"name": "console-screen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-setup.service": {"name": "console-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "console-setup.sh": {"name": "console-setup.sh", "source": "sysv", "state": "stopped"}, "container-getty@.service": {"name": "container-getty@.service", "source": "systemd", "state": "unknown", "status": "static"}, "cron": {"name": "cron", "source": "sysv", "state": "running"}, "cron.service": {"name": "cron.service", "source": "systemd", "state": "running", "status": "enabled"}, "cryptdisks": {"name": "cryptdisks", "source": "sysv", "state": "stopped"}, "cryptdisks-early": {"name": "cryptdisks-early", "source": "sysv", "state": "stopped"}, "cryptdisks-early.service": {"name": "cryptdisks-early.service", "source": "systemd", "state": "inactive", "status": "masked"}, "cryptdisks.service": {"name": "cryptdisks.service", "source": "systemd", "state": "inactive", "status": "masked"}, "dbus": {"name": "dbus", "source": "sysv", "state": "running"}, "dbus-org.freedesktop.ModemManager1.service": {"name": "dbus-org.freedesktop.ModemManager1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.hostname1.service": {"name": "dbus-org.freedesktop.hostname1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.locale1.service": {"name": "dbus-org.freedesktop.locale1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.login1.service": {"name": "dbus-org.freedesktop.login1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.resolve1.service": {"name": "dbus-org.freedesktop.resolve1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.thermald.service": {"name": "dbus-org.freedesktop.thermald.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timedate1.service": {"name": "dbus-org.freedesktop.timedate1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timesync1.service": {"name": "dbus-org.freedesktop.timesync1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus.service": {"name": "dbus.service", "source": "systemd", "state": "running", "status": "static"}, "debug-shell.service": {"name": "debug-shell.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "display-manager.service": {"name": "display-manager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "dm-event.service": {"name": "dm-event.service", "source": "systemd", "state": "stopped", "status": "static"}, "dmesg.service": {"name": "dmesg.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "dpkg-db-backup.service": {"name": "dpkg-db-backup.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub@.service": {"name": "e2scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_all.service": {"name": "e2scrub_all.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub_fail@.service": {"name": "e2scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_reap.service": {"name": "e2scrub_reap.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "emergency.service": {"name": "emergency.service", "source": "systemd", "state": "stopped", "status": "static"}, "esm-cache.service": {"name": "esm-cache.service", "source": "systemd", "state": "inactive", "status": "static"}, "fcoe.service": {"name": "fcoe.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "finalrd.service": {"name": "finalrd.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "friendly-recovery.service": {"name": "friendly-recovery.service", "source": "systemd", "state": "inactive", "status": "static"}, "fstrim.service": {"name": "fstrim.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd-offline-update.service": {"name": "fwupd-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-refresh.service": {"name": "fwupd-refresh.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd.service": {"name": "fwupd.service", "source": "systemd", "state": "inactive", "status": "static"}, "getty-static.service": {"name": "getty-static.service", "source": "systemd", "state": "stopped", "status": "static"}, "getty@.service": {"name": "getty@.service", "source": "systemd", "state": "unknown", "status": "enabled"}, "getty@tty1.service": {"name": "getty@tty1.service", "source": "systemd", "state": "running", "status": "active"}, "gpu-manager.service": {"name": "gpu-manager.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "grub-common": {"name": "grub-common", "source": "sysv", "state": "stopped"}, "grub-common.service": {"name": "grub-common.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "grub-initrd-fallback.service": {"name": "grub-initrd-fallback.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "hv_kvp_daemon.service": {"name": "hv_kvp_daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "hwclock.service": {"name": "hwclock.service", "source": "systemd", "state": "inactive", "status": "masked"}, "hwclock.sh": {"name": "hwclock.sh", "source": "sysv", "state": "stopped"}, "initrd-cleanup.service": {"name": "initrd-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-parse-etc.service": {"name": "initrd-parse-etc.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-switch-root.service": {"name": "initrd-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-udevadm-cleanup-db.service": {"name": "initrd-udevadm-cleanup-db.service", "source": "systemd", "state": "inactive", "status": "static"}, "ipvsadm": {"name": "ipvsadm", "source": "sysv", "state": "running"}, "ipvsadm.service": {"name": "ipvsadm.service", "source": "systemd", "state": "stopped", "status": "generated"}, "irqbalance": {"name": "irqbalance", "source": "sysv", "state": "running"}, "irqbalance.service": {"name": "irqbalance.service", "source": "systemd", "state": "running", "status": "enabled"}, "iscsi-shutdown.service": {"name": "iscsi-shutdown.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "iscsi.service": {"name": "iscsi.service", "source": "systemd", "state": "inactive", "status": "alias"}, "iscsid": {"name": "iscsid", "source": "sysv", "state": "stopped"}, "iscsid.service": {"name": "iscsid.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "kbd.service": {"name": "kbd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "keyboard-setup.service": {"name": "keyboard-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "keyboard-setup.sh": {"name": "keyboard-setup.sh", "source": "sysv", "state": "stopped"}, "kmod": {"name": "kmod", "source": "sysv", "state": "running"}, "kmod-static-nodes.service": {"name": "kmod-static-nodes.service", "source": "systemd", "state": "stopped", "status": "static"}, "kmod.service": {"name": "kmod.service", "source": "systemd", "state": "active", "status": "alias"}, "loaded": {"name": "loaded", "source": "systemd", "state": "stopped", "status": "failed"}, "logrotate.service": {"name": "logrotate.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2": {"name": "lvm2", "source": "sysv", "state": "stopped"}, "lvm2-activation-early.service": {"name": "lvm2-activation-early.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-activation.service": {"name": "lvm2-activation.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-lvmpolld": {"name": "lvm2-lvmpolld", "source": "sysv", "state": "stopped"}, "lvm2-lvmpolld.service": {"name": "lvm2-lvmpolld.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2-monitor.service": {"name": "lvm2-monitor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "lvm2-pvscan@.service": {"name": "lvm2-pvscan@.service", "source": "systemd", "state": "unknown", "status": "static"}, "lvm2-pvscan@252:3.service": {"name": "lvm2-pvscan@252:3.service", "source": "systemd", "state": "stopped", "status": "active"}, "lvm2.service": {"name": "lvm2.service", "source": "systemd", "state": "inactive", "status": "masked"}, "lxd-agent.service": {"name": "lxd-agent.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "man-db.service": {"name": "man-db.service", "source": "systemd", "state": "stopped", "status": "static"}, "mdadm-grow-continue@.service": {"name": "mdadm-grow-continue@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdadm-last-resort@.service": {"name": "mdadm-last-resort@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdcheck_continue.service": {"name": "mdcheck_continue.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdcheck_start.service": {"name": "mdcheck_start.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmon@.service": {"name": "mdmon@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdmonitor-oneshot.service": {"name": "mdmonitor-oneshot.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmonitor.service": {"name": "mdmonitor.service", "source": "systemd", "state": "inactive", "status": "static"}, "modprobe@.service": {"name": "modprobe@.service", "source": "systemd", "state": "unknown", "status": "static"}, "modprobe@chromeos_pstore.service": {"name": "modprobe@chromeos_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@configfs.service": {"name": "modprobe@configfs.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@drm.service": {"name": "modprobe@drm.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@efi_pstore.service": {"name": "modprobe@efi_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@fuse.service": {"name": "modprobe@fuse.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_blk.service": {"name": "modprobe@pstore_blk.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_zone.service": {"name": "modprobe@pstore_zone.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@ramoops.service": {"name": "modprobe@ramoops.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "motd-news.service": {"name": "motd-news.service", "source": "systemd", "state": "stopped", "status": "static"}, "multipath-tools": {"name": "multipath-tools", "source": "sysv", "state": "running"}, "multipath-tools-boot.service": {"name": "multipath-tools-boot.service", "source": "systemd", "state": "inactive", "status": "masked"}, "multipath-tools.service": {"name": "multipath-tools.service", "source": "systemd", "state": "active", "status": "alias"}, "multipathd.service": {"name": "multipathd.service", "source": "systemd", "state": "running", "status": "enabled"}, "netplan-ovs-cleanup.service": {"name": "netplan-ovs-cleanup.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "networkd-dispatcher.service": {"name": "networkd-dispatcher.service", "source": "systemd", "state": "running", "status": "enabled"}, "networking.service": {"name": "networking.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "nftables.service": {"name": "nftables.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "open-iscsi": {"name": "open-iscsi", "source": "sysv", "state": "stopped"}, "open-iscsi.service": {"name": "open-iscsi.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "open-vm-tools": {"name": "open-vm-tools", "source": "sysv", "state": "stopped"}, "open-vm-tools.service": {"name": "open-vm-tools.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ovsdb-server.service": {"name": "ovsdb-server.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "packagekit-offline-update.service": {"name": "packagekit-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "packagekit.service": {"name": "packagekit.service", "source": "systemd", "state": "running", "status": "static"}, "plymouth": {"name": "plymouth", "source": "sysv", "state": "running"}, "plymouth-halt.service": {"name": "plymouth-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-kexec.service": {"name": "plymouth-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-log": {"name": "plymouth-log", "source": "sysv", "state": "running"}, "plymouth-log.service": {"name": "plymouth-log.service", "source": "systemd", "state": "active", "status": "alias"}, "plymouth-poweroff.service": {"name": "plymouth-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-quit-wait.service": {"name": "plymouth-quit-wait.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-quit.service": {"name": "plymouth-quit.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-read-write.service": {"name": "plymouth-read-write.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-reboot.service": {"name": "plymouth-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-start.service": {"name": "plymouth-start.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-switch-root-initramfs.service": {"name": "plymouth-switch-root-initramfs.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-switch-root.service": {"name": "plymouth-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth.service": {"name": "plymouth.service", "source": "systemd", "state": "active", "status": "alias"}, "polkit.service": {"name": "polkit.service", "source": "systemd", "state": "running", "status": "static"}, "pollinate.service": {"name": "pollinate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "procps": {"name": "procps", "source": "sysv", "state": "running"}, "procps.service": {"name": "procps.service", "source": "systemd", "state": "active", "status": "alias"}, "quotaon.service": {"name": "quotaon.service", "source": "systemd", "state": "inactive", "status": "static"}, "rbdmap.service": {"name": "rbdmap.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "rc-local.service": {"name": "rc-local.service", "source": "systemd", "state": "stopped", "status": "static"}, "rc.service": {"name": "rc.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rcS.service": {"name": "rcS.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rescue.service": {"name": "rescue.service", "source": "systemd", "state": "stopped", "status": "static"}, "rsync": {"name": "rsync", "source": "sysv", "state": "stopped"}, "rsync.service": {"name": "rsync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rsyslog.service": {"name": "rsyslog.service", "source": "systemd", "state": "running", "status": "enabled"}, "screen-cleanup": {"name": "screen-cleanup", "source": "sysv", "state": "stopped"}, "screen-cleanup.service": {"name": "screen-cleanup.service", "source": "systemd", "state": "inactive", "status": "masked"}, "secureboot-db.service": {"name": "secureboot-db.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "serial-getty@.service": {"name": "serial-getty@.service", "source": "systemd", "state": "unknown", "status": "disabled"}, "setvtrgb.service": {"name": "setvtrgb.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.activate.service": {"name": "snap.lxd.activate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.daemon.service": {"name": "snap.lxd.daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snap.lxd.user-daemon.service": {"name": "snap.lxd.user-daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.aa-prompt-listener.service": {"name": "snapd.aa-prompt-listener.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.apparmor.service": {"name": "snapd.apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.autoimport.service": {"name": "snapd.autoimport.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.core-fixup.service": {"name": "snapd.core-fixup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.failure.service": {"name": "snapd.failure.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.recovery-chooser-trigger.service": {"name": "snapd.recovery-chooser-trigger.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.seeded.service": {"name": "snapd.seeded.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.service": {"name": "snapd.service", "source": "systemd", "state": "running", "status": "enabled"}, "snapd.snap-repair.service": {"name": "snapd.snap-repair.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.system-shutdown.service": {"name": "snapd.system-shutdown.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "ssh": {"name": "ssh", "source": "sysv", "state": "running"}, "ssh.service": {"name": "ssh.service", "source": "systemd", "state": "running", "status": "enabled"}, "ssh@.service": {"name": "ssh@.service", "source": "systemd", "state": "unknown", "status": "static"}, "sshd-keygen.service": {"name": "sshd-keygen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd.service": {"name": "sshd.service", "source": "systemd", "state": "active", "status": "alias"}, "sudo.service": {"name": "sudo.service", "source": "systemd", "state": "inactive", "status": "masked"}, "syslog.service": {"name": "syslog.service", "source": "systemd", "state": "active", "status": "alias"}, "system-update-cleanup.service": {"name": "system-update-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-ask-password-console.service": {"name": "systemd-ask-password-console.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-plymouth.service": {"name": "systemd-ask-password-plymouth.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-wall.service": {"name": "systemd-ask-password-wall.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-backlight@.service": {"name": "systemd-backlight@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-binfmt.service": {"name": "systemd-binfmt.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-bless-boot.service": {"name": "systemd-bless-boot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-boot-check-no-failures.service": {"name": "systemd-boot-check-no-failures.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-boot-system-token.service": {"name": "systemd-boot-system-token.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-exit.service": {"name": "systemd-exit.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-fsck-root.service": {"name": "systemd-fsck-root.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-fsck@.service": {"name": "systemd-fsck@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service": {"name": "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-fsckd.service": {"name": "systemd-fsckd.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-halt.service": {"name": "systemd-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hibernate-resume@.service": {"name": "systemd-hibernate-resume@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-hibernate.service": {"name": "systemd-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hostnamed.service": {"name": "systemd-hostnamed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hwdb-update.service": {"name": "systemd-hwdb-update.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-hybrid-sleep.service": {"name": "systemd-hybrid-sleep.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-initctl.service": {"name": "systemd-initctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-flush.service": {"name": "systemd-journal-flush.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journald.service": {"name": "systemd-journald.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-journald@.service": {"name": "systemd-journald@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-kexec.service": {"name": "systemd-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-localed.service": {"name": "systemd-localed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-logind.service": {"name": "systemd-logind.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-machine-id-commit.service": {"name": "systemd-machine-id-commit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-modules-load.service": {"name": "systemd-modules-load.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-network-generator.service": {"name": "systemd-network-generator.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-networkd-wait-online.service": {"name": "systemd-networkd-wait-online.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-networkd.service": {"name": "systemd-networkd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-poweroff.service": {"name": "systemd-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pstore.service": {"name": "systemd-pstore.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-quotacheck.service": {"name": "systemd-quotacheck.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-random-seed.service": {"name": "systemd-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-reboot.service": {"name": "systemd-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-remount-fs.service": {"name": "systemd-remount-fs.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-resolved.service": {"name": "systemd-resolved.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-rfkill.service": {"name": "systemd-rfkill.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-suspend-then-hibernate.service": {"name": "systemd-suspend-then-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-suspend.service": {"name": "systemd-suspend.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-sysctl.service": {"name": "systemd-sysctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-sysext.service": {"name": "systemd-sysext.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-sysusers.service": {"name": "systemd-sysusers.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-time-wait-sync.service": {"name": "systemd-time-wait-sync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-timedated.service": {"name": "systemd-timedated.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-timesyncd.service": {"name": "systemd-timesyncd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-tmpfiles-clean.service": {"name": "systemd-tmpfiles-clean.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup-dev.service": {"name": "systemd-tmpfiles-setup-dev.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup.service": {"name": "systemd-tmpfiles-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udev-settle.service": {"name": "systemd-udev-settle.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-udev-trigger.service": {"name": "systemd-udev-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udevd.service": {"name": "systemd-udevd.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-update-done.service": {"name": "systemd-update-done.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-update-utmp-runlevel.service": {"name": "systemd-update-utmp-runlevel.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp.service": {"name": "systemd-update-utmp.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-user-sessions.service": {"name": "systemd-user-sessions.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-vconsole-setup.service": {"name": "systemd-vconsole-setup.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-volatile-root.service": {"name": "systemd-volatile-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "thermald.service": {"name": "thermald.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-auto-attach.service": {"name": "ua-auto-attach.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ua-reboot-cmds.service": {"name": "ua-reboot-cmds.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-timer.service": {"name": "ua-timer.service", "source": "systemd", "state": "stopped", "status": "static"}, "ubuntu-advantage-cloud-id-shim.service": {"name": "ubuntu-advantage-cloud-id-shim.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ubuntu-advantage.service": {"name": "ubuntu-advantage.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "udev": {"name": "udev", "source": "sysv", "state": "running"}, "udev.service": {"name": "udev.service", "source": "systemd", "state": "active", "status": "alias"}, "udisks2.service": {"name": "udisks2.service", "source": "systemd", "state": "running", "status": "enabled"}, "ufw": {"name": "ufw", "source": "sysv", "state": "running"}, "ufw.service": {"name": "ufw.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "unattended-upgrades": {"name": "unattended-upgrades", "source": "sysv", "state": "running"}, "unattended-upgrades.service": {"name": "unattended-upgrades.service", "source": "systemd", "state": "running", "status": "enabled"}, "update-notifier-download.service": {"name": "update-notifier-download.service", "source": "systemd", "state": "inactive", "status": "static"}, "update-notifier-motd.service": {"name": "update-notifier-motd.service", "source": "systemd", "state": "stopped", "status": "static"}, "upower.service": {"name": "upower.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "usb_modeswitch@.service": {"name": "usb_modeswitch@.service", "source": "systemd", "state": "unknown", "status": "static"}, "usbmuxd.service": {"name": "usbmuxd.service", "source": "systemd", "state": "inactive", "status": "static"}, "user-runtime-dir@.service": {"name": "user-runtime-dir@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user-runtime-dir@0.service": {"name": "user-runtime-dir@0.service", "source": "systemd", "state": "stopped", "status": "active"}, "user-runtime-dir@1000.service": {"name": "user-runtime-dir@1000.service", "source": "systemd", "state": "stopped", "status": "active"}, "user@.service": {"name": "user@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user@0.service": {"name": "user@0.service", "source": "systemd", "state": "running", "status": "active"}, "user@1000.service": {"name": "user@1000.service", "source": "systemd", "state": "running", "status": "active"}, "uuidd": {"name": "uuidd", "source": "sysv", "state": "stopped"}, "uuidd.service": {"name": "uuidd.service", "source": "systemd", "state": "stopped", "status": "indirect"}, "vgauth.service": {"name": "vgauth.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "vmtoolsd.service": {"name": "vmtoolsd.service", "source": "systemd", "state": "inactive", "status": "alias"}, "x11-common.service": {"name": "x11-common.service", "source": "systemd", "state": "inactive", "status": "masked"}, "xfs_scrub@.service": {"name": "xfs_scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "xfs_scrub_all.service": {"name": "xfs_scrub_all.service", "source": "systemd", "state": "inactive", "status": "static"}, "xfs_scrub_fail@.service": {"name": "xfs_scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "zfs-mount.service": {"name": "zfs-mount.service", "source": "systemd", "state": "stopped", "status": "not-found"}}}, "changed": false}
2023-07-10 14:41:10,635 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:10 +0300 (0:00:01.998)       0:00:41.488 ****** 
2023-07-10 14:41:11,049 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if containerd is installed] *********
2023-07-10 14:41:11,050 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 920, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 14:41:11,066 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.430)       0:00:41.919 ****** 
2023-07-10 14:41:11,394 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if docker is installed] *************
2023-07-10 14:41:11,394 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 920, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 14:41:11,408 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.341)       0:00:42.261 ****** 
2023-07-10 14:41:11,693 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if crio is installed] ***************
2023-07-10 14:41:11,694 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 920, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 14:41:11,708 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.299)       0:00:42.561 ****** 
2023-07-10 14:41:11,753 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.045)       0:00:42.607 ****** 
2023-07-10 14:41:11,799 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.045)       0:00:42.652 ****** 
2023-07-10 14:41:11,847 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.048)       0:00:42.700 ****** 
2023-07-10 14:41:11,897 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:11 +0300 (0:00:00.049)       0:00:42.750 ****** 
2023-07-10 14:41:12,118 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.221)       0:00:42.971 ****** 
2023-07-10 14:41:12,195 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.077)       0:00:43.048 ****** 
2023-07-10 14:41:12,256 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.060)       0:00:43.109 ****** 
2023-07-10 14:41:12,309 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.053)       0:00:43.163 ****** 
2023-07-10 14:41:12,382 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.072)       0:00:43.235 ****** 
2023-07-10 14:41:12,444 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.062)       0:00:43.297 ****** 
2023-07-10 14:41:12,530 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.085)       0:00:43.383 ****** 
2023-07-10 14:41:12,626 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.095)       0:00:43.479 ****** 
2023-07-10 14:41:12,699 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.072)       0:00:43.552 ****** 
2023-07-10 14:41:12,775 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.076)       0:00:43.628 ****** 
2023-07-10 14:41:12,829 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.054)       0:00:43.682 ****** 
2023-07-10 14:41:12,902 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.073)       0:00:43.756 ****** 
2023-07-10 14:41:12,977 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:12 +0300 (0:00:00.075)       0:00:43.831 ****** 
2023-07-10 14:41:13,053 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.075)       0:00:43.906 ****** 
2023-07-10 14:41:13,107 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.053)       0:00:43.960 ****** 
2023-07-10 14:41:13,285 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.178)       0:00:44.138 ****** 
2023-07-10 14:41:13,340 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.054)       0:00:44.193 ****** 
2023-07-10 14:41:13,394 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.054)       0:00:44.247 ****** 
2023-07-10 14:41:13,457 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.063)       0:00:44.311 ****** 
2023-07-10 14:41:13,539 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.081)       0:00:44.393 ****** 
2023-07-10 14:41:13,764 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.224)       0:00:44.617 ****** 
2023-07-10 14:41:13,847 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.082)       0:00:44.700 ****** 
2023-07-10 14:41:13,903 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.056)       0:00:44.756 ****** 
2023-07-10 14:41:13,954 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:13 +0300 (0:00:00.051)       0:00:44.807 ****** 
2023-07-10 14:41:14,004 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.049)       0:00:44.857 ****** 
2023-07-10 14:41:14,062 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.058)       0:00:44.916 ****** 
2023-07-10 14:41:14,122 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.059)       0:00:44.975 ****** 
2023-07-10 14:41:14,175 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.053)       0:00:45.028 ****** 
2023-07-10 14:41:14,230 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.054)       0:00:45.083 ****** 
2023-07-10 14:41:14,305 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.074)       0:00:45.158 ****** 
2023-07-10 14:41:14,368 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.063)       0:00:45.221 ****** 
2023-07-10 14:41:14,470 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.102)       0:00:45.324 ****** 
2023-07-10 14:41:14,538 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.067)       0:00:45.391 ****** 
2023-07-10 14:41:14,618 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.080)       0:00:45.471 ****** 
2023-07-10 14:41:14,696 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.077)       0:00:45.549 ****** 
2023-07-10 14:41:14,755 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.059)       0:00:45.608 ****** 
2023-07-10 14:41:14,805 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.050)       0:00:45.659 ****** 
2023-07-10 14:41:14,954 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:14 +0300 (0:00:00.148)       0:00:45.808 ****** 
2023-07-10 14:41:15,020 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.065)       0:00:45.873 ****** 
2023-07-10 14:41:15,069 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.049)       0:00:45.923 ****** 
2023-07-10 14:41:15,120 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.050)       0:00:45.973 ****** 
2023-07-10 14:41:15,158 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.038)       0:00:46.011 ****** 
2023-07-10 14:41:15,190 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.032)       0:00:46.044 ****** 
2023-07-10 14:41:15,224 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.033)       0:00:46.077 ****** 
2023-07-10 14:41:15,256 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.032)       0:00:46.109 ****** 
2023-07-10 14:41:15,287 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.031)       0:00:46.141 ****** 
2023-07-10 14:41:15,327 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.039)       0:00:46.180 ****** 
2023-07-10 14:41:15,366 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.039)       0:00:46.220 ****** 
2023-07-10 14:41:15,397 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.030)       0:00:46.250 ****** 
2023-07-10 14:41:15,429 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.031)       0:00:46.282 ****** 
2023-07-10 14:41:15,463 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.034)       0:00:46.317 ****** 
2023-07-10 14:41:15,498 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.034)       0:00:46.351 ****** 
2023-07-10 14:41:15,537 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.039)       0:00:46.390 ****** 
2023-07-10 14:41:15,574 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.037)       0:00:46.427 ****** 
2023-07-10 14:41:15,616 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.042)       0:00:46.469 ****** 
2023-07-10 14:41:15,654 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.038)       0:00:46.508 ****** 
2023-07-10 14:41:15,689 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.034)       0:00:46.542 ****** 
2023-07-10 14:41:15,722 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.033)       0:00:46.576 ****** 
2023-07-10 14:41:15,760 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.037)       0:00:46.613 ****** 
2023-07-10 14:41:15,803 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.043)       0:00:46.657 ****** 
2023-07-10 14:41:15,836 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.032)       0:00:46.689 ****** 
2023-07-10 14:41:15,889 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.052)       0:00:46.742 ****** 
2023-07-10 14:41:15,967 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:15 +0300 (0:00:00.078)       0:00:46.821 ****** 
2023-07-10 14:41:16,005 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.037)       0:00:46.858 ****** 
2023-07-10 14:41:16,044 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.039)       0:00:46.897 ****** 
2023-07-10 14:41:16,080 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.036)       0:00:46.934 ****** 
2023-07-10 14:41:16,116 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.036)       0:00:46.970 ****** 
2023-07-10 14:41:16,157 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.040)       0:00:47.010 ****** 
2023-07-10 14:41:16,204 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.046)       0:00:47.057 ****** 
2023-07-10 14:41:16,263 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.059)       0:00:47.116 ****** 
2023-07-10 14:41:16,298 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.035)       0:00:47.152 ****** 
2023-07-10 14:41:16,334 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:16 +0300 (0:00:00.035)       0:00:47.187 ****** 
2023-07-10 14:41:18,364 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:02.029)       0:00:49.217 ****** 
2023-07-10 14:41:18,392 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.028)       0:00:49.245 ****** 
2023-07-10 14:41:18,429 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.037)       0:00:49.282 ****** 
2023-07-10 14:41:18,456 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.026)       0:00:49.309 ****** 
2023-07-10 14:41:18,493 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.036)       0:00:49.346 ****** 
2023-07-10 14:41:18,520 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.027)       0:00:49.374 ****** 
2023-07-10 14:41:18,549 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.028)       0:00:49.402 ****** 
2023-07-10 14:41:18,577 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.028)       0:00:49.431 ****** 
2023-07-10 14:41:18,621 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.043)       0:00:49.474 ****** 
2023-07-10 14:41:18,654 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.033)       0:00:49.508 ****** 
2023-07-10 14:41:18,692 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.037)       0:00:49.546 ****** 
2023-07-10 14:41:18,728 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.036)       0:00:49.582 ****** 
2023-07-10 14:41:18,759 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.030)       0:00:49.612 ****** 
2023-07-10 14:41:18,788 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.029)       0:00:49.641 ****** 
2023-07-10 14:41:18,819 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.030)       0:00:49.672 ****** 
2023-07-10 14:41:18,848 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.029)       0:00:49.701 ****** 
2023-07-10 14:41:18,884 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.036)       0:00:49.738 ****** 
2023-07-10 14:41:18,913 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.028)       0:00:49.766 ****** 
2023-07-10 14:41:18,941 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.028)       0:00:49.794 ****** 
2023-07-10 14:41:18,971 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:18 +0300 (0:00:00.030)       0:00:49.825 ****** 
2023-07-10 14:41:19,012 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.040)       0:00:49.865 ****** 
2023-07-10 14:41:19,055 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.042)       0:00:49.908 ****** 
2023-07-10 14:41:19,087 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.032)       0:00:49.940 ****** 
2023-07-10 14:41:19,121 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.034)       0:00:49.974 ****** 
2023-07-10 14:41:19,157 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.036)       0:00:50.011 ****** 
2023-07-10 14:41:19,192 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.034)       0:00:50.045 ****** 
2023-07-10 14:41:19,223 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.031)       0:00:50.077 ****** 
2023-07-10 14:41:19,252 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.029)       0:00:50.106 ****** 
2023-07-10 14:41:19,282 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.029)       0:00:50.135 ****** 
2023-07-10 14:41:19,311 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.029)       0:00:50.165 ****** 
2023-07-10 14:41:19,342 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.030)       0:00:50.195 ****** 
2023-07-10 14:41:19,371 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.029)       0:00:50.224 ****** 
2023-07-10 14:41:19,404 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.032)       0:00:50.257 ****** 
2023-07-10 14:41:19,433 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.029)       0:00:50.286 ****** 
2023-07-10 14:41:19,464 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.030)       0:00:50.317 ****** 
2023-07-10 14:41:19,504 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.040)       0:00:50.357 ****** 
2023-07-10 14:41:19,551 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.047)       0:00:50.404 ****** 
2023-07-10 14:41:19,598 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.046)       0:00:50.451 ****** 
2023-07-10 14:41:19,627 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.029)       0:00:50.480 ****** 
2023-07-10 14:41:19,654 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.027)       0:00:50.508 ****** 
2023-07-10 14:41:19,683 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.028)       0:00:50.536 ****** 
2023-07-10 14:41:19,729 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.045)       0:00:50.582 ****** 
2023-07-10 14:41:19,756 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.027)       0:00:50.610 ****** 
2023-07-10 14:41:19,784 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.027)       0:00:50.637 ****** 
2023-07-10 14:41:19,840 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.055)       0:00:50.693 ****** 
2023-07-10 14:41:19,870 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.030)       0:00:50.723 ****** 
2023-07-10 14:41:19,903 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.033)       0:00:50.757 ****** 
2023-07-10 14:41:19,937 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.033)       0:00:50.790 ****** 
2023-07-10 14:41:19,970 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:19 +0300 (0:00:00.033)       0:00:50.824 ****** 
2023-07-10 14:41:20,006 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.034)       0:00:50.859 ****** 
2023-07-10 14:41:20,053 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.047)       0:00:50.907 ****** 
2023-07-10 14:41:20,080 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.027)       0:00:50.934 ****** 
2023-07-10 14:41:20,112 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.031)       0:00:50.965 ****** 
2023-07-10 14:41:20,136 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.024)       0:00:50.989 ****** 
2023-07-10 14:41:20,165 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.029)       0:00:51.018 ****** 
2023-07-10 14:41:20,199 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.033)       0:00:51.052 ****** 
2023-07-10 14:41:20,244 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.045)       0:00:51.098 ****** 
2023-07-10 14:41:20,280 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.035)       0:00:51.133 ****** 
2023-07-10 14:41:20,307 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.026)       0:00:51.160 ****** 
2023-07-10 14:41:20,345 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.038)       0:00:51.198 ****** 
2023-07-10 14:41:20,535 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] *******
2023-07-10 14:41:20,536 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:20,544 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.198)       0:00:51.397 ****** 
2023-07-10 14:41:20,590 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | set is_ostree] ****************
2023-07-10 14:41:20,591 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 14:41:20,602 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.057)       0:00:51.455 ****** 
2023-07-10 14:41:20,725 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | gather os specific variables] ***
2023-07-10 14:41:20,726 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) => {"ansible_facts": {"containerd_repo_info": {"repos": ["deb {{ containerd_ubuntu_repo_base_url }} {{ ansible_distribution_release | lower }} {{ containerd_ubuntu_repo_component }}\n"]}}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml"}
2023-07-10 14:41:20,744 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.142)       0:00:51.598 ****** 
2023-07-10 14:41:20,908 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | check if fedora coreos] *********************************
2023-07-10 14:41:20,909 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:41:20,917 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.172)       0:00:51.770 ****** 
2023-07-10 14:41:20,961 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | set is_ostree] ******************************************
2023-07-10 14:41:20,961 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 14:41:20,970 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:20 +0300 (0:00:00.053)       0:00:51.824 ****** 
2023-07-10 14:41:21,490 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ******
2023-07-10 14:41:21,491 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 14:41:21,499 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:21 +0300 (0:00:00.529)       0:00:52.353 ****** 
2023-07-10 14:41:21,517 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Download runc binary] ***********************************
2023-07-10 14:41:21,539 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 14:41:21,552 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:21 +0300 (0:00:00.052)       0:00:52.406 ****** 
2023-07-10 14:41:21,602 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : prep_download | Set a few facts] *******************************
2023-07-10 14:41:21,603 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:41:21,611 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:21 +0300 (0:00:00.059)       0:00:52.465 ****** 
2023-07-10 14:41:22,579 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Starting download of file] *********************
2023-07-10 14:41:22,579 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 14:41:22,588 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:22 +0300 (0:00:00.976)       0:00:53.442 ****** 
2023-07-10 14:41:23,556 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Set pathname of cached file] *******************
2023-07-10 14:41:23,556 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 14:41:23,565 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:23 +0300 (0:00:00.977)       0:00:54.419 ****** 
2023-07-10 14:41:25,662 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Create dest directory on node] *****************
2023-07-10 14:41:25,662 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:41:25,673 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:25 +0300 (0:00:02.107)       0:00:56.526 ****** 
2023-07-10 14:41:25,716 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:25 +0300 (0:00:00.042)       0:00:56.569 ****** 
2023-07-10 14:41:26,563 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:26 +0300 (0:00:00.847)       0:00:57.417 ****** 
2023-07-10 14:41:30,828 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Validate mirrors] ******************************
2023-07-10 14:41:30,828 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:41:30,830 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:41:30,848 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:30 +0300 (0:00:04.284)       0:01:01.701 ****** 
2023-07-10 14:41:30,918 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Get the list of working mirrors] ***************
2023-07-10 14:41:30,918 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 14:41:30,938 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:30 +0300 (0:00:00.090)       0:01:01.792 ****** 
2023-07-10 14:41:46,754 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Download item] *********************************
2023-07-10 14:41:46,755 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:41:46,774 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:46 +0300 (0:00:15.835)       0:01:17.628 ****** 
2023-07-10 14:41:46,827 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:46 +0300 (0:00:00.052)       0:01:17.680 ****** 
2023-07-10 14:41:46,880 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:46 +0300 (0:00:00.053)       0:01:17.734 ****** 
2023-07-10 14:41:46,940 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:46 +0300 (0:00:00.059)       0:01:17.793 ****** 
2023-07-10 14:41:46,986 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Extract file archives] *************************
2023-07-10 14:41:47,011 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:41:47,036 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:47 +0300 (0:00:00.095)       0:01:17.889 ****** 
2023-07-10 14:41:48,593 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:48 +0300 (0:00:01.557)       0:01:19.447 ****** 
2023-07-10 14:41:50,060 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : Copy runc binary from download dir] ****************************
2023-07-10 14:41:50,060 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "c2a25f41774ecb90b4f51fb11ebb06337862e2b7", "dest": "/usr/local/bin/runc", "gid": 0, "group": "root", "md5sum": "0407860329c7f81077a17b574eccc75e", "mode": "0755", "owner": "root", "size": 9644288, "src": "/tmp/releases/runc-v1.1.7.amd64", "state": "file", "uid": 0}
2023-07-10 14:41:50,069 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:50 +0300 (0:00:01.475)       0:01:20.922 ****** 
2023-07-10 14:41:50,238 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Remove orphaned binary] *********************************
2023-07-10 14:41:50,239 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/usr/bin/runc", "state": "absent"}
2023-07-10 14:41:50,255 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:50 +0300 (0:00:00.186)       0:01:21.109 ****** 
2023-07-10 14:41:50,276 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : install crictl] **********************************************
2023-07-10 14:41:50,295 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1
2023-07-10 14:41:50,307 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:50 +0300 (0:00:00.051)       0:01:21.161 ****** 
2023-07-10 14:41:50,336 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : crictl | Download crictl] ************************************
2023-07-10 14:41:50,358 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 14:41:50,374 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:50 +0300 (0:00:00.067)       0:01:21.228 ****** 
2023-07-10 14:41:50,423 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : prep_download | Set a few facts] *****************************
2023-07-10 14:41:50,423 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:41:50,432 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:50 +0300 (0:00:00.057)       0:01:21.285 ****** 
2023-07-10 14:41:51,331 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Starting download of file] *******************
2023-07-10 14:41:51,332 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 14:41:51,341 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:51 +0300 (0:00:00.908)       0:01:22.194 ****** 
2023-07-10 14:41:52,208 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Set pathname of cached file] *****************
2023-07-10 14:41:52,209 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:41:52,220 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:52 +0300 (0:00:00.878)       0:01:23.073 ****** 
2023-07-10 14:41:54,279 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Create dest directory on node] ***************
2023-07-10 14:41:54,279 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:41:54,300 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:54 +0300 (0:00:02.079)       0:01:25.153 ****** 
2023-07-10 14:41:54,373 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:54 +0300 (0:00:00.072)       0:01:25.226 ****** 
2023-07-10 14:41:55,911 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:41:55 +0300 (0:00:01.538)       0:01:26.764 ****** 
2023-07-10 14:42:00,202 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Validate mirrors] ****************************
2023-07-10 14:42:00,203 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:42:00,206 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:42:00,223 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:00 +0300 (0:00:04.312)       0:01:31.076 ****** 
2023-07-10 14:42:00,295 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Get the list of working mirrors] *************
2023-07-10 14:42:00,296 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:42:00,314 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:00 +0300 (0:00:00.090)       0:01:31.167 ****** 
2023-07-10 14:42:22,704 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Download item] *******************************
2023-07-10 14:42:22,705 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:42:22,719 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:22 +0300 (0:00:22.405)       0:01:53.573 ****** 
2023-07-10 14:42:22,793 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:22 +0300 (0:00:00.073)       0:01:53.646 ****** 
2023-07-10 14:42:22,859 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:22 +0300 (0:00:00.065)       0:01:53.712 ****** 
2023-07-10 14:42:22,916 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:22 +0300 (0:00:00.057)       0:01:53.769 ****** 
2023-07-10 14:42:22,959 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Extract file archives] ***********************
2023-07-10 14:42:22,975 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:42:23,003 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:23 +0300 (0:00:00.086)       0:01:53.856 ****** 
2023-07-10 14:42:29,732 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : extract_file | Unpacking archive] ****************************
2023-07-10 14:42:29,732 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/tmp/releases", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/tmp/releases", "-z", "--owner=root", "-f", "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:42:29,741 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:29 +0300 (0:00:06.738)       0:02:00.594 ****** 
2023-07-10 14:42:30,104 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Install crictl config] ***************************************
2023-07-10 14:42:30,104 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "8c563ee377b8aad181d3a00e06314316dc085513", "dest": "/etc/crictl.yaml", "gid": 0, "group": "root", "md5sum": "f4242191753db4690b31e3ecec64d202", "mode": "0644", "owner": "root", "size": 145, "src": "/root/.ansible/tmp/ansible-tmp-1688989349.7926707-9497-101160215117633/source", "state": "file", "uid": 0}
2023-07-10 14:42:30,113 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:30 +0300 (0:00:00.372)       0:02:00.967 ****** 
2023-07-10 14:42:30,480 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Copy crictl binary from download dir] ************************
2023-07-10 14:42:30,480 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "ecebb8d084fb6bfcd42716ecb222a0bd7599d3f5", "dest": "/usr/local/bin/crictl", "gid": 0, "group": "root", "md5sum": "d8aaa4799d86a7beda6c6378b78f80b1", "mode": "0755", "owner": "root", "size": 52586151, "src": "/tmp/releases/crictl", "state": "file", "uid": 0}
2023-07-10 14:42:30,497 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:30 +0300 (0:00:00.383)       0:02:01.350 ****** 
2023-07-10 14:42:30,518 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *********************************
2023-07-10 14:42:30,536 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 14:42:30,550 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:30 +0300 (0:00:00.052)       0:02:01.403 ****** 
2023-07-10 14:42:30,596 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : prep_download | Set a few facts] ****************************
2023-07-10 14:42:30,597 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:42:30,608 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:30 +0300 (0:00:00.058)       0:02:01.462 ****** 
2023-07-10 14:42:31,441 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Starting download of file] ******************
2023-07-10 14:42:31,442 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 14:42:31,450 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:31 +0300 (0:00:00.841)       0:02:02.304 ****** 
2023-07-10 14:42:32,304 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ****************
2023-07-10 14:42:32,305 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:42:32,314 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:32 +0300 (0:00:00.863)       0:02:03.167 ****** 
2023-07-10 14:42:35,036 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Create dest directory on node] **************
2023-07-10 14:42:35,037 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:42:35,056 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:35 +0300 (0:00:02.742)       0:02:05.909 ****** 
2023-07-10 14:42:35,120 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:35 +0300 (0:00:00.064)       0:02:05.974 ****** 
2023-07-10 14:42:36,526 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:36 +0300 (0:00:01.405)       0:02:07.379 ****** 
2023-07-10 14:42:40,353 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Validate mirrors] ***************************
2023-07-10 14:42:40,353 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:42:40,356 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:42:40,374 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:40 +0300 (0:00:03.847)       0:02:11.227 ****** 
2023-07-10 14:42:40,440 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ************
2023-07-10 14:42:40,441 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:42:40,458 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:40 +0300 (0:00:00.084)       0:02:11.312 ****** 
2023-07-10 14:42:54,809 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Download item] ******************************
2023-07-10 14:42:54,810 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:42:54,824 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:54 +0300 (0:00:14.365)       0:02:25.677 ****** 
2023-07-10 14:42:54,879 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:54 +0300 (0:00:00.054)       0:02:25.732 ****** 
2023-07-10 14:42:54,943 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:54 +0300 (0:00:00.063)       0:02:25.796 ****** 
2023-07-10 14:42:54,997 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:54 +0300 (0:00:00.054)       0:02:25.851 ****** 
2023-07-10 14:42:55,040 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Extract file archives] **********************
2023-07-10 14:42:55,056 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:42:55,080 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:42:55 +0300 (0:00:00.082)       0:02:25.933 ****** 
2023-07-10 14:43:02,255 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : extract_file | Unpacking archive] ***************************
2023-07-10 14:43:02,255 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/tmp/releases", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/tmp/releases", "-z", "--owner=root", "-f", "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:43:02,264 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:02 +0300 (0:00:07.184)       0:02:33.117 ****** 
2023-07-10 14:43:02,543 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ************
2023-07-10 14:43:02,543 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "36ed3de5ebdc71f782c80b95c6838797e71f1d06", "dest": "/usr/local/bin/nerdctl", "gid": 0, "group": "root", "md5sum": "1382ce88987ba5832c4477d0a781b6f1", "mode": "0755", "owner": "root", "size": 24379392, "src": "/tmp/releases/nerdctl", "state": "file", "uid": 0}
2023-07-10 14:43:02,553 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:02 +0300 (0:00:00.289)       0:02:33.406 ****** 
2023-07-10 14:43:02,723 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Create configuration dir] *************************
2023-07-10 14:43:02,723 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/nerdctl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:43:02,732 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:02 +0300 (0:00:00.178)       0:02:33.585 ****** 
2023-07-10 14:43:03,124 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ********************
2023-07-10 14:43:03,125 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "e46d9c0efd0a617d0682d1b779320ada3a505ca4", "dest": "/etc/nerdctl/nerdctl.toml", "gid": 0, "group": "root", "md5sum": "0cd6fc06c6eeffb2c1637f95184f41b9", "mode": "0644", "owner": "root", "size": 354, "src": "/root/.ansible/tmp/ansible-tmp-1688989382.7792556-9612-7649450870694/source", "state": "file", "uid": 0}
2023-07-10 14:43:03,144 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:03 +0300 (0:00:00.412)       0:02:33.998 ****** 
2023-07-10 14:43:03,186 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:03 +0300 (0:00:00.042)       0:02:34.040 ****** 
2023-07-10 14:43:03,646 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove any package manager controlled containerd package] ***
2023-07-10 14:43:03,646 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 14:43:03,655 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:03 +0300 (0:00:00.468)       0:02:34.508 ****** 
2023-07-10 14:43:03,685 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:03 +0300 (0:00:00.030)       0:02:34.539 ****** 
2023-07-10 14:43:04,163 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove containerd repository] ***************
2023-07-10 14:43:04,164 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=deb https://download.docker.com/linux/ubuntu jammy stable
) => {"ansible_loop_var": "item", "changed": false, "item": "deb https://download.docker.com/linux/ubuntu jammy stable\n", "repo": "deb https://download.docker.com/linux/ubuntu jammy stable\n", "state": "absent"}
2023-07-10 14:43:04,174 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:04 +0300 (0:00:00.488)       0:02:35.027 ****** 
2023-07-10 14:43:04,194 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Download containerd] ************************
2023-07-10 14:43:04,213 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 14:43:04,228 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:04 +0300 (0:00:00.053)       0:02:35.081 ****** 
2023-07-10 14:43:04,276 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : prep_download | Set a few facts] *************************
2023-07-10 14:43:04,276 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:43:04,286 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:04 +0300 (0:00:00.058)       0:02:35.139 ****** 
2023-07-10 14:43:05,125 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Starting download of file] ***************
2023-07-10 14:43:05,126 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
}
2023-07-10 14:43:05,134 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:05 +0300 (0:00:00.848)       0:02:35.988 ****** 
2023-07-10 14:43:05,968 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Set pathname of cached file] *************
2023-07-10 14:43:05,968 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/containerd-1.7.2-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:43:05,977 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:05 +0300 (0:00:00.842)       0:02:36.830 ****** 
2023-07-10 14:43:08,156 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Create dest directory on node] ***********
2023-07-10 14:43:08,156 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:43:08,177 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:08 +0300 (0:00:02.200)       0:02:39.030 ****** 
2023-07-10 14:43:08,250 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:08 +0300 (0:00:00.073)       0:02:39.104 ****** 
2023-07-10 14:43:09,648 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:09 +0300 (0:00:01.398)       0:02:40.502 ****** 
2023-07-10 14:43:13,851 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Validate mirrors] ************************
2023-07-10 14:43:13,852 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:43:13,854 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:43:13,871 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:13 +0300 (0:00:04.222)       0:02:44.724 ****** 
2023-07-10 14:43:13,936 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Get the list of working mirrors] *********
2023-07-10 14:43:13,937 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:43:13,954 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:13 +0300 (0:00:00.083)       0:02:44.807 ****** 
2023-07-10 14:43:50,882 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Download item] ***************************
2023-07-10 14:43:50,883 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:43:50,891 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:50 +0300 (0:00:36.937)       0:03:21.745 ****** 
2023-07-10 14:43:50,927 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:50 +0300 (0:00:00.035)       0:03:21.780 ****** 
2023-07-10 14:43:50,963 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:50 +0300 (0:00:00.036)       0:03:21.816 ****** 
2023-07-10 14:43:50,998 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:50 +0300 (0:00:00.034)       0:03:21.851 ****** 
2023-07-10 14:43:51,023 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Extract file archives] *******************
2023-07-10 14:43:51,033 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:43:51,048 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:51 +0300 (0:00:00.049)       0:03:21.901 ****** 
2023-07-10 14:43:51,877 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:51 +0300 (0:00:00.829)       0:03:22.730 ****** 
2023-07-10 14:43:55,254 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Unpack containerd archive] ******************
2023-07-10 14:43:55,255 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/usr/local/bin", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/usr/local/bin", "-z", "--show-transformed-names", "--strip-components=1", "-f", "/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:43:55,263 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:55 +0300 (0:00:03.386)       0:03:26.116 ****** 
2023-07-10 14:43:55,458 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove orphaned binary] *********************
2023-07-10 14:43:55,459 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd) => {"ansible_loop_var": "item", "changed": false, "item": "containerd", "path": "/usr/bin/containerd", "state": "absent"}
2023-07-10 14:43:55,612 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim", "path": "/usr/bin/containerd-shim", "state": "absent"}
2023-07-10 14:43:55,776 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim-runc-v1) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim-runc-v1", "path": "/usr/bin/containerd-shim-runc-v1", "state": "absent"}
2023-07-10 14:43:55,935 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim-runc-v2) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim-runc-v2", "path": "/usr/bin/containerd-shim-runc-v2", "state": "absent"}
2023-07-10 14:43:56,086 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=ctr) => {"ansible_loop_var": "item", "changed": false, "item": "ctr", "path": "/usr/bin/ctr", "state": "absent"}
2023-07-10 14:43:56,097 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:56 +0300 (0:00:00.833)       0:03:26.950 ****** 
2023-07-10 14:43:56,463 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Generate systemd service for containerd] ****
2023-07-10 14:43:56,464 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "2ebef812a5ebb2a712a694da85860395a349c40a", "dest": "/etc/systemd/system/containerd.service", "gid": 0, "group": "root", "md5sum": "bf055ac7aba5035350114884196cb88a", "mode": "0644", "owner": "root", "size": 1365, "src": "/root/.ansible/tmp/ansible-tmp-1688989436.1480083-9731-134717577741058/source", "state": "file", "uid": 0}
2023-07-10 14:43:56,473 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:56 +0300 (0:00:00.376)       0:03:27.326 ****** 
2023-07-10 14:43:56,658 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Ensure containerd directories exist] ********
2023-07-10 14:43:56,659 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/etc/systemd/system/containerd.service.d) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/etc/systemd/system/containerd.service.d", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/containerd.service.d", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:43:56,814 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/etc/containerd) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/etc/containerd", "mode": "0755", "owner": "root", "path": "/etc/containerd", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:43:56,977 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/var/lib/containerd) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/var/lib/containerd", "mode": "0755", "owner": "root", "path": "/var/lib/containerd", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:43:57,126 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item=/run/containerd) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/run/containerd", "mode": "0755", "owner": "root", "path": "/run/containerd", "size": 40, "state": "directory", "uid": 0}
2023-07-10 14:43:57,136 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:57 +0300 (0:00:00.663)       0:03:27.990 ****** 
2023-07-10 14:43:57,174 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:57 +0300 (0:00:00.037)       0:03:28.027 ****** 
2023-07-10 14:43:57,350 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Generate default base_runtime_spec] *********
2023-07-10 14:43:57,351 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/ctr", "oci", "spec"], "delta": "0:00:00.008637", "end": "2023-07-10 11:43:57.336122", "msg": "", "rc": 0, "start": "2023-07-10 11:43:57.327485", "stderr": "", "stderr_lines": [], "stdout": "{\n    \"ociVersion\": \"1.1.0-rc.1\",\n    \"process\": {\n        \"user\": {\n            \"uid\": 0,\n            \"gid\": 0\n        },\n        \"cwd\": \"/\",\n        \"capabilities\": {\n            \"bounding\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ],\n            \"effective\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ],\n            \"permitted\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ]\n        },\n        \"rlimits\": [\n            {\n                \"type\": \"RLIMIT_NOFILE\",\n                \"hard\": 1024,\n                \"soft\": 1024\n            }\n        ],\n        \"noNewPrivileges\": true\n    },\n    \"root\": {\n        \"path\": \"rootfs\"\n    },\n    \"mounts\": [\n        {\n            \"destination\": \"/proc\",\n            \"type\": \"proc\",\n            \"source\": \"proc\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/dev\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/pts\",\n            \"type\": \"devpts\",\n            \"source\": \"devpts\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"newinstance\",\n                \"ptmxmode=0666\",\n                \"mode=0620\",\n                \"gid=5\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/shm\",\n            \"type\": \"tmpfs\",\n            \"source\": \"shm\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"mode=1777\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/mqueue\",\n            \"type\": \"mqueue\",\n            \"source\": \"mqueue\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/sys\",\n            \"type\": \"sysfs\",\n            \"source\": \"sysfs\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"ro\"\n            ]\n        },\n        {\n            \"destination\": \"/run\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        }\n    ],\n    \"linux\": {\n        \"resources\": {\n            \"devices\": [\n                {\n                    \"allow\": false,\n                    \"access\": \"rwm\"\n                }\n            ]\n        },\n        \"cgroupsPath\": \"/default\",\n        \"namespaces\": [\n            {\n                \"type\": \"pid\"\n            },\n            {\n                \"type\": \"ipc\"\n            },\n            {\n                \"type\": \"uts\"\n            },\n            {\n                \"type\": \"mount\"\n            },\n            {\n                \"type\": \"network\"\n            }\n        ],\n        \"maskedPaths\": [\n            \"/proc/acpi\",\n            \"/proc/asound\",\n            \"/proc/kcore\",\n            \"/proc/keys\",\n            \"/proc/latency_stats\",\n            \"/proc/timer_list\",\n            \"/proc/timer_stats\",\n            \"/proc/sched_debug\",\n            \"/sys/firmware\",\n            \"/proc/scsi\"\n        ],\n        \"readonlyPaths\": [\n            \"/proc/bus\",\n            \"/proc/fs\",\n            \"/proc/irq\",\n            \"/proc/sys\",\n            \"/proc/sysrq-trigger\"\n        ]\n    }\n}", "stdout_lines": ["{", "    \"ociVersion\": \"1.1.0-rc.1\",", "    \"process\": {", "        \"user\": {", "            \"uid\": 0,", "            \"gid\": 0", "        },", "        \"cwd\": \"/\",", "        \"capabilities\": {", "            \"bounding\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ],", "            \"effective\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ],", "            \"permitted\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ]", "        },", "        \"rlimits\": [", "            {", "                \"type\": \"RLIMIT_NOFILE\",", "                \"hard\": 1024,", "                \"soft\": 1024", "            }", "        ],", "        \"noNewPrivileges\": true", "    },", "    \"root\": {", "        \"path\": \"rootfs\"", "    },", "    \"mounts\": [", "        {", "            \"destination\": \"/proc\",", "            \"type\": \"proc\",", "            \"source\": \"proc\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\"", "            ]", "        },", "        {", "            \"destination\": \"/dev\",", "            \"type\": \"tmpfs\",", "            \"source\": \"tmpfs\",", "            \"options\": [", "                \"nosuid\",", "                \"strictatime\",", "                \"mode=755\",", "                \"size=65536k\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/pts\",", "            \"type\": \"devpts\",", "            \"source\": \"devpts\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"newinstance\",", "                \"ptmxmode=0666\",", "                \"mode=0620\",", "                \"gid=5\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/shm\",", "            \"type\": \"tmpfs\",", "            \"source\": \"shm\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\",", "                \"mode=1777\",", "                \"size=65536k\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/mqueue\",", "            \"type\": \"mqueue\",", "            \"source\": \"mqueue\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\"", "            ]", "        },", "        {", "            \"destination\": \"/sys\",", "            \"type\": \"sysfs\",", "            \"source\": \"sysfs\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\",", "                \"ro\"", "            ]", "        },", "        {", "            \"destination\": \"/run\",", "            \"type\": \"tmpfs\",", "            \"source\": \"tmpfs\",", "            \"options\": [", "                \"nosuid\",", "                \"strictatime\",", "                \"mode=755\",", "                \"size=65536k\"", "            ]", "        }", "    ],", "    \"linux\": {", "        \"resources\": {", "            \"devices\": [", "                {", "                    \"allow\": false,", "                    \"access\": \"rwm\"", "                }", "            ]", "        },", "        \"cgroupsPath\": \"/default\",", "        \"namespaces\": [", "            {", "                \"type\": \"pid\"", "            },", "            {", "                \"type\": \"ipc\"", "            },", "            {", "                \"type\": \"uts\"", "            },", "            {", "                \"type\": \"mount\"", "            },", "            {", "                \"type\": \"network\"", "            }", "        ],", "        \"maskedPaths\": [", "            \"/proc/acpi\",", "            \"/proc/asound\",", "            \"/proc/kcore\",", "            \"/proc/keys\",", "            \"/proc/latency_stats\",", "            \"/proc/timer_list\",", "            \"/proc/timer_stats\",", "            \"/proc/sched_debug\",", "            \"/sys/firmware\",", "            \"/proc/scsi\"", "        ],", "        \"readonlyPaths\": [", "            \"/proc/bus\",", "            \"/proc/fs\",", "            \"/proc/irq\",", "            \"/proc/sys\",", "            \"/proc/sysrq-trigger\"", "        ]", "    }", "}"]}
2023-07-10 14:43:57,360 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:57 +0300 (0:00:00.186)       0:03:28.214 ****** 
2023-07-10 14:43:57,404 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Store generated default base_runtime_spec] ***
2023-07-10 14:43:57,405 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"containerd_default_base_runtime_spec": {"linux": {"cgroupsPath": "/default", "maskedPaths": ["/proc/acpi", "/proc/asound", "/proc/kcore", "/proc/keys", "/proc/latency_stats", "/proc/timer_list", "/proc/timer_stats", "/proc/sched_debug", "/sys/firmware", "/proc/scsi"], "namespaces": [{"type": "pid"}, {"type": "ipc"}, {"type": "uts"}, {"type": "mount"}, {"type": "network"}], "readonlyPaths": ["/proc/bus", "/proc/fs", "/proc/irq", "/proc/sys", "/proc/sysrq-trigger"], "resources": {"devices": [{"access": "rwm", "allow": false}]}}, "mounts": [{"destination": "/proc", "options": ["nosuid", "noexec", "nodev"], "source": "proc", "type": "proc"}, {"destination": "/dev", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}, {"destination": "/dev/pts", "options": ["nosuid", "noexec", "newinstance", "ptmxmode=0666", "mode=0620", "gid=5"], "source": "devpts", "type": "devpts"}, {"destination": "/dev/shm", "options": ["nosuid", "noexec", "nodev", "mode=1777", "size=65536k"], "source": "shm", "type": "tmpfs"}, {"destination": "/dev/mqueue", "options": ["nosuid", "noexec", "nodev"], "source": "mqueue", "type": "mqueue"}, {"destination": "/sys", "options": ["nosuid", "noexec", "nodev", "ro"], "source": "sysfs", "type": "sysfs"}, {"destination": "/run", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}], "ociVersion": "1.1.0-rc.1", "process": {"capabilities": {"bounding": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "effective": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "permitted": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"]}, "cwd": "/", "noNewPrivileges": true, "rlimits": [{"hard": 1024, "soft": 1024, "type": "RLIMIT_NOFILE"}], "user": {"gid": 0, "uid": 0}}, "root": {"path": "rootfs"}}}, "changed": false}
2023-07-10 14:43:57,413 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:57 +0300 (0:00:00.052)       0:03:28.267 ****** 
2023-07-10 14:43:57,783 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Write base_runtime_specs] *******************
2023-07-10 14:43:57,784 p=8199 u=kubernetmachine n=ansible | changed: [node1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}}) => {"ansible_loop_var": "item", "changed": true, "checksum": "ca010433eff9d7cb6f6886f2384190c5cbc2f01d", "dest": "/etc/containerd/cri-base.json", "gid": 0, "group": "root", "item": {"key": "cri-base.json", "value": {"linux": {"cgroupsPath": "/default", "maskedPaths": ["/proc/acpi", "/proc/asound", "/proc/kcore", "/proc/keys", "/proc/latency_stats", "/proc/timer_list", "/proc/timer_stats", "/proc/sched_debug", "/sys/firmware", "/proc/scsi"], "namespaces": [{"type": "pid"}, {"type": "ipc"}, {"type": "uts"}, {"type": "mount"}, {"type": "network"}], "readonlyPaths": ["/proc/bus", "/proc/fs", "/proc/irq", "/proc/sys", "/proc/sysrq-trigger"], "resources": {"devices": [{"access": "rwm", "allow": false}]}}, "mounts": [{"destination": "/proc", "options": ["nosuid", "noexec", "nodev"], "source": "proc", "type": "proc"}, {"destination": "/dev", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}, {"destination": "/dev/pts", "options": ["nosuid", "noexec", "newinstance", "ptmxmode=0666", "mode=0620", "gid=5"], "source": "devpts", "type": "devpts"}, {"destination": "/dev/shm", "options": ["nosuid", "noexec", "nodev", "mode=1777", "size=65536k"], "source": "shm", "type": "tmpfs"}, {"destination": "/dev/mqueue", "options": ["nosuid", "noexec", "nodev"], "source": "mqueue", "type": "mqueue"}, {"destination": "/sys", "options": ["nosuid", "noexec", "nodev", "ro"], "source": "sysfs", "type": "sysfs"}, {"destination": "/run", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}], "ociVersion": "1.1.0-rc.1", "process": {"capabilities": {"bounding": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "effective": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "permitted": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"]}, "cwd": "/", "noNewPrivileges": true, "rlimits": [{"hard": 65535, "soft": 65535, "type": "RLIMIT_NOFILE"}], "user": {"gid": 0, "uid": 0}}, "root": {"path": "rootfs"}}}, "md5sum": "dee7593466e14e3c01c97f7ce1492627", "mode": "0644", "owner": "root", "size": 2295, "src": "/root/.ansible/tmp/ansible-tmp-1688989437.4850674-9769-86644176802165/source", "state": "file", "uid": 0}
2023-07-10 14:43:57,795 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:57 +0300 (0:00:00.381)       0:03:28.648 ****** 
2023-07-10 14:43:58,270 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Copy containerd config file] ****************
2023-07-10 14:43:58,270 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "7481f73c81ce443d6d8501704dab0633db9bf7b4", "dest": "/etc/containerd/config.toml", "gid": 0, "group": "root", "md5sum": "d30c440892dd7f3850f8f3178d89fda2", "mode": "0640", "owner": "root", "size": 1230, "src": "/root/.ansible/tmp/ansible-tmp-1688989437.8472984-9787-272189333603213/source", "state": "file", "uid": 0}
2023-07-10 14:43:58,280 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.484)       0:03:29.133 ****** 
2023-07-10 14:43:58,306 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.026)       0:03:29.160 ****** 
2023-07-10 14:43:58,332 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.025)       0:03:29.185 ****** 
2023-07-10 14:43:58,351 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.019)       0:03:29.204 ****** 
2023-07-10 14:43:58,385 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.033)       0:03:29.238 ****** 
2023-07-10 14:43:58,419 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.033)       0:03:29.272 ****** 
2023-07-10 14:43:58,452 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.032)       0:03:29.305 ****** 
2023-07-10 14:43:58,483 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.031)       0:03:29.336 ****** 
2023-07-10 14:43:58,651 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [container-engine/containerd : restart containerd] ***************************
2023-07-10 14:43:58,652 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001726", "end": "2023-07-10 11:43:58.637142", "msg": "", "rc": 0, "start": "2023-07-10 11:43:58.635416", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:43:58,660 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:58 +0300 (0:00:00.177)       0:03:29.514 ****** 
2023-07-10 14:43:59,555 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [container-engine/containerd : Containerd | restart containerd] **************
2023-07-10 14:43:59,556 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "enabled": true, "name": "containerd", "state": "started", "status": {"ActiveEnterTimestamp": "n/a", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "network.target sysinit.target local-fs.target system.slice systemd-journald.socket basic.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestamp": "n/a", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestamp": "n/a", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuacct cpuset io blkio memory devices pids bpf-firewall bpf-devices bpf-foreign bpf-socket-bind", "Description": "containerd container runtime", "DevicePolicy": "auto", "Documentation": "https://containerd.io", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestamp": "n/a", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; flags=ignore-failure ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/containerd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "containerd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "n/a", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "infinity", "LimitNOFILESoft": "infinity", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "containerd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-999", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "5s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "n/a", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "disabled", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}
2023-07-10 14:43:59,564 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:59 +0300 (0:00:00.903)       0:03:30.417 ****** 
2023-07-10 14:43:59,751 p=8199 u=kubernetmachine n=ansible | RUNNING HANDLER [container-engine/containerd : Containerd | wait for containerd] *************
2023-07-10 14:43:59,751 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/ctr", "images", "ls", "-q"], "delta": "0:00:00.009950", "end": "2023-07-10 11:43:59.737065", "msg": "", "rc": 0, "start": "2023-07-10 11:43:59.727115", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:43:59,761 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:43:59 +0300 (0:00:00.196)       0:03:30.614 ****** 
2023-07-10 14:44:00,314 p=8199 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Ensure containerd is started and enabled] ***
2023-07-10 14:44:00,315 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "enabled": true, "name": "containerd", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ActiveEnterTimestampMonotonic": "13990220594", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "sysinit.target system.slice systemd-journald.socket network.target basic.target local-fs.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 11:43:59 UTC", "AssertTimestampMonotonic": "13990149561", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "49128000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ConditionTimestampMonotonic": "13990149559", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/containerd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuacct cpuset io blkio memory devices pids bpf-firewall bpf-devices bpf-foreign bpf-socket-bind", "Description": "containerd container runtime", "DevicePolicy": "auto", "Documentation": "https://containerd.io", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "5685", "ExecMainStartTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ExecMainStartTimestampMonotonic": "13990181696", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; flags=ignore-failure ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/containerd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "containerd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Mon 2023-07-10 11:43:59 UTC", "InactiveExitTimestampMonotonic": "13990150455", "InvocationID": "03387208a4804fad97a58edfb791a0fe", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "infinity", "LimitNOFILESoft": "infinity", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "5685", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "14209024", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "containerd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-999", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "5s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 11:43:59 UTC", "StateChangeTimestampMonotonic": "13990220594", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "8", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 14:44:00,331 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.570)       0:03:31.184 ****** 
2023-07-10 14:44:00,363 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.032)       0:03:31.216 ****** 
2023-07-10 14:44:00,394 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.030)       0:03:31.247 ****** 
2023-07-10 14:44:00,508 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.113)       0:03:31.361 ****** 
2023-07-10 14:44:00,548 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.040)       0:03:31.402 ****** 
2023-07-10 14:44:00,577 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.028)       0:03:31.430 ****** 
2023-07-10 14:44:00,611 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.033)       0:03:31.464 ****** 
2023-07-10 14:44:00,642 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.031)       0:03:31.496 ****** 
2023-07-10 14:44:00,673 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.030)       0:03:31.526 ****** 
2023-07-10 14:44:00,714 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.040)       0:03:31.567 ****** 
2023-07-10 14:44:00,744 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.030)       0:03:31.598 ****** 
2023-07-10 14:44:00,775 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.030)       0:03:31.628 ****** 
2023-07-10 14:44:00,805 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.029)       0:03:31.658 ****** 
2023-07-10 14:44:00,933 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.128)       0:03:31.786 ****** 
2023-07-10 14:44:00,966 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.033)       0:03:31.819 ****** 
2023-07-10 14:44:01,002 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:00 +0300 (0:00:00.036)       0:03:31.855 ****** 
2023-07-10 14:44:01,038 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.035)       0:03:31.891 ****** 
2023-07-10 14:44:01,075 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.037)       0:03:31.928 ****** 
2023-07-10 14:44:01,108 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.032)       0:03:31.961 ****** 
2023-07-10 14:44:01,141 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.032)       0:03:31.994 ****** 
2023-07-10 14:44:01,178 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.037)       0:03:32.031 ****** 
2023-07-10 14:44:01,212 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.033)       0:03:32.065 ****** 
2023-07-10 14:44:01,244 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.032)       0:03:32.097 ****** 
2023-07-10 14:44:01,272 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.028)       0:03:32.125 ****** 
2023-07-10 14:44:01,320 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.047)       0:03:32.173 ****** 
2023-07-10 14:44:01,350 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.029)       0:03:32.203 ****** 
2023-07-10 14:44:01,398 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.048)       0:03:32.251 ****** 
2023-07-10 14:44:01,426 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.027)       0:03:32.279 ****** 
2023-07-10 14:44:01,449 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.023)       0:03:32.303 ****** 
2023-07-10 14:44:01,477 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.027)       0:03:32.330 ****** 
2023-07-10 14:44:01,508 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.031)       0:03:32.362 ****** 
2023-07-10 14:44:01,540 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.031)       0:03:32.393 ****** 
2023-07-10 14:44:01,571 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.031)       0:03:32.425 ****** 
2023-07-10 14:44:01,604 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.032)       0:03:32.457 ****** 
2023-07-10 14:44:01,637 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.033)       0:03:32.491 ****** 
2023-07-10 14:44:01,669 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.031)       0:03:32.522 ****** 
2023-07-10 14:44:01,702 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.032)       0:03:32.555 ****** 
2023-07-10 14:44:01,732 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.030)       0:03:32.585 ****** 
2023-07-10 14:44:01,751 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.019)       0:03:32.604 ****** 
2023-07-10 14:44:01,796 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.044)       0:03:32.649 ****** 
2023-07-10 14:44:01,828 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.032)       0:03:32.682 ****** 
2023-07-10 14:44:01,855 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.026)       0:03:32.709 ****** 
2023-07-10 14:44:01,900 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.044)       0:03:32.753 ****** 
2023-07-10 14:44:01,937 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.036)       0:03:32.790 ****** 
2023-07-10 14:44:01,985 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:44:01,986 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:44:02,000 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:01 +0300 (0:00:00.063)       0:03:32.853 ****** 
2023-07-10 14:44:02,047 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.047)       0:03:32.901 ****** 
2023-07-10 14:44:02,086 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.038)       0:03:32.940 ****** 
2023-07-10 14:44:02,128 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.041)       0:03:32.981 ****** 
2023-07-10 14:44:02,170 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.042)       0:03:33.024 ****** 
2023-07-10 14:44:02,378 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Register docker images info] ********************************
2023-07-10 14:44:02,379 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:44:02,389 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.218)       0:03:33.242 ****** 
2023-07-10 14:44:02,576 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Create staging directory on remote node] ********************
2023-07-10 14:44:02,577 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/images", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:44:02,591 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.202)       0:03:33.444 ****** 
2023-07-10 14:44:02,629 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.037)       0:03:33.482 ****** 
2023-07-10 14:44:02,659 p=8199 u=kubernetmachine n=ansible | TASK [download : download | Get kubeadm binary and list of required images] ******************
2023-07-10 14:44:02,680 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1
2023-07-10 14:44:02,696 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:02 +0300 (0:00:00.067)       0:03:33.550 ****** 
2023-07-10 14:44:03,788 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:03 +0300 (0:00:01.091)       0:03:34.641 ****** 
2023-07-10 14:44:05,158 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Download kubeadm binary] ******************************
2023-07-10 14:44:05,189 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1
2023-07-10 14:44:05,215 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:05 +0300 (0:00:01.427)       0:03:36.068 ****** 
2023-07-10 14:44:05,288 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:44:05,288 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:44:05,303 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:05 +0300 (0:00:00.087)       0:03:36.156 ****** 
2023-07-10 14:44:06,708 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:44:06,709 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"
}
2023-07-10 14:44:06,724 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:06 +0300 (0:00:01.421)       0:03:37.577 ****** 
2023-07-10 14:44:07,874 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:44:07,875 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.26.2-amd64"}, "changed": false}
2023-07-10 14:44:07,884 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:07 +0300 (0:00:01.159)       0:03:38.737 ****** 
2023-07-10 14:44:09,627 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:44:09,627 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:44:09,641 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:09 +0300 (0:00:01.756)       0:03:40.494 ****** 
2023-07-10 14:44:09,679 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:09 +0300 (0:00:00.038)       0:03:40.532 ****** 
2023-07-10 14:44:10,487 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:10 +0300 (0:00:00.807)       0:03:41.340 ****** 
2023-07-10 14:44:15,343 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:44:15,344 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:44:15,349 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:44:15,377 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:15 +0300 (0:00:04.890)       0:03:46.230 ****** 
2023-07-10 14:44:15,489 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:44:15,490 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"]}, "changed": false}
2023-07-10 14:44:15,518 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:15 +0300 (0:00:00.140)       0:03:46.371 ****** 
2023-07-10 14:44:52,498 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:44:52,499 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:44:52,513 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:52 +0300 (0:00:36.995)       0:04:23.366 ****** 
2023-07-10 14:44:52,560 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:52 +0300 (0:00:00.046)       0:04:23.413 ****** 
2023-07-10 14:44:52,605 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:52 +0300 (0:00:00.045)       0:04:23.459 ****** 
2023-07-10 14:44:52,653 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:52 +0300 (0:00:00.047)       0:04:23.506 ****** 
2023-07-10 14:44:52,680 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:44:52,699 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:44:52,727 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:52 +0300 (0:00:00.074)       0:04:23.581 ****** 
2023-07-10 14:44:54,175 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:54 +0300 (0:00:01.447)       0:04:25.028 ****** 
2023-07-10 14:44:54,821 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Create kubeadm config] ********************************
2023-07-10 14:44:54,821 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "04974339f81cf5a298237f58f7ea3d6b42d97c0a", "dest": "/etc/kubernetes/kubeadm-images.yaml", "gid": 0, "group": "root", "md5sum": "67f22ca1180902a2ca56b3a1b920bef4", "mode": "0644", "owner": "root", "size": 413, "src": "/root/.ansible/tmp/ansible-tmp-1688989494.2606905-10020-47566360300222/source", "state": "file", "uid": 0}
2023-07-10 14:44:54,835 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:54 +0300 (0:00:00.660)       0:04:25.689 ****** 
2023-07-10 14:44:56,068 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
2023-07-10 14:44:56,068 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "d2ee756d8a8379a5ef7ee56c17ff844c183f5d1f", "dest": "/usr/local/bin/kubeadm", "gid": 0, "group": "root", "md5sum": "2f8d18d010cf71c80c20b368f676beb4", "mode": "0755", "owner": "root", "size": 46768128, "src": "/tmp/releases/kubeadm-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 14:44:56,078 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:56 +0300 (0:00:01.242)       0:04:26.931 ****** 
2023-07-10 14:44:56,264 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] ***********************
2023-07-10 14:44:56,264 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/kubeadm", "size": 46768128, "state": "file", "uid": 0}
2023-07-10 14:44:56,274 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:56 +0300 (0:00:00.196)       0:04:27.128 ****** 
2023-07-10 14:44:56,487 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Generate list of required images] *********************
2023-07-10 14:44:56,487 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/kubeadm config images list --config=/etc/kubernetes/kubeadm-images.yaml | grep -Ev 'coredns | pause'", "delta": "0:00:00.040394", "end": "2023-07-10 11:44:56.474658", "msg": "", "rc": 0, "start": "2023-07-10 11:44:56.434264", "stderr": "W0710 11:44:56.469929    5836 initconfiguration.go:305] error unmarshaling configuration schema.GroupVersionKind{Group:\"kubeadm.k8s.io\", Version:\"v1beta3\", Kind:\"ClusterConfiguration\"}: strict decoding error: unknown field \"dns.type\"", "stderr_lines": ["W0710 11:44:56.469929    5836 initconfiguration.go:305] error unmarshaling configuration schema.GroupVersionKind{Group:\"kubeadm.k8s.io\", Version:\"v1beta3\", Kind:\"ClusterConfiguration\"}: strict decoding error: unknown field \"dns.type\""], "stdout": "registry.k8s.io/kube-apiserver:v1.26.2\nregistry.k8s.io/kube-controller-manager:v1.26.2\nregistry.k8s.io/kube-scheduler:v1.26.2\nregistry.k8s.io/kube-proxy:v1.26.2\nregistry.k8s.io/pause:3.9\nregistry.k8s.io/coredns/coredns:v1.9.3", "stdout_lines": ["registry.k8s.io/kube-apiserver:v1.26.2", "registry.k8s.io/kube-controller-manager:v1.26.2", "registry.k8s.io/kube-scheduler:v1.26.2", "registry.k8s.io/kube-proxy:v1.26.2", "registry.k8s.io/pause:3.9", "registry.k8s.io/coredns/coredns:v1.9.3"]}
2023-07-10 14:44:56,497 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:56 +0300 (0:00:00.222)       0:04:27.350 ****** 
2023-07-10 14:44:56,556 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Parse list of images] *********************************
2023-07-10 14:44:56,556 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-apiserver:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-apiserver", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-apiserver", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-apiserver:v1.26.2"}
2023-07-10 14:44:56,594 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-controller-manager:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-controller-manager", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-controller-manager", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-controller-manager:v1.26.2"}
2023-07-10 14:44:56,646 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-scheduler:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-scheduler", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-scheduler", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-scheduler:v1.26.2"}
2023-07-10 14:44:56,693 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-proxy:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-proxy", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-proxy", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-proxy:v1.26.2"}
2023-07-10 14:44:56,737 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/pause:3.9) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_pause", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/pause", "tag": "3.9"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/pause:3.9"}
2023-07-10 14:44:56,775 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/coredns/coredns:v1.9.3) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_coredns", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/coredns/coredns", "tag": "v1.9.3"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/coredns/coredns:v1.9.3"}
2023-07-10 14:44:56,788 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:56 +0300 (0:00:00.291)       0:04:27.641 ****** 
2023-07-10 14:44:56,853 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] *********
2023-07-10 14:44:56,853 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_images": {"kubeadm_coredns": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/coredns/coredns", "tag": "v1.9.3"}, "kubeadm_kube-apiserver": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-apiserver", "tag": "v1.26.2"}, "kubeadm_kube-controller-manager": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-controller-manager", "tag": "v1.26.2"}, "kubeadm_kube-proxy": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-proxy", "tag": "v1.26.2"}, "kubeadm_kube-scheduler": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-scheduler", "tag": "v1.26.2"}, "kubeadm_pause": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/pause", "tag": "3.9"}}}, "changed": false}
2023-07-10 14:44:56,862 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:44:56 +0300 (0:00:00.073)       0:04:27.715 ****** 
2023-07-10 14:44:59,619 p=8199 u=kubernetmachine n=ansible | TASK [download : download | Download files / images] *****************************************
2023-07-10 14:44:59,641 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
2023-07-10 14:44:59,653 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,668 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubeadm-v1.26.2-amd64', 'sha256': '277d880dc6d79994fd333e49d42943b7c9183b1c4ffdbf9da59f806acec7fd82', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,680 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubelet-v1.26.2-amd64', 'sha256': 'e6dd2ee432a093492936ff8505f084b5ed41662f50231f1c11ae08ee8582a3f5', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,694 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubectl-v1.26.2-amd64', 'sha256': 'fcf86d21fb1a49b012bce7845cf00081d2dd7a59f424b28621799deceb5227b3', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 14:44:59,706 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,720 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc-v1.1.7.amd64', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,732 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.2', 'dest': '/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz', 'sha256': '2755c70152ab40856510b4549c2dd530e15f5355eb7bf82868e813c9380e22a7', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,744 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,758 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl-v3.25.1-amd64', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,789 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,815 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,840 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,865 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,884 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 14:44:59,910 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,937 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}})
2023-07-10 14:44:59,962 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:44:59,988 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.20', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 14:45:00,019 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 14:45:00,046 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}})
2023-07-10 14:45:00,072 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard', 'tag': 'v2.7.0', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 14:45:00,099 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 14:45:00,126 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 14:45:00,152 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 14:45:00,180 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 14:45:00,208 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 14:45:00,235 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_pause', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'groups': 'k8s_cluster'}})
2023-07-10 14:45:00,262 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'groups': 'k8s_cluster'}})
2023-07-10 14:45:00,285 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:03.422)       0:04:31.138 ****** 
2023-07-10 14:45:00,328 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:45:00,328 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:45:00,337 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:00.052)       0:04:31.190 ****** 
2023-07-10 14:45:00,379 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:45:00,379 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz"
}
2023-07-10 14:45:00,389 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:00.052)       0:04:31.242 ****** 
2023-07-10 14:45:00,432 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:45:00,432 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/etcd-v3.5.6-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:45:00,442 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:00.053)       0:04:31.295 ****** 
2023-07-10 14:45:00,623 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:45:00,623 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:45:00,635 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:00.193)       0:04:31.489 ****** 
2023-07-10 14:45:00,675 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:00.040)       0:04:31.529 ****** 
2023-07-10 14:45:00,723 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:00 +0300 (0:00:00.047)       0:04:31.576 ****** 
2023-07-10 14:45:01,935 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:45:01,936 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:01,939 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:01,956 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:01 +0300 (0:00:01.233)       0:04:32.809 ****** 
2023-07-10 14:45:02,020 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:45:02,021 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:45:02,051 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:02 +0300 (0:00:00.094)       0:04:32.904 ****** 
2023-07-10 14:45:15,408 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:45:15,408 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:45:15,422 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:15 +0300 (0:00:13.371)       0:04:46.275 ****** 
2023-07-10 14:45:15,468 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:15 +0300 (0:00:00.045)       0:04:46.321 ****** 
2023-07-10 14:45:15,514 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:15 +0300 (0:00:00.046)       0:04:46.367 ****** 
2023-07-10 14:45:15,563 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:15 +0300 (0:00:00.049)       0:04:46.417 ****** 
2023-07-10 14:45:15,591 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:45:15,616 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:45:15,639 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:15 +0300 (0:00:00.075)       0:04:46.492 ****** 
2023-07-10 14:45:17,381 p=8199 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************
2023-07-10 14:45:17,382 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/tmp/releases", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/tmp/releases", "-z", "--owner=root", "-f", "/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:45:17,391 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:01.751)       0:04:48.244 ****** 
2023-07-10 14:45:17,434 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:45:17,435 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:45:17,446 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:00.055)       0:04:48.300 ****** 
2023-07-10 14:45:17,490 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:45:17,491 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"
}
2023-07-10 14:45:17,500 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:00.053)       0:04:48.353 ****** 
2023-07-10 14:45:17,542 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:45:17,542 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/cni-plugins-linux-amd64-v1.3.0.tgz"}, "changed": false}
2023-07-10 14:45:17,551 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:00.051)       0:04:48.405 ****** 
2023-07-10 14:45:17,742 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:45:17,743 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:45:17,755 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:00.203)       0:04:48.608 ****** 
2023-07-10 14:45:17,793 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:00.037)       0:04:48.646 ****** 
2023-07-10 14:45:17,841 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:17 +0300 (0:00:00.048)       0:04:48.695 ****** 
2023-07-10 14:45:18,742 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:45:18,742 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:18,744 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:18,762 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:18 +0300 (0:00:00.920)       0:04:49.615 ****** 
2023-07-10 14:45:18,827 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:45:18,827 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"]}, "changed": false}
2023-07-10 14:45:18,844 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:18 +0300 (0:00:00.082)       0:04:49.698 ****** 
2023-07-10 14:45:49,275 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:45:49,276 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:45:49,291 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:30.446)       0:05:20.144 ****** 
2023-07-10 14:45:49,339 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.048)       0:05:20.193 ****** 
2023-07-10 14:45:49,387 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.047)       0:05:20.240 ****** 
2023-07-10 14:45:49,435 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.048)       0:05:20.288 ****** 
2023-07-10 14:45:49,462 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:45:49,484 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:45:49,509 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.073)       0:05:20.362 ****** 
2023-07-10 14:45:49,566 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.057)       0:05:20.419 ****** 
2023-07-10 14:45:49,635 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:45:49,635 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:45:49,648 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.082)       0:05:20.502 ****** 
2023-07-10 14:45:49,716 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:45:49,717 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"
}
2023-07-10 14:45:49,732 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.082)       0:05:20.585 ****** 
2023-07-10 14:45:49,799 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:45:49,800 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.26.2-amd64"}, "changed": false}
2023-07-10 14:45:49,816 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:49 +0300 (0:00:00.084)       0:05:20.670 ****** 
2023-07-10 14:45:50,109 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:45:50,109 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:45:50,129 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:50 +0300 (0:00:00.312)       0:05:20.982 ****** 
2023-07-10 14:45:50,190 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:50 +0300 (0:00:00.061)       0:05:21.043 ****** 
2023-07-10 14:45:50,268 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:50 +0300 (0:00:00.077)       0:05:21.121 ****** 
2023-07-10 14:45:51,426 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:45:51,427 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:51,430 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:51,457 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:51 +0300 (0:00:01.189)       0:05:22.311 ****** 
2023-07-10 14:45:51,567 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:45:51,567 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"]}, "changed": false}
2023-07-10 14:45:51,598 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:51 +0300 (0:00:00.140)       0:05:22.451 ****** 
2023-07-10 14:45:52,263 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:45:52,263 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:52,278 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.680)       0:05:23.132 ****** 
2023-07-10 14:45:52,323 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.044)       0:05:23.177 ****** 
2023-07-10 14:45:52,369 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.045)       0:05:23.223 ****** 
2023-07-10 14:45:52,417 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.047)       0:05:23.270 ****** 
2023-07-10 14:45:52,445 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:45:52,467 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:45:52,491 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.074)       0:05:23.345 ****** 
2023-07-10 14:45:52,550 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.058)       0:05:23.403 ****** 
2023-07-10 14:45:52,615 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:45:52,616 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:45:52,631 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.080)       0:05:23.484 ****** 
2023-07-10 14:45:52,697 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:45:52,698 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet"
}
2023-07-10 14:45:52,712 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.081)       0:05:23.565 ****** 
2023-07-10 14:45:52,783 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:45:52,783 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubelet-v1.26.2-amd64"}, "changed": false}
2023-07-10 14:45:52,799 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:52 +0300 (0:00:00.087)       0:05:23.652 ****** 
2023-07-10 14:45:53,094 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:45:53,094 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:45:53,114 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:53 +0300 (0:00:00.315)       0:05:23.968 ****** 
2023-07-10 14:45:53,175 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:53 +0300 (0:00:00.060)       0:05:24.028 ****** 
2023-07-10 14:45:53,246 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:53 +0300 (0:00:00.070)       0:05:24.099 ****** 
2023-07-10 14:45:54,374 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:45:54,375 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:54,380 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:45:54,408 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:54 +0300 (0:00:01.162)       0:05:25.262 ****** 
2023-07-10 14:45:54,515 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:45:54,516 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet"]}, "changed": false}
2023-07-10 14:45:54,544 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:45:54 +0300 (0:00:00.135)       0:05:25.397 ****** 
2023-07-10 14:47:13,374 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:47:13,374 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:47:13,382 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:01:18.838)       0:06:44.236 ****** 
2023-07-10 14:47:13,412 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.029)       0:06:44.265 ****** 
2023-07-10 14:47:13,442 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.029)       0:06:44.295 ****** 
2023-07-10 14:47:13,472 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.030)       0:06:44.326 ****** 
2023-07-10 14:47:13,490 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:47:13,504 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:47:13,518 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.045)       0:06:44.371 ****** 
2023-07-10 14:47:13,553 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.034)       0:06:44.406 ****** 
2023-07-10 14:47:13,590 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:47:13,591 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:47:13,600 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.047)       0:06:44.453 ****** 
2023-07-10 14:47:13,638 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:47:13,639 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"
}
2023-07-10 14:47:13,648 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.048)       0:06:44.501 ****** 
2023-07-10 14:47:13,688 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:47:13,688 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubectl-v1.26.2-amd64"}, "changed": false}
2023-07-10 14:47:13,697 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.048)       0:06:44.550 ****** 
2023-07-10 14:47:13,871 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:47:13,871 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:47:13,882 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.184)       0:06:44.735 ****** 
2023-07-10 14:47:13,916 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.034)       0:06:44.770 ****** 
2023-07-10 14:47:13,986 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:13 +0300 (0:00:00.069)       0:06:44.839 ****** 
2023-07-10 14:47:15,094 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:47:15,095 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:15,098 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:15,118 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:15 +0300 (0:00:01.132)       0:06:45.971 ****** 
2023-07-10 14:47:15,191 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:47:15,191 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"]}, "changed": false}
2023-07-10 14:47:15,216 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:15 +0300 (0:00:00.098)       0:06:46.070 ****** 
2023-07-10 14:47:48,599 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:47:48,600 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:47:48,618 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:33.399)       0:07:19.469 ****** 
2023-07-10 14:47:48,659 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:00.043)       0:07:19.513 ****** 
2023-07-10 14:47:48,695 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:00.035)       0:07:19.548 ****** 
2023-07-10 14:47:48,736 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:00.040)       0:07:19.589 ****** 
2023-07-10 14:47:48,773 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:47:48,805 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:47:48,831 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:00.095)       0:07:19.684 ****** 
2023-07-10 14:47:48,880 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:00.048)       0:07:19.733 ****** 
2023-07-10 14:47:48,930 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:47:48,930 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:47:48,941 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:48 +0300 (0:00:00.061)       0:07:19.794 ****** 
2023-07-10 14:47:48,991 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:47:48,992 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 14:47:49,004 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:49 +0300 (0:00:00.063)       0:07:19.857 ****** 
2023-07-10 14:47:49,053 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:47:49,054 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:47:49,065 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:49 +0300 (0:00:00.060)       0:07:19.918 ****** 
2023-07-10 14:47:49,302 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:47:49,302 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:47:49,318 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:49 +0300 (0:00:00.253)       0:07:20.171 ****** 
2023-07-10 14:47:49,372 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:49 +0300 (0:00:00.054)       0:07:20.226 ****** 
2023-07-10 14:47:49,436 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:49 +0300 (0:00:00.064)       0:07:20.290 ****** 
2023-07-10 14:47:52,277 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:47:52,278 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:52,282 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:52,303 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:02.866)       0:07:23.157 ****** 
2023-07-10 14:47:52,369 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:47:52,370 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:47:52,389 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:00.085)       0:07:23.243 ****** 
2023-07-10 14:47:52,833 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:47:52,834 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:52,845 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:00.456)       0:07:23.699 ****** 
2023-07-10 14:47:52,880 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:00.034)       0:07:23.733 ****** 
2023-07-10 14:47:52,914 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:00.033)       0:07:23.767 ****** 
2023-07-10 14:47:52,941 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:00.027)       0:07:23.794 ****** 
2023-07-10 14:47:52,959 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:47:52,974 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:47:52,988 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:52 +0300 (0:00:00.046)       0:07:23.841 ****** 
2023-07-10 14:47:54,035 p=8199 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************
2023-07-10 14:47:54,036 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:47:54,044 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:01.056)       0:07:24.897 ****** 
2023-07-10 14:47:54,082 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:47:54,083 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:47:54,092 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:00.047)       0:07:24.945 ****** 
2023-07-10 14:47:54,131 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:47:54,131 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 14:47:54,141 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:00.049)       0:07:24.994 ****** 
2023-07-10 14:47:54,181 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:47:54,181 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 14:47:54,191 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:00.049)       0:07:25.044 ****** 
2023-07-10 14:47:54,365 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:47:54,366 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:47:54,377 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:00.186)       0:07:25.230 ****** 
2023-07-10 14:47:54,414 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:00.036)       0:07:25.267 ****** 
2023-07-10 14:47:54,458 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:54 +0300 (0:00:00.043)       0:07:25.311 ****** 
2023-07-10 14:47:55,363 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:47:55,363 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:55,365 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:55,392 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.934)       0:07:26.245 ****** 
2023-07-10 14:47:55,452 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:47:55,453 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 14:47:55,470 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.078)       0:07:26.324 ****** 
2023-07-10 14:47:55,819 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:47:55,819 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:55,831 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.360)       0:07:26.684 ****** 
2023-07-10 14:47:55,864 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.032)       0:07:26.717 ****** 
2023-07-10 14:47:55,896 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.032)       0:07:26.749 ****** 
2023-07-10 14:47:55,927 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.030)       0:07:26.780 ****** 
2023-07-10 14:47:55,944 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:47:55,957 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:47:55,970 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:55 +0300 (0:00:00.043)       0:07:26.823 ****** 
2023-07-10 14:47:56,003 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.033)       0:07:26.857 ****** 
2023-07-10 14:47:56,040 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:47:56,041 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:47:56,049 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.045)       0:07:26.902 ****** 
2023-07-10 14:47:56,087 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:47:56,088 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
}
2023-07-10 14:47:56,098 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.048)       0:07:26.951 ****** 
2023-07-10 14:47:56,136 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:47:56,137 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/containerd-1.7.2-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:47:56,146 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.047)       0:07:26.999 ****** 
2023-07-10 14:47:56,320 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:47:56,321 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:47:56,333 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.187)       0:07:27.187 ****** 
2023-07-10 14:47:56,373 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.039)       0:07:27.227 ****** 
2023-07-10 14:47:56,418 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:56 +0300 (0:00:00.044)       0:07:27.271 ****** 
2023-07-10 14:47:57,501 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:47:57,502 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:57,504 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:57,521 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:57 +0300 (0:00:01.103)       0:07:28.374 ****** 
2023-07-10 14:47:57,579 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:47:57,579 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:47:57,596 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:57 +0300 (0:00:00.075)       0:07:28.450 ****** 
2023-07-10 14:47:57,983 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:47:57,983 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:57,991 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:57 +0300 (0:00:00.394)       0:07:28.844 ****** 
2023-07-10 14:47:58,019 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.027)       0:07:28.872 ****** 
2023-07-10 14:47:58,046 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.027)       0:07:28.899 ****** 
2023-07-10 14:47:58,073 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.027)       0:07:28.926 ****** 
2023-07-10 14:47:58,090 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:47:58,102 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:47:58,115 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.042)       0:07:28.969 ****** 
2023-07-10 14:47:58,150 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.034)       0:07:29.004 ****** 
2023-07-10 14:47:58,188 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:47:58,188 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:47:58,197 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.046)       0:07:29.050 ****** 
2023-07-10 14:47:58,236 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:47:58,236 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 14:47:58,244 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.047)       0:07:29.098 ****** 
2023-07-10 14:47:58,284 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:47:58,284 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 14:47:58,293 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.048)       0:07:29.147 ****** 
2023-07-10 14:47:58,463 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:47:58,463 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:47:58,475 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.181)       0:07:29.328 ****** 
2023-07-10 14:47:58,510 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.035)       0:07:29.364 ****** 
2023-07-10 14:47:58,553 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:58 +0300 (0:00:00.042)       0:07:29.406 ****** 
2023-07-10 14:47:59,564 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:47:59,565 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:59,567 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:47:59,584 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:59 +0300 (0:00:01.031)       0:07:30.438 ****** 
2023-07-10 14:47:59,645 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:47:59,646 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 14:47:59,728 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:47:59 +0300 (0:00:00.143)       0:07:30.581 ****** 
2023-07-10 14:48:00,044 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:48:00,044 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:48:00,053 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.325)       0:07:30.907 ****** 
2023-07-10 14:48:00,083 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.029)       0:07:30.936 ****** 
2023-07-10 14:48:00,112 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.028)       0:07:30.965 ****** 
2023-07-10 14:48:00,140 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.027)       0:07:30.993 ****** 
2023-07-10 14:48:00,156 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:48:00,170 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:48:00,184 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.044)       0:07:31.038 ****** 
2023-07-10 14:48:00,885 p=8199 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************
2023-07-10 14:48:00,885 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:48:00,896 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.711)       0:07:31.749 ****** 
2023-07-10 14:48:00,941 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:48:00,941 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:48:00,952 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:00 +0300 (0:00:00.056)       0:07:31.805 ****** 
2023-07-10 14:48:01,000 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:48:01,000 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64"
}
2023-07-10 14:48:01,012 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:01 +0300 (0:00:00.060)       0:07:31.866 ****** 
2023-07-10 14:48:01,060 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:48:01,060 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/calicoctl-v3.25.1-amd64"}, "changed": false}
2023-07-10 14:48:01,070 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:01 +0300 (0:00:00.057)       0:07:31.923 ****** 
2023-07-10 14:48:01,245 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:48:01,245 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:48:01,256 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:01 +0300 (0:00:00.186)       0:07:32.109 ****** 
2023-07-10 14:48:01,292 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:01 +0300 (0:00:00.035)       0:07:32.145 ****** 
2023-07-10 14:48:01,335 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:01 +0300 (0:00:00.043)       0:07:32.189 ****** 
2023-07-10 14:48:02,403 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:48:02,403 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:48:02,405 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:48:02,422 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:02 +0300 (0:00:01.086)       0:07:33.276 ****** 
2023-07-10 14:48:02,480 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:48:02,481 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64"]}, "changed": false}
2023-07-10 14:48:02,498 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:02 +0300 (0:00:00.075)       0:07:33.351 ****** 
2023-07-10 14:48:39,611 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:48:39,612 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:48:39,621 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:37.123)       0:08:10.475 ****** 
2023-07-10 14:48:39,652 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.030)       0:08:10.505 ****** 
2023-07-10 14:48:39,682 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.030)       0:08:10.535 ****** 
2023-07-10 14:48:39,715 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.033)       0:08:10.569 ****** 
2023-07-10 14:48:39,733 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:48:39,748 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:48:39,761 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.045)       0:08:10.614 ****** 
2023-07-10 14:48:39,798 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.036)       0:08:10.651 ****** 
2023-07-10 14:48:39,838 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:48:39,838 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:48:39,848 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.049)       0:08:10.701 ****** 
2023-07-10 14:48:39,895 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:48:39,896 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/node"
}
2023-07-10 14:48:39,905 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.056)       0:08:10.758 ****** 
2023-07-10 14:48:39,955 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:48:39,955 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:48:39,965 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:39 +0300 (0:00:00.059)       0:08:10.818 ****** 
2023-07-10 14:48:40,010 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:48:40,010 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 14:48:40,020 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.055)       0:08:10.874 ****** 
2023-07-10 14:48:40,065 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:48:40,066 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_node_v3.25.1.tar"}, "changed": false}
2023-07-10 14:48:40,075 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.055)       0:08:10.929 ****** 
2023-07-10 14:48:40,120 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:48:40,121 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_node_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_node_v3.25.1.tar"}, "changed": false}
2023-07-10 14:48:40,131 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.055)       0:08:10.984 ****** 
2023-07-10 14:48:40,162 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.031)       0:08:11.015 ****** 
2023-07-10 14:48:40,208 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:48:40,209 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_node_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_node_v3.25.1.tar quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 14:48:40,217 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.055)       0:08:11.071 ****** 
2023-07-10 14:48:40,249 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.031)       0:08:11.102 ****** 
2023-07-10 14:48:40,284 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.034)       0:08:11.137 ****** 
2023-07-10 14:48:40,336 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:48:40,336 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_node_v3.25.1.tar quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 14:48:40,346 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.062)       0:08:11.199 ****** 
2023-07-10 14:48:40,377 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.031)       0:08:11.230 ****** 
2023-07-10 14:48:40,396 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:48:40,413 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:48:40,432 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.054)       0:08:11.285 ****** 
2023-07-10 14:48:40,694 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:48:40,694 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.031269", "end": "2023-07-10 11:48:40.681831", "msg": "", "rc": 0, "start": "2023-07-10 11:48:40.650562", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:48:40,703 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.271)       0:08:11.557 ****** 
2023-07-10 14:48:40,751 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:48:40,751 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:48:40,762 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.058)       0:08:11.615 ****** 
2023-07-10 14:48:40,793 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.030)       0:08:11.646 ****** 
2023-07-10 14:48:40,835 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:48:40,835 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/node:v3.25.1 required is: True"
}
2023-07-10 14:48:40,847 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.054)       0:08:11.701 ****** 
2023-07-10 14:48:40,877 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.029)       0:08:11.730 ****** 
2023-07-10 14:48:40,905 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.028)       0:08:11.758 ****** 
2023-07-10 14:48:40,942 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:48:40 +0300 (0:00:00.037)       0:08:11.796 ****** 
2023-07-10 14:49:41,900 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:49:41,900 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "quay.io/calico/node:v3.25.1"], "delta": "0:01:00.707912", "end": "2023-07-10 11:49:41.886214", "msg": "", "rc": 0, "start": "2023-07-10 11:48:41.178302", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:49:41,917 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:41 +0300 (0:01:00.974)       0:09:12.770 ****** 
2023-07-10 14:49:41,955 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:41 +0300 (0:00:00.038)       0:09:12.808 ****** 
2023-07-10 14:49:41,984 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:41 +0300 (0:00:00.029)       0:09:12.838 ****** 
2023-07-10 14:49:42,014 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.029)       0:09:12.868 ****** 
2023-07-10 14:49:42,043 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.028)       0:09:12.896 ****** 
2023-07-10 14:49:42,213 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:49:42,213 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_node_v3.25.1.tar", "state": "absent"}
2023-07-10 14:49:42,222 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.179)       0:09:13.075 ****** 
2023-07-10 14:49:42,263 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:49:42,264 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:49:42,274 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.051)       0:09:13.127 ****** 
2023-07-10 14:49:42,321 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:49:42,321 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/cni"
}
2023-07-10 14:49:42,331 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.056)       0:09:13.184 ****** 
2023-07-10 14:49:42,383 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:49:42,383 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:49:42,393 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.062)       0:09:13.246 ****** 
2023-07-10 14:49:42,436 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:49:42,437 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 14:49:42,445 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.052)       0:09:13.298 ****** 
2023-07-10 14:49:42,486 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:49:42,487 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_cni_v3.25.1.tar"}, "changed": false}
2023-07-10 14:49:42,496 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.051)       0:09:13.350 ****** 
2023-07-10 14:49:42,537 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:49:42,537 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_cni_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_cni_v3.25.1.tar"}, "changed": false}
2023-07-10 14:49:42,548 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.051)       0:09:13.401 ****** 
2023-07-10 14:49:42,577 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.029)       0:09:13.431 ****** 
2023-07-10 14:49:42,619 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:49:42,620 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_cni_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_cni_v3.25.1.tar quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 14:49:42,629 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.051)       0:09:13.482 ****** 
2023-07-10 14:49:42,658 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.029)       0:09:13.511 ****** 
2023-07-10 14:49:42,686 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.028)       0:09:13.540 ****** 
2023-07-10 14:49:42,737 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:49:42,737 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_cni_v3.25.1.tar quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 14:49:42,747 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.060)       0:09:13.601 ****** 
2023-07-10 14:49:42,778 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.030)       0:09:13.632 ****** 
2023-07-10 14:49:42,798 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:49:42,813 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:49:42,832 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:42 +0300 (0:00:00.053)       0:09:13.685 ****** 
2023-07-10 14:49:43,027 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:49:43,027 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.030668", "end": "2023-07-10 11:49:43.015608", "msg": "", "rc": 0, "start": "2023-07-10 11:49:42.984940", "stderr": "", "stderr_lines": [], "stdout": "quay.io/calico/node:v3.25.1,<none>:<none>,", "stdout_lines": ["quay.io/calico/node:v3.25.1,<none>:<none>,"]}
2023-07-10 14:49:43,038 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.205)       0:09:13.891 ****** 
2023-07-10 14:49:43,082 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:49:43,082 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:49:43,091 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.053)       0:09:13.945 ****** 
2023-07-10 14:49:43,121 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.029)       0:09:13.974 ****** 
2023-07-10 14:49:43,159 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:49:43,159 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/cni:v3.25.1 required is: True"
}
2023-07-10 14:49:43,171 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.050)       0:09:14.025 ****** 
2023-07-10 14:49:43,199 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.027)       0:09:14.052 ****** 
2023-07-10 14:49:43,227 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.028)       0:09:14.081 ****** 
2023-07-10 14:49:43,263 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:49:43 +0300 (0:00:00.035)       0:09:14.116 ****** 
2023-07-10 14:50:46,376 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:50:46,379 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "quay.io/calico/cni:v3.25.1"], "delta": "0:01:02.821987", "end": "2023-07-10 11:50:46.313314", "msg": "", "rc": 0, "start": "2023-07-10 11:49:43.491327", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:50:46,524 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:46 +0300 (0:01:03.258)       0:10:17.377 ****** 
2023-07-10 14:50:46,608 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:46 +0300 (0:00:00.083)       0:10:17.461 ****** 
2023-07-10 14:50:46,658 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:46 +0300 (0:00:00.050)       0:10:17.512 ****** 
2023-07-10 14:50:46,704 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:46 +0300 (0:00:00.045)       0:10:17.557 ****** 
2023-07-10 14:50:46,751 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:46 +0300 (0:00:00.047)       0:10:17.605 ****** 
2023-07-10 14:50:47,108 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:50:47,108 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_cni_v3.25.1.tar", "state": "absent"}
2023-07-10 14:50:47,161 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.409)       0:10:18.015 ****** 
2023-07-10 14:50:47,232 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:50:47,232 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:50:47,242 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.080)       0:10:18.095 ****** 
2023-07-10 14:50:47,333 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:50:47,334 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/pod2daemon-flexvol"
}
2023-07-10 14:50:47,362 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.120)       0:10:18.215 ****** 
2023-07-10 14:50:47,475 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:50:47,475 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:50:47,494 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.131)       0:10:18.347 ****** 
2023-07-10 14:50:47,605 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:50:47,605 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 14:50:47,618 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.124)       0:10:18.472 ****** 
2023-07-10 14:50:47,696 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:50:47,697 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_pod2daemon-flexvol_v3.25.1.tar"}, "changed": false}
2023-07-10 14:50:47,707 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.088)       0:10:18.560 ****** 
2023-07-10 14:50:47,828 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:50:47,829 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar"}, "changed": false}
2023-07-10 14:50:47,855 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.148)       0:10:18.708 ****** 
2023-07-10 14:50:47,906 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:47 +0300 (0:00:00.051)       0:10:18.760 ****** 
2023-07-10 14:50:48,039 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:50:48,039 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 14:50:48,048 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.142)       0:10:18.902 ****** 
2023-07-10 14:50:48,100 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.051)       0:10:18.953 ****** 
2023-07-10 14:50:48,234 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.133)       0:10:19.087 ****** 
2023-07-10 14:50:48,301 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:50:48,301 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 14:50:48,311 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.077)       0:10:19.165 ****** 
2023-07-10 14:50:48,415 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.103)       0:10:19.268 ****** 
2023-07-10 14:50:48,470 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:50:48,509 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:50:48,548 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.132)       0:10:19.401 ****** 
2023-07-10 14:50:48,913 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:50:48,914 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.053478", "end": "2023-07-10 11:50:48.897593", "msg": "", "rc": 0, "start": "2023-07-10 11:50:48.844115", "stderr": "", "stderr_lines": [], "stdout": "quay.io/calico/cni:v3.25.1,quay.io/calico/node:v3.25.1,<none>:<none>,<none>:<none>,", "stdout_lines": ["quay.io/calico/cni:v3.25.1,quay.io/calico/node:v3.25.1,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:50:48,923 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.375)       0:10:19.776 ****** 
2023-07-10 14:50:48,983 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:50:48,983 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:50:48,994 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:48 +0300 (0:00:00.070)       0:10:19.847 ****** 
2023-07-10 14:50:49,035 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:49 +0300 (0:00:00.040)       0:10:19.888 ****** 
2023-07-10 14:50:49,090 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:50:49,091 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: True"
}
2023-07-10 14:50:49,106 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:49 +0300 (0:00:00.071)       0:10:19.959 ****** 
2023-07-10 14:50:49,144 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:49 +0300 (0:00:00.038)       0:10:19.998 ****** 
2023-07-10 14:50:49,178 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:49 +0300 (0:00:00.033)       0:10:20.031 ****** 
2023-07-10 14:50:49,221 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:49 +0300 (0:00:00.042)       0:10:20.074 ****** 
2023-07-10 14:50:58,810 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:50:58,811 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "quay.io/calico/pod2daemon-flexvol:v3.25.1"], "delta": "0:00:09.280154", "end": "2023-07-10 11:50:58.787231", "msg": "", "rc": 0, "start": "2023-07-10 11:50:49.507077", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:50:58,833 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:58 +0300 (0:00:09.612)       0:10:29.687 ****** 
2023-07-10 14:50:58,879 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:58 +0300 (0:00:00.045)       0:10:29.732 ****** 
2023-07-10 14:50:58,909 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:58 +0300 (0:00:00.030)       0:10:29.763 ****** 
2023-07-10 14:50:58,942 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:58 +0300 (0:00:00.032)       0:10:29.795 ****** 
2023-07-10 14:50:58,976 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:58 +0300 (0:00:00.034)       0:10:29.829 ****** 
2023-07-10 14:50:59,168 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:50:59,168 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "state": "absent"}
2023-07-10 14:50:59,176 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.200)       0:10:30.029 ****** 
2023-07-10 14:50:59,220 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:50:59,221 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:50:59,235 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.059)       0:10:30.089 ****** 
2023-07-10 14:50:59,283 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:50:59,283 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/kube-controllers"
}
2023-07-10 14:50:59,293 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.057)       0:10:30.146 ****** 
2023-07-10 14:50:59,345 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:50:59,346 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:50:59,359 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.065)       0:10:30.212 ****** 
2023-07-10 14:50:59,407 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:50:59,407 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 14:50:59,419 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.059)       0:10:30.272 ****** 
2023-07-10 14:50:59,465 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:50:59,465 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_kube-controllers_v3.25.1.tar"}, "changed": false}
2023-07-10 14:50:59,475 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.056)       0:10:30.328 ****** 
2023-07-10 14:50:59,524 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:50:59,525 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_kube-controllers_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar"}, "changed": false}
2023-07-10 14:50:59,535 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.060)       0:10:30.389 ****** 
2023-07-10 14:50:59,567 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.031)       0:10:30.420 ****** 
2023-07-10 14:50:59,614 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:50:59,614 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 14:50:59,623 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.055)       0:10:30.476 ****** 
2023-07-10 14:50:59,654 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.031)       0:10:30.508 ****** 
2023-07-10 14:50:59,687 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.032)       0:10:30.540 ****** 
2023-07-10 14:50:59,742 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:50:59,742 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_kube-controllers_v3.25.1.tar quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 14:50:59,752 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.064)       0:10:30.605 ****** 
2023-07-10 14:50:59,785 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.032)       0:10:30.638 ****** 
2023-07-10 14:50:59,805 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:50:59,822 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:50:59,842 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:50:59 +0300 (0:00:00.057)       0:10:30.695 ****** 
2023-07-10 14:51:00,102 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:51:00,102 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.084804", "end": "2023-07-10 11:51:00.089077", "msg": "", "rc": 0, "start": "2023-07-10 11:51:00.004273", "stderr": "", "stderr_lines": [], "stdout": "quay.io/calico/cni:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["quay.io/calico/cni:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:51:00,114 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.272)       0:10:30.967 ****** 
2023-07-10 14:51:00,161 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:51:00,162 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:51:00,171 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.057)       0:10:31.024 ****** 
2023-07-10 14:51:00,206 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.035)       0:10:31.060 ****** 
2023-07-10 14:51:00,253 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:51:00,254 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.25.1 required is: True"
}
2023-07-10 14:51:00,266 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.059)       0:10:31.119 ****** 
2023-07-10 14:51:00,295 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.029)       0:10:31.149 ****** 
2023-07-10 14:51:00,326 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.030)       0:10:31.179 ****** 
2023-07-10 14:51:00,367 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:00 +0300 (0:00:00.041)       0:10:31.221 ****** 
2023-07-10 14:51:23,196 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:51:23,200 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "quay.io/calico/kube-controllers:v3.25.1"], "delta": "0:00:22.460104", "end": "2023-07-10 11:51:23.100602", "msg": "", "rc": 0, "start": "2023-07-10 11:51:00.640498", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:51:23,278 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:23 +0300 (0:00:22.910)       0:10:54.131 ****** 
2023-07-10 14:51:23,825 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:23 +0300 (0:00:00.541)       0:10:54.677 ****** 
2023-07-10 14:51:24,179 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:24 +0300 (0:00:00.352)       0:10:55.031 ****** 
2023-07-10 14:51:25,023 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:25 +0300 (0:00:00.827)       0:10:55.870 ****** 
2023-07-10 14:51:26,569 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:26 +0300 (0:00:01.539)       0:10:57.416 ****** 
2023-07-10 14:51:29,739 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:51:29,740 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar", "state": "absent"}
2023-07-10 14:51:29,771 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:29 +0300 (0:00:03.208)       0:11:00.625 ****** 
2023-07-10 14:51:29,966 p=8199 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************
2023-07-10 14:51:29,967 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 14:51:29,987 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:29 +0300 (0:00:00.215)       0:11:00.841 ****** 
2023-07-10 14:51:30,089 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************
2023-07-10 14:51:30,090 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz"
}
2023-07-10 14:51:30,105 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:30 +0300 (0:00:00.118)       0:11:00.959 ****** 
2023-07-10 14:51:30,194 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************
2023-07-10 14:51:30,195 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/v3.25.1.tar.gz"}, "changed": false}
2023-07-10 14:51:30,207 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:30 +0300 (0:00:00.102)       0:11:01.061 ****** 
2023-07-10 14:51:30,583 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************
2023-07-10 14:51:30,585 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/calico-v3.25.1-kdd-crds", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:51:30,672 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:30 +0300 (0:00:00.463)       0:11:01.525 ****** 
2023-07-10 14:51:30,736 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:30 +0300 (0:00:00.064)       0:11:01.590 ****** 
2023-07-10 14:51:30,843 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:51:30 +0300 (0:00:00.106)       0:11:01.696 ****** 
2023-07-10 14:53:08,015 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************
2023-07-10 14:53:08,015 p=8199 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:53:08,018 p=8199 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 14:53:08,038 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:08 +0300 (0:01:37.194)       0:12:38.891 ****** 
2023-07-10 14:53:08,110 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************
2023-07-10 14:53:08,111 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz"]}, "changed": false}
2023-07-10 14:53:08,133 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:08 +0300 (0:00:00.095)       0:12:38.986 ****** 
2023-07-10 14:53:22,472 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************
2023-07-10 14:53:22,473 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 14:53:22,484 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:22 +0300 (0:00:14.350)       0:12:53.337 ****** 
2023-07-10 14:53:22,515 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:22 +0300 (0:00:00.031)       0:12:53.369 ****** 
2023-07-10 14:53:22,546 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:22 +0300 (0:00:00.030)       0:12:53.399 ****** 
2023-07-10 14:53:22,574 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:22 +0300 (0:00:00.027)       0:12:53.427 ****** 
2023-07-10 14:53:22,591 p=8199 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************
2023-07-10 14:53:22,609 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 14:53:22,625 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:22 +0300 (0:00:00.051)       0:12:53.478 ****** 
2023-07-10 14:53:23,896 p=8199 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************
2023-07-10 14:53:23,897 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/tmp/releases/calico-v3.25.1-kdd-crds", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/tmp/releases/calico-v3.25.1-kdd-crds", "-z", "--show-transformed-names", "--strip=3", "--wildcards", "*/libcalico-go/config/crd/", "--owner=root", "-f", "/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz", "state": "directory", "uid": 0}
2023-07-10 14:53:23,907 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:23 +0300 (0:00:01.281)       0:12:54.760 ****** 
2023-07-10 14:53:23,952 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:53:23,952 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:53:23,963 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:23 +0300 (0:00:00.056)       0:12:54.817 ****** 
2023-07-10 14:53:24,015 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:53:24,016 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/pause"
}
2023-07-10 14:53:24,028 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.064)       0:12:54.881 ****** 
2023-07-10 14:53:24,083 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:53:24,084 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:53:24,096 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.068)       0:12:54.950 ****** 
2023-07-10 14:53:24,146 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:53:24,146 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 14:53:24,157 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.060)       0:12:55.010 ****** 
2023-07-10 14:53:24,210 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:53:24,210 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 14:53:24,221 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.064)       0:12:55.075 ****** 
2023-07-10 14:53:24,265 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:53:24,266 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 14:53:24,278 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.056)       0:12:55.131 ****** 
2023-07-10 14:53:24,308 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.030)       0:12:55.161 ****** 
2023-07-10 14:53:24,352 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:53:24,353 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_pause_3.9.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 14:53:24,361 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.053)       0:12:55.215 ****** 
2023-07-10 14:53:24,390 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.029)       0:12:55.244 ****** 
2023-07-10 14:53:24,421 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.031)       0:12:55.275 ****** 
2023-07-10 14:53:24,471 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:53:24,472 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 14:53:24,482 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.060)       0:12:55.335 ****** 
2023-07-10 14:53:24,512 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.030)       0:12:55.366 ****** 
2023-07-10 14:53:24,531 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:53:24,547 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:53:24,565 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.052)       0:12:55.419 ****** 
2023-07-10 14:53:24,826 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:53:24,826 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.089257", "end": "2023-07-10 11:53:24.811714", "msg": "", "rc": 0, "start": "2023-07-10 11:53:24.722457", "stderr": "", "stderr_lines": [], "stdout": "quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:53:24,835 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.269)       0:12:55.688 ****** 
2023-07-10 14:53:24,880 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:53:24,880 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:53:24,889 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.053)       0:12:55.742 ****** 
2023-07-10 14:53:24,917 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.028)       0:12:55.771 ****** 
2023-07-10 14:53:24,959 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:53:24,959 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/pause:3.9 required is: True"
}
2023-07-10 14:53:24,977 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:24 +0300 (0:00:00.059)       0:12:55.830 ****** 
2023-07-10 14:53:25,015 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:25 +0300 (0:00:00.038)       0:12:55.868 ****** 
2023-07-10 14:53:25,043 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:25 +0300 (0:00:00.027)       0:12:55.896 ****** 
2023-07-10 14:53:25,078 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:25 +0300 (0:00:00.035)       0:12:55.931 ****** 
2023-07-10 14:53:29,794 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:53:29,795 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/pause:3.9"], "delta": "0:00:04.447277", "end": "2023-07-10 11:53:29.769646", "msg": "", "rc": 0, "start": "2023-07-10 11:53:25.322369", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:53:29,823 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:29 +0300 (0:00:04.744)       0:13:00.676 ****** 
2023-07-10 14:53:29,897 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:29 +0300 (0:00:00.073)       0:13:00.750 ****** 
2023-07-10 14:53:29,949 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:29 +0300 (0:00:00.052)       0:13:00.803 ****** 
2023-07-10 14:53:30,004 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.054)       0:13:00.858 ****** 
2023-07-10 14:53:30,057 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.052)       0:13:00.910 ****** 
2023-07-10 14:53:30,417 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:53:30,417 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar", "state": "absent"}
2023-07-10 14:53:30,433 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.376)       0:13:01.287 ****** 
2023-07-10 14:53:30,498 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:53:30,499 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:53:30,514 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.080)       0:13:01.367 ****** 
2023-07-10 14:53:30,594 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:53:30,595 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/library/nginx"
}
2023-07-10 14:53:30,613 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.098)       0:13:01.466 ****** 
2023-07-10 14:53:30,691 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:53:30,691 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:53:30,706 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.093)       0:13:01.559 ****** 
2023-07-10 14:53:30,786 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:53:30,787 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 14:53:30,804 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.097)       0:13:01.657 ****** 
2023-07-10 14:53:30,880 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:53:30,880 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_library_nginx_1.23.2-alpine.tar"}, "changed": false}
2023-07-10 14:53:30,903 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:30 +0300 (0:00:00.099)       0:13:01.757 ****** 
2023-07-10 14:53:30,986 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:53:30,987 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_library_nginx_1.23.2-alpine.tar", "image_path_final": "/tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar"}, "changed": false}
2023-07-10 14:53:31,007 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.103)       0:13:01.860 ****** 
2023-07-10 14:53:31,058 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.050)       0:13:01.911 ****** 
2023-07-10 14:53:31,136 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:53:31,137 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 14:53:31,156 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.098)       0:13:02.010 ****** 
2023-07-10 14:53:31,208 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.051)       0:13:02.061 ****** 
2023-07-10 14:53:31,264 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.056)       0:13:02.117 ****** 
2023-07-10 14:53:31,354 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:53:31,355 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_library_nginx_1.23.2-alpine.tar docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 14:53:31,382 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.117)       0:13:02.235 ****** 
2023-07-10 14:53:31,436 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.054)       0:13:02.290 ****** 
2023-07-10 14:53:31,469 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:53:31,492 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:53:31,531 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:31 +0300 (0:00:00.094)       0:13:02.384 ****** 
2023-07-10 14:53:32,117 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:53:32,118 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.225381", "end": "2023-07-10 11:53:32.098965", "msg": "", "rc": 0, "start": "2023-07-10 11:53:31.873584", "stderr": "", "stderr_lines": [], "stdout": "quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:53:32,130 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.599)       0:13:02.983 ****** 
2023-07-10 14:53:32,183 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:53:32,184 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:53:32,195 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.065)       0:13:03.049 ****** 
2023-07-10 14:53:32,233 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.038)       0:13:03.087 ****** 
2023-07-10 14:53:32,281 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:53:32,281 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/library/nginx:1.23.2-alpine required is: True"
}
2023-07-10 14:53:32,298 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.064)       0:13:03.151 ****** 
2023-07-10 14:53:32,331 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.033)       0:13:03.185 ****** 
2023-07-10 14:53:32,359 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.028)       0:13:03.213 ****** 
2023-07-10 14:53:32,403 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:32 +0300 (0:00:00.043)       0:13:03.256 ****** 
2023-07-10 14:53:42,820 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:53:42,821 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "docker.io/library/nginx:1.23.2-alpine"], "delta": "0:00:10.104620", "end": "2023-07-10 11:53:42.793648", "msg": "", "rc": 0, "start": "2023-07-10 11:53:32.689028", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:53:42,848 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:42 +0300 (0:00:10.445)       0:13:13.702 ****** 
2023-07-10 14:53:42,912 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:42 +0300 (0:00:00.063)       0:13:13.765 ****** 
2023-07-10 14:53:42,960 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:42 +0300 (0:00:00.048)       0:13:13.813 ****** 
2023-07-10 14:53:43,008 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.047)       0:13:13.861 ****** 
2023-07-10 14:53:43,056 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.048)       0:13:13.909 ****** 
2023-07-10 14:53:43,341 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:53:43,341 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar", "state": "absent"}
2023-07-10 14:53:43,360 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.303)       0:13:14.213 ****** 
2023-07-10 14:53:43,426 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:53:43,427 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:53:43,443 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.083)       0:13:14.296 ****** 
2023-07-10 14:53:43,515 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:53:43,516 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
2023-07-10 14:53:43,531 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.087)       0:13:14.384 ****** 
2023-07-10 14:53:43,612 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:53:43,613 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:53:43,629 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.097)       0:13:14.482 ****** 
2023-07-10 14:53:43,702 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:53:43,702 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 14:53:43,718 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.089)       0:13:14.571 ****** 
2023-07-10 14:53:43,788 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:53:43,789 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 14:53:43,806 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.087)       0:13:14.659 ****** 
2023-07-10 14:53:43,874 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:53:43,874 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 14:53:43,890 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.084)       0:13:14.743 ****** 
2023-07-10 14:53:43,941 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:43 +0300 (0:00:00.051)       0:13:14.794 ****** 
2023-07-10 14:53:44,014 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:53:44,015 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 14:53:44,032 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:44 +0300 (0:00:00.090)       0:13:14.886 ****** 
2023-07-10 14:53:44,079 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:44 +0300 (0:00:00.046)       0:13:14.932 ****** 
2023-07-10 14:53:44,127 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:44 +0300 (0:00:00.048)       0:13:14.980 ****** 
2023-07-10 14:53:44,207 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:53:44,208 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 14:53:44,225 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:44 +0300 (0:00:00.097)       0:13:15.078 ****** 
2023-07-10 14:53:44,548 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:44 +0300 (0:00:00.323)       0:13:15.401 ****** 
2023-07-10 14:53:44,579 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:53:44,603 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:53:44,639 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:44 +0300 (0:00:00.091)       0:13:15.493 ****** 
2023-07-10 14:53:45,083 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:53:45,084 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.180912", "end": "2023-07-10 11:53:45.071275", "msg": "", "rc": 0, "start": "2023-07-10 11:53:44.890363", "stderr": "", "stderr_lines": [], "stdout": "nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:53:45,092 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.453)       0:13:15.946 ****** 
2023-07-10 14:53:45,135 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:53:45,135 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:53:45,145 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.052)       0:13:15.998 ****** 
2023-07-10 14:53:45,176 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.031)       0:13:16.030 ****** 
2023-07-10 14:53:45,216 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:53:45,216 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: True"
}
2023-07-10 14:53:45,229 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.052)       0:13:16.082 ****** 
2023-07-10 14:53:45,256 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.027)       0:13:16.110 ****** 
2023-07-10 14:53:45,285 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.028)       0:13:16.138 ****** 
2023-07-10 14:53:45,322 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:53:45 +0300 (0:00:00.036)       0:13:16.175 ****** 
2023-07-10 14:54:00,011 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:54:00,012 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/coredns/coredns:v1.9.3"], "delta": "0:00:14.417191", "end": "2023-07-10 11:53:59.985858", "msg": "", "rc": 0, "start": "2023-07-10 11:53:45.568667", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:54:00,041 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:14.719)       0:13:30.894 ****** 
2023-07-10 14:54:00,108 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.067)       0:13:30.962 ****** 
2023-07-10 14:54:00,158 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.049)       0:13:31.011 ****** 
2023-07-10 14:54:00,207 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.049)       0:13:31.060 ****** 
2023-07-10 14:54:00,256 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.048)       0:13:31.109 ****** 
2023-07-10 14:54:00,539 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:54:00,539 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "state": "absent"}
2023-07-10 14:54:00,553 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.297)       0:13:31.407 ****** 
2023-07-10 14:54:00,618 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:54:00,618 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:54:00,634 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.080)       0:13:31.487 ****** 
2023-07-10 14:54:00,706 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:54:00,706 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
2023-07-10 14:54:00,724 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.089)       0:13:31.577 ****** 
2023-07-10 14:54:00,807 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:54:00,808 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:54:00,825 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.101)       0:13:31.679 ****** 
2023-07-10 14:54:00,896 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:54:00,897 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 14:54:00,913 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.087)       0:13:31.766 ****** 
2023-07-10 14:54:00,982 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:54:00,982 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar"}, "changed": false}
2023-07-10 14:54:00,998 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:00 +0300 (0:00:00.084)       0:13:31.851 ****** 
2023-07-10 14:54:01,071 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:54:01,071 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar"}, "changed": false}
2023-07-10 14:54:01,086 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.088)       0:13:31.940 ****** 
2023-07-10 14:54:01,133 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.046)       0:13:31.986 ****** 
2023-07-10 14:54:01,205 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:54:01,206 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 14:54:01,223 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.090)       0:13:32.076 ****** 
2023-07-10 14:54:01,271 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.048)       0:13:32.125 ****** 
2023-07-10 14:54:01,320 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.048)       0:13:32.173 ****** 
2023-07-10 14:54:01,400 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:54:01,400 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 14:54:01,415 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.095)       0:13:32.269 ****** 
2023-07-10 14:54:01,466 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.050)       0:13:32.319 ****** 
2023-07-10 14:54:01,501 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:54:01,523 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:54:01,554 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:01 +0300 (0:00:00.088)       0:13:32.408 ****** 
2023-07-10 14:54:02,089 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:54:02,089 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.263551", "end": "2023-07-10 11:54:02.068773", "msg": "", "rc": 0, "start": "2023-07-10 11:54:01.805222", "stderr": "", "stderr_lines": [], "stdout": "nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:54:02,103 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.549)       0:13:32.957 ****** 
2023-07-10 14:54:02,173 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:54:02,173 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:54:02,188 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.084)       0:13:33.042 ****** 
2023-07-10 14:54:02,235 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.046)       0:13:33.088 ****** 
2023-07-10 14:54:02,281 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:54:02,282 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.20 required is: True"
}
2023-07-10 14:54:02,295 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.059)       0:13:33.148 ****** 
2023-07-10 14:54:02,325 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.030)       0:13:33.178 ****** 
2023-07-10 14:54:02,354 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.029)       0:13:33.207 ****** 
2023-07-10 14:54:02,391 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:02 +0300 (0:00:00.036)       0:13:33.244 ****** 
2023-07-10 14:54:24,300 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:54:24,301 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"], "delta": "0:00:21.657175", "end": "2023-07-10 11:54:24.285767", "msg": "", "rc": 0, "start": "2023-07-10 11:54:02.628592", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:54:24,318 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:21.927)       0:13:55.172 ****** 
2023-07-10 14:54:24,362 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.043)       0:13:55.215 ****** 
2023-07-10 14:54:24,393 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.031)       0:13:55.247 ****** 
2023-07-10 14:54:24,425 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.031)       0:13:55.278 ****** 
2023-07-10 14:54:24,457 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.032)       0:13:55.311 ****** 
2023-07-10 14:54:24,627 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:54:24,627 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "state": "absent"}
2023-07-10 14:54:24,636 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.178)       0:13:55.489 ****** 
2023-07-10 14:54:24,676 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:54:24,677 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:54:24,685 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.049)       0:13:55.539 ****** 
2023-07-10 14:54:24,732 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:54:24,733 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/cpa/cluster-proportional-autoscaler"
}
2023-07-10 14:54:24,742 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.056)       0:13:55.595 ****** 
2023-07-10 14:54:24,793 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:54:24,793 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:54:24,802 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.060)       0:13:55.655 ****** 
2023-07-10 14:54:24,850 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:54:24,851 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 14:54:24,861 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.059)       0:13:55.715 ****** 
2023-07-10 14:54:24,907 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:54:24,907 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar"}, "changed": false}
2023-07-10 14:54:24,918 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.056)       0:13:55.771 ****** 
2023-07-10 14:54:24,965 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:54:24,965 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar"}, "changed": false}
2023-07-10 14:54:24,975 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:24 +0300 (0:00:00.057)       0:13:55.829 ****** 
2023-07-10 14:54:25,011 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.036)       0:13:55.865 ****** 
2023-07-10 14:54:25,055 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:54:25,055 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 14:54:25,065 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.053)       0:13:55.918 ****** 
2023-07-10 14:54:25,098 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.033)       0:13:55.951 ****** 
2023-07-10 14:54:25,131 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.033)       0:13:55.985 ****** 
2023-07-10 14:54:25,188 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:54:25,188 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 14:54:25,198 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.066)       0:13:56.051 ****** 
2023-07-10 14:54:25,231 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.032)       0:13:56.084 ****** 
2023-07-10 14:54:25,252 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:54:25,268 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:54:25,292 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.060)       0:13:56.145 ****** 
2023-07-10 14:54:25,609 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:54:25,610 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.144514", "end": "2023-07-10 11:54:25.597684", "msg": "", "rc": 0, "start": "2023-07-10 11:54:25.453170", "stderr": "", "stderr_lines": [], "stdout": "nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:54:25,619 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.327)       0:13:56.473 ****** 
2023-07-10 14:54:25,664 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:54:25,665 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:54:25,675 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.055)       0:13:56.528 ****** 
2023-07-10 14:54:25,706 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.031)       0:13:56.559 ****** 
2023-07-10 14:54:25,746 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:54:25,747 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8 required is: True"
}
2023-07-10 14:54:25,759 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.053)       0:13:56.613 ****** 
2023-07-10 14:54:25,787 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.027)       0:13:56.640 ****** 
2023-07-10 14:54:25,816 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.028)       0:13:56.669 ****** 
2023-07-10 14:54:25,853 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:25 +0300 (0:00:00.037)       0:13:56.707 ****** 
2023-07-10 14:54:36,337 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:54:36,337 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"], "delta": "0:00:10.215558", "end": "2023-07-10 11:54:36.310320", "msg": "", "rc": 0, "start": "2023-07-10 11:54:26.094762", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:54:36,365 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:10.511)       0:14:07.219 ****** 
2023-07-10 14:54:36,429 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.064)       0:14:07.283 ****** 
2023-07-10 14:54:36,477 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.047)       0:14:07.330 ****** 
2023-07-10 14:54:36,523 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.046)       0:14:07.376 ****** 
2023-07-10 14:54:36,572 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.048)       0:14:07.425 ****** 
2023-07-10 14:54:36,809 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:54:36,810 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "state": "absent"}
2023-07-10 14:54:36,821 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.249)       0:14:07.674 ****** 
2023-07-10 14:54:36,863 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:54:36,863 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:54:36,877 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.056)       0:14:07.731 ****** 
2023-07-10 14:54:36,922 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:54:36,922 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/ingress-nginx/controller"
}
2023-07-10 14:54:36,932 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.054)       0:14:07.785 ****** 
2023-07-10 14:54:36,982 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:54:36,982 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:54:36,992 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:36 +0300 (0:00:00.059)       0:14:07.845 ****** 
2023-07-10 14:54:37,036 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:54:37,037 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 14:54:37,048 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.056)       0:14:07.901 ****** 
2023-07-10 14:54:37,091 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:54:37,092 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_ingress-nginx_controller_v1.8.0.tar"}, "changed": false}
2023-07-10 14:54:37,100 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.052)       0:14:07.954 ****** 
2023-07-10 14:54:37,143 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:54:37,144 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar"}, "changed": false}
2023-07-10 14:54:37,153 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.052)       0:14:08.007 ****** 
2023-07-10 14:54:37,184 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.030)       0:14:08.037 ****** 
2023-07-10 14:54:37,228 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:54:37,228 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 14:54:37,237 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.053)       0:14:08.090 ****** 
2023-07-10 14:54:37,269 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.032)       0:14:08.123 ****** 
2023-07-10 14:54:37,301 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.032)       0:14:08.155 ****** 
2023-07-10 14:54:37,351 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:54:37,352 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 14:54:37,361 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.059)       0:14:08.214 ****** 
2023-07-10 14:54:37,391 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.030)       0:14:08.244 ****** 
2023-07-10 14:54:37,410 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:54:37,427 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:54:37,447 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.056)       0:14:08.301 ****** 
2023-07-10 14:54:37,798 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:54:37,799 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.180543", "end": "2023-07-10 11:54:37.785252", "msg": "", "rc": 0, "start": "2023-07-10 11:54:37.604709", "stderr": "", "stderr_lines": [], "stdout": "nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:54:37,807 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.360)       0:14:08.661 ****** 
2023-07-10 14:54:37,850 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:54:37,851 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:54:37,861 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.052)       0:14:08.714 ****** 
2023-07-10 14:54:37,890 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.029)       0:14:08.743 ****** 
2023-07-10 14:54:37,931 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:54:37,931 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/ingress-nginx/controller:v1.8.0 required is: True"
}
2023-07-10 14:54:37,943 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.053)       0:14:08.797 ****** 
2023-07-10 14:54:37,971 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:37 +0300 (0:00:00.027)       0:14:08.825 ****** 
2023-07-10 14:54:38,002 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:38 +0300 (0:00:00.030)       0:14:08.856 ****** 
2023-07-10 14:54:38,041 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:54:38 +0300 (0:00:00.038)       0:14:08.895 ****** 
2023-07-10 14:55:56,849 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:55:56,849 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/ingress-nginx/controller:v1.8.0"], "delta": "0:01:18.557032", "end": "2023-07-10 11:55:56.834769", "msg": "", "rc": 0, "start": "2023-07-10 11:54:38.277737", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:55:56,866 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:56 +0300 (0:01:18.824)       0:15:27.719 ****** 
2023-07-10 14:55:56,908 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:56 +0300 (0:00:00.041)       0:15:27.761 ****** 
2023-07-10 14:55:56,938 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:56 +0300 (0:00:00.030)       0:15:27.792 ****** 
2023-07-10 14:55:56,967 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:56 +0300 (0:00:00.028)       0:15:27.820 ****** 
2023-07-10 14:55:56,997 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:56 +0300 (0:00:00.029)       0:15:27.850 ****** 
2023-07-10 14:55:57,173 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:55:57,174 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "state": "absent"}
2023-07-10 14:55:57,182 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.185)       0:15:28.035 ****** 
2023-07-10 14:55:57,225 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:55:57,226 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:55:57,237 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.055)       0:15:28.091 ****** 
2023-07-10 14:55:57,284 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:55:57,284 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/kubernetesui/dashboard"
}
2023-07-10 14:55:57,294 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.056)       0:15:28.147 ****** 
2023-07-10 14:55:57,344 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:55:57,344 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:55:57,354 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.060)       0:15:28.207 ****** 
2023-07-10 14:55:57,400 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:55:57,401 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 14:55:57,412 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.057)       0:15:28.265 ****** 
2023-07-10 14:55:57,454 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:55:57,455 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_kubernetesui_dashboard_v2.7.0.tar"}, "changed": false}
2023-07-10 14:55:57,465 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.053)       0:15:28.318 ****** 
2023-07-10 14:55:57,507 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:55:57,508 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "image_path_final": "/tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar"}, "changed": false}
2023-07-10 14:55:57,519 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.053)       0:15:28.372 ****** 
2023-07-10 14:55:57,549 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.030)       0:15:28.402 ****** 
2023-07-10 14:55:57,594 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:55:57,594 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 14:55:57,603 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.054)       0:15:28.457 ****** 
2023-07-10 14:55:57,637 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.033)       0:15:28.490 ****** 
2023-07-10 14:55:57,667 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.030)       0:15:28.521 ****** 
2023-07-10 14:55:57,720 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:55:57,720 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_kubernetesui_dashboard_v2.7.0.tar docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 14:55:57,732 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.064)       0:15:28.585 ****** 
2023-07-10 14:55:57,764 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.032)       0:15:28.617 ****** 
2023-07-10 14:55:57,784 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:55:57,800 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:55:57,824 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:57 +0300 (0:00:00.059)       0:15:28.677 ****** 
2023-07-10 14:55:58,284 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:55:58,285 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.220730", "end": "2023-07-10 11:55:58.202725", "msg": "", "rc": 0, "start": "2023-07-10 11:55:57.981995", "stderr": "", "stderr_lines": [], "stdout": "nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:55:58,292 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.468)       0:15:29.146 ****** 
2023-07-10 14:55:58,339 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:55:58,339 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:55:58,351 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.058)       0:15:29.204 ****** 
2023-07-10 14:55:58,383 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.031)       0:15:29.236 ****** 
2023-07-10 14:55:58,433 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:55:58,434 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/kubernetesui/dashboard:v2.7.0 required is: True"
}
2023-07-10 14:55:58,447 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.064)       0:15:29.300 ****** 
2023-07-10 14:55:58,475 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.028)       0:15:29.329 ****** 
2023-07-10 14:55:58,504 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.028)       0:15:29.357 ****** 
2023-07-10 14:55:58,541 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:55:58 +0300 (0:00:00.037)       0:15:29.395 ****** 
2023-07-10 14:56:52,586 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:56:52,586 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "docker.io/kubernetesui/dashboard:v2.7.0"], "delta": "0:00:53.779212", "end": "2023-07-10 11:56:52.571911", "msg": "", "rc": 0, "start": "2023-07-10 11:55:58.792699", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:56:52,605 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:54.063)       0:16:23.458 ****** 
2023-07-10 14:56:52,650 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:00.045)       0:16:23.503 ****** 
2023-07-10 14:56:52,682 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:00.031)       0:16:23.536 ****** 
2023-07-10 14:56:52,714 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:00.031)       0:16:23.567 ****** 
2023-07-10 14:56:52,746 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:00.031)       0:16:23.599 ****** 
2023-07-10 14:56:52,920 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:56:52,920 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "state": "absent"}
2023-07-10 14:56:52,928 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:00.182)       0:16:23.782 ****** 
2023-07-10 14:56:52,967 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:56:52,968 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:56:52,976 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:52 +0300 (0:00:00.048)       0:16:23.830 ****** 
2023-07-10 14:56:53,025 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:56:53,025 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/kubernetesui/metrics-scraper"
}
2023-07-10 14:56:53,035 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.058)       0:16:23.888 ****** 
2023-07-10 14:56:53,089 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:56:53,089 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 14:56:53,099 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.064)       0:16:23.952 ****** 
2023-07-10 14:56:53,144 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:56:53,144 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 14:56:53,154 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.055)       0:16:24.008 ****** 
2023-07-10 14:56:53,197 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:56:53,197 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_kubernetesui_metrics-scraper_v1.0.8.tar"}, "changed": false}
2023-07-10 14:56:53,208 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.053)       0:16:24.061 ****** 
2023-07-10 14:56:53,250 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:56:53,250 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "image_path_final": "/tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar"}, "changed": false}
2023-07-10 14:56:53,266 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.057)       0:16:24.119 ****** 
2023-07-10 14:56:53,297 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.031)       0:16:24.150 ****** 
2023-07-10 14:56:53,342 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:56:53,343 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 14:56:53,352 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.054)       0:16:24.205 ****** 
2023-07-10 14:56:53,383 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.030)       0:16:24.236 ****** 
2023-07-10 14:56:53,413 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.030)       0:16:24.267 ****** 
2023-07-10 14:56:53,464 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:56:53,464 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 14:56:53,474 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.060)       0:16:24.327 ****** 
2023-07-10 14:56:53,505 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.030)       0:16:24.358 ****** 
2023-07-10 14:56:53,524 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:56:53,539 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:56:53,558 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:53 +0300 (0:00:00.052)       0:16:24.411 ****** 
2023-07-10 14:56:54,017 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:56:54,018 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.289264", "end": "2023-07-10 11:56:54.005345", "msg": "", "rc": 0, "start": "2023-07-10 11:56:53.716081", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:56:54,027 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.469)       0:16:24.880 ****** 
2023-07-10 14:56:54,070 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:56:54,071 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:56:54,082 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.054)       0:16:24.935 ****** 
2023-07-10 14:56:54,111 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.029)       0:16:24.964 ****** 
2023-07-10 14:56:54,151 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:56:54,151 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/kubernetesui/metrics-scraper:v1.0.8 required is: True"
}
2023-07-10 14:56:54,163 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.052)       0:16:25.017 ****** 
2023-07-10 14:56:54,192 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.028)       0:16:25.046 ****** 
2023-07-10 14:56:54,222 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.029)       0:16:25.075 ****** 
2023-07-10 14:56:54,262 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:56:54 +0300 (0:00:00.040)       0:16:25.116 ****** 
2023-07-10 14:57:10,208 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:57:10,209 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "docker.io/kubernetesui/metrics-scraper:v1.0.8"], "delta": "0:00:15.681513", "end": "2023-07-10 11:57:10.184690", "msg": "", "rc": 0, "start": "2023-07-10 11:56:54.503177", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:57:10,237 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:15.974)       0:16:41.090 ****** 
2023-07-10 14:57:10,303 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.065)       0:16:41.156 ****** 
2023-07-10 14:57:10,351 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.048)       0:16:41.204 ****** 
2023-07-10 14:57:10,399 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.047)       0:16:41.252 ****** 
2023-07-10 14:57:10,451 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.052)       0:16:41.305 ****** 
2023-07-10 14:57:10,741 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:57:10,741 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "state": "absent"}
2023-07-10 14:57:10,755 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.303)       0:16:41.608 ****** 
2023-07-10 14:57:10,819 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:57:10,820 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:57:10,834 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.079)       0:16:41.687 ****** 
2023-07-10 14:57:10,906 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:57:10,907 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
2023-07-10 14:57:10,922 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:10 +0300 (0:00:00.087)       0:16:41.775 ****** 
2023-07-10 14:57:11,004 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:57:11,005 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 14:57:11,020 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.098)       0:16:41.874 ****** 
2023-07-10 14:57:11,097 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:57:11,098 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 14:57:11,115 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.094)       0:16:41.968 ****** 
2023-07-10 14:57:11,185 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:57:11,186 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-apiserver_v1.26.2.tar"}, "changed": false}
2023-07-10 14:57:11,202 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.086)       0:16:42.055 ****** 
2023-07-10 14:57:11,273 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:57:11,274 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar"}, "changed": false}
2023-07-10 14:57:11,290 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.088)       0:16:42.144 ****** 
2023-07-10 14:57:11,338 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.047)       0:16:42.191 ****** 
2023-07-10 14:57:11,408 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:57:11,409 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 14:57:11,424 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.086)       0:16:42.278 ****** 
2023-07-10 14:57:11,470 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.045)       0:16:42.323 ****** 
2023-07-10 14:57:11,518 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.047)       0:16:42.371 ****** 
2023-07-10 14:57:11,599 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:57:11,600 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-apiserver_v1.26.2.tar registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 14:57:11,617 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.099)       0:16:42.471 ****** 
2023-07-10 14:57:11,666 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.048)       0:16:42.519 ****** 
2023-07-10 14:57:11,696 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:57:11,720 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:57:11,752 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:11 +0300 (0:00:00.085)       0:16:42.605 ****** 
2023-07-10 14:57:12,253 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:57:12,254 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.231779", "end": "2023-07-10 11:57:12.240420", "msg": "", "rc": 0, "start": "2023-07-10 11:57:12.008641", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:57:12,263 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.511)       0:16:43.116 ****** 
2023-07-10 14:57:12,306 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:57:12,307 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:57:12,316 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.052)       0:16:43.169 ****** 
2023-07-10 14:57:12,348 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.031)       0:16:43.201 ****** 
2023-07-10 14:57:12,389 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:57:12,389 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.26.2 required is: True"
}
2023-07-10 14:57:12,401 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.053)       0:16:43.254 ****** 
2023-07-10 14:57:12,429 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.027)       0:16:43.282 ****** 
2023-07-10 14:57:12,460 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.031)       0:16:43.313 ****** 
2023-07-10 14:57:12,499 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:12 +0300 (0:00:00.038)       0:16:43.352 ****** 
2023-07-10 14:57:42,971 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:57:42,971 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/kube-apiserver:v1.26.2"], "delta": "0:00:30.221901", "end": "2023-07-10 11:57:42.957872", "msg": "", "rc": 0, "start": "2023-07-10 11:57:12.735971", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:57:42,988 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:42 +0300 (0:00:30.489)       0:17:13.841 ****** 
2023-07-10 14:57:43,028 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.039)       0:17:13.881 ****** 
2023-07-10 14:57:43,057 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.029)       0:17:13.911 ****** 
2023-07-10 14:57:43,086 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.028)       0:17:13.939 ****** 
2023-07-10 14:57:43,116 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.030)       0:17:13.969 ****** 
2023-07-10 14:57:43,302 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:57:43,302 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "state": "absent"}
2023-07-10 14:57:43,311 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.195)       0:17:14.165 ****** 
2023-07-10 14:57:43,352 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:57:43,352 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:57:43,362 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.050)       0:17:14.215 ****** 
2023-07-10 14:57:43,407 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:57:43,408 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
2023-07-10 14:57:43,418 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.056)       0:17:14.271 ****** 
2023-07-10 14:57:43,475 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:57:43,476 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 14:57:43,486 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.068)       0:17:14.340 ****** 
2023-07-10 14:57:43,536 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:57:43,537 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 14:57:43,547 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.060)       0:17:14.401 ****** 
2023-07-10 14:57:43,593 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:57:43,593 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-controller-manager_v1.26.2.tar"}, "changed": false}
2023-07-10 14:57:43,602 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.054)       0:17:14.456 ****** 
2023-07-10 14:57:43,649 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:57:43,649 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar"}, "changed": false}
2023-07-10 14:57:43,660 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.057)       0:17:14.513 ****** 
2023-07-10 14:57:43,689 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.029)       0:17:14.542 ****** 
2023-07-10 14:57:43,731 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:57:43,731 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 14:57:43,740 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.051)       0:17:14.594 ****** 
2023-07-10 14:57:43,772 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.031)       0:17:14.625 ****** 
2023-07-10 14:57:43,807 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.034)       0:17:14.660 ****** 
2023-07-10 14:57:43,865 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:57:43,866 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 14:57:43,876 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.068)       0:17:14.729 ****** 
2023-07-10 14:57:43,907 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.030)       0:17:14.760 ****** 
2023-07-10 14:57:43,927 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:57:43,941 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:57:43,959 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:43 +0300 (0:00:00.052)       0:17:14.813 ****** 
2023-07-10 14:57:44,467 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:57:44,468 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.320608", "end": "2023-07-10 11:57:44.445952", "msg": "", "rc": 0, "start": "2023-07-10 11:57:44.125344", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:57:44,478 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.518)       0:17:15.331 ****** 
2023-07-10 14:57:44,529 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:57:44,530 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:57:44,541 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.063)       0:17:15.394 ****** 
2023-07-10 14:57:44,576 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.034)       0:17:15.429 ****** 
2023-07-10 14:57:44,633 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:57:44,633 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.26.2 required is: True"
}
2023-07-10 14:57:44,658 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.082)       0:17:15.511 ****** 
2023-07-10 14:57:44,696 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.038)       0:17:15.549 ****** 
2023-07-10 14:57:44,739 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.042)       0:17:15.592 ****** 
2023-07-10 14:57:44,796 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:57:44 +0300 (0:00:00.057)       0:17:15.650 ****** 
2023-07-10 14:58:12,700 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************
2023-07-10 14:58:12,700 p=8199 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/kube-controller-manager:v1.26.2"], "delta": "0:00:27.579912", "end": "2023-07-10 11:58:12.676754", "msg": "", "rc": 0, "start": "2023-07-10 11:57:45.096842", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:58:12,727 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:12 +0300 (0:00:27.930)       0:17:43.580 ****** 
2023-07-10 14:58:12,778 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:12 +0300 (0:00:00.050)       0:17:43.631 ****** 
2023-07-10 14:58:12,816 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:12 +0300 (0:00:00.038)       0:17:43.669 ****** 
2023-07-10 14:58:12,856 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:12 +0300 (0:00:00.039)       0:17:43.709 ****** 
2023-07-10 14:58:12,895 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:12 +0300 (0:00:00.039)       0:17:43.748 ****** 
2023-07-10 14:58:13,127 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************
2023-07-10 14:58:13,128 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "state": "absent"}
2023-07-10 14:58:13,139 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.243)       0:17:43.992 ****** 
2023-07-10 14:58:13,185 p=8199 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************
2023-07-10 14:58:13,185 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 14:58:13,197 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.057)       0:17:44.050 ****** 
2023-07-10 14:58:13,245 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********
2023-07-10 14:58:13,246 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
2023-07-10 14:58:13,256 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.059)       0:17:44.110 ****** 
2023-07-10 14:58:13,308 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********
2023-07-10 14:58:13,309 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 14:58:13,319 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.062)       0:17:44.172 ****** 
2023-07-10 14:58:13,368 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************
2023-07-10 14:58:13,369 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 14:58:13,379 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.059)       0:17:44.232 ****** 
2023-07-10 14:58:13,430 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************
2023-07-10 14:58:13,431 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-scheduler_v1.26.2.tar"}, "changed": false}
2023-07-10 14:58:13,441 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.061)       0:17:44.294 ****** 
2023-07-10 14:58:13,485 p=8199 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************
2023-07-10 14:58:13,486 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar"}, "changed": false}
2023-07-10 14:58:13,497 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.056)       0:17:44.350 ****** 
2023-07-10 14:58:13,528 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.030)       0:17:44.381 ****** 
2023-07-10 14:58:13,574 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************
2023-07-10 14:58:13,574 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 14:58:13,587 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.059)       0:17:44.440 ****** 
2023-07-10 14:58:13,617 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.030)       0:17:44.470 ****** 
2023-07-10 14:58:13,650 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.032)       0:17:44.503 ****** 
2023-07-10 14:58:13,708 p=8199 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************
2023-07-10 14:58:13,709 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-scheduler_v1.26.2.tar registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 14:58:13,720 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.069)       0:17:44.573 ****** 
2023-07-10 14:58:13,753 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.033)       0:17:44.607 ****** 
2023-07-10 14:58:13,775 p=8199 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************
2023-07-10 14:58:13,791 p=8199 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 14:58:13,812 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:13 +0300 (0:00:00.058)       0:17:44.665 ****** 
2023-07-10 14:58:14,230 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] ***
2023-07-10 14:58:14,230 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.241753", "end": "2023-07-10 11:58:14.214193", "msg": "", "rc": 0, "start": "2023-07-10 11:58:13.972440", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 14:58:14,244 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.432)       0:17:45.097 ****** 
2023-07-10 14:58:14,297 p=8199 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] ***
2023-07-10 14:58:14,298 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 14:58:14,312 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.067)       0:17:45.165 ****** 
2023-07-10 14:58:14,352 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.039)       0:17:45.205 ****** 
2023-07-10 14:58:14,403 p=8199 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************
2023-07-10 14:58:14,403 p=8199 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.26.2 required is: True"
}
2023-07-10 14:58:14,422 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.070)       0:17:45.275 ****** 
2023-07-10 14:58:14,455 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.033)       0:17:45.308 ****** 
2023-07-10 14:58:14,496 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.041)       0:17:45.349 ****** 
2023-07-10 14:58:14,554 p=8199 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:58:14 +0300 (0:00:00.057)       0:17:45.407 ****** 
2023-07-10 14:58:21,186 p=8199 u=kubernetmachine n=ansible |  [ERROR]: User interrupted execution

2023-07-10 14:59:23,809 p=11771 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 14:59:26,571 p=11771 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 14:59:26,572 p=11771 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************************************************************************************************************
2023-07-10 14:59:26,589 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.018)       0:00:00.018 ****** 
2023-07-10 14:59:26,618 p=11771 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************************************************************************************************************
2023-07-10 14:59:26,618 p=11771 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:26,621 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.032)       0:00:00.051 ****** 
2023-07-10 14:59:26,694 p=11771 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************************************************************************************************************
2023-07-10 14:59:26,694 p=11771 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:26,697 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.075)       0:00:00.126 ****** 
2023-07-10 14:59:26,714 p=11771 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************************************************************************************************************
2023-07-10 14:59:26,714 p=11771 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:26,725 p=11771 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 14:59:26,726 p=11771 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************************************************************************************************************
2023-07-10 14:59:26,726 p=11771 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:26,726 p=11771 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 14:59:26,727 p=11771 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************************************************************************************************************
2023-07-10 14:59:26,727 p=11771 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:26,728 p=11771 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 14:59:26,728 p=11771 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************************************************************************************************************
2023-07-10 14:59:26,728 p=11771 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:26,729 p=11771 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 14:59:26,729 p=11771 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************************************************************************************************************
2023-07-10 14:59:26,730 p=11771 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:26,730 p=11771 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 14:59:26,730 p=11771 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************************************************************************************************************
2023-07-10 14:59:26,731 p=11771 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:26,731 p=11771 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 14:59:26,732 p=11771 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************************************************************************************************************
2023-07-10 14:59:26,732 p=11771 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:26,733 p=11771 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************************************************************************************************************
2023-07-10 14:59:26,781 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.084)       0:00:00.211 ****** 
2023-07-10 14:59:26,826 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.045)       0:00:00.256 ****** 
2023-07-10 14:59:26,872 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.046)       0:00:00.302 ****** 
2023-07-10 14:59:26,959 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:26 +0300 (0:00:00.086)       0:00:00.388 ****** 
2023-07-10 14:59:27,003 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:27 +0300 (0:00:00.044)       0:00:00.432 ****** 
2023-07-10 14:59:27,048 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:27 +0300 (0:00:00.044)       0:00:00.477 ****** 
2023-07-10 14:59:27,094 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:27 +0300 (0:00:00.046)       0:00:00.523 ****** 
2023-07-10 14:59:27,141 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:27 +0300 (0:00:00.047)       0:00:00.571 ****** 
2023-07-10 14:59:27,184 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:27 +0300 (0:00:00.042)       0:00:00.613 ****** 
2023-07-10 14:59:27,228 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:27 +0300 (0:00:00.043)       0:00:00.657 ****** 
2023-07-10 14:59:28,806 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:28 +0300 (0:00:01.578)       0:00:02.235 ****** 
2023-07-10 14:59:28,855 p=11771 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 14:59:28,856 p=11771 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:59:28,909 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:28 +0300 (0:00:00.103)       0:00:02.338 ****** 
2023-07-10 14:59:28,945 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:28 +0300 (0:00:00.036)       0:00:02.375 ****** 
2023-07-10 14:59:28,976 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:28 +0300 (0:00:00.030)       0:00:02.405 ****** 
2023-07-10 14:59:29,007 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:29 +0300 (0:00:00.031)       0:00:02.436 ****** 
2023-07-10 14:59:29,038 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:29 +0300 (0:00:00.030)       0:00:02.467 ****** 
2023-07-10 14:59:29,120 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:29 +0300 (0:00:00.082)       0:00:02.549 ****** 
2023-07-10 14:59:29,165 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:29 +0300 (0:00:00.045)       0:00:02.595 ****** 
2023-07-10 14:59:29,204 p=11771 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:59:29,298 p=11771 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************************************************************************************************************
2023-07-10 14:59:29,299 p=11771 u=kubernetmachine n=ansible | fatal: [node1]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: kubernetmachine@192.168.122.29: Permission denied (publickey,password).", "unreachable": true}
2023-07-10 14:59:29,299 p=11771 u=kubernetmachine n=ansible | NO MORE HOSTS LEFT ***************************************************************************************************************************************************************************
2023-07-10 14:59:29,300 p=11771 u=kubernetmachine n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2023-07-10 14:59:29,300 p=11771 u=kubernetmachine n=ansible | localhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-10 14:59:29,300 p=11771 u=kubernetmachine n=ansible | node1                      : ok=1    changed=0    unreachable=1    failed=0    skipped=16   rescued=0    ignored=0   
2023-07-10 14:59:29,301 p=11771 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:29 +0300 (0:00:00.135)       0:00:02.730 ****** 
2023-07-10 14:59:29,301 p=11771 u=kubernetmachine n=ansible | =============================================================================== 
2023-07-10 14:59:29,301 p=11771 u=kubernetmachine n=ansible | download : download | Download files / images ----------------------------------------------------------------------------------------------------------------------------------------- 1.58s
2023-07-10 14:59:29,301 p=11771 u=kubernetmachine n=ansible | bootstrap-os : Fetch /etc/os-release -------------------------------------------------------------------------------------------------------------------------------------------------- 0.14s
2023-07-10 14:59:29,301 p=11771 u=kubernetmachine n=ansible | kubespray-defaults : Configure defaults ----------------------------------------------------------------------------------------------------------------------------------------------- 0.10s
2023-07-10 14:59:29,301 p=11771 u=kubernetmachine n=ansible | download : prep_download | On localhost, check if user has access to the container runtime without using sudo ------------------------------------------------------------------------- 0.09s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | Check that jinja is not too old (install via pip) ------------------------------------------------------------------------------------------------------------------------------------- 0.08s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | kubespray-defaults : Populates no_proxy to all hosts ---------------------------------------------------------------------------------------------------------------------------------- 0.08s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | Check that python netaddr is installed ------------------------------------------------------------------------------------------------------------------------------------------------ 0.08s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | download : prep_download | Create staging directory on remote node -------------------------------------------------------------------------------------------------------------------- 0.05s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | download : prep_download | On localhost, check if passwordless root is possible ------------------------------------------------------------------------------------------------------- 0.05s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | download : prep_download | Register docker images info -------------------------------------------------------------------------------------------------------------------------------- 0.05s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | kubespray-defaults : Set `etcd_deployment_type` to "kubeadm" if `etcd_kubeadm_enabled` is true ---------------------------------------------------------------------------------------- 0.05s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | download : prep_download | Set a few facts -------------------------------------------------------------------------------------------------------------------------------------------- 0.05s
2023-07-10 14:59:29,302 p=11771 u=kubernetmachine n=ansible | download : prep_download | Check that local user is in group or can become root ------------------------------------------------------------------------------------------------------- 0.04s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | download : prep_download | Parse the outputs of the previous commands ----------------------------------------------------------------------------------------------------------------- 0.04s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | download : download | Get kubeadm binary and list of required images ------------------------------------------------------------------------------------------------------------------ 0.04s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | download : prep_download | Create local cache for files and images on control node ---------------------------------------------------------------------------------------------------- 0.04s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | kubespray-defaults : Gather ansible_default_ipv4 from all hosts ----------------------------------------------------------------------------------------------------------------------- 0.04s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | Check 2.14.0 <= Ansible version < 2.16.0 ---------------------------------------------------------------------------------------------------------------------------------------------- 0.03s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | kubespray-defaults : set fallback_ips ------------------------------------------------------------------------------------------------------------------------------------------------- 0.03s
2023-07-10 14:59:29,303 p=11771 u=kubernetmachine n=ansible | kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames ----------------------------------------------------------------------------------------------------------- 0.03s
2023-07-10 14:59:34,590 p=11821 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 14:59:35,487 p=11821 u=kubernetmachine n=ansible |  [ERROR]: User interrupted execution

2023-07-10 14:59:40,826 p=11823 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 14:59:44,394 p=11823 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 14:59:44,396 p=11823 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************************************************************************************************************
2023-07-10 14:59:44,409 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.014)       0:00:00.014 ****** 
2023-07-10 14:59:44,436 p=11823 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************************************************************************************************************
2023-07-10 14:59:44,437 p=11823 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:44,442 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.033)       0:00:00.047 ****** 
2023-07-10 14:59:44,502 p=11823 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************************************************************************************************************
2023-07-10 14:59:44,502 p=11823 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:44,505 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.063)       0:00:00.111 ****** 
2023-07-10 14:59:44,522 p=11823 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************************************************************************************************************
2023-07-10 14:59:44,523 p=11823 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:44,533 p=11823 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 14:59:44,534 p=11823 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************************************************************************************************************
2023-07-10 14:59:44,534 p=11823 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:44,534 p=11823 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 14:59:44,536 p=11823 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************************************************************************************************************
2023-07-10 14:59:44,536 p=11823 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:44,536 p=11823 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 14:59:44,537 p=11823 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************************************************************************************************************
2023-07-10 14:59:44,537 p=11823 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:44,537 p=11823 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 14:59:44,538 p=11823 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************************************************************************************************************
2023-07-10 14:59:44,538 p=11823 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:44,538 p=11823 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 14:59:44,539 p=11823 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************************************************************************************************************
2023-07-10 14:59:44,539 p=11823 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:44,539 p=11823 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 14:59:44,540 p=11823 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************************************************************************************************************
2023-07-10 14:59:44,540 p=11823 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 14:59:44,542 p=11823 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************************************************************************************************************
2023-07-10 14:59:44,589 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.083)       0:00:00.194 ****** 
2023-07-10 14:59:44,635 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.045)       0:00:00.240 ****** 
2023-07-10 14:59:44,680 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.045)       0:00:00.285 ****** 
2023-07-10 14:59:44,766 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.085)       0:00:00.371 ****** 
2023-07-10 14:59:44,810 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.044)       0:00:00.416 ****** 
2023-07-10 14:59:44,855 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.044)       0:00:00.460 ****** 
2023-07-10 14:59:44,903 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.048)       0:00:00.509 ****** 
2023-07-10 14:59:44,952 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.049)       0:00:00.558 ****** 
2023-07-10 14:59:44,996 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:44 +0300 (0:00:00.043)       0:00:00.602 ****** 
2023-07-10 14:59:45,041 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:45 +0300 (0:00:00.045)       0:00:00.647 ****** 
2023-07-10 14:59:46,612 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:01.570)       0:00:02.217 ****** 
2023-07-10 14:59:46,660 p=11823 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 14:59:46,661 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:59:46,715 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.103)       0:00:02.321 ****** 
2023-07-10 14:59:46,750 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.034)       0:00:02.356 ****** 
2023-07-10 14:59:46,779 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.028)       0:00:02.385 ****** 
2023-07-10 14:59:46,810 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.031)       0:00:02.416 ****** 
2023-07-10 14:59:46,838 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.027)       0:00:02.443 ****** 
2023-07-10 14:59:46,867 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.028)       0:00:02.472 ****** 
2023-07-10 14:59:46,967 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:46 +0300 (0:00:00.100)       0:00:02.573 ****** 
2023-07-10 14:59:47,005 p=11823 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:59:47,515 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************************************************************************************************************
2023-07-10 14:59:47,515 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"\r\nNAME=\"Ubuntu\"\r\nVERSION_ID=\"22.04\"\r\nVERSION=\"22.04.2 LTS (Jammy Jellyfish)\"\r\nVERSION_CODENAME=jammy\r\nID=ubuntu\r\nID_LIKE=debian\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nUBUNTU_CODENAME=jammy\r\n", "stdout_lines": ["PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"", "NAME=\"Ubuntu\"", "VERSION_ID=\"22.04\"", "VERSION=\"22.04.2 LTS (Jammy Jellyfish)\"", "VERSION_CODENAME=jammy", "ID=ubuntu", "ID_LIKE=debian", "HOME_URL=\"https://www.ubuntu.com/\"", "SUPPORT_URL=\"https://help.ubuntu.com/\"", "BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"", "PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"", "UBUNTU_CODENAME=jammy"]}
2023-07-10 14:59:47,525 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.558)       0:00:03.131 ****** 
2023-07-10 14:59:47,554 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.028)       0:00:03.160 ****** 
2023-07-10 14:59:47,584 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.029)       0:00:03.190 ****** 
2023-07-10 14:59:47,612 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.027)       0:00:03.218 ****** 
2023-07-10 14:59:47,641 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.028)       0:00:03.246 ****** 
2023-07-10 14:59:47,670 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.028)       0:00:03.275 ****** 
2023-07-10 14:59:47,698 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.028)       0:00:03.303 ****** 
2023-07-10 14:59:47,715 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : include_tasks] **********************************************************************************************************************************************************
2023-07-10 14:59:47,732 p=11823 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1
2023-07-10 14:59:47,747 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.049)       0:00:03.352 ****** 
2023-07-10 14:59:47,787 p=11823 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:59:47,803 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check if bootstrap is needed] *******************************************************************************************************************************************
2023-07-10 14:59:47,803 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "/usr/bin/python3\r\n", "stdout_lines": ["/usr/bin/python3"]}
2023-07-10 14:59:47,813 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.066)       0:00:03.419 ****** 
2023-07-10 14:59:47,854 p=11823 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:59:47,878 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check http::proxy in apt configuration files] ***************************************************************************************************************************
2023-07-10 14:59:47,878 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 14:59:47,888 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.074)       0:00:03.493 ****** 
2023-07-10 14:59:47,924 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.036)       0:00:03.529 ****** 
2023-07-10 14:59:47,961 p=11823 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 14:59:47,979 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check https::proxy in apt configuration files] **************************************************************************************************************************
2023-07-10 14:59:47,980 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 14:59:47,991 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:47 +0300 (0:00:00.067)       0:00:03.597 ****** 
2023-07-10 14:59:48,029 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:48 +0300 (0:00:00.037)       0:00:03.634 ****** 
2023-07-10 14:59:48,057 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:48 +0300 (0:00:00.028)       0:00:03.663 ****** 
2023-07-10 14:59:48,085 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:48 +0300 (0:00:00.027)       0:00:03.690 ****** 
2023-07-10 14:59:48,126 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Set the ansible_python_interpreter fact] ********************************************************************************************************************************
2023-07-10 14:59:48,127 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_python_interpreter": "/usr/bin/python3"}, "changed": false}
2023-07-10 14:59:48,137 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:48 +0300 (0:00:00.052)       0:00:03.742 ****** 
2023-07-10 14:59:49,000 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Install dbus for the hostname module] ***********************************************************************************************************************************
2023-07-10 14:59:49,000 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 14:59:49,010 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:49 +0300 (0:00:00.872)       0:00:04.615 ****** 
2023-07-10 14:59:49,039 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:49 +0300 (0:00:00.029)       0:00:04.645 ****** 
2023-07-10 14:59:49,068 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:49 +0300 (0:00:00.028)       0:00:04.673 ****** 
2023-07-10 14:59:49,379 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Create remote_tmp for it is used by another module] *********************************************************************************************************************
2023-07-10 14:59:49,379 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.ansible/tmp", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:59:49,389 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:49 +0300 (0:00:00.321)       0:00:04.995 ****** 
2023-07-10 14:59:50,018 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Gather host facts to get ansible_os_family] *****************************************************************************************************************************
2023-07-10 14:59:50,019 p=11823 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:59:50,028 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:50 +0300 (0:00:00.638)       0:00:05.633 ****** 
2023-07-10 14:59:50,688 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] *************************************************************
2023-07-10 14:59:50,689 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_domain": "linuxtechi.local", "ansible_fqdn": "node1.linuxtechi.local", "ansible_hostname": "node1", "ansible_nodename": "node1"}, "changed": false, "name": "node1"}
2023-07-10 14:59:50,697 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:50 +0300 (0:00:00.669)       0:00:06.303 ****** 
2023-07-10 14:59:50,726 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:50 +0300 (0:00:00.028)       0:00:06.331 ****** 
2023-07-10 14:59:50,756 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:50 +0300 (0:00:00.030)       0:00:06.361 ****** 
2023-07-10 14:59:50,787 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:50 +0300 (0:00:00.030)       0:00:06.392 ****** 
2023-07-10 14:59:51,022 p=11823 u=kubernetmachine n=ansible | TASK [bootstrap-os : Ensure bash_completion.d folder exists] *********************************************************************************************************************************
2023-07-10 14:59:51,022 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 14:59:51,069 p=11823 u=kubernetmachine n=ansible | PLAY [Gather facts] **************************************************************************************************************************************************************************
2023-07-10 14:59:51,098 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:51 +0300 (0:00:00.310)       0:00:06.703 ****** 
2023-07-10 14:59:51,401 p=11823 u=kubernetmachine n=ansible | TASK [Gather minimal facts] ******************************************************************************************************************************************************************
2023-07-10 14:59:51,401 p=11823 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:59:51,410 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:51 +0300 (0:00:00.312)       0:00:07.015 ****** 
2023-07-10 14:59:51,712 p=11823 u=kubernetmachine n=ansible | TASK [Gather necessary facts (network)] ******************************************************************************************************************************************************
2023-07-10 14:59:51,712 p=11823 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:59:51,721 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:51 +0300 (0:00:00.311)       0:00:07.327 ****** 
2023-07-10 14:59:52,389 p=11823 u=kubernetmachine n=ansible | TASK [Gather necessary facts (hardware)] *****************************************************************************************************************************************************
2023-07-10 14:59:52,389 p=11823 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 14:59:52,432 p=11823 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd] **********************************************************************************************************************************************************************
2023-07-10 14:59:52,656 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.934)       0:00:08.262 ****** 
2023-07-10 14:59:52,694 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.037)       0:00:08.300 ****** 
2023-07-10 14:59:52,735 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.040)       0:00:08.341 ****** 
2023-07-10 14:59:52,771 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.035)       0:00:08.377 ****** 
2023-07-10 14:59:52,808 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.036)       0:00:08.414 ****** 
2023-07-10 14:59:52,842 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.034)       0:00:08.448 ****** 
2023-07-10 14:59:52,880 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.037)       0:00:08.485 ****** 
2023-07-10 14:59:52,919 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:52 +0300 (0:00:00.039)       0:00:08.524 ****** 
2023-07-10 14:59:53,003 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:53 +0300 (0:00:00.084)       0:00:08.608 ****** 
2023-07-10 14:59:53,038 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:53 +0300 (0:00:00.034)       0:00:08.643 ****** 
2023-07-10 14:59:54,589 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:01.551)       0:00:10.195 ****** 
2023-07-10 14:59:54,630 p=11823 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 14:59:54,631 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 14:59:54,681 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:00.091)       0:00:10.286 ****** 
2023-07-10 14:59:54,749 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:00.067)       0:00:10.354 ****** 
2023-07-10 14:59:54,820 p=11823 u=kubernetmachine n=ansible | TASK [kubespray-defaults : create fallback_ips_base] *****************************************************************************************************************************************
2023-07-10 14:59:54,821 p=11823 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"fallback_ips_base": "---\nnode1: \"192.168.122.29\"\n"}, "changed": false}
2023-07-10 14:59:54,833 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:00.083)       0:00:10.438 ****** 
2023-07-10 14:59:54,887 p=11823 u=kubernetmachine n=ansible | TASK [kubespray-defaults : set fallback_ips] *************************************************************************************************************************************************
2023-07-10 14:59:54,888 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"fallback_ips": {"node1": "192.168.122.29"}}, "changed": false}
2023-07-10 14:59:54,902 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:00.069)       0:00:10.508 ****** 
2023-07-10 14:59:54,948 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:00.045)       0:00:10.553 ****** 
2023-07-10 14:59:54,989 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:54 +0300 (0:00:00.041)       0:00:10.594 ****** 
2023-07-10 14:59:55,036 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:55 +0300 (0:00:00.047)       0:00:10.641 ****** 
2023-07-10 14:59:55,352 p=11823 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 14:59:55,352 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 14:59:55,363 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:55 +0300 (0:00:00.326)       0:00:10.968 ****** 
2023-07-10 14:59:55,767 p=11823 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 14:59:55,767 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 14:59:55,788 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:55 +0300 (0:00:00.425)       0:00:11.393 ****** 
2023-07-10 14:59:56,117 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *******************************************************************************************************************************
2023-07-10 14:59:56,118 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=swap) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "swap", "name": "swap", "opts": "defaults", "passno": "0"}
2023-07-10 14:59:56,261 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=none) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "none", "name": "none", "opts": "defaults", "passno": "0"}
2023-07-10 14:59:56,274 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.485)       0:00:11.879 ****** 
2023-07-10 14:59:56,592 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check swap] ****************************************************************************************************************************************************
2023-07-10 14:59:56,593 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/sbin/swapon", "-s"], "delta": "0:00:00.007442", "end": "2023-07-10 11:59:56.581729", "msg": "", "rc": 0, "start": "2023-07-10 11:59:56.574287", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:59:56,602 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.328)       0:00:12.208 ****** 
2023-07-10 14:59:56,632 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.029)       0:00:12.238 ****** 
2023-07-10 14:59:56,663 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.030)       0:00:12.269 ****** 
2023-07-10 14:59:56,694 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.030)       0:00:12.299 ****** 
2023-07-10 14:59:56,724 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.030)       0:00:12.329 ****** 
2023-07-10 14:59:56,756 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.031)       0:00:12.361 ****** 
2023-07-10 14:59:56,987 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************************************************************************************************************
2023-07-10 14:59:56,987 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:59:56,999 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:56 +0300 (0:00:00.243)       0:00:12.604 ****** 
2023-07-10 14:59:57,308 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 14:59:57,308 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 14:59:57,319 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:57 +0300 (0:00:00.319)       0:00:12.924 ****** 
2023-07-10 14:59:57,363 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 14:59:57,363 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 14:59:57,377 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:57 +0300 (0:00:00.057)       0:00:12.982 ****** 
2023-07-10 14:59:57,545 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************************************************************************************************************
2023-07-10 14:59:57,546 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.001923", "end": "2023-07-10 11:59:57.534483", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 11:59:57.532560", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:59:57,557 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:57 +0300 (0:00:00.180)       0:00:13.162 ****** 
2023-07-10 14:59:57,722 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************************************************************************************************************
2023-07-10 14:59:57,723 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 14:59:57,734 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:57 +0300 (0:00:00.177)       0:00:13.339 ****** 
2023-07-10 14:59:57,903 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************************************************************************************************************
2023-07-10 14:59:57,903 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 14:59:57,913 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:57 +0300 (0:00:00.179)       0:00:13.519 ****** 
2023-07-10 14:59:58,216 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************************************************************************************************************
2023-07-10 14:59:58,216 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 14:59:58,227 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:58 +0300 (0:00:00.313)       0:00:13.832 ****** 
2023-07-10 14:59:58,309 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************************************************************************************************************
2023-07-10 14:59:58,309 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 14:59:58,319 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:58 +0300 (0:00:00.092)       0:00:13.925 ****** 
2023-07-10 14:59:58,395 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********************************************************************************************************
2023-07-10 14:59:58,396 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 14:59:58,406 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:58 +0300 (0:00:00.086)       0:00:14.011 ****** 
2023-07-10 14:59:58,584 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************************************************************************************************************
2023-07-10 14:59:58,585 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.010212", "end": "2023-07-10 11:59:58.573647", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 11:59:58.563435", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 14:59:58,597 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:58 +0300 (0:00:00.190)       0:00:14.202 ****** 
2023-07-10 14:59:58,764 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************************************************************************************************************
2023-07-10 14:59:58,765 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.003929", "end": "2023-07-10 11:59:58.752897", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 11:59:58.748968", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 14:59:58,833 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:58 +0300 (0:00:00.236)       0:00:14.438 ****** 
2023-07-10 14:59:58,926 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******************************************************************************************************
2023-07-10 14:59:58,926 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 14:59:58,938 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:58 +0300 (0:00:00.104)       0:00:14.543 ****** 
2023-07-10 14:59:59,014 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************************************************************************************************************
2023-07-10 14:59:59,014 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 14:59:59,026 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.088)       0:00:14.631 ****** 
2023-07-10 14:59:59,191 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************************************************************************************************************
2023-07-10 14:59:59,191 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:59:59,204 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.178)       0:00:14.809 ****** 
2023-07-10 14:59:59,249 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************************************************************************************************************
2023-07-10 14:59:59,250 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": true}, "changed": false}
2023-07-10 14:59:59,262 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.058)       0:00:14.867 ****** 
2023-07-10 14:59:59,310 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************************************************************************************************************
2023-07-10 14:59:59,310 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 14:59:59,323 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.061)       0:00:14.929 ****** 
2023-07-10 14:59:59,354 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.031)       0:00:14.960 ****** 
2023-07-10 14:59:59,519 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************************************************************************************************************
2023-07-10 14:59:59,520 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 14:59:59,530 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.175)       0:00:15.135 ****** 
2023-07-10 14:59:59,559 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.029)       0:00:15.165 ****** 
2023-07-10 14:59:59,726 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************************************************************************************************************
2023-07-10 14:59:59,727 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688989265.0324173, "block_size": 4096, "blocks": 8, "ctime": 1688989265.0324173, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 262558, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989265.0324173, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1935, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 14:59:59,737 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.178)       0:00:15.343 ****** 
2023-07-10 14:59:59,783 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********************************************************************************************************
2023-07-10 14:59:59,783 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 14:59:59,795 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.057)       0:00:15.400 ****** 
2023-07-10 14:59:59,826 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.031)       0:00:15.432 ****** 
2023-07-10 14:59:59,871 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************************************************************************************************************
2023-07-10 14:59:59,871 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 14:59:59,882 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.055)       0:00:15.487 ****** 
2023-07-10 14:59:59,964 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************************************************************************************************************
2023-07-10 14:59:59,965 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 14:59:59,976 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  14:59:59 +0300 (0:00:00.094)       0:00:15.582 ****** 
2023-07-10 15:00:00,064 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************************************************************************************************************
2023-07-10 15:00:00,065 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": []}, "changed": false}
2023-07-10 15:00:00,076 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.099)       0:00:15.681 ****** 
2023-07-10 15:00:00,104 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.028)       0:00:15.710 ****** 
2023-07-10 15:00:00,206 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ************************************************************************************************
2023-07-10 15:00:00,206 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "127.0.0.53", "supersede_nameserver": "supersede domain-name-servers ;"}, "changed": false}
2023-07-10 15:00:00,218 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.113)       0:00:15.823 ****** 
2023-07-10 15:00:00,314 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************************************************************************************************************
2023-07-10 15:00:00,314 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 15:00:00,326 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.108)       0:00:15.932 ****** 
2023-07-10 15:00:00,410 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.083)       0:00:16.015 ****** 
2023-07-10 15:00:00,586 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************************************************************************************************************
2023-07-10 15:00:00,587 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:00:00,599 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.189)       0:00:16.204 ****** 
2023-07-10 15:00:00,629 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.029)       0:00:16.234 ****** 
2023-07-10 15:00:00,684 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] *************************************************************************************************
2023-07-10 15:00:00,685 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
2023-07-10 15:00:00,702 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}
2023-07-10 15:00:00,716 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.087)       0:00:16.322 ****** 
2023-07-10 15:00:00,764 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] *************************************************************************************************************
2023-07-10 15:00:00,765 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:00,776 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.059)       0:00:16.381 ****** 
2023-07-10 15:00:00,824 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if non systemd OS type] ***********************************************************************************************************************************
2023-07-10 15:00:00,825 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:00,836 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.060)       0:00:16.442 ****** 
2023-07-10 15:00:00,892 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if the os does not support] *******************************************************************************************************************************
2023-07-10 15:00:00,892 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:00,904 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.067)       0:00:16.510 ****** 
2023-07-10 15:00:00,956 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown network plugin] ********************************************************************************************************************************
2023-07-10 15:00:00,957 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:00,971 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:00 +0300 (0:00:00.066)       0:00:16.576 ****** 
2023-07-10 15:00:01,020 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *********************************************************************************************************************
2023-07-10 15:00:01,021 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,034 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.062)       0:00:16.639 ****** 
2023-07-10 15:00:01,093 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***********************************************************************
2023-07-10 15:00:01,093 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,120 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,147 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,175 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'helm_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,198 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,211 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.177)       0:00:16.816 ****** 
2023-07-10 15:00:01,271 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *****************************************************************************************************************************
2023-07-10 15:00:01,271 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,284 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.072)       0:00:16.889 ****** 
2023-07-10 15:00:01,331 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for masters] ***********************************************************************************************************************
2023-07-10 15:00:01,331 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,343 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.059)       0:00:16.949 ****** 
2023-07-10 15:00:01,391 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for nodes] *************************************************************************************************************************
2023-07-10 15:00:01,392 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,404 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.060)       0:00:17.009 ****** 
2023-07-10 15:00:01,448 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.043)       0:00:17.053 ****** 
2023-07-10 15:00:01,499 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if ip var does not match local ips] ***********************************************************************************************************************
2023-07-10 15:00:01,500 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:01,510 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:01 +0300 (0:00:00.062)       0:00:17.116 ****** 
2023-07-10 15:00:02,146 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure ping package] *******************************************************************************************************************************************
2023-07-10 15:00:02,146 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:00:02,157 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.646)       0:00:17.762 ****** 
2023-07-10 15:00:02,333 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *****************************************************************************************************************************
2023-07-10 15:00:02,334 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["ping", "-c1", "192.168.122.29"], "delta": "0:00:00.004556", "end": "2023-07-10 12:00:02.321815", "msg": "", "rc": 0, "start": "2023-07-10 12:00:02.317259", "stderr": "", "stderr_lines": [], "stdout": "PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.\n64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.015 ms\n\n--- 192.168.122.29 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 0.015/0.015/0.015/0.000 ms", "stdout_lines": ["PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.", "64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.015 ms", "", "--- 192.168.122.29 ping statistics ---", "1 packets transmitted, 1 received, 0% packet loss, time 0ms", "rtt min/avg/max/mdev = 0.015/0.015/0.015/0.000 ms"]}
2023-07-10 15:00:02,345 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.187)       0:00:17.950 ****** 
2023-07-10 15:00:02,392 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] *********************************************************************************************************
2023-07-10 15:00:02,392 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:02,462 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.117)       0:00:18.067 ****** 
2023-07-10 15:00:02,502 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.040)       0:00:18.108 ****** 
2023-07-10 15:00:02,544 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.041)       0:00:18.150 ****** 
2023-07-10 15:00:02,591 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if bad hostname] ******************************************************************************************************************************************
2023-07-10 15:00:02,592 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:02,603 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.058)       0:00:18.208 ****** 
2023-07-10 15:00:02,641 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.038)       0:00:18.247 ****** 
2023-07-10 15:00:02,715 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] **********************************************************************************************************
2023-07-10 15:00:02,716 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:02,727 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.085)       0:00:18.332 ****** 
2023-07-10 15:00:02,802 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ****************************************************************************************************************
2023-07-10 15:00:02,802 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:02,813 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.086)       0:00:18.418 ****** 
2023-07-10 15:00:02,893 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] **************************************************************************************
2023-07-10 15:00:02,894 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:02,907 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.093)       0:00:18.512 ****** 
2023-07-10 15:00:02,938 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.031)       0:00:18.543 ****** 
2023-07-10 15:00:02,986 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown dns mode] **************************************************************************************************************************************
2023-07-10 15:00:02,986 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:02,997 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:02 +0300 (0:00:00.059)       0:00:18.603 ****** 
2023-07-10 15:00:03,047 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *******************************************************************************************************************************
2023-07-10 15:00:03,047 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,058 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.060)       0:00:18.664 ****** 
2023-07-10 15:00:03,108 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown cert_management] *******************************************************************************************************************************
2023-07-10 15:00:03,109 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,120 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.062)       0:00:18.726 ****** 
2023-07-10 15:00:03,169 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *******************************************************************************************************************************
2023-07-10 15:00:03,169 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,180 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.059)       0:00:18.785 ****** 
2023-07-10 15:00:03,225 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***************************************************************************************************
2023-07-10 15:00:03,226 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,239 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.059)       0:00:18.845 ****** 
2023-07-10 15:00:03,286 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***************************************************************************************************
2023-07-10 15:00:03,286 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,299 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.059)       0:00:18.904 ****** 
2023-07-10 15:00:03,346 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] **************************************************************************
2023-07-10 15:00:03,347 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,360 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.061)       0:00:18.965 ****** 
2023-07-10 15:00:03,398 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.037)       0:00:19.003 ****** 
2023-07-10 15:00:03,441 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.042)       0:00:19.046 ****** 
2023-07-10 15:00:03,471 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.030)       0:00:19.076 ****** 
2023-07-10 15:00:03,505 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.034)       0:00:19.111 ****** 
2023-07-10 15:00:03,536 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.030)       0:00:19.142 ****** 
2023-07-10 15:00:03,619 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.083)       0:00:19.225 ****** 
2023-07-10 15:00:03,668 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure minimum containerd version] *****************************************************************************************************************************
2023-07-10 15:00:03,669 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:03,680 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.060)       0:00:19.285 ****** 
2023-07-10 15:00:03,721 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.040)       0:00:19.326 ****** 
2023-07-10 15:00:03,752 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.031)       0:00:19.357 ****** 
2023-07-10 15:00:03,792 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:03 +0300 (0:00:00.040)       0:00:19.398 ****** 
2023-07-10 15:00:03,977 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create kubernetes directories] *********************************************************************************************************************************
2023-07-10 15:00:03,978 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:04,125 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/manifests) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/manifests", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/manifests", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:04,274 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin/kubernetes-scripts) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin/kubernetes-scripts", "mode": "0755", "owner": "kube", "path": "/usr/local/bin/kubernetes-scripts", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:04,423 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "mode": "0755", "owner": "kube", "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:04,437 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:04 +0300 (0:00:00.645)       0:00:20.043 ****** 
2023-07-10 15:00:04,625 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create other directories of root owner] ************************************************************************************************************************
2023-07-10 15:00:04,626 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/ssl) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/ssl", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/ssl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:00:04,780 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin", "mode": "0755", "owner": "root", "path": "/usr/local/bin", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:00:04,793 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:04 +0300 (0:00:00.355)       0:00:20.398 ****** 
2023-07-10 15:00:04,963 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ************************************************************************************************************
2023-07-10 15:00:04,963 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688989248.4084306, "block_size": 4096, "blocks": 0, "ctime": 1688989248.4084306, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 262564, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/kubernetes/ssl", "lnk_target": "/etc/kubernetes/ssl", "mode": "0777", "mtime": 1688989248.4084306, "nlink": 1, "path": "/etc/kubernetes/pki", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 19, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:00:04,974 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:04 +0300 (0:00:00.181)       0:00:20.580 ****** 
2023-07-10 15:00:05,009 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.034)       0:00:20.614 ****** 
2023-07-10 15:00:05,194 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create cni directories] ****************************************************************************************************************************************
2023-07-10 15:00:05,195 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/cni/net.d) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/cni/net.d", "mode": "0755", "owner": "kube", "path": "/etc/cni/net.d", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:05,355 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/opt/cni/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/opt/cni/bin", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:05,367 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.358)       0:00:20.973 ****** 
2023-07-10 15:00:05,547 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create calico cni directories] *********************************************************************************************************************************
2023-07-10 15:00:05,547 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/var/lib/calico) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/var/lib/calico", "mode": "0755", "owner": "kube", "path": "/var/lib/calico", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:00:05,559 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.192)       0:00:21.165 ****** 
2023-07-10 15:00:05,616 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.056)       0:00:21.221 ****** 
2023-07-10 15:00:05,647 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.030)       0:00:21.252 ****** 
2023-07-10 15:00:05,680 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.033)       0:00:21.285 ****** 
2023-07-10 15:00:05,751 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.070)       0:00:21.356 ****** 
2023-07-10 15:00:05,825 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.074)       0:00:21.430 ****** 
2023-07-10 15:00:05,856 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.031)       0:00:21.462 ****** 
2023-07-10 15:00:05,889 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:05 +0300 (0:00:00.032)       0:00:21.495 ****** 
2023-07-10 15:00:06,462 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************************************************************************************************************
2023-07-10 15:00:06,462 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "b768c1a73df64294ab36e62a1f29e66a8ab15fd2", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/resolved.conf", "size": 114, "state": "file", "uid": 0}
2023-07-10 15:00:06,475 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.585)       0:00:22.080 ****** 
2023-07-10 15:00:06,509 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.034)       0:00:22.114 ****** 
2023-07-10 15:00:06,541 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.031)       0:00:22.146 ****** 
2023-07-10 15:00:06,573 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.032)       0:00:22.178 ****** 
2023-07-10 15:00:06,604 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.030)       0:00:22.209 ****** 
2023-07-10 15:00:06,636 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.032)       0:00:22.242 ****** 
2023-07-10 15:00:06,667 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.030)       0:00:22.273 ****** 
2023-07-10 15:00:06,699 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.032)       0:00:22.305 ****** 
2023-07-10 15:00:06,729 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.030)       0:00:22.335 ****** 
2023-07-10 15:00:06,763 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.033)       0:00:22.368 ****** 
2023-07-10 15:00:06,797 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:06 +0300 (0:00:00.034)       0:00:22.402 ****** 
2023-07-10 15:00:07,254 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update package management cache (APT)] *************************************************************************************************************************
2023-07-10 15:00:07,255 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:00:07,265 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:07 +0300 (0:00:00.468)       0:00:22.871 ****** 
2023-07-10 15:00:07,296 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:07 +0300 (0:00:00.030)       0:00:22.901 ****** 
2023-07-10 15:00:07,326 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:07 +0300 (0:00:00.030)       0:00:22.932 ****** 
2023-07-10 15:00:07,369 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:07 +0300 (0:00:00.042)       0:00:22.974 ****** 
2023-07-10 15:00:07,443 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] *****************************************************************************************
2023-07-10 15:00:07,443 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"common_required_pkgs": ["openssl", "curl", "rsync", "socat", "unzip", "e2fsprogs", "xfsprogs", "ebtables", "bash-completion", "tar", "ipvsadm", "ipset"]}, "changed": false}
2023-07-10 15:00:07,456 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:07 +0300 (0:00:00.086)       0:00:23.061 ****** 
2023-07-10 15:00:08,153 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Install packages requirements] *********************************************************************************************************************************
2023-07-10 15:00:08,154 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:00:08,165 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.709)       0:00:23.770 ****** 
2023-07-10 15:00:08,198 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.033)       0:00:23.804 ****** 
2023-07-10 15:00:08,232 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.034)       0:00:23.838 ****** 
2023-07-10 15:00:08,266 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.034)       0:00:23.872 ****** 
2023-07-10 15:00:08,297 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.030)       0:00:23.903 ****** 
2023-07-10 15:00:08,483 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *******************************************************************************************************************
2023-07-10 15:00:08,483 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=ipv4-ip_forward.conf) => {"ansible_loop_var": "item", "changed": false, "item": "ipv4-ip_forward.conf", "path": "/etc/sysctl.d/ipv4-ip_forward.conf", "state": "absent"}
2023-07-10 15:00:08,625 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=bridge-nf-call.conf) => {"ansible_loop_var": "item", "changed": false, "item": "bridge-nf-call.conf", "path": "/etc/sysctl.d/bridge-nf-call.conf", "state": "absent"}
2023-07-10 15:00:08,638 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.340)       0:00:24.244 ****** 
2023-07-10 15:00:08,811 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stat sysctl file configuration] ********************************************************************************************************************************
2023-07-10 15:00:08,811 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975452.148, "block_size": 4096, "blocks": 0, "ctime": 1688975046.4383185, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 161054, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/sysctl.conf", "lnk_target": "../sysctl.conf", "mode": "0777", "mtime": 1677761882.0, "nlink": 1, "path": "/etc/sysctl.d/99-sysctl.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 14, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:00:08,824 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.185)       0:00:24.429 ****** 
2023-07-10 15:00:08,873 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] **************************************************************************************************************
2023-07-10 15:00:08,873 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sysctl_file_path": "/etc/sysctl.conf"}, "changed": false}
2023-07-10 15:00:08,886 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:08 +0300 (0:00:00.062)       0:00:24.492 ****** 
2023-07-10 15:00:09,064 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] **********************************************************************************************************************
2023-07-10 15:00:09,064 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:00:09,076 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:09 +0300 (0:00:00.189)       0:00:24.681 ****** 
2023-07-10 15:00:09,403 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Enable ip forwarding] ******************************************************************************************************************************************
2023-07-10 15:00:09,403 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:00:09,415 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:09 +0300 (0:00:00.338)       0:00:25.020 ****** 
2023-07-10 15:00:09,447 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:09 +0300 (0:00:00.032)       0:00:25.053 ****** 
2023-07-10 15:00:09,617 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ******************************************************************************************************************
2023-07-10 15:00:09,617 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:09,628 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:09 +0300 (0:00:00.180)       0:00:25.234 ****** 
2023-07-10 15:00:09,662 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:09 +0300 (0:00:00.034)       0:00:25.268 ****** 
2023-07-10 15:00:09,848 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] **************************************************************************************************************************
2023-07-10 15:00:09,848 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxbytes", "value": 25000000}}
2023-07-10 15:00:09,997 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxkeys", "value": 1000000}}
2023-07-10 15:00:10,152 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic', 'value': 10}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic", "value": 10}}
2023-07-10 15:00:10,304 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic_on_oops", "value": 1}}
2023-07-10 15:00:10,454 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.overcommit_memory", "value": 1}}
2023-07-10 15:00:10,601 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.panic_on_oom", "value": 0}}
2023-07-10 15:00:10,615 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:10 +0300 (0:00:00.952)       0:00:26.220 ****** 
2023-07-10 15:00:10,939 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check dummy module] ********************************************************************************************************************************************
2023-07-10 15:00:10,939 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": "dummy", "params": "numdummies=0", "state": "present"}
2023-07-10 15:00:10,950 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:10 +0300 (0:00:00.335)       0:00:26.555 ****** 
2023-07-10 15:00:10,980 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:10 +0300 (0:00:00.029)       0:00:26.585 ****** 
2023-07-10 15:00:11,529 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Disable fapolicyd service] *************************************************************************************************************************************
2023-07-10 15:00:11,530 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "Could not find the requested service fapolicyd: host"}
2023-07-10 15:00:11,540 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.560)       0:00:27.145 ****** 
2023-07-10 15:00:11,572 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.032)       0:00:27.177 ****** 
2023-07-10 15:00:11,659 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.087)       0:00:27.265 ****** 
2023-07-10 15:00:11,689 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.030)       0:00:27.295 ****** 
2023-07-10 15:00:11,723 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.033)       0:00:27.328 ****** 
2023-07-10 15:00:11,754 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.031)       0:00:27.359 ****** 
2023-07-10 15:00:11,786 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.031)       0:00:27.391 ****** 
2023-07-10 15:00:11,814 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.028)       0:00:27.420 ****** 
2023-07-10 15:00:11,848 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.033)       0:00:27.453 ****** 
2023-07-10 15:00:11,882 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.034)       0:00:27.487 ****** 
2023-07-10 15:00:11,984 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************************************************************************************************************
2023-07-10 15:00:11,984 p=11823 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 15:00:11,995 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:11 +0300 (0:00:00.113)       0:00:27.601 ****** 
2023-07-10 15:00:12,314 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************************************************************************************************************
2023-07-10 15:00:12,314 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:00:12,325 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:12 +0300 (0:00:00.330)       0:00:27.931 ****** 
2023-07-10 15:00:12,363 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:12 +0300 (0:00:00.038)       0:00:27.969 ****** 
2023-07-10 15:00:12,529 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************************************************************************************************************
2023-07-10 15:00:12,530 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4KMTI3LjAuMS4xIGt1YmVybmV0bWFjaGluZXR3bwoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sgbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluCmZlMDA6OjAgaXA2LWxvY2FsbmV0CmZmMDA6OjAgaXA2LW1jYXN0cHJlZml4CmZmMDI6OjEgaXA2LWFsbG5vZGVzCmZmMDI6OjIgaXA2LWFsbHJvdXRlcnMKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxOTIuMTY4LjEyMi4yOSBub2RlMS5saW51eHRlY2hpLmxvY2FsIG5vZGUxIAojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 15:00:12,541 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:12 +0300 (0:00:00.178)       0:00:28.147 ****** 
2023-07-10 15:00:12,614 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ************************************************************************************************
2023-07-10 15:00:12,614 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost localhost.localdomain"}
2023-07-10 15:00:12,689 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain"}
2023-07-10 15:00:12,770 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:12 +0300 (0:00:00.228)       0:00:28.376 ****** 
2023-07-10 15:00:12,839 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *******************************************************************************************
2023-07-10 15:00:12,840 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:00:12,874 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:00:12,888 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:12 +0300 (0:00:00.117)       0:00:28.494 ****** 
2023-07-10 15:00:13,078 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************************************************************************************************************
2023-07-10 15:00:13,078 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": ""}
2023-07-10 15:00:13,221 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": ""}
2023-07-10 15:00:13,234 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:13 +0300 (0:00:00.345)       0:00:28.839 ****** 
2023-07-10 15:00:13,568 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update facts] **************************************************************************************************************************************************
2023-07-10 15:00:13,568 p=11823 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:00:13,578 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:13 +0300 (0:00:00.344)       0:00:29.184 ****** 
2023-07-10 15:00:13,754 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****************************************************************************************************
2023-07-10 15:00:13,755 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:00:13,821 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:13 +0300 (0:00:00.242)       0:00:29.426 ****** 
2023-07-10 15:00:14,170 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************************************************************************************************************
2023-07-10 15:00:14,171 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "size": 456, "state": "file", "uid": 0}
2023-07-10 15:00:14,182 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.360)       0:00:29.787 ****** 
2023-07-10 15:00:14,224 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.041)       0:00:29.829 ****** 
2023-07-10 15:00:14,255 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.031)       0:00:29.860 ****** 
2023-07-10 15:00:14,287 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.031)       0:00:29.892 ****** 
2023-07-10 15:00:14,307 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.020)       0:00:29.912 ****** 
2023-07-10 15:00:14,470 p=11823 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *********************************************************************************************************************
2023-07-10 15:00:14,470 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:14,482 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.175)       0:00:30.088 ****** 
2023-07-10 15:00:14,515 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.032)       0:00:30.120 ****** 
2023-07-10 15:00:14,546 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.031)       0:00:30.151 ****** 
2023-07-10 15:00:14,578 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.032)       0:00:30.184 ****** 
2023-07-10 15:00:14,609 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.031)       0:00:30.215 ****** 
2023-07-10 15:00:14,642 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.032)       0:00:30.247 ****** 
2023-07-10 15:00:14,672 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.030)       0:00:30.278 ****** 
2023-07-10 15:00:14,703 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.031)       0:00:30.309 ****** 
2023-07-10 15:00:14,722 p=11823 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************************************************************************************************************
2023-07-10 15:00:14,883 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:14 +0300 (0:00:00.179)       0:00:30.489 ****** 
2023-07-10 15:00:14,932 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****************************************************************************************************
2023-07-10 15:00:14,933 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,020 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.136)       0:00:30.625 ****** 
2023-07-10 15:00:15,067 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***********************************************************************************************
2023-07-10 15:00:15,068 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,091 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.070)       0:00:30.696 ****** 
2023-07-10 15:00:15,139 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] **************************************************************************
2023-07-10 15:00:15,140 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,162 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.071)       0:00:30.768 ****** 
2023-07-10 15:00:15,211 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.048)       0:00:30.816 ****** 
2023-07-10 15:00:15,255 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************************************************************************************************************
2023-07-10 15:00:15,255 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,277 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.066)       0:00:30.883 ****** 
2023-07-10 15:00:15,459 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************************************************************************************************************
2023-07-10 15:00:15,459 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:15,480 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.203)       0:00:31.086 ****** 
2023-07-10 15:00:15,518 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.037)       0:00:31.124 ****** 
2023-07-10 15:00:15,558 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.039)       0:00:31.163 ****** 
2023-07-10 15:00:15,597 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.039)       0:00:31.203 ****** 
2023-07-10 15:00:15,647 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.049)       0:00:31.253 ****** 
2023-07-10 15:00:15,686 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.038)       0:00:31.291 ****** 
2023-07-10 15:00:15,735 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************************************************************************************************************
2023-07-10 15:00:15,735 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,756 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.069)       0:00:31.361 ****** 
2023-07-10 15:00:15,800 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************************************************************************************************************
2023-07-10 15:00:15,801 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,900 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.144)       0:00:31.506 ****** 
2023-07-10 15:00:15,948 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************************************************************************************************************
2023-07-10 15:00:15,949 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:15,972 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:15 +0300 (0:00:00.072)       0:00:31.578 ****** 
2023-07-10 15:00:16,015 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.043)       0:00:31.621 ****** 
2023-07-10 15:00:16,069 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********************************************************************************************************
2023-07-10 15:00:16,070 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:00:16,105 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.089)       0:00:31.710 ****** 
2023-07-10 15:00:16,332 p=11823 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************************************************************************************************************
2023-07-10 15:00:16,332 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ipPool default-pool -o json", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/calicoctl.sh'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:00:16,358 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.253)       0:00:31.963 ****** 
2023-07-10 15:00:16,404 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.046)       0:00:32.010 ****** 
2023-07-10 15:00:16,468 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.063)       0:00:32.073 ****** 
2023-07-10 15:00:16,521 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.053)       0:00:32.126 ****** 
2023-07-10 15:00:16,572 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.051)       0:00:32.178 ****** 
2023-07-10 15:00:16,652 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.079)       0:00:32.257 ****** 
2023-07-10 15:00:16,847 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***************************************************************************************
2023-07-10 15:00:16,847 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:16,859 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:16 +0300 (0:00:00.207)       0:00:32.464 ****** 
2023-07-10 15:00:16,909 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ************************************************************************************************
2023-07-10 15:00:16,909 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:00:17,010 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:17 +0300 (0:00:00.151)       0:00:32.616 ****** 
2023-07-10 15:00:17,219 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] *******************************************************************************************************
2023-07-10 15:00:17,219 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:17,231 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:17 +0300 (0:00:00.220)       0:00:32.837 ****** 
2023-07-10 15:00:19,350 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Populate service facts] *******************************************************************************************************************
2023-07-10 15:00:19,354 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"services": {"ModemManager.service": {"name": "ModemManager.service", "source": "systemd", "state": "running", "status": "enabled"}, "NetworkManager.service": {"name": "NetworkManager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "apparmor": {"name": "apparmor", "source": "sysv", "state": "running"}, "apparmor.service": {"name": "apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "apport": {"name": "apport", "source": "sysv", "state": "running"}, "apport-autoreport.service": {"name": "apport-autoreport.service", "source": "systemd", "state": "stopped", "status": "static"}, "apport-forward@.service": {"name": "apport-forward@.service", "source": "systemd", "state": "unknown", "status": "static"}, "apport.service": {"name": "apport.service", "source": "systemd", "state": "stopped", "status": "generated"}, "apt-daily-upgrade.service": {"name": "apt-daily-upgrade.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-daily.service": {"name": "apt-daily.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-news.service": {"name": "apt-news.service", "source": "systemd", "state": "inactive", "status": "static"}, "auditd.service": {"name": "auditd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autovt@.service": {"name": "autovt@.service", "source": "systemd", "state": "unknown", "status": "alias"}, "blk-availability.service": {"name": "blk-availability.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "bolt.service": {"name": "bolt.service", "source": "systemd", "state": "inactive", "status": "static"}, "cloud-config.service": {"name": "cloud-config.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-final.service": {"name": "cloud-final.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init-hotplugd.service": {"name": "cloud-init-hotplugd.service", "source": "systemd", "state": "stopped", "status": "static"}, "cloud-init-local.service": {"name": "cloud-init-local.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init.service": {"name": "cloud-init.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "connman.service": {"name": "connman.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-getty.service": {"name": "console-getty.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "console-screen.service": {"name": "console-screen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-setup.service": {"name": "console-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "console-setup.sh": {"name": "console-setup.sh", "source": "sysv", "state": "stopped"}, "container-getty@.service": {"name": "container-getty@.service", "source": "systemd", "state": "unknown", "status": "static"}, "containerd.service": {"name": "containerd.service", "source": "systemd", "state": "running", "status": "enabled"}, "cron": {"name": "cron", "source": "sysv", "state": "running"}, "cron.service": {"name": "cron.service", "source": "systemd", "state": "running", "status": "enabled"}, "cryptdisks": {"name": "cryptdisks", "source": "sysv", "state": "stopped"}, "cryptdisks-early": {"name": "cryptdisks-early", "source": "sysv", "state": "stopped"}, "cryptdisks-early.service": {"name": "cryptdisks-early.service", "source": "systemd", "state": "inactive", "status": "masked"}, "cryptdisks.service": {"name": "cryptdisks.service", "source": "systemd", "state": "inactive", "status": "masked"}, "dbus": {"name": "dbus", "source": "sysv", "state": "running"}, "dbus-org.freedesktop.ModemManager1.service": {"name": "dbus-org.freedesktop.ModemManager1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.hostname1.service": {"name": "dbus-org.freedesktop.hostname1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.locale1.service": {"name": "dbus-org.freedesktop.locale1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.login1.service": {"name": "dbus-org.freedesktop.login1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.resolve1.service": {"name": "dbus-org.freedesktop.resolve1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.thermald.service": {"name": "dbus-org.freedesktop.thermald.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timedate1.service": {"name": "dbus-org.freedesktop.timedate1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timesync1.service": {"name": "dbus-org.freedesktop.timesync1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus.service": {"name": "dbus.service", "source": "systemd", "state": "running", "status": "static"}, "debug-shell.service": {"name": "debug-shell.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "display-manager.service": {"name": "display-manager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "dm-event.service": {"name": "dm-event.service", "source": "systemd", "state": "stopped", "status": "static"}, "dmesg.service": {"name": "dmesg.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "dpkg-db-backup.service": {"name": "dpkg-db-backup.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub@.service": {"name": "e2scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_all.service": {"name": "e2scrub_all.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub_fail@.service": {"name": "e2scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_reap.service": {"name": "e2scrub_reap.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "emergency.service": {"name": "emergency.service", "source": "systemd", "state": "stopped", "status": "static"}, "esm-cache.service": {"name": "esm-cache.service", "source": "systemd", "state": "inactive", "status": "static"}, "fcoe.service": {"name": "fcoe.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "finalrd.service": {"name": "finalrd.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "friendly-recovery.service": {"name": "friendly-recovery.service", "source": "systemd", "state": "inactive", "status": "static"}, "fstrim.service": {"name": "fstrim.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd-offline-update.service": {"name": "fwupd-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-refresh.service": {"name": "fwupd-refresh.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd.service": {"name": "fwupd.service", "source": "systemd", "state": "inactive", "status": "static"}, "getty-static.service": {"name": "getty-static.service", "source": "systemd", "state": "stopped", "status": "static"}, "getty@.service": {"name": "getty@.service", "source": "systemd", "state": "unknown", "status": "enabled"}, "getty@tty1.service": {"name": "getty@tty1.service", "source": "systemd", "state": "running", "status": "active"}, "gpu-manager.service": {"name": "gpu-manager.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "grub-common": {"name": "grub-common", "source": "sysv", "state": "stopped"}, "grub-common.service": {"name": "grub-common.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "grub-initrd-fallback.service": {"name": "grub-initrd-fallback.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "hv_kvp_daemon.service": {"name": "hv_kvp_daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "hwclock.service": {"name": "hwclock.service", "source": "systemd", "state": "inactive", "status": "masked"}, "hwclock.sh": {"name": "hwclock.sh", "source": "sysv", "state": "stopped"}, "initrd-cleanup.service": {"name": "initrd-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-parse-etc.service": {"name": "initrd-parse-etc.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-switch-root.service": {"name": "initrd-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-udevadm-cleanup-db.service": {"name": "initrd-udevadm-cleanup-db.service", "source": "systemd", "state": "inactive", "status": "static"}, "ipvsadm": {"name": "ipvsadm", "source": "sysv", "state": "running"}, "ipvsadm.service": {"name": "ipvsadm.service", "source": "systemd", "state": "stopped", "status": "generated"}, "irqbalance": {"name": "irqbalance", "source": "sysv", "state": "running"}, "irqbalance.service": {"name": "irqbalance.service", "source": "systemd", "state": "running", "status": "enabled"}, "iscsi-shutdown.service": {"name": "iscsi-shutdown.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "iscsi.service": {"name": "iscsi.service", "source": "systemd", "state": "inactive", "status": "alias"}, "iscsid": {"name": "iscsid", "source": "sysv", "state": "stopped"}, "iscsid.service": {"name": "iscsid.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "kbd.service": {"name": "kbd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "keyboard-setup.service": {"name": "keyboard-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "keyboard-setup.sh": {"name": "keyboard-setup.sh", "source": "sysv", "state": "stopped"}, "kmod": {"name": "kmod", "source": "sysv", "state": "running"}, "kmod-static-nodes.service": {"name": "kmod-static-nodes.service", "source": "systemd", "state": "stopped", "status": "static"}, "kmod.service": {"name": "kmod.service", "source": "systemd", "state": "active", "status": "alias"}, "loaded": {"name": "loaded", "source": "systemd", "state": "stopped", "status": "failed"}, "logrotate.service": {"name": "logrotate.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2": {"name": "lvm2", "source": "sysv", "state": "stopped"}, "lvm2-activation-early.service": {"name": "lvm2-activation-early.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-activation.service": {"name": "lvm2-activation.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-lvmpolld": {"name": "lvm2-lvmpolld", "source": "sysv", "state": "stopped"}, "lvm2-lvmpolld.service": {"name": "lvm2-lvmpolld.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2-monitor.service": {"name": "lvm2-monitor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "lvm2-pvscan@.service": {"name": "lvm2-pvscan@.service", "source": "systemd", "state": "unknown", "status": "static"}, "lvm2-pvscan@252:3.service": {"name": "lvm2-pvscan@252:3.service", "source": "systemd", "state": "stopped", "status": "active"}, "lvm2.service": {"name": "lvm2.service", "source": "systemd", "state": "inactive", "status": "masked"}, "lxd-agent.service": {"name": "lxd-agent.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "man-db.service": {"name": "man-db.service", "source": "systemd", "state": "stopped", "status": "static"}, "mdadm-grow-continue@.service": {"name": "mdadm-grow-continue@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdadm-last-resort@.service": {"name": "mdadm-last-resort@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdcheck_continue.service": {"name": "mdcheck_continue.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdcheck_start.service": {"name": "mdcheck_start.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmon@.service": {"name": "mdmon@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdmonitor-oneshot.service": {"name": "mdmonitor-oneshot.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmonitor.service": {"name": "mdmonitor.service", "source": "systemd", "state": "inactive", "status": "static"}, "modprobe@.service": {"name": "modprobe@.service", "source": "systemd", "state": "unknown", "status": "static"}, "modprobe@chromeos_pstore.service": {"name": "modprobe@chromeos_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@configfs.service": {"name": "modprobe@configfs.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@drm.service": {"name": "modprobe@drm.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@efi_pstore.service": {"name": "modprobe@efi_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@fuse.service": {"name": "modprobe@fuse.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_blk.service": {"name": "modprobe@pstore_blk.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_zone.service": {"name": "modprobe@pstore_zone.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@ramoops.service": {"name": "modprobe@ramoops.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "motd-news.service": {"name": "motd-news.service", "source": "systemd", "state": "stopped", "status": "static"}, "multipath-tools": {"name": "multipath-tools", "source": "sysv", "state": "running"}, "multipath-tools-boot.service": {"name": "multipath-tools-boot.service", "source": "systemd", "state": "inactive", "status": "masked"}, "multipath-tools.service": {"name": "multipath-tools.service", "source": "systemd", "state": "active", "status": "alias"}, "multipathd.service": {"name": "multipathd.service", "source": "systemd", "state": "running", "status": "enabled"}, "netplan-ovs-cleanup.service": {"name": "netplan-ovs-cleanup.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "networkd-dispatcher.service": {"name": "networkd-dispatcher.service", "source": "systemd", "state": "running", "status": "enabled"}, "networking.service": {"name": "networking.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "nftables.service": {"name": "nftables.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "open-iscsi": {"name": "open-iscsi", "source": "sysv", "state": "stopped"}, "open-iscsi.service": {"name": "open-iscsi.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "open-vm-tools": {"name": "open-vm-tools", "source": "sysv", "state": "stopped"}, "open-vm-tools.service": {"name": "open-vm-tools.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ovsdb-server.service": {"name": "ovsdb-server.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "packagekit-offline-update.service": {"name": "packagekit-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "packagekit.service": {"name": "packagekit.service", "source": "systemd", "state": "running", "status": "static"}, "plymouth": {"name": "plymouth", "source": "sysv", "state": "running"}, "plymouth-halt.service": {"name": "plymouth-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-kexec.service": {"name": "plymouth-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-log": {"name": "plymouth-log", "source": "sysv", "state": "running"}, "plymouth-log.service": {"name": "plymouth-log.service", "source": "systemd", "state": "active", "status": "alias"}, "plymouth-poweroff.service": {"name": "plymouth-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-quit-wait.service": {"name": "plymouth-quit-wait.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-quit.service": {"name": "plymouth-quit.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-read-write.service": {"name": "plymouth-read-write.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-reboot.service": {"name": "plymouth-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-start.service": {"name": "plymouth-start.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-switch-root-initramfs.service": {"name": "plymouth-switch-root-initramfs.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-switch-root.service": {"name": "plymouth-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth.service": {"name": "plymouth.service", "source": "systemd", "state": "active", "status": "alias"}, "polkit.service": {"name": "polkit.service", "source": "systemd", "state": "running", "status": "static"}, "pollinate.service": {"name": "pollinate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "procps": {"name": "procps", "source": "sysv", "state": "running"}, "procps.service": {"name": "procps.service", "source": "systemd", "state": "active", "status": "alias"}, "quotaon.service": {"name": "quotaon.service", "source": "systemd", "state": "inactive", "status": "static"}, "rbdmap.service": {"name": "rbdmap.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "rc-local.service": {"name": "rc-local.service", "source": "systemd", "state": "stopped", "status": "static"}, "rc.service": {"name": "rc.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rcS.service": {"name": "rcS.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rescue.service": {"name": "rescue.service", "source": "systemd", "state": "stopped", "status": "static"}, "rsync": {"name": "rsync", "source": "sysv", "state": "stopped"}, "rsync.service": {"name": "rsync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rsyslog.service": {"name": "rsyslog.service", "source": "systemd", "state": "running", "status": "enabled"}, "screen-cleanup": {"name": "screen-cleanup", "source": "sysv", "state": "stopped"}, "screen-cleanup.service": {"name": "screen-cleanup.service", "source": "systemd", "state": "inactive", "status": "masked"}, "secureboot-db.service": {"name": "secureboot-db.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "serial-getty@.service": {"name": "serial-getty@.service", "source": "systemd", "state": "unknown", "status": "disabled"}, "setvtrgb.service": {"name": "setvtrgb.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.activate.service": {"name": "snap.lxd.activate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.daemon.service": {"name": "snap.lxd.daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snap.lxd.user-daemon.service": {"name": "snap.lxd.user-daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.aa-prompt-listener.service": {"name": "snapd.aa-prompt-listener.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.apparmor.service": {"name": "snapd.apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.autoimport.service": {"name": "snapd.autoimport.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.core-fixup.service": {"name": "snapd.core-fixup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.failure.service": {"name": "snapd.failure.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.recovery-chooser-trigger.service": {"name": "snapd.recovery-chooser-trigger.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.seeded.service": {"name": "snapd.seeded.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.service": {"name": "snapd.service", "source": "systemd", "state": "running", "status": "enabled"}, "snapd.snap-repair.service": {"name": "snapd.snap-repair.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.system-shutdown.service": {"name": "snapd.system-shutdown.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "ssh": {"name": "ssh", "source": "sysv", "state": "running"}, "ssh.service": {"name": "ssh.service", "source": "systemd", "state": "running", "status": "enabled"}, "ssh@.service": {"name": "ssh@.service", "source": "systemd", "state": "unknown", "status": "static"}, "sshd-keygen.service": {"name": "sshd-keygen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd.service": {"name": "sshd.service", "source": "systemd", "state": "active", "status": "alias"}, "sudo.service": {"name": "sudo.service", "source": "systemd", "state": "inactive", "status": "masked"}, "syslog.service": {"name": "syslog.service", "source": "systemd", "state": "active", "status": "alias"}, "system-update-cleanup.service": {"name": "system-update-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-ask-password-console.service": {"name": "systemd-ask-password-console.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-plymouth.service": {"name": "systemd-ask-password-plymouth.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-wall.service": {"name": "systemd-ask-password-wall.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-backlight@.service": {"name": "systemd-backlight@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-binfmt.service": {"name": "systemd-binfmt.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-bless-boot.service": {"name": "systemd-bless-boot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-boot-check-no-failures.service": {"name": "systemd-boot-check-no-failures.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-boot-system-token.service": {"name": "systemd-boot-system-token.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-exit.service": {"name": "systemd-exit.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-fsck-root.service": {"name": "systemd-fsck-root.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-fsck@.service": {"name": "systemd-fsck@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service": {"name": "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-fsckd.service": {"name": "systemd-fsckd.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-halt.service": {"name": "systemd-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hibernate-resume@.service": {"name": "systemd-hibernate-resume@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-hibernate.service": {"name": "systemd-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hostnamed.service": {"name": "systemd-hostnamed.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-hwdb-update.service": {"name": "systemd-hwdb-update.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-hybrid-sleep.service": {"name": "systemd-hybrid-sleep.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-initctl.service": {"name": "systemd-initctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-flush.service": {"name": "systemd-journal-flush.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journald.service": {"name": "systemd-journald.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-journald@.service": {"name": "systemd-journald@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-kexec.service": {"name": "systemd-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-localed.service": {"name": "systemd-localed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-logind.service": {"name": "systemd-logind.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-machine-id-commit.service": {"name": "systemd-machine-id-commit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-modules-load.service": {"name": "systemd-modules-load.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-network-generator.service": {"name": "systemd-network-generator.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-networkd-wait-online.service": {"name": "systemd-networkd-wait-online.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-networkd.service": {"name": "systemd-networkd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-poweroff.service": {"name": "systemd-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pstore.service": {"name": "systemd-pstore.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-quotacheck.service": {"name": "systemd-quotacheck.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-random-seed.service": {"name": "systemd-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-reboot.service": {"name": "systemd-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-remount-fs.service": {"name": "systemd-remount-fs.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-resolved.service": {"name": "systemd-resolved.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-rfkill.service": {"name": "systemd-rfkill.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-suspend-then-hibernate.service": {"name": "systemd-suspend-then-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-suspend.service": {"name": "systemd-suspend.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-sysctl.service": {"name": "systemd-sysctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-sysext.service": {"name": "systemd-sysext.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-sysusers.service": {"name": "systemd-sysusers.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-time-wait-sync.service": {"name": "systemd-time-wait-sync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-timedated.service": {"name": "systemd-timedated.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-timesyncd.service": {"name": "systemd-timesyncd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-tmpfiles-clean.service": {"name": "systemd-tmpfiles-clean.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup-dev.service": {"name": "systemd-tmpfiles-setup-dev.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup.service": {"name": "systemd-tmpfiles-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udev-settle.service": {"name": "systemd-udev-settle.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-udev-trigger.service": {"name": "systemd-udev-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udevd.service": {"name": "systemd-udevd.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-update-done.service": {"name": "systemd-update-done.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-update-utmp-runlevel.service": {"name": "systemd-update-utmp-runlevel.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp.service": {"name": "systemd-update-utmp.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-user-sessions.service": {"name": "systemd-user-sessions.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-vconsole-setup.service": {"name": "systemd-vconsole-setup.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-volatile-root.service": {"name": "systemd-volatile-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "thermald.service": {"name": "thermald.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-auto-attach.service": {"name": "ua-auto-attach.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ua-reboot-cmds.service": {"name": "ua-reboot-cmds.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-timer.service": {"name": "ua-timer.service", "source": "systemd", "state": "stopped", "status": "static"}, "ubuntu-advantage-cloud-id-shim.service": {"name": "ubuntu-advantage-cloud-id-shim.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ubuntu-advantage.service": {"name": "ubuntu-advantage.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "udev": {"name": "udev", "source": "sysv", "state": "running"}, "udev.service": {"name": "udev.service", "source": "systemd", "state": "active", "status": "alias"}, "udisks2.service": {"name": "udisks2.service", "source": "systemd", "state": "running", "status": "enabled"}, "ufw": {"name": "ufw", "source": "sysv", "state": "running"}, "ufw.service": {"name": "ufw.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "unattended-upgrades": {"name": "unattended-upgrades", "source": "sysv", "state": "running"}, "unattended-upgrades.service": {"name": "unattended-upgrades.service", "source": "systemd", "state": "running", "status": "enabled"}, "update-notifier-download.service": {"name": "update-notifier-download.service", "source": "systemd", "state": "inactive", "status": "static"}, "update-notifier-motd.service": {"name": "update-notifier-motd.service", "source": "systemd", "state": "stopped", "status": "static"}, "upower.service": {"name": "upower.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "usb_modeswitch@.service": {"name": "usb_modeswitch@.service", "source": "systemd", "state": "unknown", "status": "static"}, "usbmuxd.service": {"name": "usbmuxd.service", "source": "systemd", "state": "inactive", "status": "static"}, "user-runtime-dir@.service": {"name": "user-runtime-dir@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user-runtime-dir@0.service": {"name": "user-runtime-dir@0.service", "source": "systemd", "state": "stopped", "status": "active"}, "user-runtime-dir@1000.service": {"name": "user-runtime-dir@1000.service", "source": "systemd", "state": "stopped", "status": "active"}, "user@.service": {"name": "user@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user@0.service": {"name": "user@0.service", "source": "systemd", "state": "running", "status": "active"}, "user@1000.service": {"name": "user@1000.service", "source": "systemd", "state": "running", "status": "active"}, "uuidd": {"name": "uuidd", "source": "sysv", "state": "stopped"}, "uuidd.service": {"name": "uuidd.service", "source": "systemd", "state": "stopped", "status": "indirect"}, "vgauth.service": {"name": "vgauth.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "vmtoolsd.service": {"name": "vmtoolsd.service", "source": "systemd", "state": "inactive", "status": "alias"}, "x11-common.service": {"name": "x11-common.service", "source": "systemd", "state": "inactive", "status": "masked"}, "xfs_scrub@.service": {"name": "xfs_scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "xfs_scrub_all.service": {"name": "xfs_scrub_all.service", "source": "systemd", "state": "inactive", "status": "static"}, "xfs_scrub_fail@.service": {"name": "xfs_scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "zfs-mount.service": {"name": "zfs-mount.service", "source": "systemd", "state": "stopped", "status": "not-found"}}}, "changed": false}
2023-07-10 15:00:19,366 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:19 +0300 (0:00:02.134)       0:00:34.971 ****** 
2023-07-10 15:00:19,667 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if containerd is installed] *********************************************************************************************************
2023-07-10 15:00:19,668 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 927, "files": [{"atime": 1688989439.1442995, "ctime": 1688989436.4363012, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 262627, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989436.3123012, "nlink": 1, "path": "/etc/systemd/system/containerd.service", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 1365, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 1, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:00:19,683 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:19 +0300 (0:00:00.317)       0:00:35.289 ****** 
2023-07-10 15:00:19,967 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if docker is installed] *************************************************************************************************************
2023-07-10 15:00:19,967 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 927, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:00:19,976 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:19 +0300 (0:00:00.292)       0:00:35.582 ****** 
2023-07-10 15:00:20,154 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if crio is installed] ***************************************************************************************************************
2023-07-10 15:00:20,155 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 927, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:00:20,165 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.188)       0:00:35.770 ****** 
2023-07-10 15:00:20,201 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.036)       0:00:35.806 ****** 
2023-07-10 15:00:20,237 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.035)       0:00:35.842 ****** 
2023-07-10 15:00:20,274 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.037)       0:00:35.880 ****** 
2023-07-10 15:00:20,308 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.033)       0:00:35.913 ****** 
2023-07-10 15:00:20,429 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.121)       0:00:36.034 ****** 
2023-07-10 15:00:20,461 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.032)       0:00:36.067 ****** 
2023-07-10 15:00:20,493 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.031)       0:00:36.099 ****** 
2023-07-10 15:00:20,527 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.033)       0:00:36.132 ****** 
2023-07-10 15:00:20,560 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.033)       0:00:36.165 ****** 
2023-07-10 15:00:20,592 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.032)       0:00:36.197 ****** 
2023-07-10 15:00:20,631 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.038)       0:00:36.236 ****** 
2023-07-10 15:00:20,670 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.039)       0:00:36.275 ****** 
2023-07-10 15:00:20,705 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.034)       0:00:36.310 ****** 
2023-07-10 15:00:20,739 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.034)       0:00:36.345 ****** 
2023-07-10 15:00:20,774 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.034)       0:00:36.379 ****** 
2023-07-10 15:00:20,816 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.042)       0:00:36.421 ****** 
2023-07-10 15:00:20,851 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.034)       0:00:36.456 ****** 
2023-07-10 15:00:20,891 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.039)       0:00:36.496 ****** 
2023-07-10 15:00:20,923 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:20 +0300 (0:00:00.032)       0:00:36.529 ****** 
2023-07-10 15:00:21,004 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.080)       0:00:36.609 ****** 
2023-07-10 15:00:21,035 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.030)       0:00:36.640 ****** 
2023-07-10 15:00:21,066 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.031)       0:00:36.671 ****** 
2023-07-10 15:00:21,101 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.034)       0:00:36.706 ****** 
2023-07-10 15:00:21,134 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.033)       0:00:36.740 ****** 
2023-07-10 15:00:21,257 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.123)       0:00:36.863 ****** 
2023-07-10 15:00:21,307 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.049)       0:00:36.913 ****** 
2023-07-10 15:00:21,344 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.036)       0:00:36.950 ****** 
2023-07-10 15:00:21,377 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.032)       0:00:36.982 ****** 
2023-07-10 15:00:21,409 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.031)       0:00:37.014 ****** 
2023-07-10 15:00:21,445 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.035)       0:00:37.050 ****** 
2023-07-10 15:00:21,485 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.040)       0:00:37.091 ****** 
2023-07-10 15:00:21,520 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.034)       0:00:37.125 ****** 
2023-07-10 15:00:21,552 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.032)       0:00:37.158 ****** 
2023-07-10 15:00:21,587 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.034)       0:00:37.193 ****** 
2023-07-10 15:00:21,622 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.035)       0:00:37.228 ****** 
2023-07-10 15:00:21,682 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.059)       0:00:37.287 ****** 
2023-07-10 15:00:21,736 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.054)       0:00:37.341 ****** 
2023-07-10 15:00:21,794 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.058)       0:00:37.400 ****** 
2023-07-10 15:00:21,865 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.070)       0:00:37.470 ****** 
2023-07-10 15:00:21,921 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.055)       0:00:37.526 ****** 
2023-07-10 15:00:21,972 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:21 +0300 (0:00:00.050)       0:00:37.577 ****** 
2023-07-10 15:00:22,139 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.167)       0:00:37.745 ****** 
2023-07-10 15:00:22,214 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.074)       0:00:37.819 ****** 
2023-07-10 15:00:22,268 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.054)       0:00:37.874 ****** 
2023-07-10 15:00:22,323 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.054)       0:00:37.928 ****** 
2023-07-10 15:00:22,379 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.056)       0:00:37.984 ****** 
2023-07-10 15:00:22,433 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.053)       0:00:38.038 ****** 
2023-07-10 15:00:22,488 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.055)       0:00:38.093 ****** 
2023-07-10 15:00:22,543 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.055)       0:00:38.148 ****** 
2023-07-10 15:00:22,595 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.052)       0:00:38.201 ****** 
2023-07-10 15:00:22,657 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.061)       0:00:38.263 ****** 
2023-07-10 15:00:22,726 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.069)       0:00:38.332 ****** 
2023-07-10 15:00:22,781 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.054)       0:00:38.386 ****** 
2023-07-10 15:00:22,838 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.057)       0:00:38.443 ****** 
2023-07-10 15:00:22,895 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.056)       0:00:38.500 ****** 
2023-07-10 15:00:22,950 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:22 +0300 (0:00:00.054)       0:00:38.555 ****** 
2023-07-10 15:00:23,012 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.062)       0:00:38.617 ****** 
2023-07-10 15:00:23,063 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.050)       0:00:38.668 ****** 
2023-07-10 15:00:23,116 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.053)       0:00:38.721 ****** 
2023-07-10 15:00:23,173 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.057)       0:00:38.779 ****** 
2023-07-10 15:00:23,226 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.052)       0:00:38.831 ****** 
2023-07-10 15:00:23,276 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.050)       0:00:38.881 ****** 
2023-07-10 15:00:23,327 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.051)       0:00:38.932 ****** 
2023-07-10 15:00:23,399 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.072)       0:00:39.005 ****** 
2023-07-10 15:00:23,455 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.055)       0:00:39.060 ****** 
2023-07-10 15:00:23,550 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.095)       0:00:39.155 ****** 
2023-07-10 15:00:23,686 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.136)       0:00:39.292 ****** 
2023-07-10 15:00:23,734 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.048)       0:00:39.340 ****** 
2023-07-10 15:00:23,780 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.045)       0:00:39.385 ****** 
2023-07-10 15:00:23,825 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.045)       0:00:39.430 ****** 
2023-07-10 15:00:23,879 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.054)       0:00:39.485 ****** 
2023-07-10 15:00:23,937 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:23 +0300 (0:00:00.057)       0:00:39.542 ****** 
2023-07-10 15:00:24,009 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:24 +0300 (0:00:00.071)       0:00:39.614 ****** 
2023-07-10 15:00:24,070 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:24 +0300 (0:00:00.061)       0:00:39.675 ****** 
2023-07-10 15:00:24,118 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:24 +0300 (0:00:00.047)       0:00:39.723 ****** 
2023-07-10 15:00:24,165 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:24 +0300 (0:00:00.047)       0:00:39.770 ****** 
2023-07-10 15:00:26,628 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:02.463)       0:00:42.233 ****** 
2023-07-10 15:00:26,656 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.028)       0:00:42.261 ****** 
2023-07-10 15:00:26,694 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.038)       0:00:42.300 ****** 
2023-07-10 15:00:26,723 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.029)       0:00:42.329 ****** 
2023-07-10 15:00:26,759 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.035)       0:00:42.364 ****** 
2023-07-10 15:00:26,789 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.030)       0:00:42.394 ****** 
2023-07-10 15:00:26,818 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.028)       0:00:42.423 ****** 
2023-07-10 15:00:26,848 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.030)       0:00:42.454 ****** 
2023-07-10 15:00:26,884 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.035)       0:00:42.489 ****** 
2023-07-10 15:00:26,919 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.035)       0:00:42.524 ****** 
2023-07-10 15:00:26,961 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.041)       0:00:42.566 ****** 
2023-07-10 15:00:26,998 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:26 +0300 (0:00:00.037)       0:00:42.604 ****** 
2023-07-10 15:00:27,026 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.027)       0:00:42.631 ****** 
2023-07-10 15:00:27,058 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.031)       0:00:42.663 ****** 
2023-07-10 15:00:27,089 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.031)       0:00:42.695 ****** 
2023-07-10 15:00:27,119 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.029)       0:00:42.724 ****** 
2023-07-10 15:00:27,163 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.043)       0:00:42.768 ****** 
2023-07-10 15:00:27,193 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.030)       0:00:42.799 ****** 
2023-07-10 15:00:27,226 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.032)       0:00:42.832 ****** 
2023-07-10 15:00:27,256 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.030)       0:00:42.862 ****** 
2023-07-10 15:00:27,286 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.029)       0:00:42.891 ****** 
2023-07-10 15:00:27,316 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.029)       0:00:42.921 ****** 
2023-07-10 15:00:27,346 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.029)       0:00:42.951 ****** 
2023-07-10 15:00:27,375 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.029)       0:00:42.981 ****** 
2023-07-10 15:00:27,408 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.032)       0:00:43.014 ****** 
2023-07-10 15:00:27,440 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.031)       0:00:43.046 ****** 
2023-07-10 15:00:27,473 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.032)       0:00:43.078 ****** 
2023-07-10 15:00:27,503 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.030)       0:00:43.108 ****** 
2023-07-10 15:00:27,539 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.036)       0:00:43.144 ****** 
2023-07-10 15:00:27,571 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.031)       0:00:43.176 ****** 
2023-07-10 15:00:27,603 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.032)       0:00:43.208 ****** 
2023-07-10 15:00:27,635 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.032)       0:00:43.241 ****** 
2023-07-10 15:00:27,670 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.034)       0:00:43.275 ****** 
2023-07-10 15:00:27,700 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.030)       0:00:43.306 ****** 
2023-07-10 15:00:27,733 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.032)       0:00:43.338 ****** 
2023-07-10 15:00:27,775 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.042)       0:00:43.380 ****** 
2023-07-10 15:00:27,824 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.049)       0:00:43.430 ****** 
2023-07-10 15:00:27,873 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.048)       0:00:43.478 ****** 
2023-07-10 15:00:27,904 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.030)       0:00:43.509 ****** 
2023-07-10 15:00:27,933 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.029)       0:00:43.538 ****** 
2023-07-10 15:00:27,962 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:27 +0300 (0:00:00.028)       0:00:43.567 ****** 
2023-07-10 15:00:28,011 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.049)       0:00:43.617 ****** 
2023-07-10 15:00:28,042 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.030)       0:00:43.647 ****** 
2023-07-10 15:00:28,072 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.029)       0:00:43.677 ****** 
2023-07-10 15:00:28,126 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.054)       0:00:43.732 ****** 
2023-07-10 15:00:28,154 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.028)       0:00:43.760 ****** 
2023-07-10 15:00:28,183 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.028)       0:00:43.788 ****** 
2023-07-10 15:00:28,274 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.091)       0:00:43.880 ****** 
2023-07-10 15:00:28,303 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.029)       0:00:43.909 ****** 
2023-07-10 15:00:28,335 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.031)       0:00:43.941 ****** 
2023-07-10 15:00:28,380 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.044)       0:00:43.985 ****** 
2023-07-10 15:00:28,411 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.030)       0:00:44.016 ****** 
2023-07-10 15:00:28,443 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.032)       0:00:44.049 ****** 
2023-07-10 15:00:28,469 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.025)       0:00:44.075 ****** 
2023-07-10 15:00:28,501 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.031)       0:00:44.106 ****** 
2023-07-10 15:00:28,529 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.028)       0:00:44.134 ****** 
2023-07-10 15:00:28,568 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.039)       0:00:44.174 ****** 
2023-07-10 15:00:28,597 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.029)       0:00:44.203 ****** 
2023-07-10 15:00:28,626 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.028)       0:00:44.232 ****** 
2023-07-10 15:00:28,663 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.036)       0:00:44.269 ****** 
2023-07-10 15:00:28,832 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] *******************************************************************************************************
2023-07-10 15:00:28,832 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:28,843 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.179)       0:00:44.448 ****** 
2023-07-10 15:00:28,888 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | set is_ostree] ****************************************************************************************************************
2023-07-10 15:00:28,888 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:00:28,899 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:28 +0300 (0:00:00.056)       0:00:44.504 ****** 
2023-07-10 15:00:29,022 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | gather os specific variables] *************************************************************************************************
2023-07-10 15:00:29,022 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) => {"ansible_facts": {"containerd_repo_info": {"repos": ["deb {{ containerd_ubuntu_repo_base_url }} {{ ansible_distribution_release | lower }} {{ containerd_ubuntu_repo_component }}\n"]}}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml"}
2023-07-10 15:00:29,039 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:29 +0300 (0:00:00.140)       0:00:44.645 ****** 
2023-07-10 15:00:29,205 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | check if fedora coreos] *********************************************************************************************************************************
2023-07-10 15:00:29,205 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:00:29,216 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:29 +0300 (0:00:00.176)       0:00:44.821 ****** 
2023-07-10 15:00:29,263 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | set is_ostree] ******************************************************************************************************************************************
2023-07-10 15:00:29,264 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:00:29,274 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:29 +0300 (0:00:00.058)       0:00:44.879 ****** 
2023-07-10 15:00:29,803 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ******************************************************************************************************
2023-07-10 15:00:29,804 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:00:29,813 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:29 +0300 (0:00:00.539)       0:00:45.419 ****** 
2023-07-10 15:00:29,833 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Download runc binary] ***********************************************************************************************************************************
2023-07-10 15:00:29,854 p=11823 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:00:29,868 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:29 +0300 (0:00:00.054)       0:00:45.473 ****** 
2023-07-10 15:00:29,917 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : prep_download | Set a few facts] *******************************************************************************************************************************
2023-07-10 15:00:29,917 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:00:29,928 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:29 +0300 (0:00:00.059)       0:00:45.533 ****** 
2023-07-10 15:00:31,104 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Starting download of file] *********************************************************************************************************************
2023-07-10 15:00:31,105 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 15:00:31,119 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:31 +0300 (0:00:01.191)       0:00:46.725 ****** 
2023-07-10 15:00:32,556 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Set pathname of cached file] *******************************************************************************************************************
2023-07-10 15:00:32,557 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 15:00:32,574 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:32 +0300 (0:00:01.454)       0:00:48.179 ****** 
2023-07-10 15:00:35,182 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Create dest directory on node] *****************************************************************************************************************
2023-07-10 15:00:35,182 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:00:35,194 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:35 +0300 (0:00:02.619)       0:00:50.799 ****** 
2023-07-10 15:00:35,236 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:35 +0300 (0:00:00.041)       0:00:50.841 ****** 
2023-07-10 15:00:36,081 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:36 +0300 (0:00:00.845)       0:00:51.687 ****** 
2023-07-10 15:00:40,182 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Validate mirrors] ******************************************************************************************************************************
2023-07-10 15:00:40,182 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:00:40,187 p=11823 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:00:40,217 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:40 +0300 (0:00:04.135)       0:00:55.822 ****** 
2023-07-10 15:00:40,324 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Get the list of working mirrors] ***************************************************************************************************************
2023-07-10 15:00:40,325 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 15:00:40,353 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:40 +0300 (0:00:00.136)       0:00:55.959 ****** 
2023-07-10 15:00:49,877 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Download item] *********************************************************************************************************************************
2023-07-10 15:00:49,877 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:00:49,898 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:49 +0300 (0:00:09.544)       0:01:05.504 ****** 
2023-07-10 15:00:49,954 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:49 +0300 (0:00:00.056)       0:01:05.560 ****** 
2023-07-10 15:00:50,006 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:50 +0300 (0:00:00.051)       0:01:05.611 ****** 
2023-07-10 15:00:50,069 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:50 +0300 (0:00:00.062)       0:01:05.674 ****** 
2023-07-10 15:00:50,108 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Extract file archives] *************************************************************************************************************************
2023-07-10 15:00:50,128 p=11823 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:00:50,164 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:50 +0300 (0:00:00.095)       0:01:05.770 ****** 
2023-07-10 15:00:52,041 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:52 +0300 (0:00:01.876)       0:01:07.647 ****** 
2023-07-10 15:00:53,607 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : Copy runc binary from download dir] ****************************************************************************************************************************
2023-07-10 15:00:53,607 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c2a25f41774ecb90b4f51fb11ebb06337862e2b7", "dest": "/usr/local/bin/runc", "gid": 0, "group": "root", "md5sum": "0407860329c7f81077a17b574eccc75e", "mode": "0755", "owner": "root", "size": 9644288, "src": "/tmp/releases/runc-v1.1.7.amd64", "state": "file", "uid": 0}
2023-07-10 15:00:53,617 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:53 +0300 (0:00:01.576)       0:01:09.223 ****** 
2023-07-10 15:00:53,838 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Remove orphaned binary] *********************************************************************************************************************************
2023-07-10 15:00:53,838 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/usr/bin/runc", "state": "absent"}
2023-07-10 15:00:53,856 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:53 +0300 (0:00:00.238)       0:01:09.461 ****** 
2023-07-10 15:00:53,876 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : install crictl] **********************************************************************************************************************************************
2023-07-10 15:00:53,889 p=11823 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1
2023-07-10 15:00:53,901 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:53 +0300 (0:00:00.045)       0:01:09.507 ****** 
2023-07-10 15:00:53,925 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : crictl | Download crictl] ************************************************************************************************************************************
2023-07-10 15:00:53,950 p=11823 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:00:53,968 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:53 +0300 (0:00:00.066)       0:01:09.573 ****** 
2023-07-10 15:00:54,035 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : prep_download | Set a few facts] *****************************************************************************************************************************
2023-07-10 15:00:54,035 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:00:54,047 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:54 +0300 (0:00:00.078)       0:01:09.652 ****** 
2023-07-10 15:00:55,011 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Starting download of file] *******************************************************************************************************************
2023-07-10 15:00:55,012 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 15:00:55,022 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:55 +0300 (0:00:00.974)       0:01:10.627 ****** 
2023-07-10 15:00:55,940 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Set pathname of cached file] *****************************************************************************************************************
2023-07-10 15:00:55,941 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:00:55,950 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:55 +0300 (0:00:00.928)       0:01:11.556 ****** 
2023-07-10 15:00:57,912 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Create dest directory on node] ***************************************************************************************************************
2023-07-10 15:00:57,912 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:00:57,925 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:57 +0300 (0:00:01.974)       0:01:13.530 ****** 
2023-07-10 15:00:57,971 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:57 +0300 (0:00:00.046)       0:01:13.576 ****** 
2023-07-10 15:00:58,898 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:00:58 +0300 (0:00:00.927)       0:01:14.504 ****** 
2023-07-10 15:01:03,520 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Validate mirrors] ****************************************************************************************************************************
2023-07-10 15:01:03,521 p=11823 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:01:03,526 p=11823 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:01:03,566 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:03 +0300 (0:00:04.667)       0:01:19.171 ****** 
2023-07-10 15:01:03,696 p=11823 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Get the list of working mirrors] *************************************************************************************************************
2023-07-10 15:01:03,696 p=11823 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:01:03,735 p=11823 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:03 +0300 (0:00:00.168)       0:01:19.340 ****** 
2023-07-10 15:01:10,171 p=11823 u=kubernetmachine n=ansible |  [ERROR]: User interrupted execution

2023-07-10 15:01:42,234 p=13011 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 15:01:47,571 p=13011 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:01:47,573 p=13011 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************************************************************************************************************
2023-07-10 15:01:47,595 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:47 +0300 (0:00:00.024)       0:00:00.024 ****** 
2023-07-10 15:01:47,636 p=13011 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************************************************************************************************************
2023-07-10 15:01:47,636 p=13011 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:01:47,641 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:47 +0300 (0:00:00.046)       0:00:00.070 ****** 
2023-07-10 15:01:47,735 p=13011 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************************************************************************************************************
2023-07-10 15:01:47,737 p=13011 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:01:47,742 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:47 +0300 (0:00:00.100)       0:00:00.171 ****** 
2023-07-10 15:01:47,769 p=13011 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************************************************************************************************************
2023-07-10 15:01:47,771 p=13011 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:01:47,787 p=13011 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 15:01:47,788 p=13011 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************************************************************************************************************
2023-07-10 15:01:47,788 p=13011 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:01:47,788 p=13011 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 15:01:47,789 p=13011 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************************************************************************************************************
2023-07-10 15:01:47,789 p=13011 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:01:47,789 p=13011 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 15:01:47,790 p=13011 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************************************************************************************************************
2023-07-10 15:01:47,790 p=13011 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:01:47,791 p=13011 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 15:01:47,792 p=13011 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************************************************************************************************************
2023-07-10 15:01:47,792 p=13011 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:01:47,792 p=13011 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 15:01:47,793 p=13011 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************************************************************************************************************
2023-07-10 15:01:47,793 p=13011 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:01:47,795 p=13011 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 15:01:47,796 p=13011 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************************************************************************************************************
2023-07-10 15:01:47,796 p=13011 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:01:47,800 p=13011 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************************************************************************************************************
2023-07-10 15:01:47,876 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:47 +0300 (0:00:00.134)       0:00:00.305 ****** 
2023-07-10 15:01:47,937 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:47 +0300 (0:00:00.060)       0:00:00.366 ****** 
2023-07-10 15:01:47,984 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:47 +0300 (0:00:00.047)       0:00:00.413 ****** 
2023-07-10 15:01:48,073 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.088)       0:00:00.502 ****** 
2023-07-10 15:01:48,121 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.047)       0:00:00.550 ****** 
2023-07-10 15:01:48,170 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.049)       0:00:00.599 ****** 
2023-07-10 15:01:48,219 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.049)       0:00:00.649 ****** 
2023-07-10 15:01:48,272 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.052)       0:00:00.701 ****** 
2023-07-10 15:01:48,319 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.046)       0:00:00.748 ****** 
2023-07-10 15:01:48,366 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:48 +0300 (0:00:00.047)       0:00:00.796 ****** 
2023-07-10 15:01:49,986 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:49 +0300 (0:00:01.619)       0:00:02.415 ****** 
2023-07-10 15:01:50,036 p=13011 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:01:50,037 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:01:50,090 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.104)       0:00:02.520 ****** 
2023-07-10 15:01:50,124 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.033)       0:00:02.553 ****** 
2023-07-10 15:01:50,154 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.029)       0:00:02.583 ****** 
2023-07-10 15:01:50,186 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.031)       0:00:02.615 ****** 
2023-07-10 15:01:50,216 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.030)       0:00:02.645 ****** 
2023-07-10 15:01:50,243 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.026)       0:00:02.672 ****** 
2023-07-10 15:01:50,339 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.095)       0:00:02.768 ****** 
2023-07-10 15:01:50,375 p=13011 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:01:50,391 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************************************************************************************************************
2023-07-10 15:01:50,392 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"\r\nNAME=\"Ubuntu\"\r\nVERSION_ID=\"22.04\"\r\nVERSION=\"22.04.2 LTS (Jammy Jellyfish)\"\r\nVERSION_CODENAME=jammy\r\nID=ubuntu\r\nID_LIKE=debian\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nUBUNTU_CODENAME=jammy\r\n", "stdout_lines": ["PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"", "NAME=\"Ubuntu\"", "VERSION_ID=\"22.04\"", "VERSION=\"22.04.2 LTS (Jammy Jellyfish)\"", "VERSION_CODENAME=jammy", "ID=ubuntu", "ID_LIKE=debian", "HOME_URL=\"https://www.ubuntu.com/\"", "SUPPORT_URL=\"https://help.ubuntu.com/\"", "BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"", "PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"", "UBUNTU_CODENAME=jammy"]}
2023-07-10 15:01:50,404 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.065)       0:00:02.834 ****** 
2023-07-10 15:01:50,437 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.032)       0:00:02.866 ****** 
2023-07-10 15:01:50,468 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.030)       0:00:02.897 ****** 
2023-07-10 15:01:50,496 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.027)       0:00:02.925 ****** 
2023-07-10 15:01:50,526 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.029)       0:00:02.955 ****** 
2023-07-10 15:01:50,553 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.027)       0:00:02.982 ****** 
2023-07-10 15:01:50,584 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.030)       0:00:03.013 ****** 
2023-07-10 15:01:50,602 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : include_tasks] **********************************************************************************************************************************************************
2023-07-10 15:01:50,617 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1
2023-07-10 15:01:50,634 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.050)       0:00:03.063 ****** 
2023-07-10 15:01:50,673 p=13011 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:01:50,691 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check if bootstrap is needed] *******************************************************************************************************************************************
2023-07-10 15:01:50,691 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "/usr/bin/python3\r\n", "stdout_lines": ["/usr/bin/python3"]}
2023-07-10 15:01:50,701 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.067)       0:00:03.131 ****** 
2023-07-10 15:01:50,742 p=13011 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:01:50,764 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check http::proxy in apt configuration files] ***************************************************************************************************************************
2023-07-10 15:01:50,764 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 15:01:50,774 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.072)       0:00:03.204 ****** 
2023-07-10 15:01:50,812 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.037)       0:00:03.241 ****** 
2023-07-10 15:01:50,851 p=13011 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:01:50,869 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check https::proxy in apt configuration files] **************************************************************************************************************************
2023-07-10 15:01:50,870 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 15:01:50,881 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.069)       0:00:03.310 ****** 
2023-07-10 15:01:50,919 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.037)       0:00:03.348 ****** 
2023-07-10 15:01:50,948 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.028)       0:00:03.377 ****** 
2023-07-10 15:01:50,979 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:50 +0300 (0:00:00.031)       0:00:03.408 ****** 
2023-07-10 15:01:51,021 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Set the ansible_python_interpreter fact] ********************************************************************************************************************************
2023-07-10 15:01:51,022 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_python_interpreter": "/usr/bin/python3"}, "changed": false}
2023-07-10 15:01:51,033 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:51 +0300 (0:00:00.054)       0:00:03.462 ****** 
2023-07-10 15:01:51,902 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Install dbus for the hostname module] ***********************************************************************************************************************************
2023-07-10 15:01:51,903 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:01:51,912 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:51 +0300 (0:00:00.879)       0:00:04.342 ****** 
2023-07-10 15:01:51,940 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:51 +0300 (0:00:00.027)       0:00:04.369 ****** 
2023-07-10 15:01:51,970 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:51 +0300 (0:00:00.030)       0:00:04.399 ****** 
2023-07-10 15:01:52,280 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Create remote_tmp for it is used by another module] *********************************************************************************************************************
2023-07-10 15:01:52,280 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.ansible/tmp", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:01:52,290 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:52 +0300 (0:00:00.320)       0:00:04.720 ****** 
2023-07-10 15:01:52,931 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Gather host facts to get ansible_os_family] *****************************************************************************************************************************
2023-07-10 15:01:52,931 p=13011 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:01:52,942 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:52 +0300 (0:00:00.651)       0:00:05.372 ****** 
2023-07-10 15:01:53,624 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] *************************************************************
2023-07-10 15:01:53,625 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_domain": "linuxtechi.local", "ansible_fqdn": "node1.linuxtechi.local", "ansible_hostname": "node1", "ansible_nodename": "node1"}, "changed": false, "name": "node1"}
2023-07-10 15:01:53,634 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:53 +0300 (0:00:00.691)       0:00:06.063 ****** 
2023-07-10 15:01:53,661 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:53 +0300 (0:00:00.026)       0:00:06.090 ****** 
2023-07-10 15:01:53,689 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:53 +0300 (0:00:00.027)       0:00:06.118 ****** 
2023-07-10 15:01:53,720 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:53 +0300 (0:00:00.031)       0:00:06.149 ****** 
2023-07-10 15:01:53,957 p=13011 u=kubernetmachine n=ansible | TASK [bootstrap-os : Ensure bash_completion.d folder exists] *********************************************************************************************************************************
2023-07-10 15:01:53,957 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:01:54,001 p=13011 u=kubernetmachine n=ansible | PLAY [Gather facts] **************************************************************************************************************************************************************************
2023-07-10 15:01:54,029 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:54 +0300 (0:00:00.309)       0:00:06.459 ****** 
2023-07-10 15:01:54,381 p=13011 u=kubernetmachine n=ansible | TASK [Gather minimal facts] ******************************************************************************************************************************************************************
2023-07-10 15:01:54,382 p=13011 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:01:54,393 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:54 +0300 (0:00:00.363)       0:00:06.822 ****** 
2023-07-10 15:01:54,723 p=13011 u=kubernetmachine n=ansible | TASK [Gather necessary facts (network)] ******************************************************************************************************************************************************
2023-07-10 15:01:54,723 p=13011 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:01:54,733 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:54 +0300 (0:00:00.340)       0:00:07.163 ****** 
2023-07-10 15:01:55,412 p=13011 u=kubernetmachine n=ansible | TASK [Gather necessary facts (hardware)] *****************************************************************************************************************************************************
2023-07-10 15:01:55,412 p=13011 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:01:55,454 p=13011 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd] **********************************************************************************************************************************************************************
2023-07-10 15:01:55,690 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.956)       0:00:08.119 ****** 
2023-07-10 15:01:55,729 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.039)       0:00:08.159 ****** 
2023-07-10 15:01:55,767 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.038)       0:00:08.197 ****** 
2023-07-10 15:01:55,803 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.035)       0:00:08.232 ****** 
2023-07-10 15:01:55,838 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.035)       0:00:08.267 ****** 
2023-07-10 15:01:55,874 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.035)       0:00:08.303 ****** 
2023-07-10 15:01:55,909 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.035)       0:00:08.339 ****** 
2023-07-10 15:01:55,951 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.041)       0:00:08.381 ****** 
2023-07-10 15:01:55,986 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:55 +0300 (0:00:00.034)       0:00:08.415 ****** 
2023-07-10 15:01:56,023 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:56 +0300 (0:00:00.036)       0:00:08.452 ****** 
2023-07-10 15:01:58,571 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:58 +0300 (0:00:02.547)       0:00:11.000 ****** 
2023-07-10 15:01:58,637 p=13011 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:01:58,638 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:01:58,717 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:58 +0300 (0:00:00.146)       0:00:11.146 ****** 
2023-07-10 15:01:58,837 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:58 +0300 (0:00:00.119)       0:00:11.266 ****** 
2023-07-10 15:01:58,959 p=13011 u=kubernetmachine n=ansible | TASK [kubespray-defaults : create fallback_ips_base] *****************************************************************************************************************************************
2023-07-10 15:01:58,959 p=13011 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"fallback_ips_base": "---\nnode1: \"192.168.122.29\"\n"}, "changed": false}
2023-07-10 15:01:58,977 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:58 +0300 (0:00:00.140)       0:00:11.407 ****** 
2023-07-10 15:01:59,061 p=13011 u=kubernetmachine n=ansible | TASK [kubespray-defaults : set fallback_ips] *************************************************************************************************************************************************
2023-07-10 15:01:59,062 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"fallback_ips": {"node1": "192.168.122.29"}}, "changed": false}
2023-07-10 15:01:59,084 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:59 +0300 (0:00:00.106)       0:00:11.513 ****** 
2023-07-10 15:01:59,152 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:59 +0300 (0:00:00.067)       0:00:11.581 ****** 
2023-07-10 15:01:59,219 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:59 +0300 (0:00:00.066)       0:00:11.648 ****** 
2023-07-10 15:01:59,293 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:59 +0300 (0:00:00.074)       0:00:11.722 ****** 
2023-07-10 15:01:59,807 p=13011 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 15:01:59,812 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 15:01:59,829 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:01:59 +0300 (0:00:00.536)       0:00:12.258 ****** 
2023-07-10 15:02:00,481 p=13011 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 15:02:00,481 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 15:02:00,517 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:00 +0300 (0:00:00.687)       0:00:12.946 ****** 
2023-07-10 15:02:00,967 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *******************************************************************************************************************************
2023-07-10 15:02:00,967 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=swap) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "swap", "name": "swap", "opts": "defaults", "passno": "0"}
2023-07-10 15:02:01,114 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=none) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "none", "name": "none", "opts": "defaults", "passno": "0"}
2023-07-10 15:02:01,127 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.610)       0:00:13.556 ****** 
2023-07-10 15:02:01,436 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check swap] ****************************************************************************************************************************************************
2023-07-10 15:02:01,436 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/sbin/swapon", "-s"], "delta": "0:00:00.002276", "end": "2023-07-10 12:02:01.424215", "msg": "", "rc": 0, "start": "2023-07-10 12:02:01.421939", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:02:01,447 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.319)       0:00:13.876 ****** 
2023-07-10 15:02:01,480 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.032)       0:00:13.909 ****** 
2023-07-10 15:02:01,569 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.088)       0:00:13.998 ****** 
2023-07-10 15:02:01,599 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.030)       0:00:14.028 ****** 
2023-07-10 15:02:01,632 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.033)       0:00:14.062 ****** 
2023-07-10 15:02:01,662 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.029)       0:00:14.092 ****** 
2023-07-10 15:02:01,905 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************************************************************************************************************
2023-07-10 15:02:01,906 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:01,917 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:01 +0300 (0:00:00.254)       0:00:14.346 ****** 
2023-07-10 15:02:02,170 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:02:02,170 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 15:02:02,182 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:02 +0300 (0:00:00.264)       0:00:14.611 ****** 
2023-07-10 15:02:02,226 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:02:02,226 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 15:02:02,239 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:02 +0300 (0:00:00.057)       0:00:14.668 ****** 
2023-07-10 15:02:02,454 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************************************************************************************************************
2023-07-10 15:02:02,454 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.002699", "end": "2023-07-10 12:02:02.433558", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:02:02.430859", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:02:02,469 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:02 +0300 (0:00:00.230)       0:00:14.899 ****** 
2023-07-10 15:02:02,647 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************************************************************************************************************
2023-07-10 15:02:02,648 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 15:02:02,659 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:02 +0300 (0:00:00.189)       0:00:15.088 ****** 
2023-07-10 15:02:02,826 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************************************************************************************************************
2023-07-10 15:02:02,826 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:02:02,841 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:02 +0300 (0:00:00.181)       0:00:15.270 ****** 
2023-07-10 15:02:03,179 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************************************************************************************************************
2023-07-10 15:02:03,179 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 15:02:03,190 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:03 +0300 (0:00:00.349)       0:00:15.619 ****** 
2023-07-10 15:02:03,307 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************************************************************************************************************
2023-07-10 15:02:03,307 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 15:02:03,320 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:03 +0300 (0:00:00.130)       0:00:15.749 ****** 
2023-07-10 15:02:03,398 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********************************************************************************************************
2023-07-10 15:02:03,399 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:03,410 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:03 +0300 (0:00:00.090)       0:00:15.840 ****** 
2023-07-10 15:02:03,582 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************************************************************************************************************
2023-07-10 15:02:03,582 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.003842", "end": "2023-07-10 12:02:03.570545", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 12:02:03.566703", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:02:03,594 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:03 +0300 (0:00:00.183)       0:00:16.023 ****** 
2023-07-10 15:02:03,766 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************************************************************************************************************
2023-07-10 15:02:03,766 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.003610", "end": "2023-07-10 12:02:03.754457", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:02:03.750847", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 15:02:03,778 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:03 +0300 (0:00:00.184)       0:00:16.207 ****** 
2023-07-10 15:02:03,913 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******************************************************************************************************
2023-07-10 15:02:03,913 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 15:02:03,923 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:03 +0300 (0:00:00.145)       0:00:16.352 ****** 
2023-07-10 15:02:03,999 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************************************************************************************************************
2023-07-10 15:02:03,999 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 15:02:04,012 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.088)       0:00:16.441 ****** 
2023-07-10 15:02:04,179 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************************************************************************************************************
2023-07-10 15:02:04,179 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:04,191 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.179)       0:00:16.621 ****** 
2023-07-10 15:02:04,236 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************************************************************************************************************
2023-07-10 15:02:04,236 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": true}, "changed": false}
2023-07-10 15:02:04,248 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.056)       0:00:16.677 ****** 
2023-07-10 15:02:04,294 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************************************************************************************************************
2023-07-10 15:02:04,294 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 15:02:04,306 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.058)       0:00:16.735 ****** 
2023-07-10 15:02:04,336 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.030)       0:00:16.765 ****** 
2023-07-10 15:02:04,503 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************************************************************************************************************
2023-07-10 15:02:04,503 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:04,515 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.179)       0:00:16.945 ****** 
2023-07-10 15:02:04,547 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.031)       0:00:16.976 ****** 
2023-07-10 15:02:04,713 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************************************************************************************************************
2023-07-10 15:02:04,714 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990413.7360163, "block_size": 4096, "blocks": 8, "ctime": 1688989265.0324173, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 262558, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989265.0324173, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1935, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:02:04,725 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.178)       0:00:17.154 ****** 
2023-07-10 15:02:04,770 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********************************************************************************************************
2023-07-10 15:02:04,770 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 15:02:04,784 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.059)       0:00:17.213 ****** 
2023-07-10 15:02:04,822 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.037)       0:00:17.251 ****** 
2023-07-10 15:02:04,878 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************************************************************************************************************
2023-07-10 15:02:04,878 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 15:02:04,894 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:04 +0300 (0:00:00.071)       0:00:17.323 ****** 
2023-07-10 15:02:04,994 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************************************************************************************************************
2023-07-10 15:02:04,994 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 15:02:05,005 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.111)       0:00:17.435 ****** 
2023-07-10 15:02:05,095 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************************************************************************************************************
2023-07-10 15:02:05,095 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": []}, "changed": false}
2023-07-10 15:02:05,105 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.099)       0:00:17.535 ****** 
2023-07-10 15:02:05,136 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.030)       0:00:17.565 ****** 
2023-07-10 15:02:05,239 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ************************************************************************************************
2023-07-10 15:02:05,240 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "127.0.0.53", "supersede_nameserver": "supersede domain-name-servers ;"}, "changed": false}
2023-07-10 15:02:05,250 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.114)       0:00:17.680 ****** 
2023-07-10 15:02:05,343 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************************************************************************************************************
2023-07-10 15:02:05,343 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 15:02:05,356 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.105)       0:00:17.785 ****** 
2023-07-10 15:02:05,386 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.029)       0:00:17.815 ****** 
2023-07-10 15:02:05,567 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************************************************************************************************************
2023-07-10 15:02:05,567 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:02:05,580 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.194)       0:00:18.009 ****** 
2023-07-10 15:02:05,614 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.034)       0:00:18.044 ****** 
2023-07-10 15:02:05,686 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] *************************************************************************************************
2023-07-10 15:02:05,686 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
2023-07-10 15:02:05,713 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}
2023-07-10 15:02:05,730 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.115)       0:00:18.159 ****** 
2023-07-10 15:02:05,790 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] *************************************************************************************************************
2023-07-10 15:02:05,790 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:05,807 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.076)       0:00:18.236 ****** 
2023-07-10 15:02:05,865 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if non systemd OS type] ***********************************************************************************************************************************
2023-07-10 15:02:05,866 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:05,881 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.074)       0:00:18.311 ****** 
2023-07-10 15:02:05,949 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if the os does not support] *******************************************************************************************************************************
2023-07-10 15:02:05,949 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:05,965 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:05 +0300 (0:00:00.083)       0:00:18.394 ****** 
2023-07-10 15:02:06,026 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown network plugin] ********************************************************************************************************************************
2023-07-10 15:02:06,027 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,040 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.075)       0:00:18.470 ****** 
2023-07-10 15:02:06,094 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *********************************************************************************************************************
2023-07-10 15:02:06,095 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,108 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.067)       0:00:18.537 ****** 
2023-07-10 15:02:06,173 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***********************************************************************
2023-07-10 15:02:06,174 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,204 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,232 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,260 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'helm_enabled', 'value': True}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": true
    },
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,283 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,296 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.188)       0:00:18.725 ****** 
2023-07-10 15:02:06,357 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *****************************************************************************************************************************
2023-07-10 15:02:06,358 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,370 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.074)       0:00:18.799 ****** 
2023-07-10 15:02:06,417 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for masters] ***********************************************************************************************************************
2023-07-10 15:02:06,417 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,429 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.059)       0:00:18.859 ****** 
2023-07-10 15:02:06,476 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for nodes] *************************************************************************************************************************
2023-07-10 15:02:06,477 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,488 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.058)       0:00:18.917 ****** 
2023-07-10 15:02:06,529 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.041)       0:00:18.958 ****** 
2023-07-10 15:02:06,580 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if ip var does not match local ips] ***********************************************************************************************************************
2023-07-10 15:02:06,581 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:06,594 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:06 +0300 (0:00:00.064)       0:00:19.023 ****** 
2023-07-10 15:02:07,229 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure ping package] *******************************************************************************************************************************************
2023-07-10 15:02:07,229 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:02:07,240 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.646)       0:00:19.669 ****** 
2023-07-10 15:02:07,437 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *****************************************************************************************************************************
2023-07-10 15:02:07,437 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["ping", "-c1", "192.168.122.29"], "delta": "0:00:00.003145", "end": "2023-07-10 12:02:07.417604", "msg": "", "rc": 0, "start": "2023-07-10 12:02:07.414459", "stderr": "", "stderr_lines": [], "stdout": "PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.\n64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.017 ms\n\n--- 192.168.122.29 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 0.017/0.017/0.017/0.000 ms", "stdout_lines": ["PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.", "64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.017 ms", "", "--- 192.168.122.29 ping statistics ---", "1 packets transmitted, 1 received, 0% packet loss, time 0ms", "rtt min/avg/max/mdev = 0.017/0.017/0.017/0.000 ms"]}
2023-07-10 15:02:07,452 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.211)       0:00:19.881 ****** 
2023-07-10 15:02:07,511 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] *********************************************************************************************************
2023-07-10 15:02:07,512 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:07,527 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.075)       0:00:19.956 ****** 
2023-07-10 15:02:07,679 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.151)       0:00:20.108 ****** 
2023-07-10 15:02:07,736 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.056)       0:00:20.165 ****** 
2023-07-10 15:02:07,795 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if bad hostname] ******************************************************************************************************************************************
2023-07-10 15:02:07,796 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:07,808 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.072)       0:00:20.237 ****** 
2023-07-10 15:02:07,855 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.047)       0:00:20.284 ****** 
2023-07-10 15:02:07,953 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] **********************************************************************************************************
2023-07-10 15:02:07,954 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:07,970 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:07 +0300 (0:00:00.115)       0:00:20.399 ****** 
2023-07-10 15:02:08,053 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ****************************************************************************************************************
2023-07-10 15:02:08,054 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,065 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.095)       0:00:20.495 ****** 
2023-07-10 15:02:08,147 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] **************************************************************************************
2023-07-10 15:02:08,148 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,159 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.093)       0:00:20.588 ****** 
2023-07-10 15:02:08,189 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.029)       0:00:20.618 ****** 
2023-07-10 15:02:08,238 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown dns mode] **************************************************************************************************************************************
2023-07-10 15:02:08,239 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,250 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.061)       0:00:20.679 ****** 
2023-07-10 15:02:08,300 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *******************************************************************************************************************************
2023-07-10 15:02:08,300 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,312 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.062)       0:00:20.742 ****** 
2023-07-10 15:02:08,364 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown cert_management] *******************************************************************************************************************************
2023-07-10 15:02:08,364 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,377 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.064)       0:00:20.806 ****** 
2023-07-10 15:02:08,428 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *******************************************************************************************************************************
2023-07-10 15:02:08,429 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,441 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.063)       0:00:20.870 ****** 
2023-07-10 15:02:08,489 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***************************************************************************************************
2023-07-10 15:02:08,489 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,503 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.062)       0:00:20.932 ****** 
2023-07-10 15:02:08,550 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***************************************************************************************************
2023-07-10 15:02:08,550 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,563 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.060)       0:00:20.992 ****** 
2023-07-10 15:02:08,613 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] **************************************************************************
2023-07-10 15:02:08,613 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:08,625 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.062)       0:00:21.054 ****** 
2023-07-10 15:02:08,664 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.039)       0:00:21.093 ****** 
2023-07-10 15:02:08,705 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.041)       0:00:21.134 ****** 
2023-07-10 15:02:08,737 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.032)       0:00:21.167 ****** 
2023-07-10 15:02:08,775 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.037)       0:00:21.204 ****** 
2023-07-10 15:02:08,818 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.042)       0:00:21.247 ****** 
2023-07-10 15:02:08,938 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:08 +0300 (0:00:00.119)       0:00:21.367 ****** 
2023-07-10 15:02:08,990 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure minimum containerd version] *****************************************************************************************************************************
2023-07-10 15:02:08,991 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:09,004 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:09 +0300 (0:00:00.066)       0:00:21.433 ****** 
2023-07-10 15:02:09,047 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:09 +0300 (0:00:00.043)       0:00:21.476 ****** 
2023-07-10 15:02:09,080 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:09 +0300 (0:00:00.033)       0:00:21.509 ****** 
2023-07-10 15:02:09,122 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:09 +0300 (0:00:00.042)       0:00:21.551 ****** 
2023-07-10 15:02:09,312 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create kubernetes directories] *********************************************************************************************************************************
2023-07-10 15:02:09,313 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:09,464 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/manifests) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/manifests", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/manifests", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:09,622 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin/kubernetes-scripts) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin/kubernetes-scripts", "mode": "0755", "owner": "kube", "path": "/usr/local/bin/kubernetes-scripts", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:09,771 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "mode": "0755", "owner": "kube", "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:09,785 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:09 +0300 (0:00:00.662)       0:00:22.214 ****** 
2023-07-10 15:02:09,972 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create other directories of root owner] ************************************************************************************************************************
2023-07-10 15:02:09,972 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/ssl) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/ssl", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/ssl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:02:10,120 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin", "mode": "0755", "owner": "root", "path": "/usr/local/bin", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:02:10,133 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:10 +0300 (0:00:00.348)       0:00:22.562 ****** 
2023-07-10 15:02:10,306 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ************************************************************************************************************
2023-07-10 15:02:10,307 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990404.9480176, "block_size": 4096, "blocks": 0, "ctime": 1688989248.4084306, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 262564, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/kubernetes/ssl", "lnk_target": "/etc/kubernetes/ssl", "mode": "0777", "mtime": 1688989248.4084306, "nlink": 1, "path": "/etc/kubernetes/pki", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 19, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:02:10,317 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:10 +0300 (0:00:00.184)       0:00:22.747 ****** 
2023-07-10 15:02:10,351 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:10 +0300 (0:00:00.034)       0:00:22.781 ****** 
2023-07-10 15:02:10,543 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create cni directories] ****************************************************************************************************************************************
2023-07-10 15:02:10,543 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/cni/net.d) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/cni/net.d", "mode": "0755", "owner": "kube", "path": "/etc/cni/net.d", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:10,692 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/opt/cni/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/opt/cni/bin", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:10,706 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:10 +0300 (0:00:00.354)       0:00:23.135 ****** 
2023-07-10 15:02:10,896 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create calico cni directories] *********************************************************************************************************************************
2023-07-10 15:02:10,897 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/var/lib/calico) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/var/lib/calico", "mode": "0755", "owner": "kube", "path": "/var/lib/calico", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:02:10,910 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:10 +0300 (0:00:00.204)       0:00:23.339 ****** 
2023-07-10 15:02:10,969 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:10 +0300 (0:00:00.059)       0:00:23.399 ****** 
2023-07-10 15:02:11,003 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.033)       0:00:23.432 ****** 
2023-07-10 15:02:11,037 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.033)       0:00:23.466 ****** 
2023-07-10 15:02:11,109 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.071)       0:00:23.538 ****** 
2023-07-10 15:02:11,186 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.076)       0:00:23.615 ****** 
2023-07-10 15:02:11,217 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.031)       0:00:23.646 ****** 
2023-07-10 15:02:11,307 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.090)       0:00:23.736 ****** 
2023-07-10 15:02:11,758 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************************************************************************************************************
2023-07-10 15:02:11,758 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "b768c1a73df64294ab36e62a1f29e66a8ab15fd2", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/resolved.conf", "size": 114, "state": "file", "uid": 0}
2023-07-10 15:02:11,769 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.462)       0:00:24.199 ****** 
2023-07-10 15:02:11,802 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.031)       0:00:24.231 ****** 
2023-07-10 15:02:11,834 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.032)       0:00:24.264 ****** 
2023-07-10 15:02:11,867 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.032)       0:00:24.296 ****** 
2023-07-10 15:02:11,899 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.032)       0:00:24.328 ****** 
2023-07-10 15:02:11,934 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.034)       0:00:24.363 ****** 
2023-07-10 15:02:11,968 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.034)       0:00:24.397 ****** 
2023-07-10 15:02:12,001 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:11 +0300 (0:00:00.033)       0:00:24.431 ****** 
2023-07-10 15:02:12,032 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.030)       0:00:24.461 ****** 
2023-07-10 15:02:12,065 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.033)       0:00:24.494 ****** 
2023-07-10 15:02:12,098 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.033)       0:00:24.527 ****** 
2023-07-10 15:02:12,560 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update package management cache (APT)] *************************************************************************************************************************
2023-07-10 15:02:12,561 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:02:12,573 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.474)       0:00:25.002 ****** 
2023-07-10 15:02:12,605 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.032)       0:00:25.034 ****** 
2023-07-10 15:02:12,638 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.032)       0:00:25.067 ****** 
2023-07-10 15:02:12,669 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.031)       0:00:25.098 ****** 
2023-07-10 15:02:12,724 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] *****************************************************************************************
2023-07-10 15:02:12,725 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"common_required_pkgs": ["openssl", "curl", "rsync", "socat", "unzip", "e2fsprogs", "xfsprogs", "ebtables", "bash-completion", "tar", "ipvsadm", "ipset"]}, "changed": false}
2023-07-10 15:02:12,737 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:12 +0300 (0:00:00.067)       0:00:25.166 ****** 
2023-07-10 15:02:13,392 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Install packages requirements] *********************************************************************************************************************************
2023-07-10 15:02:13,392 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:02:13,404 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:13 +0300 (0:00:00.667)       0:00:25.833 ****** 
2023-07-10 15:02:13,434 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:13 +0300 (0:00:00.030)       0:00:25.864 ****** 
2023-07-10 15:02:13,466 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:13 +0300 (0:00:00.031)       0:00:25.895 ****** 
2023-07-10 15:02:13,499 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:13 +0300 (0:00:00.033)       0:00:25.928 ****** 
2023-07-10 15:02:13,586 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:13 +0300 (0:00:00.086)       0:00:26.015 ****** 
2023-07-10 15:02:13,826 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *******************************************************************************************************************
2023-07-10 15:02:13,827 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=ipv4-ip_forward.conf) => {"ansible_loop_var": "item", "changed": false, "item": "ipv4-ip_forward.conf", "path": "/etc/sysctl.d/ipv4-ip_forward.conf", "state": "absent"}
2023-07-10 15:02:14,101 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=bridge-nf-call.conf) => {"ansible_loop_var": "item", "changed": false, "item": "bridge-nf-call.conf", "path": "/etc/sysctl.d/bridge-nf-call.conf", "state": "absent"}
2023-07-10 15:02:14,125 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:14 +0300 (0:00:00.538)       0:00:26.554 ****** 
2023-07-10 15:02:14,411 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stat sysctl file configuration] ********************************************************************************************************************************
2023-07-10 15:02:14,411 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975452.148, "block_size": 4096, "blocks": 0, "ctime": 1688975046.4383185, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 161054, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/sysctl.conf", "lnk_target": "../sysctl.conf", "mode": "0777", "mtime": 1677761882.0, "nlink": 1, "path": "/etc/sysctl.d/99-sysctl.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 14, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:02:14,429 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:14 +0300 (0:00:00.304)       0:00:26.858 ****** 
2023-07-10 15:02:14,514 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] **************************************************************************************************************
2023-07-10 15:02:14,515 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sysctl_file_path": "/etc/sysctl.conf"}, "changed": false}
2023-07-10 15:02:14,536 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:14 +0300 (0:00:00.106)       0:00:26.965 ****** 
2023-07-10 15:02:14,826 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] **********************************************************************************************************************
2023-07-10 15:02:14,826 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:02:14,845 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:14 +0300 (0:00:00.309)       0:00:27.274 ****** 
2023-07-10 15:02:15,372 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Enable ip forwarding] ******************************************************************************************************************************************
2023-07-10 15:02:15,373 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:02:15,392 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:15 +0300 (0:00:00.546)       0:00:27.821 ****** 
2023-07-10 15:02:15,442 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:15 +0300 (0:00:00.049)       0:00:27.871 ****** 
2023-07-10 15:02:15,720 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ******************************************************************************************************************
2023-07-10 15:02:15,720 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:15,737 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:15 +0300 (0:00:00.295)       0:00:28.167 ****** 
2023-07-10 15:02:15,794 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:15 +0300 (0:00:00.056)       0:00:28.223 ****** 
2023-07-10 15:02:16,098 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] **************************************************************************************************************************
2023-07-10 15:02:16,099 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxbytes", "value": 25000000}}
2023-07-10 15:02:16,384 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxkeys", "value": 1000000}}
2023-07-10 15:02:16,687 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic', 'value': 10}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic", "value": 10}}
2023-07-10 15:02:16,944 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic_on_oops", "value": 1}}
2023-07-10 15:02:17,240 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.overcommit_memory", "value": 1}}
2023-07-10 15:02:17,490 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.panic_on_oom", "value": 0}}
2023-07-10 15:02:17,513 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:17 +0300 (0:00:01.718)       0:00:29.942 ****** 
2023-07-10 15:02:18,033 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check dummy module] ********************************************************************************************************************************************
2023-07-10 15:02:18,033 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": "dummy", "params": "numdummies=0", "state": "present"}
2023-07-10 15:02:18,046 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.533)       0:00:30.476 ****** 
2023-07-10 15:02:18,078 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.031)       0:00:30.507 ****** 
2023-07-10 15:02:18,613 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Disable fapolicyd service] *************************************************************************************************************************************
2023-07-10 15:02:18,614 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "Could not find the requested service fapolicyd: host"}
2023-07-10 15:02:18,625 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.546)       0:00:31.054 ****** 
2023-07-10 15:02:18,655 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.030)       0:00:31.085 ****** 
2023-07-10 15:02:18,688 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.032)       0:00:31.117 ****** 
2023-07-10 15:02:18,719 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.030)       0:00:31.148 ****** 
2023-07-10 15:02:18,808 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.089)       0:00:31.237 ****** 
2023-07-10 15:02:18,840 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.032)       0:00:31.270 ****** 
2023-07-10 15:02:18,879 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.038)       0:00:31.308 ****** 
2023-07-10 15:02:18,911 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.032)       0:00:31.340 ****** 
2023-07-10 15:02:18,944 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.032)       0:00:31.373 ****** 
2023-07-10 15:02:18,981 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:18 +0300 (0:00:00.037)       0:00:31.410 ****** 
2023-07-10 15:02:19,091 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************************************************************************************************************
2023-07-10 15:02:19,091 p=13011 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 15:02:19,103 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:19 +0300 (0:00:00.122)       0:00:31.532 ****** 
2023-07-10 15:02:19,345 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************************************************************************************************************
2023-07-10 15:02:19,345 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:02:19,356 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:19 +0300 (0:00:00.253)       0:00:31.785 ****** 
2023-07-10 15:02:19,396 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:19 +0300 (0:00:00.039)       0:00:31.825 ****** 
2023-07-10 15:02:19,569 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************************************************************************************************************
2023-07-10 15:02:19,570 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4KMTI3LjAuMS4xIGt1YmVybmV0bWFjaGluZXR3bwoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sgbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluCmZlMDA6OjAgaXA2LWxvY2FsbmV0CmZmMDA6OjAgaXA2LW1jYXN0cHJlZml4CmZmMDI6OjEgaXA2LWFsbG5vZGVzCmZmMDI6OjIgaXA2LWFsbHJvdXRlcnMKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxOTIuMTY4LjEyMi4yOSBub2RlMS5saW51eHRlY2hpLmxvY2FsIG5vZGUxIAojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 15:02:19,580 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:19 +0300 (0:00:00.184)       0:00:32.010 ****** 
2023-07-10 15:02:19,659 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ************************************************************************************************
2023-07-10 15:02:19,660 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost localhost.localdomain"}
2023-07-10 15:02:19,739 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain"}
2023-07-10 15:02:19,830 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:19 +0300 (0:00:00.249)       0:00:32.259 ****** 
2023-07-10 15:02:19,903 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *******************************************************************************************
2023-07-10 15:02:19,904 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:02:19,941 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:02:19,958 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:19 +0300 (0:00:00.127)       0:00:32.387 ****** 
2023-07-10 15:02:20,155 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************************************************************************************************************
2023-07-10 15:02:20,156 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": ""}
2023-07-10 15:02:20,309 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": ""}
2023-07-10 15:02:20,323 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:20 +0300 (0:00:00.365)       0:00:32.752 ****** 
2023-07-10 15:02:20,654 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update facts] **************************************************************************************************************************************************
2023-07-10 15:02:20,654 p=13011 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:02:20,665 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:20 +0300 (0:00:00.342)       0:00:33.094 ****** 
2023-07-10 15:02:20,841 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****************************************************************************************************
2023-07-10 15:02:20,841 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:02:20,852 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:20 +0300 (0:00:00.187)       0:00:33.282 ****** 
2023-07-10 15:02:21,201 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************************************************************************************************************
2023-07-10 15:02:21,202 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "size": 456, "state": "file", "uid": 0}
2023-07-10 15:02:21,213 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.360)       0:00:33.642 ****** 
2023-07-10 15:02:21,317 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.104)       0:00:33.747 ****** 
2023-07-10 15:02:21,348 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.030)       0:00:33.777 ****** 
2023-07-10 15:02:21,382 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.034)       0:00:33.811 ****** 
2023-07-10 15:02:21,403 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.020)       0:00:33.832 ****** 
2023-07-10 15:02:21,571 p=13011 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *********************************************************************************************************************
2023-07-10 15:02:21,572 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:21,583 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.180)       0:00:34.012 ****** 
2023-07-10 15:02:21,617 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.034)       0:00:34.046 ****** 
2023-07-10 15:02:21,652 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.034)       0:00:34.081 ****** 
2023-07-10 15:02:21,684 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.031)       0:00:34.113 ****** 
2023-07-10 15:02:21,715 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.031)       0:00:34.144 ****** 
2023-07-10 15:02:21,748 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.032)       0:00:34.177 ****** 
2023-07-10 15:02:21,779 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.031)       0:00:34.208 ****** 
2023-07-10 15:02:21,811 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.032)       0:00:34.241 ****** 
2023-07-10 15:02:21,831 p=13011 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************************************************************************************************************
2023-07-10 15:02:21,985 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:21 +0300 (0:00:00.174)       0:00:34.415 ****** 
2023-07-10 15:02:22,037 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****************************************************************************************************
2023-07-10 15:02:22,037 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:22,063 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.077)       0:00:34.492 ****** 
2023-07-10 15:02:22,111 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***********************************************************************************************
2023-07-10 15:02:22,112 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:22,133 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.070)       0:00:34.562 ****** 
2023-07-10 15:02:22,181 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] **************************************************************************
2023-07-10 15:02:22,181 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:22,264 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.131)       0:00:34.693 ****** 
2023-07-10 15:02:22,316 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.051)       0:00:34.745 ****** 
2023-07-10 15:02:22,364 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************************************************************************************************************
2023-07-10 15:02:22,365 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:22,387 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.070)       0:00:34.816 ****** 
2023-07-10 15:02:22,555 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************************************************************************************************************
2023-07-10 15:02:22,555 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:22,576 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.188)       0:00:35.005 ****** 
2023-07-10 15:02:22,618 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.041)       0:00:35.047 ****** 
2023-07-10 15:02:22,660 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.041)       0:00:35.088 ****** 
2023-07-10 15:02:22,703 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.044)       0:00:35.133 ****** 
2023-07-10 15:02:22,754 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.051)       0:00:35.184 ****** 
2023-07-10 15:02:22,796 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.041)       0:00:35.225 ****** 
2023-07-10 15:02:22,846 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************************************************************************************************************
2023-07-10 15:02:22,846 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:22,867 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.071)       0:00:35.297 ****** 
2023-07-10 15:02:22,911 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************************************************************************************************************
2023-07-10 15:02:22,912 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:22,934 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:22 +0300 (0:00:00.066)       0:00:35.363 ****** 
2023-07-10 15:02:22,980 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************************************************************************************************************
2023-07-10 15:02:22,981 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:23,075 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.141)       0:00:35.504 ****** 
2023-07-10 15:02:23,121 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.045)       0:00:35.550 ****** 
2023-07-10 15:02:23,171 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********************************************************************************************************
2023-07-10 15:02:23,171 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:02:23,194 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.072)       0:00:35.623 ****** 
2023-07-10 15:02:23,365 p=13011 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************************************************************************************************************
2023-07-10 15:02:23,365 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ipPool default-pool -o json", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/calicoctl.sh'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:02:23,386 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.192)       0:00:35.816 ****** 
2023-07-10 15:02:23,426 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.040)       0:00:35.856 ****** 
2023-07-10 15:02:23,476 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.049)       0:00:35.905 ****** 
2023-07-10 15:02:23,517 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.041)       0:00:35.946 ****** 
2023-07-10 15:02:23,558 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.040)       0:00:35.987 ****** 
2023-07-10 15:02:23,608 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.050)       0:00:36.037 ****** 
2023-07-10 15:02:23,777 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***************************************************************************************
2023-07-10 15:02:23,777 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:23,788 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.179)       0:00:36.217 ****** 
2023-07-10 15:02:23,832 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ************************************************************************************************
2023-07-10 15:02:23,833 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:02:23,846 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:23 +0300 (0:00:00.058)       0:00:36.275 ****** 
2023-07-10 15:02:24,011 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] *******************************************************************************************************
2023-07-10 15:02:24,011 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:24,023 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:24 +0300 (0:00:00.176)       0:00:36.452 ****** 
2023-07-10 15:02:25,937 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Populate service facts] *******************************************************************************************************************
2023-07-10 15:02:25,941 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"services": {"ModemManager.service": {"name": "ModemManager.service", "source": "systemd", "state": "running", "status": "enabled"}, "NetworkManager.service": {"name": "NetworkManager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "apparmor": {"name": "apparmor", "source": "sysv", "state": "running"}, "apparmor.service": {"name": "apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "apport": {"name": "apport", "source": "sysv", "state": "running"}, "apport-autoreport.service": {"name": "apport-autoreport.service", "source": "systemd", "state": "stopped", "status": "static"}, "apport-forward@.service": {"name": "apport-forward@.service", "source": "systemd", "state": "unknown", "status": "static"}, "apport.service": {"name": "apport.service", "source": "systemd", "state": "stopped", "status": "generated"}, "apt-daily-upgrade.service": {"name": "apt-daily-upgrade.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-daily.service": {"name": "apt-daily.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-news.service": {"name": "apt-news.service", "source": "systemd", "state": "inactive", "status": "static"}, "auditd.service": {"name": "auditd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autovt@.service": {"name": "autovt@.service", "source": "systemd", "state": "unknown", "status": "alias"}, "blk-availability.service": {"name": "blk-availability.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "bolt.service": {"name": "bolt.service", "source": "systemd", "state": "inactive", "status": "static"}, "cloud-config.service": {"name": "cloud-config.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-final.service": {"name": "cloud-final.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init-hotplugd.service": {"name": "cloud-init-hotplugd.service", "source": "systemd", "state": "stopped", "status": "static"}, "cloud-init-local.service": {"name": "cloud-init-local.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init.service": {"name": "cloud-init.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "connman.service": {"name": "connman.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-getty.service": {"name": "console-getty.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "console-screen.service": {"name": "console-screen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-setup.service": {"name": "console-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "console-setup.sh": {"name": "console-setup.sh", "source": "sysv", "state": "stopped"}, "container-getty@.service": {"name": "container-getty@.service", "source": "systemd", "state": "unknown", "status": "static"}, "containerd.service": {"name": "containerd.service", "source": "systemd", "state": "running", "status": "enabled"}, "cron": {"name": "cron", "source": "sysv", "state": "running"}, "cron.service": {"name": "cron.service", "source": "systemd", "state": "running", "status": "enabled"}, "cryptdisks": {"name": "cryptdisks", "source": "sysv", "state": "stopped"}, "cryptdisks-early": {"name": "cryptdisks-early", "source": "sysv", "state": "stopped"}, "cryptdisks-early.service": {"name": "cryptdisks-early.service", "source": "systemd", "state": "inactive", "status": "masked"}, "cryptdisks.service": {"name": "cryptdisks.service", "source": "systemd", "state": "inactive", "status": "masked"}, "dbus": {"name": "dbus", "source": "sysv", "state": "running"}, "dbus-org.freedesktop.ModemManager1.service": {"name": "dbus-org.freedesktop.ModemManager1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.hostname1.service": {"name": "dbus-org.freedesktop.hostname1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.locale1.service": {"name": "dbus-org.freedesktop.locale1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.login1.service": {"name": "dbus-org.freedesktop.login1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.resolve1.service": {"name": "dbus-org.freedesktop.resolve1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.thermald.service": {"name": "dbus-org.freedesktop.thermald.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timedate1.service": {"name": "dbus-org.freedesktop.timedate1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timesync1.service": {"name": "dbus-org.freedesktop.timesync1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus.service": {"name": "dbus.service", "source": "systemd", "state": "running", "status": "static"}, "debug-shell.service": {"name": "debug-shell.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "display-manager.service": {"name": "display-manager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "dm-event.service": {"name": "dm-event.service", "source": "systemd", "state": "stopped", "status": "static"}, "dmesg.service": {"name": "dmesg.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "dpkg-db-backup.service": {"name": "dpkg-db-backup.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub@.service": {"name": "e2scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_all.service": {"name": "e2scrub_all.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub_fail@.service": {"name": "e2scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_reap.service": {"name": "e2scrub_reap.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "emergency.service": {"name": "emergency.service", "source": "systemd", "state": "stopped", "status": "static"}, "esm-cache.service": {"name": "esm-cache.service", "source": "systemd", "state": "inactive", "status": "static"}, "fcoe.service": {"name": "fcoe.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "finalrd.service": {"name": "finalrd.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "friendly-recovery.service": {"name": "friendly-recovery.service", "source": "systemd", "state": "inactive", "status": "static"}, "fstrim.service": {"name": "fstrim.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd-offline-update.service": {"name": "fwupd-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-refresh.service": {"name": "fwupd-refresh.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd.service": {"name": "fwupd.service", "source": "systemd", "state": "inactive", "status": "static"}, "getty-static.service": {"name": "getty-static.service", "source": "systemd", "state": "stopped", "status": "static"}, "getty@.service": {"name": "getty@.service", "source": "systemd", "state": "unknown", "status": "enabled"}, "getty@tty1.service": {"name": "getty@tty1.service", "source": "systemd", "state": "running", "status": "active"}, "gpu-manager.service": {"name": "gpu-manager.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "grub-common": {"name": "grub-common", "source": "sysv", "state": "stopped"}, "grub-common.service": {"name": "grub-common.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "grub-initrd-fallback.service": {"name": "grub-initrd-fallback.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "hv_kvp_daemon.service": {"name": "hv_kvp_daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "hwclock.service": {"name": "hwclock.service", "source": "systemd", "state": "inactive", "status": "masked"}, "hwclock.sh": {"name": "hwclock.sh", "source": "sysv", "state": "stopped"}, "initrd-cleanup.service": {"name": "initrd-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-parse-etc.service": {"name": "initrd-parse-etc.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-switch-root.service": {"name": "initrd-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-udevadm-cleanup-db.service": {"name": "initrd-udevadm-cleanup-db.service", "source": "systemd", "state": "inactive", "status": "static"}, "ipvsadm": {"name": "ipvsadm", "source": "sysv", "state": "running"}, "ipvsadm.service": {"name": "ipvsadm.service", "source": "systemd", "state": "stopped", "status": "generated"}, "irqbalance": {"name": "irqbalance", "source": "sysv", "state": "running"}, "irqbalance.service": {"name": "irqbalance.service", "source": "systemd", "state": "running", "status": "enabled"}, "iscsi-shutdown.service": {"name": "iscsi-shutdown.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "iscsi.service": {"name": "iscsi.service", "source": "systemd", "state": "inactive", "status": "alias"}, "iscsid": {"name": "iscsid", "source": "sysv", "state": "stopped"}, "iscsid.service": {"name": "iscsid.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "kbd.service": {"name": "kbd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "keyboard-setup.service": {"name": "keyboard-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "keyboard-setup.sh": {"name": "keyboard-setup.sh", "source": "sysv", "state": "stopped"}, "kmod": {"name": "kmod", "source": "sysv", "state": "running"}, "kmod-static-nodes.service": {"name": "kmod-static-nodes.service", "source": "systemd", "state": "stopped", "status": "static"}, "kmod.service": {"name": "kmod.service", "source": "systemd", "state": "active", "status": "alias"}, "loaded": {"name": "loaded", "source": "systemd", "state": "stopped", "status": "failed"}, "logrotate.service": {"name": "logrotate.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2": {"name": "lvm2", "source": "sysv", "state": "stopped"}, "lvm2-activation-early.service": {"name": "lvm2-activation-early.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-activation.service": {"name": "lvm2-activation.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-lvmpolld": {"name": "lvm2-lvmpolld", "source": "sysv", "state": "stopped"}, "lvm2-lvmpolld.service": {"name": "lvm2-lvmpolld.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2-monitor.service": {"name": "lvm2-monitor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "lvm2-pvscan@.service": {"name": "lvm2-pvscan@.service", "source": "systemd", "state": "unknown", "status": "static"}, "lvm2-pvscan@252:3.service": {"name": "lvm2-pvscan@252:3.service", "source": "systemd", "state": "stopped", "status": "active"}, "lvm2.service": {"name": "lvm2.service", "source": "systemd", "state": "inactive", "status": "masked"}, "lxd-agent.service": {"name": "lxd-agent.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "man-db.service": {"name": "man-db.service", "source": "systemd", "state": "stopped", "status": "static"}, "mdadm-grow-continue@.service": {"name": "mdadm-grow-continue@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdadm-last-resort@.service": {"name": "mdadm-last-resort@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdcheck_continue.service": {"name": "mdcheck_continue.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdcheck_start.service": {"name": "mdcheck_start.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmon@.service": {"name": "mdmon@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdmonitor-oneshot.service": {"name": "mdmonitor-oneshot.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmonitor.service": {"name": "mdmonitor.service", "source": "systemd", "state": "inactive", "status": "static"}, "modprobe@.service": {"name": "modprobe@.service", "source": "systemd", "state": "unknown", "status": "static"}, "modprobe@chromeos_pstore.service": {"name": "modprobe@chromeos_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@configfs.service": {"name": "modprobe@configfs.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@drm.service": {"name": "modprobe@drm.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@efi_pstore.service": {"name": "modprobe@efi_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@fuse.service": {"name": "modprobe@fuse.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_blk.service": {"name": "modprobe@pstore_blk.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_zone.service": {"name": "modprobe@pstore_zone.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@ramoops.service": {"name": "modprobe@ramoops.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "motd-news.service": {"name": "motd-news.service", "source": "systemd", "state": "stopped", "status": "static"}, "multipath-tools": {"name": "multipath-tools", "source": "sysv", "state": "running"}, "multipath-tools-boot.service": {"name": "multipath-tools-boot.service", "source": "systemd", "state": "inactive", "status": "masked"}, "multipath-tools.service": {"name": "multipath-tools.service", "source": "systemd", "state": "active", "status": "alias"}, "multipathd.service": {"name": "multipathd.service", "source": "systemd", "state": "running", "status": "enabled"}, "netplan-ovs-cleanup.service": {"name": "netplan-ovs-cleanup.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "networkd-dispatcher.service": {"name": "networkd-dispatcher.service", "source": "systemd", "state": "running", "status": "enabled"}, "networking.service": {"name": "networking.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "nftables.service": {"name": "nftables.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "open-iscsi": {"name": "open-iscsi", "source": "sysv", "state": "stopped"}, "open-iscsi.service": {"name": "open-iscsi.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "open-vm-tools": {"name": "open-vm-tools", "source": "sysv", "state": "stopped"}, "open-vm-tools.service": {"name": "open-vm-tools.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ovsdb-server.service": {"name": "ovsdb-server.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "packagekit-offline-update.service": {"name": "packagekit-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "packagekit.service": {"name": "packagekit.service", "source": "systemd", "state": "running", "status": "static"}, "plymouth": {"name": "plymouth", "source": "sysv", "state": "running"}, "plymouth-halt.service": {"name": "plymouth-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-kexec.service": {"name": "plymouth-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-log": {"name": "plymouth-log", "source": "sysv", "state": "running"}, "plymouth-log.service": {"name": "plymouth-log.service", "source": "systemd", "state": "active", "status": "alias"}, "plymouth-poweroff.service": {"name": "plymouth-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-quit-wait.service": {"name": "plymouth-quit-wait.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-quit.service": {"name": "plymouth-quit.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-read-write.service": {"name": "plymouth-read-write.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-reboot.service": {"name": "plymouth-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-start.service": {"name": "plymouth-start.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-switch-root-initramfs.service": {"name": "plymouth-switch-root-initramfs.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-switch-root.service": {"name": "plymouth-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth.service": {"name": "plymouth.service", "source": "systemd", "state": "active", "status": "alias"}, "polkit.service": {"name": "polkit.service", "source": "systemd", "state": "running", "status": "static"}, "pollinate.service": {"name": "pollinate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "procps": {"name": "procps", "source": "sysv", "state": "running"}, "procps.service": {"name": "procps.service", "source": "systemd", "state": "active", "status": "alias"}, "quotaon.service": {"name": "quotaon.service", "source": "systemd", "state": "inactive", "status": "static"}, "rbdmap.service": {"name": "rbdmap.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "rc-local.service": {"name": "rc-local.service", "source": "systemd", "state": "stopped", "status": "static"}, "rc.service": {"name": "rc.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rcS.service": {"name": "rcS.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rescue.service": {"name": "rescue.service", "source": "systemd", "state": "stopped", "status": "static"}, "rsync": {"name": "rsync", "source": "sysv", "state": "stopped"}, "rsync.service": {"name": "rsync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rsyslog.service": {"name": "rsyslog.service", "source": "systemd", "state": "running", "status": "enabled"}, "screen-cleanup": {"name": "screen-cleanup", "source": "sysv", "state": "stopped"}, "screen-cleanup.service": {"name": "screen-cleanup.service", "source": "systemd", "state": "inactive", "status": "masked"}, "secureboot-db.service": {"name": "secureboot-db.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "serial-getty@.service": {"name": "serial-getty@.service", "source": "systemd", "state": "unknown", "status": "disabled"}, "setvtrgb.service": {"name": "setvtrgb.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.activate.service": {"name": "snap.lxd.activate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.daemon.service": {"name": "snap.lxd.daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snap.lxd.user-daemon.service": {"name": "snap.lxd.user-daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.aa-prompt-listener.service": {"name": "snapd.aa-prompt-listener.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.apparmor.service": {"name": "snapd.apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.autoimport.service": {"name": "snapd.autoimport.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.core-fixup.service": {"name": "snapd.core-fixup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.failure.service": {"name": "snapd.failure.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.recovery-chooser-trigger.service": {"name": "snapd.recovery-chooser-trigger.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.seeded.service": {"name": "snapd.seeded.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.service": {"name": "snapd.service", "source": "systemd", "state": "running", "status": "enabled"}, "snapd.snap-repair.service": {"name": "snapd.snap-repair.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.system-shutdown.service": {"name": "snapd.system-shutdown.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "ssh": {"name": "ssh", "source": "sysv", "state": "running"}, "ssh.service": {"name": "ssh.service", "source": "systemd", "state": "running", "status": "enabled"}, "ssh@.service": {"name": "ssh@.service", "source": "systemd", "state": "unknown", "status": "static"}, "sshd-keygen.service": {"name": "sshd-keygen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd.service": {"name": "sshd.service", "source": "systemd", "state": "active", "status": "alias"}, "sudo.service": {"name": "sudo.service", "source": "systemd", "state": "inactive", "status": "masked"}, "syslog.service": {"name": "syslog.service", "source": "systemd", "state": "active", "status": "alias"}, "system-update-cleanup.service": {"name": "system-update-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-ask-password-console.service": {"name": "systemd-ask-password-console.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-plymouth.service": {"name": "systemd-ask-password-plymouth.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-wall.service": {"name": "systemd-ask-password-wall.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-backlight@.service": {"name": "systemd-backlight@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-binfmt.service": {"name": "systemd-binfmt.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-bless-boot.service": {"name": "systemd-bless-boot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-boot-check-no-failures.service": {"name": "systemd-boot-check-no-failures.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-boot-system-token.service": {"name": "systemd-boot-system-token.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-exit.service": {"name": "systemd-exit.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-fsck-root.service": {"name": "systemd-fsck-root.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-fsck@.service": {"name": "systemd-fsck@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service": {"name": "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-fsckd.service": {"name": "systemd-fsckd.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-halt.service": {"name": "systemd-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hibernate-resume@.service": {"name": "systemd-hibernate-resume@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-hibernate.service": {"name": "systemd-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hostnamed.service": {"name": "systemd-hostnamed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hwdb-update.service": {"name": "systemd-hwdb-update.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-hybrid-sleep.service": {"name": "systemd-hybrid-sleep.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-initctl.service": {"name": "systemd-initctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-flush.service": {"name": "systemd-journal-flush.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journald.service": {"name": "systemd-journald.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-journald@.service": {"name": "systemd-journald@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-kexec.service": {"name": "systemd-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-localed.service": {"name": "systemd-localed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-logind.service": {"name": "systemd-logind.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-machine-id-commit.service": {"name": "systemd-machine-id-commit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-modules-load.service": {"name": "systemd-modules-load.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-network-generator.service": {"name": "systemd-network-generator.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-networkd-wait-online.service": {"name": "systemd-networkd-wait-online.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-networkd.service": {"name": "systemd-networkd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-poweroff.service": {"name": "systemd-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pstore.service": {"name": "systemd-pstore.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-quotacheck.service": {"name": "systemd-quotacheck.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-random-seed.service": {"name": "systemd-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-reboot.service": {"name": "systemd-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-remount-fs.service": {"name": "systemd-remount-fs.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-resolved.service": {"name": "systemd-resolved.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-rfkill.service": {"name": "systemd-rfkill.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-suspend-then-hibernate.service": {"name": "systemd-suspend-then-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-suspend.service": {"name": "systemd-suspend.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-sysctl.service": {"name": "systemd-sysctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-sysext.service": {"name": "systemd-sysext.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-sysusers.service": {"name": "systemd-sysusers.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-time-wait-sync.service": {"name": "systemd-time-wait-sync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-timedated.service": {"name": "systemd-timedated.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-timesyncd.service": {"name": "systemd-timesyncd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-tmpfiles-clean.service": {"name": "systemd-tmpfiles-clean.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup-dev.service": {"name": "systemd-tmpfiles-setup-dev.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup.service": {"name": "systemd-tmpfiles-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udev-settle.service": {"name": "systemd-udev-settle.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-udev-trigger.service": {"name": "systemd-udev-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udevd.service": {"name": "systemd-udevd.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-update-done.service": {"name": "systemd-update-done.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-update-utmp-runlevel.service": {"name": "systemd-update-utmp-runlevel.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp.service": {"name": "systemd-update-utmp.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-user-sessions.service": {"name": "systemd-user-sessions.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-vconsole-setup.service": {"name": "systemd-vconsole-setup.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-volatile-root.service": {"name": "systemd-volatile-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "thermald.service": {"name": "thermald.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-auto-attach.service": {"name": "ua-auto-attach.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ua-reboot-cmds.service": {"name": "ua-reboot-cmds.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-timer.service": {"name": "ua-timer.service", "source": "systemd", "state": "stopped", "status": "static"}, "ubuntu-advantage-cloud-id-shim.service": {"name": "ubuntu-advantage-cloud-id-shim.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ubuntu-advantage.service": {"name": "ubuntu-advantage.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "udev": {"name": "udev", "source": "sysv", "state": "running"}, "udev.service": {"name": "udev.service", "source": "systemd", "state": "active", "status": "alias"}, "udisks2.service": {"name": "udisks2.service", "source": "systemd", "state": "running", "status": "enabled"}, "ufw": {"name": "ufw", "source": "sysv", "state": "running"}, "ufw.service": {"name": "ufw.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "unattended-upgrades": {"name": "unattended-upgrades", "source": "sysv", "state": "running"}, "unattended-upgrades.service": {"name": "unattended-upgrades.service", "source": "systemd", "state": "running", "status": "enabled"}, "update-notifier-download.service": {"name": "update-notifier-download.service", "source": "systemd", "state": "inactive", "status": "static"}, "update-notifier-motd.service": {"name": "update-notifier-motd.service", "source": "systemd", "state": "stopped", "status": "static"}, "upower.service": {"name": "upower.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "usb_modeswitch@.service": {"name": "usb_modeswitch@.service", "source": "systemd", "state": "unknown", "status": "static"}, "usbmuxd.service": {"name": "usbmuxd.service", "source": "systemd", "state": "inactive", "status": "static"}, "user-runtime-dir@.service": {"name": "user-runtime-dir@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user-runtime-dir@0.service": {"name": "user-runtime-dir@0.service", "source": "systemd", "state": "stopped", "status": "active"}, "user-runtime-dir@1000.service": {"name": "user-runtime-dir@1000.service", "source": "systemd", "state": "stopped", "status": "active"}, "user@.service": {"name": "user@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user@0.service": {"name": "user@0.service", "source": "systemd", "state": "running", "status": "active"}, "user@1000.service": {"name": "user@1000.service", "source": "systemd", "state": "running", "status": "active"}, "uuidd": {"name": "uuidd", "source": "sysv", "state": "stopped"}, "uuidd.service": {"name": "uuidd.service", "source": "systemd", "state": "stopped", "status": "indirect"}, "vgauth.service": {"name": "vgauth.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "vmtoolsd.service": {"name": "vmtoolsd.service", "source": "systemd", "state": "inactive", "status": "alias"}, "x11-common.service": {"name": "x11-common.service", "source": "systemd", "state": "inactive", "status": "masked"}, "xfs_scrub@.service": {"name": "xfs_scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "xfs_scrub_all.service": {"name": "xfs_scrub_all.service", "source": "systemd", "state": "inactive", "status": "static"}, "xfs_scrub_fail@.service": {"name": "xfs_scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "zfs-mount.service": {"name": "zfs-mount.service", "source": "systemd", "state": "stopped", "status": "not-found"}}}, "changed": false}
2023-07-10 15:02:25,950 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:25 +0300 (0:00:01.927)       0:00:38.380 ****** 
2023-07-10 15:02:26,210 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if containerd is installed] *********************************************************************************************************
2023-07-10 15:02:26,210 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 925, "files": [{"atime": 1688989439.1442995, "ctime": 1688989436.4363012, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 262627, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989436.3123012, "nlink": 1, "path": "/etc/systemd/system/containerd.service", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 1365, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 1, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:02:26,219 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.268)       0:00:38.648 ****** 
2023-07-10 15:02:26,397 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if docker is installed] *************************************************************************************************************
2023-07-10 15:02:26,398 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 925, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:02:26,407 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.187)       0:00:38.836 ****** 
2023-07-10 15:02:26,582 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if crio is installed] ***************************************************************************************************************
2023-07-10 15:02:26,583 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 925, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:02:26,592 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.184)       0:00:39.021 ****** 
2023-07-10 15:02:26,631 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.039)       0:00:39.060 ****** 
2023-07-10 15:02:26,685 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.054)       0:00:39.114 ****** 
2023-07-10 15:02:26,739 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.054)       0:00:39.169 ****** 
2023-07-10 15:02:26,794 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.054)       0:00:39.224 ****** 
2023-07-10 15:02:26,998 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:26 +0300 (0:00:00.203)       0:00:39.427 ****** 
2023-07-10 15:02:27,048 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.049)       0:00:39.477 ****** 
2023-07-10 15:02:27,101 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.052)       0:00:39.530 ****** 
2023-07-10 15:02:27,152 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.051)       0:00:39.581 ****** 
2023-07-10 15:02:27,201 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.049)       0:00:39.631 ****** 
2023-07-10 15:02:27,254 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.052)       0:00:39.684 ****** 
2023-07-10 15:02:27,320 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.065)       0:00:39.750 ****** 
2023-07-10 15:02:27,388 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.067)       0:00:39.817 ****** 
2023-07-10 15:02:27,444 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.055)       0:00:39.873 ****** 
2023-07-10 15:02:27,497 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.052)       0:00:39.926 ****** 
2023-07-10 15:02:27,547 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.050)       0:00:39.976 ****** 
2023-07-10 15:02:27,610 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.062)       0:00:40.039 ****** 
2023-07-10 15:02:27,661 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.051)       0:00:40.090 ****** 
2023-07-10 15:02:27,727 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.065)       0:00:40.156 ****** 
2023-07-10 15:02:27,780 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.052)       0:00:40.209 ****** 
2023-07-10 15:02:27,902 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.122)       0:00:40.332 ****** 
2023-07-10 15:02:27,954 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:27 +0300 (0:00:00.051)       0:00:40.383 ****** 
2023-07-10 15:02:28,007 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.052)       0:00:40.436 ****** 
2023-07-10 15:02:28,059 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.052)       0:00:40.488 ****** 
2023-07-10 15:02:28,112 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.053)       0:00:40.542 ****** 
2023-07-10 15:02:28,318 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.205)       0:00:40.747 ****** 
2023-07-10 15:02:28,391 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.072)       0:00:40.820 ****** 
2023-07-10 15:02:28,439 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.048)       0:00:40.868 ****** 
2023-07-10 15:02:28,489 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.049)       0:00:40.918 ****** 
2023-07-10 15:02:28,538 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.048)       0:00:40.967 ****** 
2023-07-10 15:02:28,588 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.050)       0:00:41.017 ****** 
2023-07-10 15:02:28,651 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.063)       0:00:41.081 ****** 
2023-07-10 15:02:28,709 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.057)       0:00:41.139 ****** 
2023-07-10 15:02:28,767 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.057)       0:00:41.196 ****** 
2023-07-10 15:02:28,824 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.057)       0:00:41.254 ****** 
2023-07-10 15:02:28,882 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.057)       0:00:41.311 ****** 
2023-07-10 15:02:28,984 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:28 +0300 (0:00:00.102)       0:00:41.413 ****** 
2023-07-10 15:02:29,044 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.059)       0:00:41.473 ****** 
2023-07-10 15:02:29,123 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.078)       0:00:41.552 ****** 
2023-07-10 15:02:29,195 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.071)       0:00:41.624 ****** 
2023-07-10 15:02:29,249 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.054)       0:00:41.679 ****** 
2023-07-10 15:02:29,301 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.051)       0:00:41.730 ****** 
2023-07-10 15:02:29,452 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.150)       0:00:41.881 ****** 
2023-07-10 15:02:29,515 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.063)       0:00:41.945 ****** 
2023-07-10 15:02:29,568 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.052)       0:00:41.997 ****** 
2023-07-10 15:02:29,619 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.051)       0:00:42.048 ****** 
2023-07-10 15:02:29,673 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.054)       0:00:42.102 ****** 
2023-07-10 15:02:29,726 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.053)       0:00:42.156 ****** 
2023-07-10 15:02:29,781 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.054)       0:00:42.210 ****** 
2023-07-10 15:02:29,833 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.051)       0:00:42.262 ****** 
2023-07-10 15:02:29,887 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.054)       0:00:42.316 ****** 
2023-07-10 15:02:29,952 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:29 +0300 (0:00:00.065)       0:00:42.381 ****** 
2023-07-10 15:02:30,019 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.066)       0:00:42.448 ****** 
2023-07-10 15:02:30,072 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.053)       0:00:42.502 ****** 
2023-07-10 15:02:30,127 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.054)       0:00:42.556 ****** 
2023-07-10 15:02:30,182 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.054)       0:00:42.611 ****** 
2023-07-10 15:02:30,235 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.053)       0:00:42.664 ****** 
2023-07-10 15:02:30,302 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.066)       0:00:42.731 ****** 
2023-07-10 15:02:30,356 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.054)       0:00:42.785 ****** 
2023-07-10 15:02:30,411 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.054)       0:00:42.840 ****** 
2023-07-10 15:02:30,466 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.054)       0:00:42.895 ****** 
2023-07-10 15:02:30,519 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.053)       0:00:42.948 ****** 
2023-07-10 15:02:30,572 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.053)       0:00:43.002 ****** 
2023-07-10 15:02:30,626 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.053)       0:00:43.055 ****** 
2023-07-10 15:02:30,703 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.077)       0:00:43.132 ****** 
2023-07-10 15:02:30,758 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.054)       0:00:43.187 ****** 
2023-07-10 15:02:30,849 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.091)       0:00:43.278 ****** 
2023-07-10 15:02:30,970 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.120)       0:00:43.399 ****** 
2023-07-10 15:02:30,998 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:30 +0300 (0:00:00.028)       0:00:43.427 ****** 
2023-07-10 15:02:31,029 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.030)       0:00:43.458 ****** 
2023-07-10 15:02:31,059 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.030)       0:00:43.488 ****** 
2023-07-10 15:02:31,095 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.036)       0:00:43.524 ****** 
2023-07-10 15:02:31,131 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.036)       0:00:43.560 ****** 
2023-07-10 15:02:31,175 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.043)       0:00:43.604 ****** 
2023-07-10 15:02:31,215 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.039)       0:00:43.644 ****** 
2023-07-10 15:02:31,245 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.029)       0:00:43.674 ****** 
2023-07-10 15:02:31,275 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:31 +0300 (0:00:00.030)       0:00:43.704 ****** 
2023-07-10 15:02:32,920 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:32 +0300 (0:00:01.644)       0:00:45.349 ****** 
2023-07-10 15:02:32,948 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:32 +0300 (0:00:00.028)       0:00:45.377 ****** 
2023-07-10 15:02:32,987 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:32 +0300 (0:00:00.038)       0:00:45.416 ****** 
2023-07-10 15:02:33,015 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.028)       0:00:45.444 ****** 
2023-07-10 15:02:33,054 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.038)       0:00:45.483 ****** 
2023-07-10 15:02:33,084 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.029)       0:00:45.513 ****** 
2023-07-10 15:02:33,117 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.033)       0:00:45.546 ****** 
2023-07-10 15:02:33,152 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.034)       0:00:45.581 ****** 
2023-07-10 15:02:33,181 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.029)       0:00:45.610 ****** 
2023-07-10 15:02:33,215 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.033)       0:00:45.644 ****** 
2023-07-10 15:02:33,251 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.036)       0:00:45.681 ****** 
2023-07-10 15:02:33,290 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.038)       0:00:45.720 ****** 
2023-07-10 15:02:33,323 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.032)       0:00:45.752 ****** 
2023-07-10 15:02:33,355 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:45.784 ****** 
2023-07-10 15:02:33,387 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.032)       0:00:45.816 ****** 
2023-07-10 15:02:33,420 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.033)       0:00:45.849 ****** 
2023-07-10 15:02:33,459 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.039)       0:00:45.888 ****** 
2023-07-10 15:02:33,494 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.034)       0:00:45.923 ****** 
2023-07-10 15:02:33,526 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.032)       0:00:45.955 ****** 
2023-07-10 15:02:33,558 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:45.987 ****** 
2023-07-10 15:02:33,593 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.034)       0:00:46.022 ****** 
2023-07-10 15:02:33,623 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.030)       0:00:46.053 ****** 
2023-07-10 15:02:33,655 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:46.084 ****** 
2023-07-10 15:02:33,687 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:46.116 ****** 
2023-07-10 15:02:33,717 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.030)       0:00:46.146 ****** 
2023-07-10 15:02:33,747 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.030)       0:00:46.177 ****** 
2023-07-10 15:02:33,780 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.032)       0:00:46.209 ****** 
2023-07-10 15:02:33,810 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.029)       0:00:46.239 ****** 
2023-07-10 15:02:33,842 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.032)       0:00:46.271 ****** 
2023-07-10 15:02:33,873 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:46.303 ****** 
2023-07-10 15:02:33,905 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:46.334 ****** 
2023-07-10 15:02:33,936 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.031)       0:00:46.365 ****** 
2023-07-10 15:02:33,969 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.033)       0:00:46.399 ****** 
2023-07-10 15:02:34,002 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:33 +0300 (0:00:00.032)       0:00:46.431 ****** 
2023-07-10 15:02:34,035 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.032)       0:00:46.464 ****** 
2023-07-10 15:02:34,079 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.044)       0:00:46.508 ****** 
2023-07-10 15:02:34,134 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.054)       0:00:46.563 ****** 
2023-07-10 15:02:34,189 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.055)       0:00:46.618 ****** 
2023-07-10 15:02:34,219 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.029)       0:00:46.648 ****** 
2023-07-10 15:02:34,250 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.030)       0:00:46.679 ****** 
2023-07-10 15:02:34,280 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.030)       0:00:46.710 ****** 
2023-07-10 15:02:34,331 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.050)       0:00:46.760 ****** 
2023-07-10 15:02:34,360 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.029)       0:00:46.790 ****** 
2023-07-10 15:02:34,391 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.031)       0:00:46.821 ****** 
2023-07-10 15:02:34,447 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.055)       0:00:46.876 ****** 
2023-07-10 15:02:34,476 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.028)       0:00:46.905 ****** 
2023-07-10 15:02:34,506 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.029)       0:00:46.935 ****** 
2023-07-10 15:02:34,538 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.032)       0:00:46.967 ****** 
2023-07-10 15:02:34,574 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.035)       0:00:47.003 ****** 
2023-07-10 15:02:34,603 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.028)       0:00:47.032 ****** 
2023-07-10 15:02:34,645 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.042)       0:00:47.075 ****** 
2023-07-10 15:02:34,675 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.029)       0:00:47.105 ****** 
2023-07-10 15:02:34,706 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.030)       0:00:47.135 ****** 
2023-07-10 15:02:34,730 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.024)       0:00:47.160 ****** 
2023-07-10 15:02:34,763 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.032)       0:00:47.192 ****** 
2023-07-10 15:02:34,793 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.030)       0:00:47.223 ****** 
2023-07-10 15:02:34,837 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.044)       0:00:47.267 ****** 
2023-07-10 15:02:34,868 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.030)       0:00:47.298 ****** 
2023-07-10 15:02:34,897 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.028)       0:00:47.326 ****** 
2023-07-10 15:02:34,934 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:34 +0300 (0:00:00.036)       0:00:47.363 ****** 
2023-07-10 15:02:35,113 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] *******************************************************************************************************
2023-07-10 15:02:35,114 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:35,122 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:35 +0300 (0:00:00.187)       0:00:47.551 ****** 
2023-07-10 15:02:35,166 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | set is_ostree] ****************************************************************************************************************
2023-07-10 15:02:35,167 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:02:35,176 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:35 +0300 (0:00:00.054)       0:00:47.605 ****** 
2023-07-10 15:02:35,297 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | gather os specific variables] *************************************************************************************************
2023-07-10 15:02:35,298 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) => {"ansible_facts": {"containerd_repo_info": {"repos": ["deb {{ containerd_ubuntu_repo_base_url }} {{ ansible_distribution_release | lower }} {{ containerd_ubuntu_repo_component }}\n"]}}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml"}
2023-07-10 15:02:35,315 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:35 +0300 (0:00:00.139)       0:00:47.745 ****** 
2023-07-10 15:02:35,487 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | check if fedora coreos] *********************************************************************************************************************************
2023-07-10 15:02:35,487 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:02:35,496 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:35 +0300 (0:00:00.180)       0:00:47.925 ****** 
2023-07-10 15:02:35,544 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | set is_ostree] ******************************************************************************************************************************************
2023-07-10 15:02:35,544 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:02:35,552 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:35 +0300 (0:00:00.056)       0:00:47.982 ****** 
2023-07-10 15:02:36,009 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ******************************************************************************************************
2023-07-10 15:02:36,010 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:02:36,020 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:36 +0300 (0:00:00.467)       0:00:48.450 ****** 
2023-07-10 15:02:36,040 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Download runc binary] ***********************************************************************************************************************************
2023-07-10 15:02:36,060 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:02:36,073 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:36 +0300 (0:00:00.052)       0:00:48.502 ****** 
2023-07-10 15:02:36,121 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : prep_download | Set a few facts] *******************************************************************************************************************************
2023-07-10 15:02:36,122 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:02:36,131 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:36 +0300 (0:00:00.058)       0:00:48.560 ****** 
2023-07-10 15:02:37,063 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Starting download of file] *********************************************************************************************************************
2023-07-10 15:02:37,064 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 15:02:37,072 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:37 +0300 (0:00:00.941)       0:00:49.501 ****** 
2023-07-10 15:02:37,992 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Set pathname of cached file] *******************************************************************************************************************
2023-07-10 15:02:37,993 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 15:02:38,001 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:37 +0300 (0:00:00.928)       0:00:50.430 ****** 
2023-07-10 15:02:40,025 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Create dest directory on node] *****************************************************************************************************************
2023-07-10 15:02:40,026 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:02:40,045 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:40 +0300 (0:00:02.043)       0:00:52.474 ****** 
2023-07-10 15:02:40,114 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:40 +0300 (0:00:00.069)       0:00:52.544 ****** 
2023-07-10 15:02:41,578 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:41 +0300 (0:00:01.463)       0:00:54.007 ****** 
2023-07-10 15:02:46,129 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Validate mirrors] ******************************************************************************************************************************
2023-07-10 15:02:46,130 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:02:46,133 p=13011 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:02:46,151 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:46 +0300 (0:00:04.573)       0:00:58.580 ****** 
2023-07-10 15:02:46,218 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Get the list of working mirrors] ***************************************************************************************************************
2023-07-10 15:02:46,218 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 15:02:46,238 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:46 +0300 (0:00:00.087)       0:00:58.668 ****** 
2023-07-10 15:02:54,805 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Download item] *********************************************************************************************************************************
2023-07-10 15:02:54,806 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:02:54,815 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:54 +0300 (0:00:08.577)       0:01:07.245 ****** 
2023-07-10 15:02:54,849 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:54 +0300 (0:00:00.033)       0:01:07.278 ****** 
2023-07-10 15:02:54,884 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:54 +0300 (0:00:00.034)       0:01:07.313 ****** 
2023-07-10 15:02:54,918 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:54 +0300 (0:00:00.034)       0:01:07.347 ****** 
2023-07-10 15:02:54,941 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Extract file archives] *************************************************************************************************************************
2023-07-10 15:02:54,953 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:02:54,969 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:54 +0300 (0:00:00.051)       0:01:07.399 ****** 
2023-07-10 15:02:55,855 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:55 +0300 (0:00:00.885)       0:01:08.284 ****** 
2023-07-10 15:02:57,296 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : Copy runc binary from download dir] ****************************************************************************************************************************
2023-07-10 15:02:57,297 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c2a25f41774ecb90b4f51fb11ebb06337862e2b7", "dest": "/usr/local/bin/runc", "gid": 0, "group": "root", "md5sum": "0407860329c7f81077a17b574eccc75e", "mode": "0755", "owner": "root", "size": 9644288, "src": "/tmp/releases/runc-v1.1.7.amd64", "state": "file", "uid": 0}
2023-07-10 15:02:57,314 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:57 +0300 (0:00:01.459)       0:01:09.743 ****** 
2023-07-10 15:02:57,598 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Remove orphaned binary] *********************************************************************************************************************************
2023-07-10 15:02:57,599 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/usr/bin/runc", "state": "absent"}
2023-07-10 15:02:57,625 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:57 +0300 (0:00:00.310)       0:01:10.054 ****** 
2023-07-10 15:02:57,656 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : install crictl] **********************************************************************************************************************************************
2023-07-10 15:02:57,676 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1
2023-07-10 15:02:57,693 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:57 +0300 (0:00:00.067)       0:01:10.122 ****** 
2023-07-10 15:02:57,732 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : crictl | Download crictl] ************************************************************************************************************************************
2023-07-10 15:02:57,765 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:02:57,789 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:57 +0300 (0:00:00.096)       0:01:10.218 ****** 
2023-07-10 15:02:57,871 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : prep_download | Set a few facts] *****************************************************************************************************************************
2023-07-10 15:02:57,871 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:02:57,887 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:57 +0300 (0:00:00.097)       0:01:10.316 ****** 
2023-07-10 15:02:59,378 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Starting download of file] *******************************************************************************************************************
2023-07-10 15:02:59,379 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 15:02:59,393 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:02:59 +0300 (0:00:01.506)       0:01:11.823 ****** 
2023-07-10 15:03:00,883 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Set pathname of cached file] *****************************************************************************************************************
2023-07-10 15:03:00,883 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:03:00,898 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:00 +0300 (0:00:01.504)       0:01:13.327 ****** 
2023-07-10 15:03:02,802 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Create dest directory on node] ***************************************************************************************************************
2023-07-10 15:03:02,803 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:03:02,815 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:02 +0300 (0:00:01.917)       0:01:15.245 ****** 
2023-07-10 15:03:02,862 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:02 +0300 (0:00:00.046)       0:01:15.292 ****** 
2023-07-10 15:03:03,722 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:03 +0300 (0:00:00.860)       0:01:16.152 ****** 
2023-07-10 15:03:07,806 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Validate mirrors] ****************************************************************************************************************************
2023-07-10 15:03:07,808 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:03:07,813 p=13011 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:03:07,842 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:07 +0300 (0:00:04.119)       0:01:20.271 ****** 
2023-07-10 15:03:07,959 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Get the list of working mirrors] *************************************************************************************************************
2023-07-10 15:03:07,959 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:03:07,990 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:07 +0300 (0:00:00.148)       0:01:20.419 ****** 
2023-07-10 15:03:15,580 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Download item] *******************************************************************************************************************************
2023-07-10 15:03:15,580 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:03:15,589 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:15 +0300 (0:00:07.598)       0:01:28.018 ****** 
2023-07-10 15:03:15,628 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:15 +0300 (0:00:00.038)       0:01:28.057 ****** 
2023-07-10 15:03:15,669 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:15 +0300 (0:00:00.041)       0:01:28.098 ****** 
2023-07-10 15:03:15,705 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:15 +0300 (0:00:00.036)       0:01:28.135 ****** 
2023-07-10 15:03:15,735 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Extract file archives] ***********************************************************************************************************************
2023-07-10 15:03:15,746 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:03:15,762 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:15 +0300 (0:00:00.056)       0:01:28.191 ****** 
2023-07-10 15:03:22,731 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : extract_file | Unpacking archive] ****************************************************************************************************************************
2023-07-10 15:03:22,731 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:03:22,740 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:22 +0300 (0:00:06.978)       0:01:35.170 ****** 
2023-07-10 15:03:23,116 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Install crictl config] ***************************************************************************************************************************************
2023-07-10 15:03:23,116 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "8c563ee377b8aad181d3a00e06314316dc085513", "dest": "/etc/crictl.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/crictl.yaml", "size": 145, "state": "file", "uid": 0}
2023-07-10 15:03:23,125 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:23 +0300 (0:00:00.384)       0:01:35.554 ****** 
2023-07-10 15:03:23,533 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Copy crictl binary from download dir] ************************************************************************************************************************
2023-07-10 15:03:23,534 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "ecebb8d084fb6bfcd42716ecb222a0bd7599d3f5", "dest": "/usr/local/bin/crictl", "gid": 0, "group": "root", "md5sum": "d8aaa4799d86a7beda6c6378b78f80b1", "mode": "0755", "owner": "root", "size": 52586151, "src": "/tmp/releases/crictl", "state": "file", "uid": 0}
2023-07-10 15:03:23,550 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:23 +0300 (0:00:00.424)       0:01:35.979 ****** 
2023-07-10 15:03:23,572 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *********************************************************************************************************************************
2023-07-10 15:03:23,591 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:03:23,604 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:23 +0300 (0:00:00.054)       0:01:36.034 ****** 
2023-07-10 15:03:23,653 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : prep_download | Set a few facts] ****************************************************************************************************************************
2023-07-10 15:03:23,654 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:03:23,662 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:23 +0300 (0:00:00.058)       0:01:36.092 ****** 
2023-07-10 15:03:24,662 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Starting download of file] ******************************************************************************************************************
2023-07-10 15:03:24,663 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 15:03:24,671 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:24 +0300 (0:00:01.008)       0:01:37.101 ****** 
2023-07-10 15:03:25,640 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ****************************************************************************************************************
2023-07-10 15:03:25,640 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:03:25,649 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:25 +0300 (0:00:00.977)       0:01:38.078 ****** 
2023-07-10 15:03:27,863 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Create dest directory on node] **************************************************************************************************************
2023-07-10 15:03:27,864 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:03:27,884 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:27 +0300 (0:00:02.234)       0:01:40.313 ****** 
2023-07-10 15:03:27,952 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:27 +0300 (0:00:00.067)       0:01:40.381 ****** 
2023-07-10 15:03:29,416 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:29 +0300 (0:00:01.464)       0:01:41.846 ****** 
2023-07-10 15:03:33,504 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Validate mirrors] ***************************************************************************************************************************
2023-07-10 15:03:33,505 p=13011 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:03:33,507 p=13011 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:03:33,525 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:33 +0300 (0:00:04.108)       0:01:45.955 ****** 
2023-07-10 15:03:33,594 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ************************************************************************************************************
2023-07-10 15:03:33,594 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:03:33,617 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:33 +0300 (0:00:00.091)       0:01:46.046 ****** 
2023-07-10 15:03:42,690 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Download item] ******************************************************************************************************************************
2023-07-10 15:03:42,690 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:03:42,698 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:42 +0300 (0:00:09.081)       0:01:55.128 ****** 
2023-07-10 15:03:42,735 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:42 +0300 (0:00:00.037)       0:01:55.165 ****** 
2023-07-10 15:03:42,775 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:42 +0300 (0:00:00.039)       0:01:55.204 ****** 
2023-07-10 15:03:42,817 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:42 +0300 (0:00:00.041)       0:01:55.246 ****** 
2023-07-10 15:03:42,841 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Extract file archives] **********************************************************************************************************************
2023-07-10 15:03:42,856 p=13011 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:03:42,871 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:42 +0300 (0:00:00.054)       0:01:55.300 ****** 
2023-07-10 15:03:49,098 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : extract_file | Unpacking archive] ***************************************************************************************************************************
2023-07-10 15:03:49,099 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:03:49,116 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:49 +0300 (0:00:06.244)       0:02:01.545 ****** 
2023-07-10 15:03:49,583 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ************************************************************************************************************
2023-07-10 15:03:49,583 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "36ed3de5ebdc71f782c80b95c6838797e71f1d06", "dest": "/usr/local/bin/nerdctl", "gid": 0, "group": "root", "md5sum": "1382ce88987ba5832c4477d0a781b6f1", "mode": "0755", "owner": "root", "size": 24379392, "src": "/tmp/releases/nerdctl", "state": "file", "uid": 0}
2023-07-10 15:03:49,598 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:49 +0300 (0:00:00.482)       0:02:02.028 ****** 
2023-07-10 15:03:49,884 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Create configuration dir] *************************************************************************************************************************
2023-07-10 15:03:49,884 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/nerdctl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:03:49,899 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:49 +0300 (0:00:00.300)       0:02:02.328 ****** 
2023-07-10 15:03:50,551 p=13011 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ********************************************************************************************************************
2023-07-10 15:03:50,552 p=13011 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "e46d9c0efd0a617d0682d1b779320ada3a505ca4", "dest": "/etc/nerdctl/nerdctl.toml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/nerdctl/nerdctl.toml", "size": 354, "state": "file", "uid": 0}
2023-07-10 15:03:50,581 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:50 +0300 (0:00:00.682)       0:02:03.011 ****** 
2023-07-10 15:03:50,650 p=13011 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:03:50 +0300 (0:00:00.068)       0:02:03.079 ****** 
2023-07-10 15:03:51,184 p=13011 u=kubernetmachine n=ansible |  [ERROR]: User interrupted execution

2023-07-10 15:04:34,086 p=14409 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:04:34,461 p=14409 u=kubernetmachine n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host node1: Failed to connect to the host via ssh: kubernetmachine@192.168.122.29: Permission denied (publickey,password).

2023-07-10 15:04:34,568 p=14409 u=kubernetmachine n=ansible | node1 | UNREACHABLE! => {
    "changed": false,
    "msg": "Data could not be sent to remote host \"192.168.122.29\". Make sure this host can be reached over ssh: kubernetmachine@192.168.122.29: Permission denied (publickey,password).\r\n",
    "unreachable": true
}
2023-07-10 15:05:34,844 p=14421 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:05:36,112 p=14421 u=kubernetmachine n=ansible | node1 | FAILED | rc=5 >>
Failed to stop firewalld.service: Unit firewalld.service not loaded.non-zero return code

2023-07-10 15:05:56,671 p=14438 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:05:57,227 p=14438 u=kubernetmachine n=ansible | node1 | FAILED | rc=5 >>
Failed to stop firewalld.service: Unit firewalld.service not loaded.non-zero return code

2023-07-10 15:06:47,780 p=14471 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:06:48,339 p=14471 u=kubernetmachine n=ansible | node1 | CHANGED | rc=0 >>
net.ipv4.ip_forward=1

2023-07-10 15:07:20,968 p=14487 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:07:21,495 p=14487 u=kubernetmachine n=ansible | node1 | CHANGED | rc=0 >>


2023-07-10 15:07:59,962 p=14511 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 15:08:04,257 p=14511 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:08:04,258 p=14511 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************************************************************************************************************
2023-07-10 15:08:04,272 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.015)       0:00:00.015 ****** 
2023-07-10 15:08:04,297 p=14511 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************************************************************************************************************
2023-07-10 15:08:04,297 p=14511 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:04,301 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.028)       0:00:00.044 ****** 
2023-07-10 15:08:04,359 p=14511 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************************************************************************************************************
2023-07-10 15:08:04,360 p=14511 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:04,363 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.062)       0:00:00.106 ****** 
2023-07-10 15:08:04,380 p=14511 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************************************************************************************************************
2023-07-10 15:08:04,380 p=14511 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:04,390 p=14511 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 15:08:04,391 p=14511 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************************************************************************************************************
2023-07-10 15:08:04,391 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:08:04,391 p=14511 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 15:08:04,391 p=14511 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************************************************************************************************************
2023-07-10 15:08:04,392 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:08:04,393 p=14511 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 15:08:04,393 p=14511 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************************************************************************************************************
2023-07-10 15:08:04,394 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:08:04,394 p=14511 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 15:08:04,395 p=14511 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************************************************************************************************************
2023-07-10 15:08:04,395 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:08:04,395 p=14511 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 15:08:04,396 p=14511 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************************************************************************************************************
2023-07-10 15:08:04,396 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:08:04,396 p=14511 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 15:08:04,397 p=14511 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************************************************************************************************************
2023-07-10 15:08:04,397 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:08:04,399 p=14511 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************************************************************************************************************
2023-07-10 15:08:04,444 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.080)       0:00:00.187 ****** 
2023-07-10 15:08:04,489 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.045)       0:00:00.232 ****** 
2023-07-10 15:08:04,534 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.045)       0:00:00.277 ****** 
2023-07-10 15:08:04,619 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.084)       0:00:00.362 ****** 
2023-07-10 15:08:04,662 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.043)       0:00:00.405 ****** 
2023-07-10 15:08:04,707 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.044)       0:00:00.450 ****** 
2023-07-10 15:08:04,753 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.045)       0:00:00.495 ****** 
2023-07-10 15:08:04,798 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.045)       0:00:00.541 ****** 
2023-07-10 15:08:04,840 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.042)       0:00:00.583 ****** 
2023-07-10 15:08:04,882 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:04 +0300 (0:00:00.041)       0:00:00.625 ****** 
2023-07-10 15:08:06,531 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:01.649)       0:00:02.274 ****** 
2023-07-10 15:08:06,579 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:08:06,580 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:08:06,633 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.101)       0:00:02.376 ****** 
2023-07-10 15:08:06,668 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.035)       0:00:02.411 ****** 
2023-07-10 15:08:06,696 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.028)       0:00:02.439 ****** 
2023-07-10 15:08:06,725 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.028)       0:00:02.468 ****** 
2023-07-10 15:08:06,804 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.078)       0:00:02.547 ****** 
2023-07-10 15:08:06,829 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.025)       0:00:02.572 ****** 
2023-07-10 15:08:06,875 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.045)       0:00:02.618 ****** 
2023-07-10 15:08:06,912 p=14511 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:08:06,924 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************************************************************************************************************
2023-07-10 15:08:06,924 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"\r\nNAME=\"Ubuntu\"\r\nVERSION_ID=\"22.04\"\r\nVERSION=\"22.04.2 LTS (Jammy Jellyfish)\"\r\nVERSION_CODENAME=jammy\r\nID=ubuntu\r\nID_LIKE=debian\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nUBUNTU_CODENAME=jammy\r\n", "stdout_lines": ["PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"", "NAME=\"Ubuntu\"", "VERSION_ID=\"22.04\"", "VERSION=\"22.04.2 LTS (Jammy Jellyfish)\"", "VERSION_CODENAME=jammy", "ID=ubuntu", "ID_LIKE=debian", "HOME_URL=\"https://www.ubuntu.com/\"", "SUPPORT_URL=\"https://help.ubuntu.com/\"", "BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"", "PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"", "UBUNTU_CODENAME=jammy"]}
2023-07-10 15:08:06,935 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.060)       0:00:02.678 ****** 
2023-07-10 15:08:06,965 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.029)       0:00:02.708 ****** 
2023-07-10 15:08:07,001 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:06 +0300 (0:00:00.036)       0:00:02.744 ****** 
2023-07-10 15:08:07,027 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.025)       0:00:02.770 ****** 
2023-07-10 15:08:07,054 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.026)       0:00:02.796 ****** 
2023-07-10 15:08:07,079 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.025)       0:00:02.822 ****** 
2023-07-10 15:08:07,105 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.026)       0:00:02.848 ****** 
2023-07-10 15:08:07,120 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : include_tasks] **********************************************************************************************************************************************************
2023-07-10 15:08:07,136 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1
2023-07-10 15:08:07,150 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.044)       0:00:02.893 ****** 
2023-07-10 15:08:07,187 p=14511 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:08:07,201 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check if bootstrap is needed] *******************************************************************************************************************************************
2023-07-10 15:08:07,201 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "/usr/bin/python3\r\n", "stdout_lines": ["/usr/bin/python3"]}
2023-07-10 15:08:07,211 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.060)       0:00:02.953 ****** 
2023-07-10 15:08:07,247 p=14511 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:08:07,264 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check http::proxy in apt configuration files] ***************************************************************************************************************************
2023-07-10 15:08:07,264 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 15:08:07,275 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.064)       0:00:03.018 ****** 
2023-07-10 15:08:07,308 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.033)       0:00:03.051 ****** 
2023-07-10 15:08:07,345 p=14511 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:08:07,364 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check https::proxy in apt configuration files] **************************************************************************************************************************
2023-07-10 15:08:07,365 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 15:08:07,375 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.066)       0:00:03.118 ****** 
2023-07-10 15:08:07,409 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.033)       0:00:03.152 ****** 
2023-07-10 15:08:07,434 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.025)       0:00:03.177 ****** 
2023-07-10 15:08:07,460 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.026)       0:00:03.203 ****** 
2023-07-10 15:08:07,502 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Set the ansible_python_interpreter fact] ********************************************************************************************************************************
2023-07-10 15:08:07,502 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_python_interpreter": "/usr/bin/python3"}, "changed": false}
2023-07-10 15:08:07,513 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:07 +0300 (0:00:00.052)       0:00:03.256 ****** 
2023-07-10 15:08:08,345 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Install dbus for the hostname module] ***********************************************************************************************************************************
2023-07-10 15:08:08,345 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:08:08,354 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:08 +0300 (0:00:00.841)       0:00:04.097 ****** 
2023-07-10 15:08:08,382 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:08 +0300 (0:00:00.027)       0:00:04.125 ****** 
2023-07-10 15:08:08,409 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:08 +0300 (0:00:00.026)       0:00:04.152 ****** 
2023-07-10 15:08:08,713 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Create remote_tmp for it is used by another module] *********************************************************************************************************************
2023-07-10 15:08:08,714 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.ansible/tmp", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:08:08,724 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:08 +0300 (0:00:00.315)       0:00:04.467 ****** 
2023-07-10 15:08:09,314 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Gather host facts to get ansible_os_family] *****************************************************************************************************************************
2023-07-10 15:08:09,314 p=14511 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:08:09,323 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:09 +0300 (0:00:00.599)       0:00:05.066 ****** 
2023-07-10 15:08:09,978 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] *************************************************************
2023-07-10 15:08:09,978 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_domain": "linuxtechi.local", "ansible_fqdn": "node1.linuxtechi.local", "ansible_hostname": "node1", "ansible_nodename": "node1"}, "changed": false, "name": "node1"}
2023-07-10 15:08:09,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:09 +0300 (0:00:00.664)       0:00:05.730 ****** 
2023-07-10 15:08:10,015 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:10 +0300 (0:00:00.027)       0:00:05.758 ****** 
2023-07-10 15:08:10,041 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:10 +0300 (0:00:00.026)       0:00:05.784 ****** 
2023-07-10 15:08:10,071 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:10 +0300 (0:00:00.030)       0:00:05.814 ****** 
2023-07-10 15:08:10,296 p=14511 u=kubernetmachine n=ansible | TASK [bootstrap-os : Ensure bash_completion.d folder exists] *********************************************************************************************************************************
2023-07-10 15:08:10,296 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:08:10,340 p=14511 u=kubernetmachine n=ansible | PLAY [Gather facts] **************************************************************************************************************************************************************************
2023-07-10 15:08:10,418 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:10 +0300 (0:00:00.346)       0:00:06.161 ****** 
2023-07-10 15:08:10,721 p=14511 u=kubernetmachine n=ansible | TASK [Gather minimal facts] ******************************************************************************************************************************************************************
2023-07-10 15:08:10,721 p=14511 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:08:10,731 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:10 +0300 (0:00:00.312)       0:00:06.474 ****** 
2023-07-10 15:08:11,025 p=14511 u=kubernetmachine n=ansible | TASK [Gather necessary facts (network)] ******************************************************************************************************************************************************
2023-07-10 15:08:11,025 p=14511 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:08:11,034 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:11 +0300 (0:00:00.303)       0:00:06.777 ****** 
2023-07-10 15:08:11,672 p=14511 u=kubernetmachine n=ansible | TASK [Gather necessary facts (hardware)] *****************************************************************************************************************************************************
2023-07-10 15:08:11,672 p=14511 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:08:11,714 p=14511 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd] **********************************************************************************************************************************************************************
2023-07-10 15:08:11,935 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:11 +0300 (0:00:00.901)       0:00:07.678 ****** 
2023-07-10 15:08:11,981 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:11 +0300 (0:00:00.045)       0:00:07.724 ****** 
2023-07-10 15:08:12,028 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.047)       0:00:07.771 ****** 
2023-07-10 15:08:12,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.036)       0:00:07.807 ****** 
2023-07-10 15:08:12,098 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.033)       0:00:07.841 ****** 
2023-07-10 15:08:12,133 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.034)       0:00:07.876 ****** 
2023-07-10 15:08:12,168 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.034)       0:00:07.910 ****** 
2023-07-10 15:08:12,206 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.038)       0:00:07.949 ****** 
2023-07-10 15:08:12,239 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.032)       0:00:07.982 ****** 
2023-07-10 15:08:12,327 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:12 +0300 (0:00:00.087)       0:00:08.070 ****** 
2023-07-10 15:08:13,930 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:13 +0300 (0:00:01.602)       0:00:09.673 ****** 
2023-07-10 15:08:13,968 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:08:13,969 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:08:14,016 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.086)       0:00:09.759 ****** 
2023-07-10 15:08:14,085 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.069)       0:00:09.828 ****** 
2023-07-10 15:08:14,159 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : create fallback_ips_base] *****************************************************************************************************************************************
2023-07-10 15:08:14,160 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"fallback_ips_base": "---\nnode1: \"192.168.122.29\"\n"}, "changed": false}
2023-07-10 15:08:14,172 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.087)       0:00:09.915 ****** 
2023-07-10 15:08:14,223 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : set fallback_ips] *************************************************************************************************************************************************
2023-07-10 15:08:14,223 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"fallback_ips": {"node1": "192.168.122.29"}}, "changed": false}
2023-07-10 15:08:14,237 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.064)       0:00:09.980 ****** 
2023-07-10 15:08:14,278 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.041)       0:00:10.021 ****** 
2023-07-10 15:08:14,318 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.039)       0:00:10.061 ****** 
2023-07-10 15:08:14,365 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.047)       0:00:10.108 ****** 
2023-07-10 15:08:14,685 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 15:08:14,685 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 15:08:14,696 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:14 +0300 (0:00:00.330)       0:00:10.438 ****** 
2023-07-10 15:08:15,085 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 15:08:15,086 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 15:08:15,107 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:15 +0300 (0:00:00.411)       0:00:10.850 ****** 
2023-07-10 15:08:15,427 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *******************************************************************************************************************************
2023-07-10 15:08:15,428 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=swap) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "swap", "name": "swap", "opts": "defaults", "passno": "0"}
2023-07-10 15:08:15,575 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=none) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "none", "name": "none", "opts": "defaults", "passno": "0"}
2023-07-10 15:08:15,588 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:15 +0300 (0:00:00.481)       0:00:11.331 ****** 
2023-07-10 15:08:15,910 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check swap] ****************************************************************************************************************************************************
2023-07-10 15:08:15,911 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/sbin/swapon", "-s"], "delta": "0:00:00.002295", "end": "2023-07-10 12:08:15.900081", "msg": "", "rc": 0, "start": "2023-07-10 12:08:15.897786", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:08:15,920 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:15 +0300 (0:00:00.331)       0:00:11.663 ****** 
2023-07-10 15:08:15,951 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:15 +0300 (0:00:00.030)       0:00:11.694 ****** 
2023-07-10 15:08:15,981 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:15 +0300 (0:00:00.029)       0:00:11.724 ****** 
2023-07-10 15:08:16,010 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.029)       0:00:11.753 ****** 
2023-07-10 15:08:16,039 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.028)       0:00:11.782 ****** 
2023-07-10 15:08:16,069 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.029)       0:00:11.812 ****** 
2023-07-10 15:08:16,303 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************************************************************************************************************
2023-07-10 15:08:16,304 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:16,315 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.245)       0:00:12.058 ****** 
2023-07-10 15:08:16,624 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:08:16,625 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 15:08:16,638 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.323)       0:00:12.381 ****** 
2023-07-10 15:08:16,680 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:08:16,680 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 15:08:16,691 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.053)       0:00:12.434 ****** 
2023-07-10 15:08:16,862 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************************************************************************************************************
2023-07-10 15:08:16,863 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.001938", "end": "2023-07-10 12:08:16.852062", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:08:16.850124", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:08:16,874 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:16 +0300 (0:00:00.182)       0:00:12.617 ****** 
2023-07-10 15:08:17,039 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************************************************************************************************************
2023-07-10 15:08:17,039 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 15:08:17,051 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:17 +0300 (0:00:00.176)       0:00:12.794 ****** 
2023-07-10 15:08:17,216 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************************************************************************************************************
2023-07-10 15:08:17,216 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:08:17,227 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:17 +0300 (0:00:00.176)       0:00:12.970 ****** 
2023-07-10 15:08:17,531 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************************************************************************************************************
2023-07-10 15:08:17,531 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 15:08:17,542 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:17 +0300 (0:00:00.314)       0:00:13.285 ****** 
2023-07-10 15:08:17,623 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************************************************************************************************************
2023-07-10 15:08:17,624 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 15:08:17,634 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:17 +0300 (0:00:00.092)       0:00:13.377 ****** 
2023-07-10 15:08:17,710 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********************************************************************************************************
2023-07-10 15:08:17,711 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:17,722 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:17 +0300 (0:00:00.087)       0:00:13.465 ****** 
2023-07-10 15:08:17,892 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************************************************************************************************************
2023-07-10 15:08:17,893 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.004399", "end": "2023-07-10 12:08:17.880589", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 12:08:17.876190", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:08:17,959 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:17 +0300 (0:00:00.237)       0:00:13.702 ****** 
2023-07-10 15:08:18,129 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************************************************************************************************************
2023-07-10 15:08:18,129 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.003867", "end": "2023-07-10 12:08:18.117445", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:08:18.113578", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 15:08:18,139 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.180)       0:00:13.882 ****** 
2023-07-10 15:08:18,231 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******************************************************************************************************
2023-07-10 15:08:18,231 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 15:08:18,242 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.102)       0:00:13.985 ****** 
2023-07-10 15:08:18,317 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************************************************************************************************************
2023-07-10 15:08:18,318 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 15:08:18,330 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.087)       0:00:14.073 ****** 
2023-07-10 15:08:18,495 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************************************************************************************************************
2023-07-10 15:08:18,496 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:18,508 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.177)       0:00:14.251 ****** 
2023-07-10 15:08:18,550 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************************************************************************************************************
2023-07-10 15:08:18,551 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": true}, "changed": false}
2023-07-10 15:08:18,561 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.053)       0:00:14.304 ****** 
2023-07-10 15:08:18,606 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************************************************************************************************************
2023-07-10 15:08:18,606 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 15:08:18,620 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.058)       0:00:14.363 ****** 
2023-07-10 15:08:18,651 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.030)       0:00:14.394 ****** 
2023-07-10 15:08:18,822 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************************************************************************************************************
2023-07-10 15:08:18,822 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:18,832 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.181)       0:00:14.575 ****** 
2023-07-10 15:08:18,862 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:18 +0300 (0:00:00.029)       0:00:14.604 ****** 
2023-07-10 15:08:19,030 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************************************************************************************************************
2023-07-10 15:08:19,031 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990413.7360163, "block_size": 4096, "blocks": 8, "ctime": 1688989265.0324173, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 262558, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989265.0324173, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1935, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:08:19,042 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.180)       0:00:14.785 ****** 
2023-07-10 15:08:19,087 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********************************************************************************************************
2023-07-10 15:08:19,087 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 15:08:19,099 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.057)       0:00:14.842 ****** 
2023-07-10 15:08:19,128 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.028)       0:00:14.871 ****** 
2023-07-10 15:08:19,170 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************************************************************************************************************
2023-07-10 15:08:19,170 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 15:08:19,182 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.054)       0:00:14.925 ****** 
2023-07-10 15:08:19,266 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************************************************************************************************************
2023-07-10 15:08:19,267 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 15:08:19,278 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.095)       0:00:15.021 ****** 
2023-07-10 15:08:19,366 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************************************************************************************************************
2023-07-10 15:08:19,366 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": []}, "changed": false}
2023-07-10 15:08:19,379 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.100)       0:00:15.121 ****** 
2023-07-10 15:08:19,409 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.030)       0:00:15.152 ****** 
2023-07-10 15:08:19,516 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, not including cluster DNS] ************************************************************************************************
2023-07-10 15:08:19,516 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "127.0.0.53", "supersede_nameserver": "supersede domain-name-servers ;"}, "changed": false}
2023-07-10 15:08:19,527 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.118)       0:00:15.270 ****** 
2023-07-10 15:08:19,619 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************************************************************************************************************
2023-07-10 15:08:19,619 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 15:08:19,686 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.158)       0:00:15.429 ****** 
2023-07-10 15:08:19,714 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.027)       0:00:15.457 ****** 
2023-07-10 15:08:19,879 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************************************************************************************************************
2023-07-10 15:08:19,880 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:08:19,890 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.175)       0:00:15.633 ****** 
2023-07-10 15:08:19,919 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:19 +0300 (0:00:00.029)       0:00:15.662 ****** 
2023-07-10 15:08:19,976 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] *************************************************************************************************
2023-07-10 15:08:19,977 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
2023-07-10 15:08:19,993 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,005 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.086)       0:00:15.748 ****** 
2023-07-10 15:08:20,051 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] *************************************************************************************************************
2023-07-10 15:08:20,051 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,063 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.057)       0:00:15.806 ****** 
2023-07-10 15:08:20,109 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if non systemd OS type] ***********************************************************************************************************************************
2023-07-10 15:08:20,110 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,120 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.057)       0:00:15.863 ****** 
2023-07-10 15:08:20,173 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if the os does not support] *******************************************************************************************************************************
2023-07-10 15:08:20,173 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,184 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.063)       0:00:15.927 ****** 
2023-07-10 15:08:20,233 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown network plugin] ********************************************************************************************************************************
2023-07-10 15:08:20,234 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,245 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.060)       0:00:15.988 ****** 
2023-07-10 15:08:20,292 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *********************************************************************************************************************
2023-07-10 15:08:20,292 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,303 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.058)       0:00:16.046 ****** 
2023-07-10 15:08:20,357 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***********************************************************************
2023-07-10 15:08:20,358 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,385 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,412 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,439 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'helm_enabled', 'value': True}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": true
    },
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,463 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,476 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.172)       0:00:16.219 ****** 
2023-07-10 15:08:20,533 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *****************************************************************************************************************************
2023-07-10 15:08:20,534 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,546 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.070)       0:00:16.289 ****** 
2023-07-10 15:08:20,591 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for masters] ***********************************************************************************************************************
2023-07-10 15:08:20,591 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,602 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.055)       0:00:16.345 ****** 
2023-07-10 15:08:20,648 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for nodes] *************************************************************************************************************************
2023-07-10 15:08:20,649 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,660 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.058)       0:00:16.403 ****** 
2023-07-10 15:08:20,699 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.038)       0:00:16.442 ****** 
2023-07-10 15:08:20,747 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if ip var does not match local ips] ***********************************************************************************************************************
2023-07-10 15:08:20,748 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:20,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:20 +0300 (0:00:00.060)       0:00:16.502 ****** 
2023-07-10 15:08:21,391 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure ping package] *******************************************************************************************************************************************
2023-07-10 15:08:21,392 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:08:21,403 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.643)       0:00:17.146 ****** 
2023-07-10 15:08:21,577 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *****************************************************************************************************************************
2023-07-10 15:08:21,577 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["ping", "-c1", "192.168.122.29"], "delta": "0:00:00.002124", "end": "2023-07-10 12:08:21.565880", "msg": "", "rc": 0, "start": "2023-07-10 12:08:21.563756", "stderr": "", "stderr_lines": [], "stdout": "PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.\n64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.018 ms\n\n--- 192.168.122.29 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 0.018/0.018/0.018/0.000 ms", "stdout_lines": ["PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.", "64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.018 ms", "", "--- 192.168.122.29 ping statistics ---", "1 packets transmitted, 1 received, 0% packet loss, time 0ms", "rtt min/avg/max/mdev = 0.018/0.018/0.018/0.000 ms"]}
2023-07-10 15:08:21,589 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.185)       0:00:17.332 ****** 
2023-07-10 15:08:21,635 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] *********************************************************************************************************
2023-07-10 15:08:21,636 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:21,648 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.059)       0:00:17.391 ****** 
2023-07-10 15:08:21,765 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.116)       0:00:17.508 ****** 
2023-07-10 15:08:21,804 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.039)       0:00:17.547 ****** 
2023-07-10 15:08:21,850 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if bad hostname] ******************************************************************************************************************************************
2023-07-10 15:08:21,850 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:21,862 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.057)       0:00:17.605 ****** 
2023-07-10 15:08:21,897 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.035)       0:00:17.640 ****** 
2023-07-10 15:08:21,971 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] **********************************************************************************************************
2023-07-10 15:08:21,971 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:21,983 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:21 +0300 (0:00:00.085)       0:00:17.726 ****** 
2023-07-10 15:08:22,062 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ****************************************************************************************************************
2023-07-10 15:08:22,062 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,074 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.090)       0:00:17.817 ****** 
2023-07-10 15:08:22,152 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] **************************************************************************************
2023-07-10 15:08:22,153 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,164 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.089)       0:00:17.907 ****** 
2023-07-10 15:08:22,196 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.032)       0:00:17.939 ****** 
2023-07-10 15:08:22,247 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown dns mode] **************************************************************************************************************************************
2023-07-10 15:08:22,247 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,258 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.062)       0:00:18.001 ****** 
2023-07-10 15:08:22,305 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *******************************************************************************************************************************
2023-07-10 15:08:22,305 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,317 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.058)       0:00:18.060 ****** 
2023-07-10 15:08:22,368 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown cert_management] *******************************************************************************************************************************
2023-07-10 15:08:22,368 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,380 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.062)       0:00:18.123 ****** 
2023-07-10 15:08:22,431 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *******************************************************************************************************************************
2023-07-10 15:08:22,431 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,442 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.062)       0:00:18.185 ****** 
2023-07-10 15:08:22,491 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***************************************************************************************************
2023-07-10 15:08:22,491 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,503 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.060)       0:00:18.246 ****** 
2023-07-10 15:08:22,549 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***************************************************************************************************
2023-07-10 15:08:22,549 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,560 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.057)       0:00:18.303 ****** 
2023-07-10 15:08:22,607 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] **************************************************************************
2023-07-10 15:08:22,607 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,620 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.060)       0:00:18.363 ****** 
2023-07-10 15:08:22,659 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.038)       0:00:18.402 ****** 
2023-07-10 15:08:22,698 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.039)       0:00:18.441 ****** 
2023-07-10 15:08:22,726 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.027)       0:00:18.469 ****** 
2023-07-10 15:08:22,756 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.030)       0:00:18.499 ****** 
2023-07-10 15:08:22,787 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.031)       0:00:18.530 ****** 
2023-07-10 15:08:22,817 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.029)       0:00:18.560 ****** 
2023-07-10 15:08:22,869 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure minimum containerd version] *****************************************************************************************************************************
2023-07-10 15:08:22,870 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:22,933 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.116)       0:00:18.676 ****** 
2023-07-10 15:08:22,972 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:22 +0300 (0:00:00.038)       0:00:18.715 ****** 
2023-07-10 15:08:23,004 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:23 +0300 (0:00:00.032)       0:00:18.747 ****** 
2023-07-10 15:08:23,041 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:23 +0300 (0:00:00.036)       0:00:18.784 ****** 
2023-07-10 15:08:23,227 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create kubernetes directories] *********************************************************************************************************************************
2023-07-10 15:08:23,228 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:23,377 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/manifests) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/manifests", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/manifests", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:23,545 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin/kubernetes-scripts) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin/kubernetes-scripts", "mode": "0755", "owner": "kube", "path": "/usr/local/bin/kubernetes-scripts", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:23,706 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "mode": "0755", "owner": "kube", "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:23,719 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:23 +0300 (0:00:00.678)       0:00:19.462 ****** 
2023-07-10 15:08:23,911 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create other directories of root owner] ************************************************************************************************************************
2023-07-10 15:08:23,912 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/ssl) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/ssl", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/ssl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:08:24,063 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin", "mode": "0755", "owner": "root", "path": "/usr/local/bin", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:08:24,077 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.357)       0:00:19.820 ****** 
2023-07-10 15:08:24,249 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ************************************************************************************************************
2023-07-10 15:08:24,250 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990404.9480176, "block_size": 4096, "blocks": 0, "ctime": 1688989248.4084306, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 262564, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/kubernetes/ssl", "lnk_target": "/etc/kubernetes/ssl", "mode": "0777", "mtime": 1688989248.4084306, "nlink": 1, "path": "/etc/kubernetes/pki", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 19, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:08:24,261 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.183)       0:00:20.004 ****** 
2023-07-10 15:08:24,294 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.033)       0:00:20.037 ****** 
2023-07-10 15:08:24,476 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create cni directories] ****************************************************************************************************************************************
2023-07-10 15:08:24,477 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/cni/net.d) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/cni/net.d", "mode": "0755", "owner": "kube", "path": "/etc/cni/net.d", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:24,622 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/opt/cni/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/opt/cni/bin", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:24,635 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.340)       0:00:20.378 ****** 
2023-07-10 15:08:24,813 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create calico cni directories] *********************************************************************************************************************************
2023-07-10 15:08:24,813 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/var/lib/calico) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/var/lib/calico", "mode": "0755", "owner": "kube", "path": "/var/lib/calico", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:08:24,826 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.191)       0:00:20.569 ****** 
2023-07-10 15:08:24,881 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.054)       0:00:20.624 ****** 
2023-07-10 15:08:24,911 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.029)       0:00:20.654 ****** 
2023-07-10 15:08:24,941 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:24 +0300 (0:00:00.030)       0:00:20.684 ****** 
2023-07-10 15:08:25,010 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.068)       0:00:20.753 ****** 
2023-07-10 15:08:25,085 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.075)       0:00:20.828 ****** 
2023-07-10 15:08:25,117 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.031)       0:00:20.860 ****** 
2023-07-10 15:08:25,148 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.031)       0:00:20.891 ****** 
2023-07-10 15:08:25,615 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************************************************************************************************************
2023-07-10 15:08:25,616 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "b768c1a73df64294ab36e62a1f29e66a8ab15fd2", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/resolved.conf", "size": 114, "state": "file", "uid": 0}
2023-07-10 15:08:25,626 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.478)       0:00:21.369 ****** 
2023-07-10 15:08:25,657 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.031)       0:00:21.400 ****** 
2023-07-10 15:08:25,745 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.087)       0:00:21.488 ****** 
2023-07-10 15:08:25,774 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.028)       0:00:21.517 ****** 
2023-07-10 15:08:25,805 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.031)       0:00:21.548 ****** 
2023-07-10 15:08:25,837 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.031)       0:00:21.580 ****** 
2023-07-10 15:08:25,869 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.031)       0:00:21.612 ****** 
2023-07-10 15:08:25,902 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.032)       0:00:21.644 ****** 
2023-07-10 15:08:25,931 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.029)       0:00:21.674 ****** 
2023-07-10 15:08:25,961 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.030)       0:00:21.704 ****** 
2023-07-10 15:08:25,994 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:25 +0300 (0:00:00.032)       0:00:21.736 ****** 
2023-07-10 15:08:26,454 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update package management cache (APT)] *************************************************************************************************************************
2023-07-10 15:08:26,455 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:08:26,465 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:26 +0300 (0:00:00.472)       0:00:22.209 ****** 
2023-07-10 15:08:26,495 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:26 +0300 (0:00:00.029)       0:00:22.238 ****** 
2023-07-10 15:08:26,523 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:26 +0300 (0:00:00.028)       0:00:22.266 ****** 
2023-07-10 15:08:26,554 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:26 +0300 (0:00:00.030)       0:00:22.296 ****** 
2023-07-10 15:08:26,606 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] *****************************************************************************************
2023-07-10 15:08:26,606 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"common_required_pkgs": ["openssl", "curl", "rsync", "socat", "unzip", "e2fsprogs", "xfsprogs", "ebtables", "bash-completion", "tar", "ipvsadm", "ipset"]}, "changed": false}
2023-07-10 15:08:26,617 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:26 +0300 (0:00:00.063)       0:00:22.360 ****** 
2023-07-10 15:08:27,286 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Install packages requirements] *********************************************************************************************************************************
2023-07-10 15:08:27,287 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:08:27,297 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.680)       0:00:23.040 ****** 
2023-07-10 15:08:27,327 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.030)       0:00:23.070 ****** 
2023-07-10 15:08:27,357 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.029)       0:00:23.100 ****** 
2023-07-10 15:08:27,386 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.029)       0:00:23.129 ****** 
2023-07-10 15:08:27,416 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.029)       0:00:23.159 ****** 
2023-07-10 15:08:27,600 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *******************************************************************************************************************
2023-07-10 15:08:27,600 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=ipv4-ip_forward.conf) => {"ansible_loop_var": "item", "changed": false, "item": "ipv4-ip_forward.conf", "path": "/etc/sysctl.d/ipv4-ip_forward.conf", "state": "absent"}
2023-07-10 15:08:27,744 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=bridge-nf-call.conf) => {"ansible_loop_var": "item", "changed": false, "item": "bridge-nf-call.conf", "path": "/etc/sysctl.d/bridge-nf-call.conf", "state": "absent"}
2023-07-10 15:08:27,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.342)       0:00:23.501 ****** 
2023-07-10 15:08:27,933 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stat sysctl file configuration] ********************************************************************************************************************************
2023-07-10 15:08:27,933 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975452.148, "block_size": 4096, "blocks": 0, "ctime": 1688975046.4383185, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 161054, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/sysctl.conf", "lnk_target": "../sysctl.conf", "mode": "0777", "mtime": 1677761882.0, "nlink": 1, "path": "/etc/sysctl.d/99-sysctl.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 14, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:08:27,999 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:27 +0300 (0:00:00.240)       0:00:23.742 ****** 
2023-07-10 15:08:28,050 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] **************************************************************************************************************
2023-07-10 15:08:28,051 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sysctl_file_path": "/etc/sysctl.conf"}, "changed": false}
2023-07-10 15:08:28,063 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:28 +0300 (0:00:00.064)       0:00:23.806 ****** 
2023-07-10 15:08:28,242 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] **********************************************************************************************************************
2023-07-10 15:08:28,242 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:08:28,254 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:28 +0300 (0:00:00.190)       0:00:23.997 ****** 
2023-07-10 15:08:28,497 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Enable ip forwarding] ******************************************************************************************************************************************
2023-07-10 15:08:28,498 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:08:28,509 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:28 +0300 (0:00:00.254)       0:00:24.252 ****** 
2023-07-10 15:08:28,539 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:28 +0300 (0:00:00.029)       0:00:24.282 ****** 
2023-07-10 15:08:28,701 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ******************************************************************************************************************
2023-07-10 15:08:28,702 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:28,712 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:28 +0300 (0:00:00.173)       0:00:24.455 ****** 
2023-07-10 15:08:28,747 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:28 +0300 (0:00:00.034)       0:00:24.490 ****** 
2023-07-10 15:08:28,927 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] **************************************************************************************************************************
2023-07-10 15:08:28,928 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxbytes", "value": 25000000}}
2023-07-10 15:08:29,099 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxkeys", "value": 1000000}}
2023-07-10 15:08:29,261 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic', 'value': 10}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic", "value": 10}}
2023-07-10 15:08:29,421 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic_on_oops", "value": 1}}
2023-07-10 15:08:29,633 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.overcommit_memory", "value": 1}}
2023-07-10 15:08:29,826 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.panic_on_oom", "value": 0}}
2023-07-10 15:08:29,840 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:29 +0300 (0:00:01.093)       0:00:25.583 ****** 
2023-07-10 15:08:30,161 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check dummy module] ********************************************************************************************************************************************
2023-07-10 15:08:30,161 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": "dummy", "params": "numdummies=0", "state": "present"}
2023-07-10 15:08:30,172 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.331)       0:00:25.915 ****** 
2023-07-10 15:08:30,200 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.027)       0:00:25.943 ****** 
2023-07-10 15:08:30,694 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Disable fapolicyd service] *************************************************************************************************************************************
2023-07-10 15:08:30,694 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "Could not find the requested service fapolicyd: host"}
2023-07-10 15:08:30,705 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.505)       0:00:26.448 ****** 
2023-07-10 15:08:30,735 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.030)       0:00:26.478 ****** 
2023-07-10 15:08:30,764 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.028)       0:00:26.507 ****** 
2023-07-10 15:08:30,794 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.030)       0:00:26.537 ****** 
2023-07-10 15:08:30,824 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.030)       0:00:26.567 ****** 
2023-07-10 15:08:30,854 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.029)       0:00:26.597 ****** 
2023-07-10 15:08:30,885 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.031)       0:00:26.628 ****** 
2023-07-10 15:08:30,914 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.028)       0:00:26.657 ****** 
2023-07-10 15:08:30,943 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.029)       0:00:26.686 ****** 
2023-07-10 15:08:30,974 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:30 +0300 (0:00:00.030)       0:00:26.717 ****** 
2023-07-10 15:08:31,209 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************************************************************************************************************
2023-07-10 15:08:31,210 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 15:08:31,229 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:31 +0300 (0:00:00.255)       0:00:26.972 ****** 
2023-07-10 15:08:31,572 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************************************************************************************************************
2023-07-10 15:08:31,573 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:08:31,600 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:31 +0300 (0:00:00.370)       0:00:27.343 ****** 
2023-07-10 15:08:31,648 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:31 +0300 (0:00:00.048)       0:00:27.391 ****** 
2023-07-10 15:08:31,907 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************************************************************************************************************
2023-07-10 15:08:31,908 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4KMTI3LjAuMS4xIGt1YmVybmV0bWFjaGluZXR3bwoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sgbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluCmZlMDA6OjAgaXA2LWxvY2FsbmV0CmZmMDA6OjAgaXA2LW1jYXN0cHJlZml4CmZmMDI6OjEgaXA2LWFsbG5vZGVzCmZmMDI6OjIgaXA2LWFsbHJvdXRlcnMKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxOTIuMTY4LjEyMi4yOSBub2RlMS5saW51eHRlY2hpLmxvY2FsIG5vZGUxIAojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 15:08:31,920 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:31 +0300 (0:00:00.271)       0:00:27.663 ****** 
2023-07-10 15:08:31,999 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ************************************************************************************************
2023-07-10 15:08:31,999 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost localhost.localdomain"}
2023-07-10 15:08:32,084 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain"}
2023-07-10 15:08:32,175 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:32 +0300 (0:00:00.254)       0:00:27.918 ****** 
2023-07-10 15:08:32,246 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *******************************************************************************************
2023-07-10 15:08:32,246 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:08:32,282 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:08:32,297 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:32 +0300 (0:00:00.122)       0:00:28.040 ****** 
2023-07-10 15:08:32,568 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************************************************************************************************************
2023-07-10 15:08:32,569 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": ""}
2023-07-10 15:08:32,805 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": ""}
2023-07-10 15:08:32,824 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:32 +0300 (0:00:00.526)       0:00:28.567 ****** 
2023-07-10 15:08:33,199 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update facts] **************************************************************************************************************************************************
2023-07-10 15:08:33,199 p=14511 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:08:33,210 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.385)       0:00:28.953 ****** 
2023-07-10 15:08:33,403 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****************************************************************************************************
2023-07-10 15:08:33,404 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:08:33,416 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.206)       0:00:29.159 ****** 
2023-07-10 15:08:33,769 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************************************************************************************************************
2023-07-10 15:08:33,770 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "size": 456, "state": "file", "uid": 0}
2023-07-10 15:08:33,782 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.365)       0:00:29.525 ****** 
2023-07-10 15:08:33,825 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.043)       0:00:29.568 ****** 
2023-07-10 15:08:33,859 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.033)       0:00:29.602 ****** 
2023-07-10 15:08:33,896 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.036)       0:00:29.639 ****** 
2023-07-10 15:08:33,916 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:33 +0300 (0:00:00.020)       0:00:29.659 ****** 
2023-07-10 15:08:34,099 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *********************************************************************************************************************
2023-07-10 15:08:34,099 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:34,188 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.271)       0:00:29.931 ****** 
2023-07-10 15:08:34,222 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.033)       0:00:29.965 ****** 
2023-07-10 15:08:34,253 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.030)       0:00:29.996 ****** 
2023-07-10 15:08:34,282 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.029)       0:00:30.025 ****** 
2023-07-10 15:08:34,313 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.030)       0:00:30.056 ****** 
2023-07-10 15:08:34,342 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.029)       0:00:30.085 ****** 
2023-07-10 15:08:34,371 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.028)       0:00:30.114 ****** 
2023-07-10 15:08:34,403 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.032)       0:00:30.146 ****** 
2023-07-10 15:08:34,421 p=14511 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************************************************************************************************************
2023-07-10 15:08:34,576 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.172)       0:00:30.319 ****** 
2023-07-10 15:08:34,623 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****************************************************************************************************
2023-07-10 15:08:34,623 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:34,646 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.069)       0:00:30.388 ****** 
2023-07-10 15:08:34,691 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***********************************************************************************************
2023-07-10 15:08:34,692 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:34,714 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.068)       0:00:30.457 ****** 
2023-07-10 15:08:34,759 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] **************************************************************************
2023-07-10 15:08:34,760 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:34,783 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.068)       0:00:30.526 ****** 
2023-07-10 15:08:34,829 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.046)       0:00:30.572 ****** 
2023-07-10 15:08:34,872 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************************************************************************************************************
2023-07-10 15:08:34,872 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:34,895 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:34 +0300 (0:00:00.066)       0:00:30.638 ****** 
2023-07-10 15:08:35,117 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************************************************************************************************************
2023-07-10 15:08:35,118 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:35,136 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.240)       0:00:30.879 ****** 
2023-07-10 15:08:35,173 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.037)       0:00:30.916 ****** 
2023-07-10 15:08:35,212 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.038)       0:00:30.955 ****** 
2023-07-10 15:08:35,253 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.041)       0:00:30.996 ****** 
2023-07-10 15:08:35,303 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.049)       0:00:31.046 ****** 
2023-07-10 15:08:35,342 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.038)       0:00:31.085 ****** 
2023-07-10 15:08:35,388 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************************************************************************************************************
2023-07-10 15:08:35,388 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:35,411 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.068)       0:00:31.154 ****** 
2023-07-10 15:08:35,455 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************************************************************************************************************
2023-07-10 15:08:35,455 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:35,477 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.066)       0:00:31.220 ****** 
2023-07-10 15:08:35,523 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************************************************************************************************************
2023-07-10 15:08:35,523 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:35,543 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.066)       0:00:31.286 ****** 
2023-07-10 15:08:35,582 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.038)       0:00:31.325 ****** 
2023-07-10 15:08:35,625 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********************************************************************************************************
2023-07-10 15:08:35,625 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:08:35,648 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.065)       0:00:31.391 ****** 
2023-07-10 15:08:35,817 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************************************************************************************************************
2023-07-10 15:08:35,818 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ipPool default-pool -o json", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/calicoctl.sh'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:08:35,906 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.257)       0:00:31.649 ****** 
2023-07-10 15:08:35,945 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.039)       0:00:31.688 ****** 
2023-07-10 15:08:35,993 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:35 +0300 (0:00:00.047)       0:00:31.735 ****** 
2023-07-10 15:08:36,032 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:36 +0300 (0:00:00.039)       0:00:31.775 ****** 
2023-07-10 15:08:36,072 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:36 +0300 (0:00:00.039)       0:00:31.814 ****** 
2023-07-10 15:08:36,121 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:36 +0300 (0:00:00.048)       0:00:31.863 ****** 
2023-07-10 15:08:36,287 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***************************************************************************************
2023-07-10 15:08:36,287 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:36,297 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:36 +0300 (0:00:00.176)       0:00:32.040 ****** 
2023-07-10 15:08:36,338 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ************************************************************************************************
2023-07-10 15:08:36,338 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:08:36,349 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:36 +0300 (0:00:00.051)       0:00:32.092 ****** 
2023-07-10 15:08:36,520 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] *******************************************************************************************************
2023-07-10 15:08:36,521 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:36,532 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:36 +0300 (0:00:00.182)       0:00:32.275 ****** 
2023-07-10 15:08:39,139 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Populate service facts] *******************************************************************************************************************
2023-07-10 15:08:39,143 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"services": {"ModemManager.service": {"name": "ModemManager.service", "source": "systemd", "state": "running", "status": "enabled"}, "NetworkManager.service": {"name": "NetworkManager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "apparmor": {"name": "apparmor", "source": "sysv", "state": "running"}, "apparmor.service": {"name": "apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "apport": {"name": "apport", "source": "sysv", "state": "running"}, "apport-autoreport.service": {"name": "apport-autoreport.service", "source": "systemd", "state": "stopped", "status": "static"}, "apport-forward@.service": {"name": "apport-forward@.service", "source": "systemd", "state": "unknown", "status": "static"}, "apport.service": {"name": "apport.service", "source": "systemd", "state": "stopped", "status": "generated"}, "apt-daily-upgrade.service": {"name": "apt-daily-upgrade.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-daily.service": {"name": "apt-daily.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-news.service": {"name": "apt-news.service", "source": "systemd", "state": "inactive", "status": "static"}, "auditd.service": {"name": "auditd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autovt@.service": {"name": "autovt@.service", "source": "systemd", "state": "unknown", "status": "alias"}, "blk-availability.service": {"name": "blk-availability.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "bolt.service": {"name": "bolt.service", "source": "systemd", "state": "inactive", "status": "static"}, "cloud-config.service": {"name": "cloud-config.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-final.service": {"name": "cloud-final.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init-hotplugd.service": {"name": "cloud-init-hotplugd.service", "source": "systemd", "state": "stopped", "status": "static"}, "cloud-init-local.service": {"name": "cloud-init-local.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init.service": {"name": "cloud-init.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "connman.service": {"name": "connman.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-getty.service": {"name": "console-getty.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "console-screen.service": {"name": "console-screen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-setup.service": {"name": "console-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "console-setup.sh": {"name": "console-setup.sh", "source": "sysv", "state": "stopped"}, "container-getty@.service": {"name": "container-getty@.service", "source": "systemd", "state": "unknown", "status": "static"}, "containerd.service": {"name": "containerd.service", "source": "systemd", "state": "running", "status": "enabled"}, "cron": {"name": "cron", "source": "sysv", "state": "running"}, "cron.service": {"name": "cron.service", "source": "systemd", "state": "running", "status": "enabled"}, "cryptdisks": {"name": "cryptdisks", "source": "sysv", "state": "stopped"}, "cryptdisks-early": {"name": "cryptdisks-early", "source": "sysv", "state": "stopped"}, "cryptdisks-early.service": {"name": "cryptdisks-early.service", "source": "systemd", "state": "inactive", "status": "masked"}, "cryptdisks.service": {"name": "cryptdisks.service", "source": "systemd", "state": "inactive", "status": "masked"}, "dbus": {"name": "dbus", "source": "sysv", "state": "running"}, "dbus-org.freedesktop.ModemManager1.service": {"name": "dbus-org.freedesktop.ModemManager1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.hostname1.service": {"name": "dbus-org.freedesktop.hostname1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.locale1.service": {"name": "dbus-org.freedesktop.locale1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.login1.service": {"name": "dbus-org.freedesktop.login1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.resolve1.service": {"name": "dbus-org.freedesktop.resolve1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.thermald.service": {"name": "dbus-org.freedesktop.thermald.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timedate1.service": {"name": "dbus-org.freedesktop.timedate1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timesync1.service": {"name": "dbus-org.freedesktop.timesync1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus.service": {"name": "dbus.service", "source": "systemd", "state": "running", "status": "static"}, "debug-shell.service": {"name": "debug-shell.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "display-manager.service": {"name": "display-manager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "dm-event.service": {"name": "dm-event.service", "source": "systemd", "state": "stopped", "status": "static"}, "dmesg.service": {"name": "dmesg.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "dpkg-db-backup.service": {"name": "dpkg-db-backup.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub@.service": {"name": "e2scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_all.service": {"name": "e2scrub_all.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub_fail@.service": {"name": "e2scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_reap.service": {"name": "e2scrub_reap.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "emergency.service": {"name": "emergency.service", "source": "systemd", "state": "stopped", "status": "static"}, "esm-cache.service": {"name": "esm-cache.service", "source": "systemd", "state": "inactive", "status": "static"}, "fcoe.service": {"name": "fcoe.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "finalrd.service": {"name": "finalrd.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "friendly-recovery.service": {"name": "friendly-recovery.service", "source": "systemd", "state": "inactive", "status": "static"}, "fstrim.service": {"name": "fstrim.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd-offline-update.service": {"name": "fwupd-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-refresh.service": {"name": "fwupd-refresh.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd.service": {"name": "fwupd.service", "source": "systemd", "state": "inactive", "status": "static"}, "getty-static.service": {"name": "getty-static.service", "source": "systemd", "state": "stopped", "status": "static"}, "getty@.service": {"name": "getty@.service", "source": "systemd", "state": "unknown", "status": "enabled"}, "getty@tty1.service": {"name": "getty@tty1.service", "source": "systemd", "state": "running", "status": "active"}, "gpu-manager.service": {"name": "gpu-manager.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "grub-common": {"name": "grub-common", "source": "sysv", "state": "stopped"}, "grub-common.service": {"name": "grub-common.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "grub-initrd-fallback.service": {"name": "grub-initrd-fallback.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "hv_kvp_daemon.service": {"name": "hv_kvp_daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "hwclock.service": {"name": "hwclock.service", "source": "systemd", "state": "inactive", "status": "masked"}, "hwclock.sh": {"name": "hwclock.sh", "source": "sysv", "state": "stopped"}, "initrd-cleanup.service": {"name": "initrd-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-parse-etc.service": {"name": "initrd-parse-etc.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-switch-root.service": {"name": "initrd-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-udevadm-cleanup-db.service": {"name": "initrd-udevadm-cleanup-db.service", "source": "systemd", "state": "inactive", "status": "static"}, "ipvsadm": {"name": "ipvsadm", "source": "sysv", "state": "running"}, "ipvsadm.service": {"name": "ipvsadm.service", "source": "systemd", "state": "stopped", "status": "generated"}, "irqbalance": {"name": "irqbalance", "source": "sysv", "state": "running"}, "irqbalance.service": {"name": "irqbalance.service", "source": "systemd", "state": "running", "status": "enabled"}, "iscsi-shutdown.service": {"name": "iscsi-shutdown.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "iscsi.service": {"name": "iscsi.service", "source": "systemd", "state": "inactive", "status": "alias"}, "iscsid": {"name": "iscsid", "source": "sysv", "state": "stopped"}, "iscsid.service": {"name": "iscsid.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "kbd.service": {"name": "kbd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "keyboard-setup.service": {"name": "keyboard-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "keyboard-setup.sh": {"name": "keyboard-setup.sh", "source": "sysv", "state": "stopped"}, "kmod": {"name": "kmod", "source": "sysv", "state": "running"}, "kmod-static-nodes.service": {"name": "kmod-static-nodes.service", "source": "systemd", "state": "stopped", "status": "static"}, "kmod.service": {"name": "kmod.service", "source": "systemd", "state": "active", "status": "alias"}, "loaded": {"name": "loaded", "source": "systemd", "state": "stopped", "status": "failed"}, "logrotate.service": {"name": "logrotate.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2": {"name": "lvm2", "source": "sysv", "state": "stopped"}, "lvm2-activation-early.service": {"name": "lvm2-activation-early.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-activation.service": {"name": "lvm2-activation.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-lvmpolld": {"name": "lvm2-lvmpolld", "source": "sysv", "state": "stopped"}, "lvm2-lvmpolld.service": {"name": "lvm2-lvmpolld.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2-monitor.service": {"name": "lvm2-monitor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "lvm2-pvscan@.service": {"name": "lvm2-pvscan@.service", "source": "systemd", "state": "unknown", "status": "static"}, "lvm2-pvscan@252:3.service": {"name": "lvm2-pvscan@252:3.service", "source": "systemd", "state": "stopped", "status": "active"}, "lvm2.service": {"name": "lvm2.service", "source": "systemd", "state": "inactive", "status": "masked"}, "lxd-agent.service": {"name": "lxd-agent.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "man-db.service": {"name": "man-db.service", "source": "systemd", "state": "stopped", "status": "static"}, "mdadm-grow-continue@.service": {"name": "mdadm-grow-continue@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdadm-last-resort@.service": {"name": "mdadm-last-resort@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdcheck_continue.service": {"name": "mdcheck_continue.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdcheck_start.service": {"name": "mdcheck_start.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmon@.service": {"name": "mdmon@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdmonitor-oneshot.service": {"name": "mdmonitor-oneshot.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmonitor.service": {"name": "mdmonitor.service", "source": "systemd", "state": "inactive", "status": "static"}, "modprobe@.service": {"name": "modprobe@.service", "source": "systemd", "state": "unknown", "status": "static"}, "modprobe@chromeos_pstore.service": {"name": "modprobe@chromeos_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@configfs.service": {"name": "modprobe@configfs.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@drm.service": {"name": "modprobe@drm.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@efi_pstore.service": {"name": "modprobe@efi_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@fuse.service": {"name": "modprobe@fuse.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_blk.service": {"name": "modprobe@pstore_blk.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_zone.service": {"name": "modprobe@pstore_zone.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@ramoops.service": {"name": "modprobe@ramoops.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "motd-news.service": {"name": "motd-news.service", "source": "systemd", "state": "stopped", "status": "static"}, "multipath-tools": {"name": "multipath-tools", "source": "sysv", "state": "running"}, "multipath-tools-boot.service": {"name": "multipath-tools-boot.service", "source": "systemd", "state": "inactive", "status": "masked"}, "multipath-tools.service": {"name": "multipath-tools.service", "source": "systemd", "state": "active", "status": "alias"}, "multipathd.service": {"name": "multipathd.service", "source": "systemd", "state": "running", "status": "enabled"}, "netplan-ovs-cleanup.service": {"name": "netplan-ovs-cleanup.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "networkd-dispatcher.service": {"name": "networkd-dispatcher.service", "source": "systemd", "state": "running", "status": "enabled"}, "networking.service": {"name": "networking.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "nftables.service": {"name": "nftables.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "open-iscsi": {"name": "open-iscsi", "source": "sysv", "state": "stopped"}, "open-iscsi.service": {"name": "open-iscsi.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "open-vm-tools": {"name": "open-vm-tools", "source": "sysv", "state": "stopped"}, "open-vm-tools.service": {"name": "open-vm-tools.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ovsdb-server.service": {"name": "ovsdb-server.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "packagekit-offline-update.service": {"name": "packagekit-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "packagekit.service": {"name": "packagekit.service", "source": "systemd", "state": "running", "status": "static"}, "plymouth": {"name": "plymouth", "source": "sysv", "state": "running"}, "plymouth-halt.service": {"name": "plymouth-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-kexec.service": {"name": "plymouth-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-log": {"name": "plymouth-log", "source": "sysv", "state": "running"}, "plymouth-log.service": {"name": "plymouth-log.service", "source": "systemd", "state": "active", "status": "alias"}, "plymouth-poweroff.service": {"name": "plymouth-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-quit-wait.service": {"name": "plymouth-quit-wait.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-quit.service": {"name": "plymouth-quit.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-read-write.service": {"name": "plymouth-read-write.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-reboot.service": {"name": "plymouth-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-start.service": {"name": "plymouth-start.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-switch-root-initramfs.service": {"name": "plymouth-switch-root-initramfs.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-switch-root.service": {"name": "plymouth-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth.service": {"name": "plymouth.service", "source": "systemd", "state": "active", "status": "alias"}, "polkit.service": {"name": "polkit.service", "source": "systemd", "state": "running", "status": "static"}, "pollinate.service": {"name": "pollinate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "procps": {"name": "procps", "source": "sysv", "state": "running"}, "procps.service": {"name": "procps.service", "source": "systemd", "state": "active", "status": "alias"}, "quotaon.service": {"name": "quotaon.service", "source": "systemd", "state": "inactive", "status": "static"}, "rbdmap.service": {"name": "rbdmap.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "rc-local.service": {"name": "rc-local.service", "source": "systemd", "state": "stopped", "status": "static"}, "rc.service": {"name": "rc.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rcS.service": {"name": "rcS.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rescue.service": {"name": "rescue.service", "source": "systemd", "state": "stopped", "status": "static"}, "rsync": {"name": "rsync", "source": "sysv", "state": "stopped"}, "rsync.service": {"name": "rsync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rsyslog.service": {"name": "rsyslog.service", "source": "systemd", "state": "running", "status": "enabled"}, "screen-cleanup": {"name": "screen-cleanup", "source": "sysv", "state": "stopped"}, "screen-cleanup.service": {"name": "screen-cleanup.service", "source": "systemd", "state": "inactive", "status": "masked"}, "secureboot-db.service": {"name": "secureboot-db.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "serial-getty@.service": {"name": "serial-getty@.service", "source": "systemd", "state": "unknown", "status": "disabled"}, "setvtrgb.service": {"name": "setvtrgb.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.activate.service": {"name": "snap.lxd.activate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.daemon.service": {"name": "snap.lxd.daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snap.lxd.user-daemon.service": {"name": "snap.lxd.user-daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.aa-prompt-listener.service": {"name": "snapd.aa-prompt-listener.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.apparmor.service": {"name": "snapd.apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.autoimport.service": {"name": "snapd.autoimport.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.core-fixup.service": {"name": "snapd.core-fixup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.failure.service": {"name": "snapd.failure.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.recovery-chooser-trigger.service": {"name": "snapd.recovery-chooser-trigger.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.seeded.service": {"name": "snapd.seeded.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.service": {"name": "snapd.service", "source": "systemd", "state": "running", "status": "enabled"}, "snapd.snap-repair.service": {"name": "snapd.snap-repair.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.system-shutdown.service": {"name": "snapd.system-shutdown.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "ssh": {"name": "ssh", "source": "sysv", "state": "running"}, "ssh.service": {"name": "ssh.service", "source": "systemd", "state": "running", "status": "enabled"}, "ssh@.service": {"name": "ssh@.service", "source": "systemd", "state": "unknown", "status": "static"}, "sshd-keygen.service": {"name": "sshd-keygen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd.service": {"name": "sshd.service", "source": "systemd", "state": "active", "status": "alias"}, "sudo.service": {"name": "sudo.service", "source": "systemd", "state": "inactive", "status": "masked"}, "syslog.service": {"name": "syslog.service", "source": "systemd", "state": "active", "status": "alias"}, "system-update-cleanup.service": {"name": "system-update-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-ask-password-console.service": {"name": "systemd-ask-password-console.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-plymouth.service": {"name": "systemd-ask-password-plymouth.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-wall.service": {"name": "systemd-ask-password-wall.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-backlight@.service": {"name": "systemd-backlight@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-binfmt.service": {"name": "systemd-binfmt.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-bless-boot.service": {"name": "systemd-bless-boot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-boot-check-no-failures.service": {"name": "systemd-boot-check-no-failures.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-boot-system-token.service": {"name": "systemd-boot-system-token.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-exit.service": {"name": "systemd-exit.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-fsck-root.service": {"name": "systemd-fsck-root.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-fsck@.service": {"name": "systemd-fsck@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service": {"name": "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-fsckd.service": {"name": "systemd-fsckd.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-halt.service": {"name": "systemd-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hibernate-resume@.service": {"name": "systemd-hibernate-resume@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-hibernate.service": {"name": "systemd-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hostnamed.service": {"name": "systemd-hostnamed.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-hwdb-update.service": {"name": "systemd-hwdb-update.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-hybrid-sleep.service": {"name": "systemd-hybrid-sleep.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-initctl.service": {"name": "systemd-initctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-flush.service": {"name": "systemd-journal-flush.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journald.service": {"name": "systemd-journald.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-journald@.service": {"name": "systemd-journald@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-kexec.service": {"name": "systemd-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-localed.service": {"name": "systemd-localed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-logind.service": {"name": "systemd-logind.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-machine-id-commit.service": {"name": "systemd-machine-id-commit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-modules-load.service": {"name": "systemd-modules-load.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-network-generator.service": {"name": "systemd-network-generator.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-networkd-wait-online.service": {"name": "systemd-networkd-wait-online.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-networkd.service": {"name": "systemd-networkd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-poweroff.service": {"name": "systemd-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pstore.service": {"name": "systemd-pstore.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-quotacheck.service": {"name": "systemd-quotacheck.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-random-seed.service": {"name": "systemd-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-reboot.service": {"name": "systemd-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-remount-fs.service": {"name": "systemd-remount-fs.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-resolved.service": {"name": "systemd-resolved.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-rfkill.service": {"name": "systemd-rfkill.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-suspend-then-hibernate.service": {"name": "systemd-suspend-then-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-suspend.service": {"name": "systemd-suspend.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-sysctl.service": {"name": "systemd-sysctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-sysext.service": {"name": "systemd-sysext.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-sysusers.service": {"name": "systemd-sysusers.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-time-wait-sync.service": {"name": "systemd-time-wait-sync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-timedated.service": {"name": "systemd-timedated.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-timesyncd.service": {"name": "systemd-timesyncd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-tmpfiles-clean.service": {"name": "systemd-tmpfiles-clean.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup-dev.service": {"name": "systemd-tmpfiles-setup-dev.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup.service": {"name": "systemd-tmpfiles-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udev-settle.service": {"name": "systemd-udev-settle.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-udev-trigger.service": {"name": "systemd-udev-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udevd.service": {"name": "systemd-udevd.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-update-done.service": {"name": "systemd-update-done.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-update-utmp-runlevel.service": {"name": "systemd-update-utmp-runlevel.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp.service": {"name": "systemd-update-utmp.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-user-sessions.service": {"name": "systemd-user-sessions.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-vconsole-setup.service": {"name": "systemd-vconsole-setup.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-volatile-root.service": {"name": "systemd-volatile-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "thermald.service": {"name": "thermald.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-auto-attach.service": {"name": "ua-auto-attach.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ua-reboot-cmds.service": {"name": "ua-reboot-cmds.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-timer.service": {"name": "ua-timer.service", "source": "systemd", "state": "stopped", "status": "static"}, "ubuntu-advantage-cloud-id-shim.service": {"name": "ubuntu-advantage-cloud-id-shim.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ubuntu-advantage.service": {"name": "ubuntu-advantage.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "udev": {"name": "udev", "source": "sysv", "state": "running"}, "udev.service": {"name": "udev.service", "source": "systemd", "state": "active", "status": "alias"}, "udisks2.service": {"name": "udisks2.service", "source": "systemd", "state": "running", "status": "enabled"}, "ufw": {"name": "ufw", "source": "sysv", "state": "running"}, "ufw.service": {"name": "ufw.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "unattended-upgrades": {"name": "unattended-upgrades", "source": "sysv", "state": "running"}, "unattended-upgrades.service": {"name": "unattended-upgrades.service", "source": "systemd", "state": "running", "status": "enabled"}, "update-notifier-download.service": {"name": "update-notifier-download.service", "source": "systemd", "state": "inactive", "status": "static"}, "update-notifier-motd.service": {"name": "update-notifier-motd.service", "source": "systemd", "state": "stopped", "status": "static"}, "upower.service": {"name": "upower.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "usb_modeswitch@.service": {"name": "usb_modeswitch@.service", "source": "systemd", "state": "unknown", "status": "static"}, "usbmuxd.service": {"name": "usbmuxd.service", "source": "systemd", "state": "inactive", "status": "static"}, "user-runtime-dir@.service": {"name": "user-runtime-dir@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user-runtime-dir@0.service": {"name": "user-runtime-dir@0.service", "source": "systemd", "state": "stopped", "status": "active"}, "user-runtime-dir@1000.service": {"name": "user-runtime-dir@1000.service", "source": "systemd", "state": "stopped", "status": "active"}, "user@.service": {"name": "user@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user@0.service": {"name": "user@0.service", "source": "systemd", "state": "running", "status": "active"}, "user@1000.service": {"name": "user@1000.service", "source": "systemd", "state": "running", "status": "active"}, "uuidd": {"name": "uuidd", "source": "sysv", "state": "stopped"}, "uuidd.service": {"name": "uuidd.service", "source": "systemd", "state": "stopped", "status": "indirect"}, "vgauth.service": {"name": "vgauth.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "vmtoolsd.service": {"name": "vmtoolsd.service", "source": "systemd", "state": "inactive", "status": "alias"}, "x11-common.service": {"name": "x11-common.service", "source": "systemd", "state": "inactive", "status": "masked"}, "xfs_scrub@.service": {"name": "xfs_scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "xfs_scrub_all.service": {"name": "xfs_scrub_all.service", "source": "systemd", "state": "inactive", "status": "static"}, "xfs_scrub_fail@.service": {"name": "xfs_scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "zfs-mount.service": {"name": "zfs-mount.service", "source": "systemd", "state": "stopped", "status": "not-found"}}}, "changed": false}
2023-07-10 15:08:39,159 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:39 +0300 (0:00:02.627)       0:00:34.902 ****** 
2023-07-10 15:08:39,679 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if containerd is installed] *********************************************************************************************************
2023-07-10 15:08:39,679 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 927, "files": [{"atime": 1688989439.1442995, "ctime": 1688989436.4363012, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 262627, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989436.3123012, "nlink": 1, "path": "/etc/systemd/system/containerd.service", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 1365, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 1, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:08:39,695 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:39 +0300 (0:00:00.535)       0:00:35.438 ****** 
2023-07-10 15:08:39,993 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if docker is installed] *************************************************************************************************************
2023-07-10 15:08:39,994 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 927, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:08:40,013 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.317)       0:00:35.756 ****** 
2023-07-10 15:08:40,301 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if crio is installed] ***************************************************************************************************************
2023-07-10 15:08:40,302 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 925, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:08:40,315 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.302)       0:00:36.058 ****** 
2023-07-10 15:08:40,363 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.048)       0:00:36.106 ****** 
2023-07-10 15:08:40,411 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.047)       0:00:36.154 ****** 
2023-07-10 15:08:40,459 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.048)       0:00:36.202 ****** 
2023-07-10 15:08:40,507 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.048)       0:00:36.250 ****** 
2023-07-10 15:08:40,708 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.200)       0:00:36.451 ****** 
2023-07-10 15:08:40,770 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.061)       0:00:36.512 ****** 
2023-07-10 15:08:40,826 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.056)       0:00:36.569 ****** 
2023-07-10 15:08:40,884 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.057)       0:00:36.627 ****** 
2023-07-10 15:08:40,952 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:40 +0300 (0:00:00.068)       0:00:36.695 ****** 
2023-07-10 15:08:41,020 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.067)       0:00:36.763 ****** 
2023-07-10 15:08:41,110 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.089)       0:00:36.852 ****** 
2023-07-10 15:08:41,231 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.122)       0:00:36.974 ****** 
2023-07-10 15:08:41,301 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.069)       0:00:37.044 ****** 
2023-07-10 15:08:41,374 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.072)       0:00:37.117 ****** 
2023-07-10 15:08:41,426 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.051)       0:00:37.169 ****** 
2023-07-10 15:08:41,486 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.059)       0:00:37.229 ****** 
2023-07-10 15:08:41,534 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.048)       0:00:37.277 ****** 
2023-07-10 15:08:41,598 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.063)       0:00:37.340 ****** 
2023-07-10 15:08:41,645 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.047)       0:00:37.388 ****** 
2023-07-10 15:08:41,769 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.123)       0:00:37.512 ****** 
2023-07-10 15:08:41,807 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.037)       0:00:37.550 ****** 
2023-07-10 15:08:41,838 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.030)       0:00:37.580 ****** 
2023-07-10 15:08:41,868 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.030)       0:00:37.611 ****** 
2023-07-10 15:08:41,901 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:41 +0300 (0:00:00.032)       0:00:37.644 ****** 
2023-07-10 15:08:42,015 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.113)       0:00:37.758 ****** 
2023-07-10 15:08:42,058 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.042)       0:00:37.801 ****** 
2023-07-10 15:08:42,086 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.028)       0:00:37.829 ****** 
2023-07-10 15:08:42,115 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.029)       0:00:37.858 ****** 
2023-07-10 15:08:42,146 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.030)       0:00:37.889 ****** 
2023-07-10 15:08:42,175 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.028)       0:00:37.918 ****** 
2023-07-10 15:08:42,212 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.037)       0:00:37.955 ****** 
2023-07-10 15:08:42,245 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.032)       0:00:37.988 ****** 
2023-07-10 15:08:42,277 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.031)       0:00:38.020 ****** 
2023-07-10 15:08:42,309 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.032)       0:00:38.052 ****** 
2023-07-10 15:08:42,340 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.031)       0:00:38.083 ****** 
2023-07-10 15:08:42,394 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.053)       0:00:38.137 ****** 
2023-07-10 15:08:42,428 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.034)       0:00:38.171 ****** 
2023-07-10 15:08:42,461 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.032)       0:00:38.204 ****** 
2023-07-10 15:08:42,500 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.039)       0:00:38.243 ****** 
2023-07-10 15:08:42,531 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.030)       0:00:38.274 ****** 
2023-07-10 15:08:42,564 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.033)       0:00:38.307 ****** 
2023-07-10 15:08:42,646 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.082)       0:00:38.389 ****** 
2023-07-10 15:08:42,686 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.039)       0:00:38.429 ****** 
2023-07-10 15:08:42,715 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.029)       0:00:38.458 ****** 
2023-07-10 15:08:42,747 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.031)       0:00:38.490 ****** 
2023-07-10 15:08:42,778 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.031)       0:00:38.521 ****** 
2023-07-10 15:08:42,809 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.031)       0:00:38.552 ****** 
2023-07-10 15:08:42,843 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.033)       0:00:38.586 ****** 
2023-07-10 15:08:42,875 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.031)       0:00:38.618 ****** 
2023-07-10 15:08:42,907 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.032)       0:00:38.650 ****** 
2023-07-10 15:08:42,946 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.038)       0:00:38.689 ****** 
2023-07-10 15:08:42,985 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:42 +0300 (0:00:00.038)       0:00:38.728 ****** 
2023-07-10 15:08:43,020 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.035)       0:00:38.763 ****** 
2023-07-10 15:08:43,052 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.031)       0:00:38.795 ****** 
2023-07-10 15:08:43,086 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.034)       0:00:38.829 ****** 
2023-07-10 15:08:43,119 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.032)       0:00:38.862 ****** 
2023-07-10 15:08:43,157 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.038)       0:00:38.900 ****** 
2023-07-10 15:08:43,190 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.032)       0:00:38.933 ****** 
2023-07-10 15:08:43,221 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.031)       0:00:38.964 ****** 
2023-07-10 15:08:43,253 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.031)       0:00:38.996 ****** 
2023-07-10 15:08:43,284 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.031)       0:00:39.027 ****** 
2023-07-10 15:08:43,315 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.030)       0:00:39.058 ****** 
2023-07-10 15:08:43,346 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.031)       0:00:39.089 ****** 
2023-07-10 15:08:43,391 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.044)       0:00:39.134 ****** 
2023-07-10 15:08:43,423 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.032)       0:00:39.166 ****** 
2023-07-10 15:08:43,475 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.052)       0:00:39.218 ****** 
2023-07-10 15:08:43,552 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.076)       0:00:39.295 ****** 
2023-07-10 15:08:43,583 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.031)       0:00:39.326 ****** 
2023-07-10 15:08:43,611 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.027)       0:00:39.354 ****** 
2023-07-10 15:08:43,638 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.026)       0:00:39.381 ****** 
2023-07-10 15:08:43,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.033)       0:00:39.414 ****** 
2023-07-10 15:08:43,705 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.033)       0:00:39.448 ****** 
2023-07-10 15:08:43,745 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.039)       0:00:39.488 ****** 
2023-07-10 15:08:43,782 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.036)       0:00:39.524 ****** 
2023-07-10 15:08:43,809 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.027)       0:00:39.553 ****** 
2023-07-10 15:08:43,837 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:43 +0300 (0:00:00.027)       0:00:39.580 ****** 
2023-07-10 15:08:45,463 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:01.626)       0:00:41.206 ****** 
2023-07-10 15:08:45,491 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.027)       0:00:41.234 ****** 
2023-07-10 15:08:45,526 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.035)       0:00:41.269 ****** 
2023-07-10 15:08:45,552 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.025)       0:00:41.295 ****** 
2023-07-10 15:08:45,588 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.036)       0:00:41.331 ****** 
2023-07-10 15:08:45,616 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.028)       0:00:41.359 ****** 
2023-07-10 15:08:45,644 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.027)       0:00:41.387 ****** 
2023-07-10 15:08:45,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.026)       0:00:41.414 ****** 
2023-07-10 15:08:45,697 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.026)       0:00:41.440 ****** 
2023-07-10 15:08:45,726 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.028)       0:00:41.468 ****** 
2023-07-10 15:08:45,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.033)       0:00:41.502 ****** 
2023-07-10 15:08:45,796 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.036)       0:00:41.539 ****** 
2023-07-10 15:08:45,822 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.026)       0:00:41.565 ****** 
2023-07-10 15:08:45,850 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.027)       0:00:41.593 ****** 
2023-07-10 15:08:45,883 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.032)       0:00:41.626 ****** 
2023-07-10 15:08:45,909 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.026)       0:00:41.652 ****** 
2023-07-10 15:08:45,944 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.034)       0:00:41.687 ****** 
2023-07-10 15:08:45,972 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.027)       0:00:41.715 ****** 
2023-07-10 15:08:46,000 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:45 +0300 (0:00:00.027)       0:00:41.743 ****** 
2023-07-10 15:08:46,028 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.028)       0:00:41.771 ****** 
2023-07-10 15:08:46,057 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.028)       0:00:41.800 ****** 
2023-07-10 15:08:46,095 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.037)       0:00:41.838 ****** 
2023-07-10 15:08:46,141 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.046)       0:00:41.884 ****** 
2023-07-10 15:08:46,187 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.045)       0:00:41.930 ****** 
2023-07-10 15:08:46,232 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.044)       0:00:41.975 ****** 
2023-07-10 15:08:46,279 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.046)       0:00:42.022 ****** 
2023-07-10 15:08:46,330 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.051)       0:00:42.073 ****** 
2023-07-10 15:08:46,375 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.044)       0:00:42.118 ****** 
2023-07-10 15:08:46,421 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.046)       0:00:42.164 ****** 
2023-07-10 15:08:46,468 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.046)       0:00:42.211 ****** 
2023-07-10 15:08:46,516 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.047)       0:00:42.259 ****** 
2023-07-10 15:08:46,562 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.045)       0:00:42.305 ****** 
2023-07-10 15:08:46,611 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.049)       0:00:42.354 ****** 
2023-07-10 15:08:46,658 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.047)       0:00:42.401 ****** 
2023-07-10 15:08:46,705 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.046)       0:00:42.448 ****** 
2023-07-10 15:08:46,774 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.069)       0:00:42.517 ****** 
2023-07-10 15:08:46,847 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.072)       0:00:42.590 ****** 
2023-07-10 15:08:46,929 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.082)       0:00:42.672 ****** 
2023-07-10 15:08:46,975 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:46 +0300 (0:00:00.045)       0:00:42.718 ****** 
2023-07-10 15:08:47,019 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:42.762 ****** 
2023-07-10 15:08:47,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:42.807 ****** 
2023-07-10 15:08:47,140 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.076)       0:00:42.883 ****** 
2023-07-10 15:08:47,185 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:42.928 ****** 
2023-07-10 15:08:47,229 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:42.972 ****** 
2023-07-10 15:08:47,314 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.084)       0:00:43.057 ****** 
2023-07-10 15:08:47,357 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.043)       0:00:43.100 ****** 
2023-07-10 15:08:47,402 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:43.145 ****** 
2023-07-10 15:08:47,448 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.046)       0:00:43.191 ****** 
2023-07-10 15:08:47,503 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.054)       0:00:43.246 ****** 
2023-07-10 15:08:47,553 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.049)       0:00:43.296 ****** 
2023-07-10 15:08:47,620 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.067)       0:00:43.363 ****** 
2023-07-10 15:08:47,665 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:43.408 ****** 
2023-07-10 15:08:47,710 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.044)       0:00:43.453 ****** 
2023-07-10 15:08:47,749 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.039)       0:00:43.492 ****** 
2023-07-10 15:08:47,794 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.045)       0:00:43.537 ****** 
2023-07-10 15:08:47,840 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.046)       0:00:43.583 ****** 
2023-07-10 15:08:47,907 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.066)       0:00:43.650 ****** 
2023-07-10 15:08:47,950 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.043)       0:00:43.693 ****** 
2023-07-10 15:08:47,996 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:47 +0300 (0:00:00.045)       0:00:43.739 ****** 
2023-07-10 15:08:48,055 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:48 +0300 (0:00:00.058)       0:00:43.798 ****** 
2023-07-10 15:08:48,325 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] *******************************************************************************************************
2023-07-10 15:08:48,326 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:48,343 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:48 +0300 (0:00:00.288)       0:00:44.086 ****** 
2023-07-10 15:08:48,414 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | set is_ostree] ****************************************************************************************************************
2023-07-10 15:08:48,415 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:08:48,430 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:48 +0300 (0:00:00.086)       0:00:44.172 ****** 
2023-07-10 15:08:48,630 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | gather os specific variables] *************************************************************************************************
2023-07-10 15:08:48,631 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) => {"ansible_facts": {"containerd_repo_info": {"repos": ["deb {{ containerd_ubuntu_repo_base_url }} {{ ansible_distribution_release | lower }} {{ containerd_ubuntu_repo_component }}\n"]}}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml"}
2023-07-10 15:08:48,660 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:48 +0300 (0:00:00.230)       0:00:44.403 ****** 
2023-07-10 15:08:48,934 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | check if fedora coreos] *********************************************************************************************************************************
2023-07-10 15:08:48,935 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:08:48,949 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:48 +0300 (0:00:00.288)       0:00:44.692 ****** 
2023-07-10 15:08:49,021 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | set is_ostree] ******************************************************************************************************************************************
2023-07-10 15:08:49,022 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:08:49,036 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:49 +0300 (0:00:00.086)       0:00:44.779 ****** 
2023-07-10 15:08:49,756 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ******************************************************************************************************
2023-07-10 15:08:49,757 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:08:49,772 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:49 +0300 (0:00:00.735)       0:00:45.515 ****** 
2023-07-10 15:08:49,802 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Download runc binary] ***********************************************************************************************************************************
2023-07-10 15:08:49,834 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:08:49,854 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:49 +0300 (0:00:00.082)       0:00:45.597 ****** 
2023-07-10 15:08:49,930 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : prep_download | Set a few facts] *******************************************************************************************************************************
2023-07-10 15:08:49,931 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:08:49,945 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:49 +0300 (0:00:00.090)       0:00:45.688 ****** 
2023-07-10 15:08:50,959 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Starting download of file] *********************************************************************************************************************
2023-07-10 15:08:50,960 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 15:08:50,968 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:50 +0300 (0:00:01.023)       0:00:46.711 ****** 
2023-07-10 15:08:51,807 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Set pathname of cached file] *******************************************************************************************************************
2023-07-10 15:08:51,807 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 15:08:51,816 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:51 +0300 (0:00:00.847)       0:00:47.559 ****** 
2023-07-10 15:08:53,591 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Create dest directory on node] *****************************************************************************************************************
2023-07-10 15:08:53,591 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:08:53,604 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:53 +0300 (0:00:01.787)       0:00:49.347 ****** 
2023-07-10 15:08:53,645 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:53 +0300 (0:00:00.041)       0:00:49.388 ****** 
2023-07-10 15:08:54,734 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:54 +0300 (0:00:01.088)       0:00:50.477 ****** 
2023-07-10 15:08:58,214 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Validate mirrors] ******************************************************************************************************************************
2023-07-10 15:08:58,215 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:08:58,218 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:08:58,238 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:58 +0300 (0:00:03.503)       0:00:53.981 ****** 
2023-07-10 15:08:58,307 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Get the list of working mirrors] ***************************************************************************************************************
2023-07-10 15:08:58,308 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 15:08:58,328 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:08:58 +0300 (0:00:00.090)       0:00:54.071 ****** 
2023-07-10 15:09:06,679 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Download item] *********************************************************************************************************************************
2023-07-10 15:09:06,679 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:06,694 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:06 +0300 (0:00:08.366)       0:01:02.437 ****** 
2023-07-10 15:09:06,748 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:06 +0300 (0:00:00.053)       0:01:02.491 ****** 
2023-07-10 15:09:06,801 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:06 +0300 (0:00:00.053)       0:01:02.544 ****** 
2023-07-10 15:09:06,852 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:06 +0300 (0:00:00.050)       0:01:02.595 ****** 
2023-07-10 15:09:06,886 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Extract file archives] *************************************************************************************************************************
2023-07-10 15:09:06,904 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:09:06,928 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:06 +0300 (0:00:00.076)       0:01:02.671 ****** 
2023-07-10 15:09:08,059 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:08 +0300 (0:00:01.131)       0:01:03.802 ****** 
2023-07-10 15:09:09,244 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : Copy runc binary from download dir] ****************************************************************************************************************************
2023-07-10 15:09:09,245 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c2a25f41774ecb90b4f51fb11ebb06337862e2b7", "dest": "/usr/local/bin/runc", "gid": 0, "group": "root", "md5sum": "0407860329c7f81077a17b574eccc75e", "mode": "0755", "owner": "root", "size": 9644288, "src": "/tmp/releases/runc-v1.1.7.amd64", "state": "file", "uid": 0}
2023-07-10 15:09:09,254 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:09 +0300 (0:00:01.194)       0:01:04.997 ****** 
2023-07-10 15:09:09,426 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Remove orphaned binary] *********************************************************************************************************************************
2023-07-10 15:09:09,426 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/usr/bin/runc", "state": "absent"}
2023-07-10 15:09:09,442 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:09 +0300 (0:00:00.188)       0:01:05.185 ****** 
2023-07-10 15:09:09,464 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : install crictl] **********************************************************************************************************************************************
2023-07-10 15:09:09,477 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1
2023-07-10 15:09:09,487 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:09 +0300 (0:00:00.044)       0:01:05.230 ****** 
2023-07-10 15:09:09,510 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : crictl | Download crictl] ************************************************************************************************************************************
2023-07-10 15:09:09,533 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:09:09,546 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:09 +0300 (0:00:00.059)       0:01:05.289 ****** 
2023-07-10 15:09:09,595 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : prep_download | Set a few facts] *****************************************************************************************************************************
2023-07-10 15:09:09,596 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:09:09,604 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:09 +0300 (0:00:00.058)       0:01:05.347 ****** 
2023-07-10 15:09:10,445 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Starting download of file] *******************************************************************************************************************
2023-07-10 15:09:10,445 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 15:09:10,454 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:10 +0300 (0:00:00.850)       0:01:06.197 ****** 
2023-07-10 15:09:11,295 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Set pathname of cached file] *****************************************************************************************************************
2023-07-10 15:09:11,295 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:09:11,305 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:11 +0300 (0:00:00.850)       0:01:07.048 ****** 
2023-07-10 15:09:13,857 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Create dest directory on node] ***************************************************************************************************************
2023-07-10 15:09:13,858 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:09:13,877 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:13 +0300 (0:00:02.571)       0:01:09.620 ****** 
2023-07-10 15:09:13,952 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:13 +0300 (0:00:00.075)       0:01:09.695 ****** 
2023-07-10 15:09:15,372 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:15 +0300 (0:00:01.419)       0:01:11.115 ****** 
2023-07-10 15:09:18,940 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Validate mirrors] ****************************************************************************************************************************
2023-07-10 15:09:18,940 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:18,943 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:18,960 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:18 +0300 (0:00:03.588)       0:01:14.703 ****** 
2023-07-10 15:09:19,028 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Get the list of working mirrors] *************************************************************************************************************
2023-07-10 15:09:19,029 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:09:19,047 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:19 +0300 (0:00:00.086)       0:01:14.790 ****** 
2023-07-10 15:09:27,483 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Download item] *******************************************************************************************************************************
2023-07-10 15:09:27,483 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:27,491 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:27 +0300 (0:00:08.444)       0:01:23.235 ****** 
2023-07-10 15:09:27,532 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:27 +0300 (0:00:00.039)       0:01:23.275 ****** 
2023-07-10 15:09:27,568 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:27 +0300 (0:00:00.036)       0:01:23.311 ****** 
2023-07-10 15:09:27,609 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:27 +0300 (0:00:00.040)       0:01:23.352 ****** 
2023-07-10 15:09:27,634 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Extract file archives] ***********************************************************************************************************************
2023-07-10 15:09:27,646 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:09:27,662 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:27 +0300 (0:00:00.053)       0:01:23.405 ****** 
2023-07-10 15:09:35,601 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : extract_file | Unpacking archive] ****************************************************************************************************************************
2023-07-10 15:09:35,601 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:09:35,612 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:35 +0300 (0:00:07.949)       0:01:31.355 ****** 
2023-07-10 15:09:35,982 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Install crictl config] ***************************************************************************************************************************************
2023-07-10 15:09:35,983 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "8c563ee377b8aad181d3a00e06314316dc085513", "dest": "/etc/crictl.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/crictl.yaml", "size": 145, "state": "file", "uid": 0}
2023-07-10 15:09:35,992 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:35 +0300 (0:00:00.380)       0:01:31.735 ****** 
2023-07-10 15:09:36,365 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Copy crictl binary from download dir] ************************************************************************************************************************
2023-07-10 15:09:36,366 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "ecebb8d084fb6bfcd42716ecb222a0bd7599d3f5", "dest": "/usr/local/bin/crictl", "gid": 0, "group": "root", "md5sum": "d8aaa4799d86a7beda6c6378b78f80b1", "mode": "0755", "owner": "root", "size": 52586151, "src": "/tmp/releases/crictl", "state": "file", "uid": 0}
2023-07-10 15:09:36,384 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:36 +0300 (0:00:00.391)       0:01:32.127 ****** 
2023-07-10 15:09:36,406 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *********************************************************************************************************************************
2023-07-10 15:09:36,424 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:09:36,438 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:36 +0300 (0:00:00.054)       0:01:32.181 ****** 
2023-07-10 15:09:36,486 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : prep_download | Set a few facts] ****************************************************************************************************************************
2023-07-10 15:09:36,487 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:09:36,497 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:36 +0300 (0:00:00.058)       0:01:32.240 ****** 
2023-07-10 15:09:37,337 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Starting download of file] ******************************************************************************************************************
2023-07-10 15:09:37,337 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 15:09:37,348 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:37 +0300 (0:00:00.850)       0:01:33.091 ****** 
2023-07-10 15:09:38,444 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ****************************************************************************************************************
2023-07-10 15:09:38,445 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:09:38,461 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:38 +0300 (0:00:01.113)       0:01:34.204 ****** 
2023-07-10 15:09:41,549 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Create dest directory on node] **************************************************************************************************************
2023-07-10 15:09:41,550 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:09:41,571 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:41 +0300 (0:00:03.109)       0:01:37.314 ****** 
2023-07-10 15:09:41,642 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:41 +0300 (0:00:00.071)       0:01:37.385 ****** 
2023-07-10 15:09:42,736 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:42 +0300 (0:00:01.094)       0:01:38.479 ****** 
2023-07-10 15:09:46,059 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Validate mirrors] ***************************************************************************************************************************
2023-07-10 15:09:46,059 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:46,062 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:46,080 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:46 +0300 (0:00:03.343)       0:01:41.823 ****** 
2023-07-10 15:09:46,147 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ************************************************************************************************************
2023-07-10 15:09:46,148 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:09:46,165 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:46 +0300 (0:00:00.084)       0:01:41.908 ****** 
2023-07-10 15:09:54,712 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Download item] ******************************************************************************************************************************
2023-07-10 15:09:54,712 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:09:54,721 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:54 +0300 (0:00:08.555)       0:01:50.464 ****** 
2023-07-10 15:09:54,755 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:54 +0300 (0:00:00.034)       0:01:50.498 ****** 
2023-07-10 15:09:54,792 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:54 +0300 (0:00:00.037)       0:01:50.535 ****** 
2023-07-10 15:09:54,829 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:54 +0300 (0:00:00.036)       0:01:50.572 ****** 
2023-07-10 15:09:54,853 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Extract file archives] **********************************************************************************************************************
2023-07-10 15:09:54,864 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:09:54,880 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:09:54 +0300 (0:00:00.051)       0:01:50.623 ****** 
2023-07-10 15:10:00,963 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : extract_file | Unpacking archive] ***************************************************************************************************************************
2023-07-10 15:10:00,964 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:10:00,972 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:00 +0300 (0:00:06.092)       0:01:56.715 ****** 
2023-07-10 15:10:01,278 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ************************************************************************************************************
2023-07-10 15:10:01,278 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "36ed3de5ebdc71f782c80b95c6838797e71f1d06", "dest": "/usr/local/bin/nerdctl", "gid": 0, "group": "root", "md5sum": "1382ce88987ba5832c4477d0a781b6f1", "mode": "0755", "owner": "root", "size": 24379392, "src": "/tmp/releases/nerdctl", "state": "file", "uid": 0}
2023-07-10 15:10:01,287 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:01 +0300 (0:00:00.314)       0:01:57.030 ****** 
2023-07-10 15:10:01,464 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Create configuration dir] *************************************************************************************************************************
2023-07-10 15:10:01,465 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/nerdctl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:01,474 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:01 +0300 (0:00:00.187)       0:01:57.217 ****** 
2023-07-10 15:10:01,877 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ********************************************************************************************************************
2023-07-10 15:10:01,877 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "e46d9c0efd0a617d0682d1b779320ada3a505ca4", "dest": "/etc/nerdctl/nerdctl.toml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/nerdctl/nerdctl.toml", "size": 354, "state": "file", "uid": 0}
2023-07-10 15:10:01,892 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:01 +0300 (0:00:00.417)       0:01:57.635 ****** 
2023-07-10 15:10:01,935 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:01 +0300 (0:00:00.043)       0:01:57.678 ****** 
2023-07-10 15:10:02,401 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove any package manager controlled containerd package] ***********************************************************************************
2023-07-10 15:10:02,401 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:10:02,410 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:02 +0300 (0:00:00.474)       0:01:58.153 ****** 
2023-07-10 15:10:02,441 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:02 +0300 (0:00:00.030)       0:01:58.183 ****** 
2023-07-10 15:10:02,912 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove containerd repository] ***************************************************************************************************************
2023-07-10 15:10:02,913 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=deb https://download.docker.com/linux/ubuntu jammy stable
) => {"ansible_loop_var": "item", "changed": false, "item": "deb https://download.docker.com/linux/ubuntu jammy stable\n", "repo": "deb https://download.docker.com/linux/ubuntu jammy stable\n", "state": "absent"}
2023-07-10 15:10:02,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:02 +0300 (0:00:00.482)       0:01:58.666 ****** 
2023-07-10 15:10:02,942 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Download containerd] ************************************************************************************************************************
2023-07-10 15:10:02,962 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:10:02,977 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:02 +0300 (0:00:00.053)       0:01:58.720 ****** 
2023-07-10 15:10:03,020 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : prep_download | Set a few facts] *************************************************************************************************************************
2023-07-10 15:10:03,021 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:10:03,031 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:03 +0300 (0:00:00.054)       0:01:58.774 ****** 
2023-07-10 15:10:04,046 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Starting download of file] ***************************************************************************************************************
2023-07-10 15:10:04,047 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
}
2023-07-10 15:10:04,062 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:04 +0300 (0:00:01.030)       0:01:59.805 ****** 
2023-07-10 15:10:05,492 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Set pathname of cached file] *************************************************************************************************************
2023-07-10 15:10:05,492 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/containerd-1.7.2-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:10:05,508 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:05 +0300 (0:00:01.446)       0:02:01.251 ****** 
2023-07-10 15:10:08,303 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Create dest directory on node] ***********************************************************************************************************
2023-07-10 15:10:08,304 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:08,318 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:08 +0300 (0:00:02.809)       0:02:04.060 ****** 
2023-07-10 15:10:08,363 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:08 +0300 (0:00:00.045)       0:02:04.106 ****** 
2023-07-10 15:10:09,241 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:09 +0300 (0:00:00.878)       0:02:04.984 ****** 
2023-07-10 15:10:12,958 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Validate mirrors] ************************************************************************************************************************
2023-07-10 15:10:12,958 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:12,962 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:12,991 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:12 +0300 (0:00:03.749)       0:02:08.734 ****** 
2023-07-10 15:10:13,102 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Get the list of working mirrors] *********************************************************************************************************
2023-07-10 15:10:13,102 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:10:13,131 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:13 +0300 (0:00:00.140)       0:02:08.874 ****** 
2023-07-10 15:10:21,908 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Download item] ***************************************************************************************************************************
2023-07-10 15:10:21,908 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:21,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:21 +0300 (0:00:08.791)       0:02:17.666 ****** 
2023-07-10 15:10:21,979 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:21 +0300 (0:00:00.055)       0:02:17.722 ****** 
2023-07-10 15:10:22,043 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:22 +0300 (0:00:00.064)       0:02:17.786 ****** 
2023-07-10 15:10:22,110 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:22 +0300 (0:00:00.067)       0:02:17.853 ****** 
2023-07-10 15:10:22,163 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Extract file archives] *******************************************************************************************************************
2023-07-10 15:10:22,181 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:10:22,208 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:22 +0300 (0:00:00.097)       0:02:17.951 ****** 
2023-07-10 15:10:23,663 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:23 +0300 (0:00:01.454)       0:02:19.406 ****** 
2023-07-10 15:10:27,053 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Unpack containerd archive] ******************************************************************************************************************
2023-07-10 15:10:27,053 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/usr/local/bin", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:10:27,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:27 +0300 (0:00:03.400)       0:02:22.807 ****** 
2023-07-10 15:10:27,263 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove orphaned binary] *********************************************************************************************************************
2023-07-10 15:10:27,263 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd) => {"ansible_loop_var": "item", "changed": false, "item": "containerd", "path": "/usr/bin/containerd", "state": "absent"}
2023-07-10 15:10:27,433 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim", "path": "/usr/bin/containerd-shim", "state": "absent"}
2023-07-10 15:10:27,618 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim-runc-v1) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim-runc-v1", "path": "/usr/bin/containerd-shim-runc-v1", "state": "absent"}
2023-07-10 15:10:27,783 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim-runc-v2) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim-runc-v2", "path": "/usr/bin/containerd-shim-runc-v2", "state": "absent"}
2023-07-10 15:10:27,946 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=ctr) => {"ansible_loop_var": "item", "changed": false, "item": "ctr", "path": "/usr/bin/ctr", "state": "absent"}
2023-07-10 15:10:27,959 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:27 +0300 (0:00:00.895)       0:02:23.702 ****** 
2023-07-10 15:10:28,352 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Generate systemd service for containerd] ****************************************************************************************************
2023-07-10 15:10:28,352 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "2ebef812a5ebb2a712a694da85860395a349c40a", "dest": "/etc/systemd/system/containerd.service", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/system/containerd.service", "size": 1365, "state": "file", "uid": 0}
2023-07-10 15:10:28,361 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:28 +0300 (0:00:00.402)       0:02:24.104 ****** 
2023-07-10 15:10:28,563 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Ensure containerd directories exist] ********************************************************************************************************
2023-07-10 15:10:28,564 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/systemd/system/containerd.service.d) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/systemd/system/containerd.service.d", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/containerd.service.d", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:28,782 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/containerd) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/containerd", "mode": "0755", "owner": "root", "path": "/etc/containerd", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:28,992 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/var/lib/containerd) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/var/lib/containerd", "mode": "0755", "owner": "root", "path": "/var/lib/containerd", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:29,168 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/run/containerd) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/run/containerd", "mode": "0755", "owner": "root", "path": "/run/containerd", "size": 120, "state": "directory", "uid": 0}
2023-07-10 15:10:29,180 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:29 +0300 (0:00:00.819)       0:02:24.923 ****** 
2023-07-10 15:10:29,223 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:29 +0300 (0:00:00.043)       0:02:24.966 ****** 
2023-07-10 15:10:29,476 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Generate default base_runtime_spec] *********************************************************************************************************
2023-07-10 15:10:29,477 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/ctr", "oci", "spec"], "delta": "0:00:00.015748", "end": "2023-07-10 12:10:29.457586", "msg": "", "rc": 0, "start": "2023-07-10 12:10:29.441838", "stderr": "", "stderr_lines": [], "stdout": "{\n    \"ociVersion\": \"1.1.0-rc.1\",\n    \"process\": {\n        \"user\": {\n            \"uid\": 0,\n            \"gid\": 0\n        },\n        \"cwd\": \"/\",\n        \"capabilities\": {\n            \"bounding\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ],\n            \"effective\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ],\n            \"permitted\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ]\n        },\n        \"rlimits\": [\n            {\n                \"type\": \"RLIMIT_NOFILE\",\n                \"hard\": 1024,\n                \"soft\": 1024\n            }\n        ],\n        \"noNewPrivileges\": true\n    },\n    \"root\": {\n        \"path\": \"rootfs\"\n    },\n    \"mounts\": [\n        {\n            \"destination\": \"/proc\",\n            \"type\": \"proc\",\n            \"source\": \"proc\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/dev\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/pts\",\n            \"type\": \"devpts\",\n            \"source\": \"devpts\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"newinstance\",\n                \"ptmxmode=0666\",\n                \"mode=0620\",\n                \"gid=5\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/shm\",\n            \"type\": \"tmpfs\",\n            \"source\": \"shm\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"mode=1777\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/mqueue\",\n            \"type\": \"mqueue\",\n            \"source\": \"mqueue\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/sys\",\n            \"type\": \"sysfs\",\n            \"source\": \"sysfs\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"ro\"\n            ]\n        },\n        {\n            \"destination\": \"/run\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        }\n    ],\n    \"linux\": {\n        \"resources\": {\n            \"devices\": [\n                {\n                    \"allow\": false,\n                    \"access\": \"rwm\"\n                }\n            ]\n        },\n        \"cgroupsPath\": \"/default\",\n        \"namespaces\": [\n            {\n                \"type\": \"pid\"\n            },\n            {\n                \"type\": \"ipc\"\n            },\n            {\n                \"type\": \"uts\"\n            },\n            {\n                \"type\": \"mount\"\n            },\n            {\n                \"type\": \"network\"\n            }\n        ],\n        \"maskedPaths\": [\n            \"/proc/acpi\",\n            \"/proc/asound\",\n            \"/proc/kcore\",\n            \"/proc/keys\",\n            \"/proc/latency_stats\",\n            \"/proc/timer_list\",\n            \"/proc/timer_stats\",\n            \"/proc/sched_debug\",\n            \"/sys/firmware\",\n            \"/proc/scsi\"\n        ],\n        \"readonlyPaths\": [\n            \"/proc/bus\",\n            \"/proc/fs\",\n            \"/proc/irq\",\n            \"/proc/sys\",\n            \"/proc/sysrq-trigger\"\n        ]\n    }\n}", "stdout_lines": ["{", "    \"ociVersion\": \"1.1.0-rc.1\",", "    \"process\": {", "        \"user\": {", "            \"uid\": 0,", "            \"gid\": 0", "        },", "        \"cwd\": \"/\",", "        \"capabilities\": {", "            \"bounding\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ],", "            \"effective\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ],", "            \"permitted},", "        \"rlimits\": [", "            {", "                \"type\": \"RLIMIT_NOFILE\",", "                \"hard\": 1024,", "                \"soft\": 1024", "            }", "        ],", "        \"noNewPrivileges\": true", "    },", "    \"root\": {", "        \"path\": \"rootfs\"", "    },", "    \"mounts\": [", "        {", "            \"destination\": \"/proc\",", "            \"type\": \"proc\",", "            \"source\": \"proc\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\"", "            ]", "        },", "        {", "            \"destination\": \"/dev\",", "            \"type\": \"tmpfs\",", "            \"source\": \"tmpfs\",", "            \"options\": [", "                \"nosuid\",", "                \"strictatime\",", "                \"mode=755\",", "                \"size=65536k\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/pts\",", "            \"type\": \"devpts\",", "            \"source\": \"devpts\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"newinstance\",", "                \"ptmxmode=0666\",", "                \"mode=0620\",", "                \"gid=5\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/shm\",", "            \"type\": \"tmpfs\",", "            \"source\": \"shm\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\",", "                \"mode=1777\",", "                \"size=65536k\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/mqueue\",", "            \"type\": \"mqueue\",", "            \"source\": \"mqueue\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\"", "            ]", "        },", "        {", "            \"destination\": \"/sys\",", "            \"type\": \"sysfs\",", "            \"source\": \"sysfs\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\",", "                \"ro\"", "            ]", "        },", "        {", "            \"destination\": \"/run\",", "            \"type\": \"tmpfs\",", "            \"source\": \"tmpfs\",", "            \"options\": [", "                \"nosuid\",", "                \"strictatime\",", "                \"mode=755\",", "                \"size=65536k\"", "            ]", "        }", "    ],", "    \"linux\": {", "        \"resources\": {", "            \"devices\": [", "                {", "                    \"allow\": false,", "                    \"access\": \"rwm\"", "                }", "            ]", "        },", "        \"cgroupsPath\": \"/default\",", "        \"namespaces\": [", "            {", "                \"type\": \"pid\"", "            },", "            {", "                \"type\": \"ipc\"", "            },", "            {", "                \"type\": \"uts\"", "            },", "            {", "                \"type\": \"mount\"", "            },", "            {", "                \"type\": \"network\"", "            }", "        ],", "        \"maskedPaths\": [", "            \"/proc/acpi\",", "            \"/proc/asound\",", "            \"/proc/kcore\",", "            \"/proc/keys\",", "            \"/proc/latency_stats\",", "            \"/proc/timer_list\",", "            \"/proc/timer_stats\",", "            \"/proc/sched_debug\",", "            \"/sys/firmware\",", "            \"/proc/scsi\"", "        ],", "        \"readonlyPaths\": [", "            \"/proc/bus\",", "            \"/proc/fs\",", "            \"/proc/irq\",", "            \"/proc/sys\",", "            \"/proc/sysrq-trigger\"", "        ]", "    }", "}"]}
2023-07-10 15:10:29,495 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:29 +0300 (0:00:00.271)       0:02:25.238 ****** 
2023-07-10 15:10:29,555 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Store generated default base_runtime_spec] **************************************************************************************************
2023-07-10 15:10:29,556 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"containerd_default_base_runtime_spec": {"linux": {"cgroupsPath": "/default", "maskedPaths": ["/proc/acpi", "/proc/asound", "/proc/kcore", "/proc/keys", "/proc/latency_stats", "/proc/timer_list", "/proc/timer_stats", "/proc/sched_debug", "/sys/firmware", "/proc/scsi"], "namespaces": [{"type": "pid"}, {"type": "ipc"}, {"type": "uts"}, {"type": "mount"}, {"type": "network"}], "readonlyPaths": ["/proc/bus", "/proc/fs", "/proc/irq", "/proc/sys", "/proc/sysrq-trigger"], "resources": {"devices": [{"access": "rwm", "allow": false}]}}, "mounts": [{"destination": "/proc", "options": ["nosuid", "noexec", "nodev"], "source": "proc", "type": "proc"}, {"destination": "/dev", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}, {"destination": "/dev/pts", "options": ["nosuid", "noexec", "newinstance", "ptmxmode=0666", "mode=0620", "gid=5"], "source": "devpts", "type": "devpts"}, {"destination": "/dev/shm", "options": ["nosuid", "noexec", "nodev", "mode=1777", "size=65536k"], "source": "shm", "type": "tmpfs"}, {"destination": "/dev/mqueue", "options": ["nosuid", "noexec", "nodev"], "source": "mqueue", "type": "mqueue"}, {"destination": "/sys", "options": ["nosuid", "noexec", "nodev", "ro"], "source": "sysfs", "type": "sysfs"}, {"destination": "/run", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}], "ociVersion": "1.1.0-rc.1", "process": {"capabilities": {"bounding": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "effective": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "permitted": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"]}, "cwd": "/", "noNewPrivileges": true, "rlimits": [{"hard": 1024, "soft": 1024, "type": "RLIMIT_NOFILE"}], "user": {"gid": 0, "uid": 0}}, "root": {"path": "rootfs"}}}, "changed": false}
2023-07-10 15:10:29,568 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:29 +0300 (0:00:00.073)       0:02:25.311 ****** 
2023-07-10 15:10:30,102 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Write base_runtime_specs] *******************************************************************************************************************
2023-07-10 15:10:30,104 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}}) => {"ansible_loop_var": "item", "changed": false, "checksum": "ca010433eff9d7cb6f6886f2384190c5cbc2f01d", "dest": "/etc/containerd/cri-base.json", "gid": 0, "group": "root", "item": {"key": "cri-base.json", "value": {"linux": {"cgroupsPath": "/default", "maskedPaths": ["/proc/acpi", "/proc/asound", "/proc/kcore", "/proc/keys", "/proc/latency_stats", "/proc/timer_list", "/proc/timer_stats", "/proc/sched_debug", "/sys/firmware", "/proc/scsi"], "namespaces": [{"type": "pid"}, {"type": "ipc"}, {"type": "uts"}, {"type": "mount"}, {"type": "network"}], "readonlyPaths": ["/proc/bus", "/proc/fs", "/proc/irq", "/proc/sys", "/proc/sysrq-trigger"], "resources": {"devices": [{"access": "rwm", "allow": false}]}}, "mounts": [{"destination": "/proc", "options": ["nosuid", "noexec", "nodev"], "source": "proc", "type": "proc"}, {"destination": "/dev", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}, {"destination": "/dev/pts", "options": ["nosuid", "noexec", "newinstance", "ptmxmode=0666", "mode=0620", "gid=5"], "source": "devpts", "type": "devpts"}, {"destination": "/dev/shm", "options": ["nosuid", "noexec", "nodev", "mode=1777", "size=65536k"], "source": "shm", "type": "tmpfs"}, {"destination": "/dev/mqueue", "options": ["nosuid", "noexec", "nodev"], "source": "mqueue", "type": "mqueue"}, {"destination": "/sys", "options": ["nosuid", "noexec", "nodev", "ro"], "source": "sysfs", "type": "sysfs"}, {"destination": "/run", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}], "ociVersion": "1.1.0-rc.1", "process": {"capabilities": {"bounding": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "effective": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "permitted": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"]}, "cwd": "/", "noNewPrivileges": true, "rlimits": [{"hard": 65535, "soft": 65535, "type": "RLIMIT_NOFILE"}], "user": {"gid": 0, "uid": 0}}, "root": {"path": "rootfs"}}}, "mode": "0644", "owner": "root", "path": "/etc/containerd/cri-base.json", "size": 2295, "state": "file", "uid": 0}
2023-07-10 15:10:30,131 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:30 +0300 (0:00:00.563)       0:02:25.874 ****** 
2023-07-10 15:10:30,931 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Copy containerd config file] ****************************************************************************************************************
2023-07-10 15:10:30,932 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "7481f73c81ce443d6d8501704dab0633db9bf7b4", "dest": "/etc/containerd/config.toml", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/containerd/config.toml", "size": 1230, "state": "file", "uid": 0}
2023-07-10 15:10:30,943 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:30 +0300 (0:00:00.811)       0:02:26.685 ****** 
2023-07-10 15:10:30,970 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:30 +0300 (0:00:00.027)       0:02:26.713 ****** 
2023-07-10 15:10:31,001 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:30 +0300 (0:00:00.030)       0:02:26.744 ****** 
2023-07-10 15:10:31,022 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:31 +0300 (0:00:00.021)       0:02:26.765 ****** 
2023-07-10 15:10:31,707 p=14511 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Ensure containerd is started and enabled] ***************************************************************************************************
2023-07-10 15:10:31,709 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "enabled": true, "name": "containerd", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ActiveEnterTimestampMonotonic": "13990220594", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "sysinit.target system.slice basic.target local-fs.target network.target systemd-journald.socket", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 11:43:59 UTC", "AssertTimestampMonotonic": "13990149561", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "29426367000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ConditionTimestampMonotonic": "13990149559", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/containerd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuacct cpuset io blkio memory devices pids bpf-firewall bpf-devices bpf-foreign bpf-socket-bind", "Description": "containerd container runtime", "DevicePolicy": "auto", "Documentation": "https://containerd.io", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "5685", "ExecMainStartTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ExecMainStartTimestampMonotonic": "13990181696", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; flags=ignore-failure ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/containerd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "containerd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Mon 2023-07-10 11:43:59 UTC", "InactiveExitTimestampMonotonic": "13990150455", "InvocationID": "03387208a4804fad97a58edfb791a0fe", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "infinity", "LimitNOFILESoft": "infinity", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "5685", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "2234114048", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "containerd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-999", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "5s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 11:43:59 UTC", "StateChangeTimestampMonotonic": "13990220594", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "9", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 15:10:31,728 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:31 +0300 (0:00:00.706)       0:02:27.471 ****** 
2023-07-10 15:10:31,763 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:31 +0300 (0:00:00.034)       0:02:27.506 ****** 
2023-07-10 15:10:31,807 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:31 +0300 (0:00:00.043)       0:02:27.550 ****** 
2023-07-10 15:10:32,015 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.207)       0:02:27.758 ****** 
2023-07-10 15:10:32,070 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.055)       0:02:27.813 ****** 
2023-07-10 15:10:32,118 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.047)       0:02:27.861 ****** 
2023-07-10 15:10:32,162 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.044)       0:02:27.905 ****** 
2023-07-10 15:10:32,205 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.042)       0:02:27.947 ****** 
2023-07-10 15:10:32,242 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.036)       0:02:27.984 ****** 
2023-07-10 15:10:32,280 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.038)       0:02:28.023 ****** 
2023-07-10 15:10:32,310 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.029)       0:02:28.053 ****** 
2023-07-10 15:10:32,346 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.036)       0:02:28.089 ****** 
2023-07-10 15:10:32,382 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.035)       0:02:28.125 ****** 
2023-07-10 15:10:32,549 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.166)       0:02:28.292 ****** 
2023-07-10 15:10:32,587 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.038)       0:02:28.330 ****** 
2023-07-10 15:10:32,627 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.039)       0:02:28.370 ****** 
2023-07-10 15:10:32,667 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.040)       0:02:28.410 ****** 
2023-07-10 15:10:32,701 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.034)       0:02:28.444 ****** 
2023-07-10 15:10:32,733 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.031)       0:02:28.476 ****** 
2023-07-10 15:10:32,781 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.047)       0:02:28.524 ****** 
2023-07-10 15:10:32,818 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.037)       0:02:28.561 ****** 
2023-07-10 15:10:32,855 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.036)       0:02:28.598 ****** 
2023-07-10 15:10:32,885 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.030)       0:02:28.628 ****** 
2023-07-10 15:10:32,917 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.031)       0:02:28.660 ****** 
2023-07-10 15:10:32,986 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:32 +0300 (0:00:00.069)       0:02:28.729 ****** 
2023-07-10 15:10:33,023 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.036)       0:02:28.766 ****** 
2023-07-10 15:10:33,083 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.060)       0:02:28.826 ****** 
2023-07-10 15:10:33,114 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.030)       0:02:28.857 ****** 
2023-07-10 15:10:33,140 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.026)       0:02:28.883 ****** 
2023-07-10 15:10:33,177 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.036)       0:02:28.920 ****** 
2023-07-10 15:10:33,212 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.035)       0:02:28.955 ****** 
2023-07-10 15:10:33,247 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.034)       0:02:28.990 ****** 
2023-07-10 15:10:33,285 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.037)       0:02:29.028 ****** 
2023-07-10 15:10:33,321 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.035)       0:02:29.064 ****** 
2023-07-10 15:10:33,356 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.035)       0:02:29.099 ****** 
2023-07-10 15:10:33,392 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.035)       0:02:29.135 ****** 
2023-07-10 15:10:33,429 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.036)       0:02:29.172 ****** 
2023-07-10 15:10:33,466 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.036)       0:02:29.209 ****** 
2023-07-10 15:10:33,491 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.024)       0:02:29.234 ****** 
2023-07-10 15:10:33,541 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.050)       0:02:29.284 ****** 
2023-07-10 15:10:33,577 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.035)       0:02:29.320 ****** 
2023-07-10 15:10:33,611 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.034)       0:02:29.354 ****** 
2023-07-10 15:10:33,659 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.048)       0:02:29.402 ****** 
2023-07-10 15:10:33,707 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.047)       0:02:29.450 ****** 
2023-07-10 15:10:33,765 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:10:33,766 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:10:33,782 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.074)       0:02:29.525 ****** 
2023-07-10 15:10:33,838 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.056)       0:02:29.581 ****** 
2023-07-10 15:10:33,894 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.055)       0:02:29.637 ****** 
2023-07-10 15:10:33,965 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:33 +0300 (0:00:00.070)       0:02:29.708 ****** 
2023-07-10 15:10:34,023 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:34 +0300 (0:00:00.058)       0:02:29.766 ****** 
2023-07-10 15:10:34,592 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Register docker images info] ********************************************************************************************************************************
2023-07-10 15:10:34,593 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:34,603 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:34 +0300 (0:00:00.580)       0:02:30.346 ****** 
2023-07-10 15:10:34,799 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Create staging directory on remote node] ********************************************************************************************************************
2023-07-10 15:10:34,799 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/images", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:34,812 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:34 +0300 (0:00:00.209)       0:02:30.555 ****** 
2023-07-10 15:10:34,854 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:34 +0300 (0:00:00.041)       0:02:30.597 ****** 
2023-07-10 15:10:34,888 p=14511 u=kubernetmachine n=ansible | TASK [download : download | Get kubeadm binary and list of required images] ******************************************************************************************************************
2023-07-10 15:10:34,907 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1
2023-07-10 15:10:34,922 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:34 +0300 (0:00:00.068)       0:02:30.665 ****** 
2023-07-10 15:10:35,949 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:35 +0300 (0:00:01.026)       0:02:31.692 ****** 
2023-07-10 15:10:36,800 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Download kubeadm binary] ******************************************************************************************************************************
2023-07-10 15:10:36,818 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1
2023-07-10 15:10:36,833 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:36 +0300 (0:00:00.883)       0:02:32.576 ****** 
2023-07-10 15:10:36,934 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:10:36,934 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:10:36,942 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:36 +0300 (0:00:00.109)       0:02:32.685 ****** 
2023-07-10 15:10:37,824 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:10:37,825 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"
}
2023-07-10 15:10:37,834 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:37 +0300 (0:00:00.892)       0:02:33.577 ****** 
2023-07-10 15:10:38,797 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:10:38,797 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.26.2-amd64"}, "changed": false}
2023-07-10 15:10:38,806 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:38 +0300 (0:00:00.971)       0:02:34.549 ****** 
2023-07-10 15:10:40,614 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:10:40,615 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:10:40,626 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:40 +0300 (0:00:01.819)       0:02:36.369 ****** 
2023-07-10 15:10:40,664 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:40 +0300 (0:00:00.038)       0:02:36.407 ****** 
2023-07-10 15:10:41,466 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:41 +0300 (0:00:00.801)       0:02:37.209 ****** 
2023-07-10 15:10:46,687 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:10:46,687 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:46,691 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:46,719 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:46 +0300 (0:00:05.253)       0:02:42.462 ****** 
2023-07-10 15:10:46,821 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:10:46,822 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"]}, "changed": false}
2023-07-10 15:10:46,850 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:46 +0300 (0:00:00.130)       0:02:42.593 ****** 
2023-07-10 15:10:55,758 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:10:55,758 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:10:55,769 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:55 +0300 (0:00:08.919)       0:02:51.512 ****** 
2023-07-10 15:10:55,803 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:55 +0300 (0:00:00.033)       0:02:51.546 ****** 
2023-07-10 15:10:55,835 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:55 +0300 (0:00:00.032)       0:02:51.578 ****** 
2023-07-10 15:10:55,868 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:55 +0300 (0:00:00.032)       0:02:51.611 ****** 
2023-07-10 15:10:55,889 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:10:55,902 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:10:55,920 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:55 +0300 (0:00:00.051)       0:02:51.663 ****** 
2023-07-10 15:10:56,943 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:56 +0300 (0:00:01.022)       0:02:52.686 ****** 
2023-07-10 15:10:57,334 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Create kubeadm config] ********************************************************************************************************************************
2023-07-10 15:10:57,334 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "04974339f81cf5a298237f58f7ea3d6b42d97c0a", "dest": "/etc/kubernetes/kubeadm-images.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/kubernetes/kubeadm-images.yaml", "size": 413, "state": "file", "uid": 0}
2023-07-10 15:10:57,343 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:57 +0300 (0:00:00.400)       0:02:53.086 ****** 
2023-07-10 15:10:58,515 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] *************************************************************************************************
2023-07-10 15:10:58,516 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "d2ee756d8a8379a5ef7ee56c17ff844c183f5d1f", "dest": "/usr/local/bin/kubeadm", "gid": 0, "group": "root", "md5sum": "2f8d18d010cf71c80c20b368f676beb4", "mode": "0755", "owner": "root", "size": 46768128, "src": "/tmp/releases/kubeadm-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 15:10:58,527 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:58 +0300 (0:00:01.183)       0:02:54.270 ****** 
2023-07-10 15:10:58,747 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] ***********************************************************************************************************************
2023-07-10 15:10:58,747 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/kubeadm", "size": 46768128, "state": "file", "uid": 0}
2023-07-10 15:10:58,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:58 +0300 (0:00:00.232)       0:02:54.502 ****** 
2023-07-10 15:10:59,029 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Generate list of required images] *********************************************************************************************************************
2023-07-10 15:10:59,030 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/kubeadm config images list --config=/etc/kubernetes/kubeadm-images.yaml | grep -Ev 'coredns | pause'", "delta": "0:00:00.037177", "end": "2023-07-10 12:10:59.014494", "msg": "", "rc": 0, "start": "2023-07-10 12:10:58.977317", "stderr": "W0710 12:10:59.009509   10727 initconfiguration.go:305] error unmarshaling configuration schema.GroupVersionKind{Group:\"kubeadm.k8s.io\", Version:\"v1beta3\", Kind:\"ClusterConfiguration\"}: strict decoding error: unknown field \"dns.type\"", "stderr_lines": ["W0710 12:10:59.009509   10727 initconfiguration.go:305] error unmarshaling configuration schema.GroupVersionKind{Group:\"kubeadm.k8s.io\", Version:\"v1beta3\", Kind:\"ClusterConfiguration\"}: strict decoding error: unknown field \"dns.type\""], "stdout": "registry.k8s.io/kube-apiserver:v1.26.2\nregistry.k8s.io/kube-controller-manager:v1.26.2\nregistry.k8s.io/kube-scheduler:v1.26.2\nregistry.k8s.io/kube-proxy:v1.26.2\nregistry.k8s.io/pause:3.9\nregistry.k8s.io/coredns/coredns:v1.9.3", "stdout_lines": ["registry.k8s.io/kube-apiserver:v1.26.2", "registry.k8s.io/kube-controller-manager:v1.26.2", "registry.k8s.io/kube-scheduler:v1.26.2", "registry.k8s.io/kube-proxy:v1.26.2", "registry.k8s.io/pause:3.9", "registry.k8s.io/coredns/coredns:v1.9.3"]}
2023-07-10 15:10:59,039 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:59 +0300 (0:00:00.280)       0:02:54.782 ****** 
2023-07-10 15:10:59,104 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Parse list of images] *********************************************************************************************************************************
2023-07-10 15:10:59,105 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-apiserver:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-apiserver", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-apiserver", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-apiserver:v1.26.2"}
2023-07-10 15:10:59,137 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-controller-manager:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-controller-manager", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-controller-manager", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-controller-manager:v1.26.2"}
2023-07-10 15:10:59,170 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-scheduler:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-scheduler", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-scheduler", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-scheduler:v1.26.2"}
2023-07-10 15:10:59,202 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-proxy:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-proxy", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-proxy", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-proxy:v1.26.2"}
2023-07-10 15:10:59,235 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/pause:3.9) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_pause", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/pause", "tag": "3.9"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/pause:3.9"}
2023-07-10 15:10:59,262 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/coredns/coredns:v1.9.3) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_coredns", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/coredns/coredns", "tag": "v1.9.3"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/coredns/coredns:v1.9.3"}
2023-07-10 15:10:59,274 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:59 +0300 (0:00:00.234)       0:02:55.017 ****** 
2023-07-10 15:10:59,341 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] *********************************************************************************************************
2023-07-10 15:10:59,341 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_images": {"kubeadm_coredns": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/coredns/coredns", "tag": "v1.9.3"}, "kubeadm_kube-apiserver": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-apiserver", "tag": "v1.26.2"}, "kubeadm_kube-controller-manager": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-controller-manager", "tag": "v1.26.2"}, "kubeadm_kube-proxy": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-proxy", "tag": "v1.26.2"}, "kubeadm_kube-scheduler": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-scheduler", "tag": "v1.26.2"}, "kubeadm_pause": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/pause", "tag": "3.9"}}}, "changed": false}
2023-07-10 15:10:59,350 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:10:59 +0300 (0:00:00.076)       0:02:55.093 ****** 
2023-07-10 15:11:02,223 p=14511 u=kubernetmachine n=ansible | TASK [download : download | Download files / images] *****************************************************************************************************************************************
2023-07-10 15:11:02,249 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
2023-07-10 15:11:02,264 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,277 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubeadm-v1.26.2-amd64', 'sha256': '277d880dc6d79994fd333e49d42943b7c9183b1c4ffdbf9da59f806acec7fd82', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,292 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubelet-v1.26.2-amd64', 'sha256': 'e6dd2ee432a093492936ff8505f084b5ed41662f50231f1c11ae08ee8582a3f5', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,305 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubectl-v1.26.2-amd64', 'sha256': 'fcf86d21fb1a49b012bce7845cf00081d2dd7a59f424b28621799deceb5227b3', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 15:11:02,319 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,333 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc-v1.1.7.amd64', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,347 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.2', 'dest': '/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz', 'sha256': '2755c70152ab40856510b4549c2dd530e15f5355eb7bf82868e813c9380e22a7', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,361 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,374 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl-v3.25.1-amd64', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,403 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,430 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,455 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,478 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,492 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 15:11:02,512 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,536 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}})
2023-07-10 15:11:02,558 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,581 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.20', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 15:11:02,604 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 15:11:02,618 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.1', 'dest': '/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz', 'sha256': '1a7074f58ef7190f74ce6db5db0b70e355a655e2013c4d5db2317e63fa9e3dea', 'url': 'https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 15:11:02,639 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}})
2023-07-10 15:11:02,662 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard', 'tag': 'v2.7.0', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 15:11:02,687 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 15:11:02,712 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 15:11:02,738 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 15:11:02,763 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 15:11:02,785 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 15:11:02,808 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_pause', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'groups': 'k8s_cluster'}})
2023-07-10 15:11:02,834 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'groups': 'k8s_cluster'}})
2023-07-10 15:11:02,852 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:02 +0300 (0:00:03.501)       0:02:58.595 ****** 
2023-07-10 15:11:02,889 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:02,890 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:02,898 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:02 +0300 (0:00:00.046)       0:02:58.641 ****** 
2023-07-10 15:11:02,937 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:02,937 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz"
}
2023-07-10 15:11:02,946 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:02 +0300 (0:00:00.047)       0:02:58.689 ****** 
2023-07-10 15:11:02,985 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:02,986 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/etcd-v3.5.6-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:11:02,995 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:02 +0300 (0:00:00.048)       0:02:58.738 ****** 
2023-07-10 15:11:03,169 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:03,170 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:03,181 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:03 +0300 (0:00:00.186)       0:02:58.924 ****** 
2023-07-10 15:11:03,216 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:03 +0300 (0:00:00.035)       0:02:58.959 ****** 
2023-07-10 15:11:03,259 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:03 +0300 (0:00:00.042)       0:02:59.002 ****** 
2023-07-10 15:11:04,171 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:04,172 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:04,176 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:04,214 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:04 +0300 (0:00:00.954)       0:02:59.957 ****** 
2023-07-10 15:11:04,356 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:04,357 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:11:04,384 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:04 +0300 (0:00:00.169)       0:03:00.127 ****** 
2023-07-10 15:11:04,947 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:04,948 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:04,962 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:04 +0300 (0:00:00.577)       0:03:00.705 ****** 
2023-07-10 15:11:05,005 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:05 +0300 (0:00:00.043)       0:03:00.748 ****** 
2023-07-10 15:11:05,049 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:05 +0300 (0:00:00.043)       0:03:00.792 ****** 
2023-07-10 15:11:05,094 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:05 +0300 (0:00:00.044)       0:03:00.837 ****** 
2023-07-10 15:11:05,121 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:05,143 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:05,165 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:05 +0300 (0:00:00.070)       0:03:00.907 ****** 
2023-07-10 15:11:06,917 p=14511 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 15:11:06,918 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:11:06,932 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:06 +0300 (0:00:01.767)       0:03:02.675 ****** 
2023-07-10 15:11:06,995 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:06,996 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:07,010 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:07 +0300 (0:00:00.077)       0:03:02.753 ****** 
2023-07-10 15:11:07,076 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:07,077 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"
}
2023-07-10 15:11:07,091 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:07 +0300 (0:00:00.081)       0:03:02.834 ****** 
2023-07-10 15:11:07,161 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:07,162 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/cni-plugins-linux-amd64-v1.3.0.tgz"}, "changed": false}
2023-07-10 15:11:07,176 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:07 +0300 (0:00:00.085)       0:03:02.919 ****** 
2023-07-10 15:11:07,462 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:07,463 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:07,483 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:07 +0300 (0:00:00.306)       0:03:03.225 ****** 
2023-07-10 15:11:07,542 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:07 +0300 (0:00:00.059)       0:03:03.285 ****** 
2023-07-10 15:11:07,618 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:07 +0300 (0:00:00.075)       0:03:03.361 ****** 
2023-07-10 15:11:08,927 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:08,928 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:08,931 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:08,959 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:08 +0300 (0:00:01.341)       0:03:04.702 ****** 
2023-07-10 15:11:09,063 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:09,064 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"]}, "changed": false}
2023-07-10 15:11:09,092 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:09 +0300 (0:00:00.133)       0:03:04.835 ****** 
2023-07-10 15:11:09,739 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:09,740 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:09,754 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:09 +0300 (0:00:00.662)       0:03:05.497 ****** 
2023-07-10 15:11:09,798 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:09 +0300 (0:00:00.043)       0:03:05.541 ****** 
2023-07-10 15:11:09,842 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:09 +0300 (0:00:00.044)       0:03:05.585 ****** 
2023-07-10 15:11:09,884 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:09 +0300 (0:00:00.042)       0:03:05.627 ****** 
2023-07-10 15:11:09,912 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:09,937 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:09,961 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:09 +0300 (0:00:00.076)       0:03:05.704 ****** 
2023-07-10 15:11:10,015 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.054)       0:03:05.758 ****** 
2023-07-10 15:11:10,079 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:10,079 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:10,093 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.078)       0:03:05.836 ****** 
2023-07-10 15:11:10,157 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:10,158 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"
}
2023-07-10 15:11:10,173 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.079)       0:03:05.916 ****** 
2023-07-10 15:11:10,238 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:10,238 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.26.2-amd64"}, "changed": false}
2023-07-10 15:11:10,254 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.081)       0:03:05.997 ****** 
2023-07-10 15:11:10,542 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:10,542 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:10,561 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.306)       0:03:06.304 ****** 
2023-07-10 15:11:10,617 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.056)       0:03:06.360 ****** 
2023-07-10 15:11:10,685 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:10 +0300 (0:00:00.068)       0:03:06.428 ****** 
2023-07-10 15:11:11,830 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:11,831 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:11,834 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:11,861 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:11 +0300 (0:00:01.175)       0:03:07.604 ****** 
2023-07-10 15:11:11,957 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:11,958 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"]}, "changed": false}
2023-07-10 15:11:11,986 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:11 +0300 (0:00:00.124)       0:03:07.729 ****** 
2023-07-10 15:11:12,580 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:12,581 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:12,590 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.603)       0:03:08.332 ****** 
2023-07-10 15:11:12,616 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.026)       0:03:08.359 ****** 
2023-07-10 15:11:12,644 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.027)       0:03:08.387 ****** 
2023-07-10 15:11:12,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.027)       0:03:08.414 ****** 
2023-07-10 15:11:12,689 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:12,704 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:12,718 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.047)       0:03:08.461 ****** 
2023-07-10 15:11:12,754 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.035)       0:03:08.497 ****** 
2023-07-10 15:11:12,794 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:12,794 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:12,803 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.049)       0:03:08.546 ****** 
2023-07-10 15:11:12,844 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:12,845 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet"
}
2023-07-10 15:11:12,855 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.051)       0:03:08.598 ****** 
2023-07-10 15:11:12,914 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:12,914 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubelet-v1.26.2-amd64"}, "changed": false}
2023-07-10 15:11:12,933 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:12 +0300 (0:00:00.077)       0:03:08.676 ****** 
2023-07-10 15:11:13,167 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:13,168 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:13,182 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:13 +0300 (0:00:00.249)       0:03:08.925 ****** 
2023-07-10 15:11:13,223 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:13 +0300 (0:00:00.041)       0:03:08.966 ****** 
2023-07-10 15:11:13,276 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:13 +0300 (0:00:00.052)       0:03:09.019 ****** 
2023-07-10 15:11:14,233 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:14,233 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:14,236 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:14,254 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:14 +0300 (0:00:00.977)       0:03:09.997 ****** 
2023-07-10 15:11:14,321 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:14,322 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet"]}, "changed": false}
2023-07-10 15:11:14,342 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:14 +0300 (0:00:00.087)       0:03:10.085 ****** 
2023-07-10 15:11:14,942 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:14,942 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:14,952 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:14 +0300 (0:00:00.610)       0:03:10.695 ****** 
2023-07-10 15:11:14,982 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:14 +0300 (0:00:00.029)       0:03:10.725 ****** 
2023-07-10 15:11:15,013 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.031)       0:03:10.756 ****** 
2023-07-10 15:11:15,045 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.031)       0:03:10.788 ****** 
2023-07-10 15:11:15,063 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:15,078 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:15,093 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.047)       0:03:10.836 ****** 
2023-07-10 15:11:15,128 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.035)       0:03:10.871 ****** 
2023-07-10 15:11:15,171 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:15,171 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:15,181 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.052)       0:03:10.924 ****** 
2023-07-10 15:11:15,224 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:15,225 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"
}
2023-07-10 15:11:15,234 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.053)       0:03:10.977 ****** 
2023-07-10 15:11:15,286 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:15,287 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubectl-v1.26.2-amd64"}, "changed": false}
2023-07-10 15:11:15,302 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.067)       0:03:11.045 ****** 
2023-07-10 15:11:15,534 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:15,535 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:15,550 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.248)       0:03:11.293 ****** 
2023-07-10 15:11:15,606 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.054)       0:03:11.348 ****** 
2023-07-10 15:11:15,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:15 +0300 (0:00:00.065)       0:03:11.414 ****** 
2023-07-10 15:11:16,691 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:16,691 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:16,694 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:16,712 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:16 +0300 (0:00:01.041)       0:03:12.455 ****** 
2023-07-10 15:11:16,774 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:16,775 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"]}, "changed": false}
2023-07-10 15:11:16,801 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:16 +0300 (0:00:00.088)       0:03:12.544 ****** 
2023-07-10 15:11:17,558 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:17,559 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:17,578 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.776)       0:03:13.320 ****** 
2023-07-10 15:11:17,631 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.053)       0:03:13.374 ****** 
2023-07-10 15:11:17,685 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.054)       0:03:13.428 ****** 
2023-07-10 15:11:17,739 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.053)       0:03:13.482 ****** 
2023-07-10 15:11:17,773 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:17,797 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:17,819 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.080)       0:03:13.562 ****** 
2023-07-10 15:11:17,878 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.058)       0:03:13.621 ****** 
2023-07-10 15:11:17,941 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:17,941 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:17,955 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:17 +0300 (0:00:00.077)       0:03:13.698 ****** 
2023-07-10 15:11:18,021 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:18,022 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 15:11:18,036 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:18 +0300 (0:00:00.080)       0:03:13.779 ****** 
2023-07-10 15:11:18,103 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:18,104 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:11:18,119 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:18 +0300 (0:00:00.082)       0:03:13.862 ****** 
2023-07-10 15:11:18,408 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:18,409 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:18,428 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:18 +0300 (0:00:00.308)       0:03:14.170 ****** 
2023-07-10 15:11:18,483 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:18 +0300 (0:00:00.055)       0:03:14.226 ****** 
2023-07-10 15:11:18,552 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:18 +0300 (0:00:00.069)       0:03:14.295 ****** 
2023-07-10 15:11:19,740 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:19,741 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:19,744 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:19,771 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:19 +0300 (0:00:01.218)       0:03:15.514 ****** 
2023-07-10 15:11:19,870 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:19,871 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:11:19,899 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:19 +0300 (0:00:00.127)       0:03:15.642 ****** 
2023-07-10 15:11:20,547 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:20,548 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:20,574 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:20 +0300 (0:00:00.675)       0:03:16.317 ****** 
2023-07-10 15:11:20,642 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:20 +0300 (0:00:00.067)       0:03:16.385 ****** 
2023-07-10 15:11:20,692 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:20 +0300 (0:00:00.050)       0:03:16.435 ****** 
2023-07-10 15:11:20,743 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:20 +0300 (0:00:00.050)       0:03:16.486 ****** 
2023-07-10 15:11:20,773 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:20,797 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:20,824 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:20 +0300 (0:00:00.081)       0:03:16.567 ****** 
2023-07-10 15:11:21,949 p=14511 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 15:11:21,949 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:11:21,959 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:21 +0300 (0:00:01.134)       0:03:17.702 ****** 
2023-07-10 15:11:22,000 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:22,000 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:22,009 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:22 +0300 (0:00:00.049)       0:03:17.752 ****** 
2023-07-10 15:11:22,056 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:22,057 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 15:11:22,067 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:22 +0300 (0:00:00.057)       0:03:17.810 ****** 
2023-07-10 15:11:22,114 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:22,115 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 15:11:22,126 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:22 +0300 (0:00:00.058)       0:03:17.868 ****** 
2023-07-10 15:11:22,344 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:22,345 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:22,360 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:22 +0300 (0:00:00.234)       0:03:18.103 ****** 
2023-07-10 15:11:22,403 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:22 +0300 (0:00:00.043)       0:03:18.146 ****** 
2023-07-10 15:11:22,459 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:22 +0300 (0:00:00.056)       0:03:18.202 ****** 
2023-07-10 15:11:23,541 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:23,542 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:23,546 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:23,565 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:23 +0300 (0:00:01.105)       0:03:19.308 ****** 
2023-07-10 15:11:23,641 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:23,642 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 15:11:23,664 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:23 +0300 (0:00:00.098)       0:03:19.407 ****** 
2023-07-10 15:11:24,022 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:24,022 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:24,030 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.366)       0:03:19.773 ****** 
2023-07-10 15:11:24,059 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.028)       0:03:19.802 ****** 
2023-07-10 15:11:24,086 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.027)       0:03:19.829 ****** 
2023-07-10 15:11:24,114 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.027)       0:03:19.857 ****** 
2023-07-10 15:11:24,130 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:24,143 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:24,155 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.041)       0:03:19.898 ****** 
2023-07-10 15:11:24,189 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.033)       0:03:19.932 ****** 
2023-07-10 15:11:24,226 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:24,227 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:24,237 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.047)       0:03:19.980 ****** 
2023-07-10 15:11:24,276 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:24,276 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
}
2023-07-10 15:11:24,286 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.049)       0:03:20.029 ****** 
2023-07-10 15:11:24,325 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:24,325 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/containerd-1.7.2-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:11:24,334 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.048)       0:03:20.077 ****** 
2023-07-10 15:11:24,513 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:24,514 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:24,528 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.194)       0:03:20.271 ****** 
2023-07-10 15:11:24,571 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.042)       0:03:20.314 ****** 
2023-07-10 15:11:24,622 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:24 +0300 (0:00:00.050)       0:03:20.365 ****** 
2023-07-10 15:11:25,510 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:25,511 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:25,515 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:25,543 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:25 +0300 (0:00:00.921)       0:03:21.286 ****** 
2023-07-10 15:11:25,649 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:25,650 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:11:25,681 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:25 +0300 (0:00:00.137)       0:03:21.424 ****** 
2023-07-10 15:11:26,351 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:26,352 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:26,366 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.685)       0:03:22.109 ****** 
2023-07-10 15:11:26,408 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.041)       0:03:22.151 ****** 
2023-07-10 15:11:26,451 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.043)       0:03:22.194 ****** 
2023-07-10 15:11:26,494 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.043)       0:03:22.237 ****** 
2023-07-10 15:11:26,521 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:26,542 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:26,565 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.070)       0:03:22.308 ****** 
2023-07-10 15:11:26,617 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.052)       0:03:22.360 ****** 
2023-07-10 15:11:26,680 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:26,681 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:26,694 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.077)       0:03:22.437 ****** 
2023-07-10 15:11:26,760 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:26,761 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 15:11:26,775 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.080)       0:03:22.518 ****** 
2023-07-10 15:11:26,841 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:26,842 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:11:26,856 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:26 +0300 (0:00:00.080)       0:03:22.599 ****** 
2023-07-10 15:11:27,143 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:27,143 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:27,161 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:27 +0300 (0:00:00.305)       0:03:22.904 ****** 
2023-07-10 15:11:27,221 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:27 +0300 (0:00:00.059)       0:03:22.964 ****** 
2023-07-10 15:11:27,295 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:27 +0300 (0:00:00.074)       0:03:23.038 ****** 
2023-07-10 15:11:28,537 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:28,538 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:28,542 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:28,572 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:28 +0300 (0:00:01.276)       0:03:24.315 ****** 
2023-07-10 15:11:28,669 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:28,670 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:11:28,700 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:28 +0300 (0:00:00.128)       0:03:24.443 ****** 
2023-07-10 15:11:29,257 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:29,257 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:29,272 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:29 +0300 (0:00:00.572)       0:03:25.015 ****** 
2023-07-10 15:11:29,316 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:29 +0300 (0:00:00.043)       0:03:25.059 ****** 
2023-07-10 15:11:29,360 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:29 +0300 (0:00:00.044)       0:03:25.103 ****** 
2023-07-10 15:11:29,410 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:29 +0300 (0:00:00.049)       0:03:25.153 ****** 
2023-07-10 15:11:29,440 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:29,465 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:29,491 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:29 +0300 (0:00:00.081)       0:03:25.234 ****** 
2023-07-10 15:11:30,344 p=14511 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 15:11:30,345 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:11:30,355 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.864)       0:03:26.098 ****** 
2023-07-10 15:11:30,395 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:30,396 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:30,405 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.049)       0:03:26.148 ****** 
2023-07-10 15:11:30,446 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:30,446 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64"
}
2023-07-10 15:11:30,456 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.051)       0:03:26.199 ****** 
2023-07-10 15:11:30,498 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:30,498 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/calicoctl-v3.25.1-amd64"}, "changed": false}
2023-07-10 15:11:30,509 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.052)       0:03:26.252 ****** 
2023-07-10 15:11:30,686 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:30,686 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:30,698 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.188)       0:03:26.441 ****** 
2023-07-10 15:11:30,736 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.037)       0:03:26.479 ****** 
2023-07-10 15:11:30,779 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:30 +0300 (0:00:00.043)       0:03:26.522 ****** 
2023-07-10 15:11:31,887 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:31,888 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:31,890 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:31,906 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:31 +0300 (0:00:01.126)       0:03:27.649 ****** 
2023-07-10 15:11:31,968 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:31,968 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64"]}, "changed": false}
2023-07-10 15:11:31,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:31 +0300 (0:00:00.080)       0:03:27.730 ****** 
2023-07-10 15:11:32,430 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:32,430 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:32,441 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.454)       0:03:28.184 ****** 
2023-07-10 15:11:32,474 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.032)       0:03:28.217 ****** 
2023-07-10 15:11:32,507 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.033)       0:03:28.250 ****** 
2023-07-10 15:11:32,538 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.031)       0:03:28.281 ****** 
2023-07-10 15:11:32,559 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:32,575 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:32,590 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.051)       0:03:28.333 ****** 
2023-07-10 15:11:32,629 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.039)       0:03:28.372 ****** 
2023-07-10 15:11:32,685 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:32,686 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:32,707 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.077)       0:03:28.450 ****** 
2023-07-10 15:11:32,765 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:32,766 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/node"
}
2023-07-10 15:11:32,779 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.072)       0:03:28.522 ****** 
2023-07-10 15:11:32,853 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:32,853 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:32,868 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.088)       0:03:28.610 ****** 
2023-07-10 15:11:32,923 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:32,924 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 15:11:32,938 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:32 +0300 (0:00:00.069)       0:03:28.680 ****** 
2023-07-10 15:11:33,021 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:33,022 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_node_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:33,040 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.102)       0:03:28.783 ****** 
2023-07-10 15:11:33,094 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:33,094 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_node_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_node_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:33,105 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.065)       0:03:28.848 ****** 
2023-07-10 15:11:33,140 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.034)       0:03:28.883 ****** 
2023-07-10 15:11:33,189 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:33,189 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_node_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_node_v3.25.1.tar quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 15:11:33,200 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.059)       0:03:28.942 ****** 
2023-07-10 15:11:33,231 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.031)       0:03:28.974 ****** 
2023-07-10 15:11:33,265 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.033)       0:03:29.008 ****** 
2023-07-10 15:11:33,316 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:33,317 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_node_v3.25.1.tar quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 15:11:33,327 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.061)       0:03:29.070 ****** 
2023-07-10 15:11:33,355 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.028)       0:03:29.098 ****** 
2023-07-10 15:11:33,374 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:33,389 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:33,406 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.051)       0:03:29.149 ****** 
2023-07-10 15:11:33,851 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:33,852 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.266338", "end": "2023-07-10 12:11:33.833931", "msg": "", "rc": 0, "start": "2023-07-10 12:11:33.567593", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:33,863 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.456)       0:03:29.606 ****** 
2023-07-10 15:11:33,912 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:33,912 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:33,922 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.059)       0:03:29.665 ****** 
2023-07-10 15:11:33,958 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:33 +0300 (0:00:00.035)       0:03:29.701 ****** 
2023-07-10 15:11:34,013 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:34,014 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/node:v3.25.1 required is: False"
}
2023-07-10 15:11:34,034 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.076)       0:03:29.777 ****** 
2023-07-10 15:11:34,078 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.044)       0:03:29.821 ****** 
2023-07-10 15:11:34,121 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.042)       0:03:29.864 ****** 
2023-07-10 15:11:34,177 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.055)       0:03:29.920 ****** 
2023-07-10 15:11:34,244 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.067)       0:03:29.987 ****** 
2023-07-10 15:11:34,287 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.042)       0:03:30.030 ****** 
2023-07-10 15:11:34,318 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.031)       0:03:30.061 ****** 
2023-07-10 15:11:34,347 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.029)       0:03:30.090 ****** 
2023-07-10 15:11:34,379 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.031)       0:03:30.122 ****** 
2023-07-10 15:11:34,548 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:34,548 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_node_v3.25.1.tar", "state": "absent"}
2023-07-10 15:11:34,558 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.179)       0:03:30.301 ****** 
2023-07-10 15:11:34,596 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:34,596 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:34,606 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.047)       0:03:30.349 ****** 
2023-07-10 15:11:34,648 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:34,648 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/cni"
}
2023-07-10 15:11:34,658 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.051)       0:03:30.401 ****** 
2023-07-10 15:11:34,705 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:34,705 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:34,715 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.057)       0:03:30.458 ****** 
2023-07-10 15:11:34,768 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:34,768 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 15:11:34,779 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.064)       0:03:30.522 ****** 
2023-07-10 15:11:34,830 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:34,830 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_cni_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:34,842 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.062)       0:03:30.585 ****** 
2023-07-10 15:11:34,891 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:34,891 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_cni_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_cni_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:34,904 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.061)       0:03:30.647 ****** 
2023-07-10 15:11:34,938 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.034)       0:03:30.681 ****** 
2023-07-10 15:11:34,988 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:34,989 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_cni_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_cni_v3.25.1.tar quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 15:11:35,000 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:34 +0300 (0:00:00.062)       0:03:30.743 ****** 
2023-07-10 15:11:35,031 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.030)       0:03:30.774 ****** 
2023-07-10 15:11:35,061 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.030)       0:03:30.804 ****** 
2023-07-10 15:11:35,110 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:35,110 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_cni_v3.25.1.tar quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 15:11:35,121 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.059)       0:03:30.864 ****** 
2023-07-10 15:11:35,152 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.031)       0:03:30.895 ****** 
2023-07-10 15:11:35,170 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:35,184 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:35,201 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.049)       0:03:30.944 ****** 
2023-07-10 15:11:35,611 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:35,611 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.247356", "end": "2023-07-10 12:11:35.600599", "msg": "", "rc": 0, "start": "2023-07-10 12:11:35.353243", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:35,619 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.417)       0:03:31.363 ****** 
2023-07-10 15:11:35,660 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:35,661 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:35,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.051)       0:03:31.414 ****** 
2023-07-10 15:11:35,700 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.029)       0:03:31.443 ****** 
2023-07-10 15:11:35,739 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:35,740 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/cni:v3.25.1 required is: False"
}
2023-07-10 15:11:35,752 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.051)       0:03:31.495 ****** 
2023-07-10 15:11:35,779 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.027)       0:03:31.522 ****** 
2023-07-10 15:11:35,806 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.026)       0:03:31.549 ****** 
2023-07-10 15:11:35,843 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.037)       0:03:31.586 ****** 
2023-07-10 15:11:35,888 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.044)       0:03:31.631 ****** 
2023-07-10 15:11:35,926 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.038)       0:03:31.669 ****** 
2023-07-10 15:11:35,955 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.028)       0:03:31.698 ****** 
2023-07-10 15:11:35,983 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:35 +0300 (0:00:00.027)       0:03:31.725 ****** 
2023-07-10 15:11:36,009 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.026)       0:03:31.752 ****** 
2023-07-10 15:11:36,176 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:36,176 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_cni_v3.25.1.tar", "state": "absent"}
2023-07-10 15:11:36,185 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.176)       0:03:31.928 ****** 
2023-07-10 15:11:36,227 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:36,228 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:36,329 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.144)       0:03:32.072 ****** 
2023-07-10 15:11:36,375 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:36,375 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/pod2daemon-flexvol"
}
2023-07-10 15:11:36,385 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.055)       0:03:32.128 ****** 
2023-07-10 15:11:36,437 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:36,438 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:36,447 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.061)       0:03:32.190 ****** 
2023-07-10 15:11:36,495 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:36,495 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 15:11:36,505 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.057)       0:03:32.248 ****** 
2023-07-10 15:11:36,552 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:36,552 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_pod2daemon-flexvol_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:36,564 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.059)       0:03:32.307 ****** 
2023-07-10 15:11:36,612 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:36,613 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:36,624 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.059)       0:03:32.367 ****** 
2023-07-10 15:11:36,655 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.031)       0:03:32.398 ****** 
2023-07-10 15:11:36,704 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:36,704 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 15:11:36,715 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.059)       0:03:32.458 ****** 
2023-07-10 15:11:36,747 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.031)       0:03:32.490 ****** 
2023-07-10 15:11:36,780 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.033)       0:03:32.523 ****** 
2023-07-10 15:11:36,834 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:36,834 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 15:11:36,844 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.063)       0:03:32.587 ****** 
2023-07-10 15:11:36,875 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.030)       0:03:32.618 ****** 
2023-07-10 15:11:36,894 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:36,911 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:36,931 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:36 +0300 (0:00:00.056)       0:03:32.674 ****** 
2023-07-10 15:11:37,348 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:37,348 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.247637", "end": "2023-07-10 12:11:37.337075", "msg": "", "rc": 0, "start": "2023-07-10 12:11:37.089438", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:37,356 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.425)       0:03:33.099 ****** 
2023-07-10 15:11:37,402 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:37,402 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:37,413 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.056)       0:03:33.156 ****** 
2023-07-10 15:11:37,444 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.030)       0:03:33.187 ****** 
2023-07-10 15:11:37,486 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:37,487 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False"
}
2023-07-10 15:11:37,500 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.056)       0:03:33.243 ****** 
2023-07-10 15:11:37,531 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.030)       0:03:33.274 ****** 
2023-07-10 15:11:37,562 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.030)       0:03:33.305 ****** 
2023-07-10 15:11:37,602 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.039)       0:03:33.345 ****** 
2023-07-10 15:11:37,650 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.048)       0:03:33.394 ****** 
2023-07-10 15:11:37,691 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.040)       0:03:33.434 ****** 
2023-07-10 15:11:37,722 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.031)       0:03:33.465 ****** 
2023-07-10 15:11:37,755 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.032)       0:03:33.498 ****** 
2023-07-10 15:11:37,784 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.028)       0:03:33.527 ****** 
2023-07-10 15:11:37,956 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:37,957 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "state": "absent"}
2023-07-10 15:11:37,966 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:37 +0300 (0:00:00.182)       0:03:33.709 ****** 
2023-07-10 15:11:38,007 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:38,007 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:38,017 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.051)       0:03:33.760 ****** 
2023-07-10 15:11:38,064 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:38,065 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/kube-controllers"
}
2023-07-10 15:11:38,074 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.056)       0:03:33.817 ****** 
2023-07-10 15:11:38,122 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:38,123 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:38,132 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.058)       0:03:33.875 ****** 
2023-07-10 15:11:38,177 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:38,178 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 15:11:38,190 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.058)       0:03:33.933 ****** 
2023-07-10 15:11:38,234 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:38,235 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_kube-controllers_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:38,244 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.054)       0:03:33.987 ****** 
2023-07-10 15:11:38,291 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:38,291 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_kube-controllers_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar"}, "changed": false}
2023-07-10 15:11:38,300 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.055)       0:03:34.043 ****** 
2023-07-10 15:11:38,337 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.037)       0:03:34.080 ****** 
2023-07-10 15:11:38,408 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:38,409 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 15:11:38,424 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.086)       0:03:34.167 ****** 
2023-07-10 15:11:38,474 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.050)       0:03:34.217 ****** 
2023-07-10 15:11:38,524 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.049)       0:03:34.267 ****** 
2023-07-10 15:11:38,607 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:38,607 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_kube-controllers_v3.25.1.tar quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 15:11:38,623 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.098)       0:03:34.365 ****** 
2023-07-10 15:11:38,673 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.049)       0:03:34.415 ****** 
2023-07-10 15:11:38,702 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:38,727 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:38,761 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:38 +0300 (0:00:00.088)       0:03:34.504 ****** 
2023-07-10 15:11:39,478 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:39,479 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.438718", "end": "2023-07-10 12:11:39.457590", "msg": "", "rc": 0, "start": "2023-07-10 12:11:39.018872", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:39,494 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.733)       0:03:35.237 ****** 
2023-07-10 15:11:39,565 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:39,565 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:39,580 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.085)       0:03:35.323 ****** 
2023-07-10 15:11:39,629 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.049)       0:03:35.372 ****** 
2023-07-10 15:11:39,693 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:39,694 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.25.1 required is: False"
}
2023-07-10 15:11:39,714 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.084)       0:03:35.457 ****** 
2023-07-10 15:11:39,760 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.045)       0:03:35.503 ****** 
2023-07-10 15:11:39,805 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.045)       0:03:35.548 ****** 
2023-07-10 15:11:39,866 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.061)       0:03:35.609 ****** 
2023-07-10 15:11:39,945 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:39 +0300 (0:00:00.078)       0:03:35.687 ****** 
2023-07-10 15:11:40,013 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.068)       0:03:35.756 ****** 
2023-07-10 15:11:40,061 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.047)       0:03:35.804 ****** 
2023-07-10 15:11:40,108 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.046)       0:03:35.851 ****** 
2023-07-10 15:11:40,153 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.045)       0:03:35.896 ****** 
2023-07-10 15:11:40,448 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:40,448 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar", "state": "absent"}
2023-07-10 15:11:40,463 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.309)       0:03:36.206 ****** 
2023-07-10 15:11:40,528 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:40,529 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:40,543 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.080)       0:03:36.286 ****** 
2023-07-10 15:11:40,613 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:40,613 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz"
}
2023-07-10 15:11:40,629 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.085)       0:03:36.372 ****** 
2023-07-10 15:11:40,700 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:40,701 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/v3.25.1.tar.gz"}, "changed": false}
2023-07-10 15:11:40,717 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:40 +0300 (0:00:00.087)       0:03:36.460 ****** 
2023-07-10 15:11:41,010 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:41,010 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/calico-v3.25.1-kdd-crds", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:41,030 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:41 +0300 (0:00:00.313)       0:03:36.773 ****** 
2023-07-10 15:11:41,088 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:41 +0300 (0:00:00.058)       0:03:36.831 ****** 
2023-07-10 15:11:41,162 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:41 +0300 (0:00:00.073)       0:03:36.904 ****** 
2023-07-10 15:11:42,552 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:42,554 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:42,557 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:42,587 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:42 +0300 (0:00:01.425)       0:03:38.330 ****** 
2023-07-10 15:11:42,668 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:42,669 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz"]}, "changed": false}
2023-07-10 15:11:42,687 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:42 +0300 (0:00:00.100)       0:03:38.430 ****** 
2023-07-10 15:11:43,070 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:11:43,070 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:43,080 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:43 +0300 (0:00:00.392)       0:03:38.822 ****** 
2023-07-10 15:11:43,109 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:43 +0300 (0:00:00.029)       0:03:38.852 ****** 
2023-07-10 15:11:43,139 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:43 +0300 (0:00:00.029)       0:03:38.882 ****** 
2023-07-10 15:11:43,170 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:43 +0300 (0:00:00.030)       0:03:38.913 ****** 
2023-07-10 15:11:43,188 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:11:43,204 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:11:43,217 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:43 +0300 (0:00:00.047)       0:03:38.960 ****** 
2023-07-10 15:11:44,187 p=14511 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 15:11:44,188 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases/calico-v3.25.1-kdd-crds", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:11:44,196 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.978)       0:03:39.939 ****** 
2023-07-10 15:11:44,235 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:44,236 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:44,245 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.049)       0:03:39.988 ****** 
2023-07-10 15:11:44,290 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:44,291 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/pause"
}
2023-07-10 15:11:44,301 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.056)       0:03:40.044 ****** 
2023-07-10 15:11:44,350 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:44,351 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:44,361 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.060)       0:03:40.104 ****** 
2023-07-10 15:11:44,407 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:44,408 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 15:11:44,418 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.056)       0:03:40.161 ****** 
2023-07-10 15:11:44,462 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:44,463 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 15:11:44,473 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.055)       0:03:40.216 ****** 
2023-07-10 15:11:44,519 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:44,520 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 15:11:44,529 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.056)       0:03:40.272 ****** 
2023-07-10 15:11:44,566 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.036)       0:03:40.309 ****** 
2023-07-10 15:11:44,610 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:44,611 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_pause_3.9.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 15:11:44,621 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.055)       0:03:40.364 ****** 
2023-07-10 15:11:44,653 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.031)       0:03:40.396 ****** 
2023-07-10 15:11:44,687 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.033)       0:03:40.430 ****** 
2023-07-10 15:11:44,739 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:44,740 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 15:11:44,751 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.064)       0:03:40.494 ****** 
2023-07-10 15:11:44,785 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.034)       0:03:40.528 ****** 
2023-07-10 15:11:44,805 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:44,822 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:44,842 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:44 +0300 (0:00:00.056)       0:03:40.585 ****** 
2023-07-10 15:11:45,280 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:45,280 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.262052", "end": "2023-07-10 12:11:45.268537", "msg": "", "rc": 0, "start": "2023-07-10 12:11:45.006485", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:45,288 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.446)       0:03:41.031 ****** 
2023-07-10 15:11:45,333 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:45,334 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:45,345 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.056)       0:03:41.088 ****** 
2023-07-10 15:11:45,380 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.034)       0:03:41.123 ****** 
2023-07-10 15:11:45,425 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:45,425 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/pause:3.9 required is: False"
}
2023-07-10 15:11:45,440 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.059)       0:03:41.183 ****** 
2023-07-10 15:11:45,471 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.031)       0:03:41.214 ****** 
2023-07-10 15:11:45,503 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.032)       0:03:41.246 ****** 
2023-07-10 15:11:45,545 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.041)       0:03:41.288 ****** 
2023-07-10 15:11:45,593 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.048)       0:03:41.336 ****** 
2023-07-10 15:11:45,633 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.039)       0:03:41.376 ****** 
2023-07-10 15:11:45,666 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.032)       0:03:41.408 ****** 
2023-07-10 15:11:45,699 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.033)       0:03:41.442 ****** 
2023-07-10 15:11:45,732 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.033)       0:03:41.475 ****** 
2023-07-10 15:11:45,905 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:45,906 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar", "state": "absent"}
2023-07-10 15:11:45,915 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.182)       0:03:41.658 ****** 
2023-07-10 15:11:45,956 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:45,956 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:45,965 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:45 +0300 (0:00:00.050)       0:03:41.708 ****** 
2023-07-10 15:11:46,010 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:46,011 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/library/nginx"
}
2023-07-10 15:11:46,021 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.056)       0:03:41.764 ****** 
2023-07-10 15:11:46,072 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:46,073 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:46,082 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.060)       0:03:41.825 ****** 
2023-07-10 15:11:46,127 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:46,127 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 15:11:46,138 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.056)       0:03:41.881 ****** 
2023-07-10 15:11:46,183 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:46,183 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_library_nginx_1.23.2-alpine.tar"}, "changed": false}
2023-07-10 15:11:46,192 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.054)       0:03:41.935 ****** 
2023-07-10 15:11:46,236 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:46,236 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_library_nginx_1.23.2-alpine.tar", "image_path_final": "/tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar"}, "changed": false}
2023-07-10 15:11:46,247 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.054)       0:03:41.990 ****** 
2023-07-10 15:11:46,277 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.030)       0:03:42.020 ****** 
2023-07-10 15:11:46,323 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:46,324 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 15:11:46,333 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.055)       0:03:42.076 ****** 
2023-07-10 15:11:46,363 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.030)       0:03:42.106 ****** 
2023-07-10 15:11:46,395 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.031)       0:03:42.138 ****** 
2023-07-10 15:11:46,448 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:46,448 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_library_nginx_1.23.2-alpine.tar docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 15:11:46,459 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.063)       0:03:42.202 ****** 
2023-07-10 15:11:46,491 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.031)       0:03:42.233 ****** 
2023-07-10 15:11:46,510 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:46,525 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:46,545 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.054)       0:03:42.288 ****** 
2023-07-10 15:11:46,976 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:46,976 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.261644", "end": "2023-07-10 12:11:46.965275", "msg": "", "rc": 0, "start": "2023-07-10 12:11:46.703631", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:46,985 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:46 +0300 (0:00:00.440)       0:03:42.728 ****** 
2023-07-10 15:11:47,030 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:47,030 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:47,041 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.055)       0:03:42.784 ****** 
2023-07-10 15:11:47,076 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.034)       0:03:42.819 ****** 
2023-07-10 15:11:47,118 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:47,118 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/library/nginx:1.23.2-alpine required is: False"
}
2023-07-10 15:11:47,131 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.055)       0:03:42.874 ****** 
2023-07-10 15:11:47,161 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.029)       0:03:42.904 ****** 
2023-07-10 15:11:47,190 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.029)       0:03:42.933 ****** 
2023-07-10 15:11:47,230 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.039)       0:03:42.973 ****** 
2023-07-10 15:11:47,278 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.047)       0:03:43.021 ****** 
2023-07-10 15:11:47,321 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.042)       0:03:43.064 ****** 
2023-07-10 15:11:47,351 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.029)       0:03:43.093 ****** 
2023-07-10 15:11:47,380 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.029)       0:03:43.123 ****** 
2023-07-10 15:11:47,409 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.028)       0:03:43.152 ****** 
2023-07-10 15:11:47,582 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:47,583 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar", "state": "absent"}
2023-07-10 15:11:47,592 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.183)       0:03:43.335 ****** 
2023-07-10 15:11:47,633 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:47,633 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:47,644 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.051)       0:03:43.387 ****** 
2023-07-10 15:11:47,690 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:47,690 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
2023-07-10 15:11:47,701 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.056)       0:03:43.444 ****** 
2023-07-10 15:11:47,749 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:47,749 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:47,761 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.060)       0:03:43.504 ****** 
2023-07-10 15:11:47,806 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:47,806 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 15:11:47,817 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.055)       0:03:43.560 ****** 
2023-07-10 15:11:47,861 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:47,862 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 15:11:47,872 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.054)       0:03:43.615 ****** 
2023-07-10 15:11:47,918 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:47,919 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 15:11:47,928 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.056)       0:03:43.671 ****** 
2023-07-10 15:11:47,961 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:47 +0300 (0:00:00.032)       0:03:43.704 ****** 
2023-07-10 15:11:48,005 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:48,006 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 15:11:48,016 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.055)       0:03:43.759 ****** 
2023-07-10 15:11:48,050 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.033)       0:03:43.793 ****** 
2023-07-10 15:11:48,082 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.032)       0:03:43.825 ****** 
2023-07-10 15:11:48,133 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:48,133 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 15:11:48,143 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.060)       0:03:43.885 ****** 
2023-07-10 15:11:48,173 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.030)       0:03:43.916 ****** 
2023-07-10 15:11:48,192 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:48,208 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:48,228 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.055)       0:03:43.971 ****** 
2023-07-10 15:11:48,661 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:48,661 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.255125", "end": "2023-07-10 12:11:48.651023", "msg": "", "rc": 0, "start": "2023-07-10 12:11:48.395898", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:48,670 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.441)       0:03:44.413 ****** 
2023-07-10 15:11:48,715 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:48,715 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:48,726 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.056)       0:03:44.469 ****** 
2023-07-10 15:11:48,760 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.033)       0:03:44.503 ****** 
2023-07-10 15:11:48,803 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:48,803 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False"
}
2023-07-10 15:11:48,816 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.055)       0:03:44.559 ****** 
2023-07-10 15:11:48,845 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.029)       0:03:44.588 ****** 
2023-07-10 15:11:48,874 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.029)       0:03:44.617 ****** 
2023-07-10 15:11:48,914 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.039)       0:03:44.657 ****** 
2023-07-10 15:11:48,965 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:48 +0300 (0:00:00.051)       0:03:44.708 ****** 
2023-07-10 15:11:49,006 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.040)       0:03:44.749 ****** 
2023-07-10 15:11:49,034 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.028)       0:03:44.777 ****** 
2023-07-10 15:11:49,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.029)       0:03:44.807 ****** 
2023-07-10 15:11:49,094 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.030)       0:03:44.837 ****** 
2023-07-10 15:11:49,271 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:49,272 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "state": "absent"}
2023-07-10 15:11:49,282 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.187)       0:03:45.025 ****** 
2023-07-10 15:11:49,323 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:49,323 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:49,334 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.051)       0:03:45.077 ****** 
2023-07-10 15:11:49,380 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:49,381 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
2023-07-10 15:11:49,391 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.057)       0:03:45.134 ****** 
2023-07-10 15:11:49,440 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:49,440 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:49,450 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.058)       0:03:45.193 ****** 
2023-07-10 15:11:49,496 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:49,497 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 15:11:49,508 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.058)       0:03:45.251 ****** 
2023-07-10 15:11:49,552 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:49,553 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar"}, "changed": false}
2023-07-10 15:11:49,563 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.054)       0:03:45.306 ****** 
2023-07-10 15:11:49,608 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:49,609 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar"}, "changed": false}
2023-07-10 15:11:49,619 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.055)       0:03:45.361 ****** 
2023-07-10 15:11:49,651 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.032)       0:03:45.394 ****** 
2023-07-10 15:11:49,697 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:49,697 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 15:11:49,707 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.056)       0:03:45.450 ****** 
2023-07-10 15:11:49,738 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.030)       0:03:45.481 ****** 
2023-07-10 15:11:49,769 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.031)       0:03:45.512 ****** 
2023-07-10 15:11:49,821 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:49,821 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 15:11:49,830 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.060)       0:03:45.573 ****** 
2023-07-10 15:11:49,863 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.032)       0:03:45.606 ****** 
2023-07-10 15:11:49,882 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:49,897 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:49,917 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:49 +0300 (0:00:00.054)       0:03:45.660 ****** 
2023-07-10 15:11:50,340 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:50,341 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.249746", "end": "2023-07-10 12:11:50.329113", "msg": "", "rc": 0, "start": "2023-07-10 12:11:50.079367", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:50,349 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.431)       0:03:46.092 ****** 
2023-07-10 15:11:50,394 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:50,394 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:50,405 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.055)       0:03:46.148 ****** 
2023-07-10 15:11:50,436 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.031)       0:03:46.179 ****** 
2023-07-10 15:11:50,477 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:50,478 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.20 required is: False"
}
2023-07-10 15:11:50,490 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.054)       0:03:46.233 ****** 
2023-07-10 15:11:50,518 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.027)       0:03:46.261 ****** 
2023-07-10 15:11:50,549 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.031)       0:03:46.292 ****** 
2023-07-10 15:11:50,586 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.036)       0:03:46.329 ****** 
2023-07-10 15:11:50,634 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.047)       0:03:46.377 ****** 
2023-07-10 15:11:50,675 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.041)       0:03:46.418 ****** 
2023-07-10 15:11:50,708 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.032)       0:03:46.451 ****** 
2023-07-10 15:11:50,739 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.030)       0:03:46.482 ****** 
2023-07-10 15:11:50,767 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.027)       0:03:46.510 ****** 
2023-07-10 15:11:50,940 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:50,940 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "state": "absent"}
2023-07-10 15:11:50,949 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.182)       0:03:46.692 ****** 
2023-07-10 15:11:50,991 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:11:50,991 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:11:51,000 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:50 +0300 (0:00:00.051)       0:03:46.743 ****** 
2023-07-10 15:11:51,049 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:11:51,050 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/cpa/cluster-proportional-autoscaler"
}
2023-07-10 15:11:51,060 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.059)       0:03:46.803 ****** 
2023-07-10 15:11:51,113 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:11:51,114 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:11:51,124 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.063)       0:03:46.867 ****** 
2023-07-10 15:11:51,169 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:11:51,169 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 15:11:51,178 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.054)       0:03:46.921 ****** 
2023-07-10 15:11:51,222 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:11:51,223 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar"}, "changed": false}
2023-07-10 15:11:51,234 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.055)       0:03:46.977 ****** 
2023-07-10 15:11:51,277 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:11:51,278 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar"}, "changed": false}
2023-07-10 15:11:51,289 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.055)       0:03:47.032 ****** 
2023-07-10 15:11:51,318 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.029)       0:03:47.061 ****** 
2023-07-10 15:11:51,365 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:11:51,365 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 15:11:51,376 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.057)       0:03:47.119 ****** 
2023-07-10 15:11:51,407 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.031)       0:03:47.150 ****** 
2023-07-10 15:11:51,441 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.033)       0:03:47.184 ****** 
2023-07-10 15:11:51,494 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:11:51,495 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 15:11:51,506 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.064)       0:03:47.249 ****** 
2023-07-10 15:11:51,537 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.031)       0:03:47.280 ****** 
2023-07-10 15:11:51,556 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:11:51,573 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:11:51,592 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:51 +0300 (0:00:00.054)       0:03:47.335 ****** 
2023-07-10 15:11:52,023 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:11:52,024 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.257020", "end": "2023-07-10 12:11:52.009920", "msg": "", "rc": 0, "start": "2023-07-10 12:11:51.752900", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:11:52,033 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.440)       0:03:47.775 ****** 
2023-07-10 15:11:52,080 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:11:52,081 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:11:52,091 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.058)       0:03:47.834 ****** 
2023-07-10 15:11:52,122 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.030)       0:03:47.865 ****** 
2023-07-10 15:11:52,164 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:11:52,165 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8 required is: False"
}
2023-07-10 15:11:52,177 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.054)       0:03:47.920 ****** 
2023-07-10 15:11:52,210 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.032)       0:03:47.953 ****** 
2023-07-10 15:11:52,241 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.030)       0:03:47.984 ****** 
2023-07-10 15:11:52,280 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.039)       0:03:48.024 ****** 
2023-07-10 15:11:52,330 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.049)       0:03:48.073 ****** 
2023-07-10 15:11:52,372 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.042)       0:03:48.115 ****** 
2023-07-10 15:11:52,403 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.030)       0:03:48.146 ****** 
2023-07-10 15:11:52,432 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.029)       0:03:48.175 ****** 
2023-07-10 15:11:52,462 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.029)       0:03:48.205 ****** 
2023-07-10 15:11:52,640 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:11:52,640 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "state": "absent"}
2023-07-10 15:11:52,648 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.186)       0:03:48.391 ****** 
2023-07-10 15:11:52,691 p=14511 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 15:11:52,692 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:11:52,702 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.053)       0:03:48.445 ****** 
2023-07-10 15:11:52,747 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 15:11:52,747 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"
}
2023-07-10 15:11:52,757 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.055)       0:03:48.500 ****** 
2023-07-10 15:11:52,799 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 15:11:52,800 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/helm-v3.12.1-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:11:52,810 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:52 +0300 (0:00:00.052)       0:03:48.553 ****** 
2023-07-10 15:11:52,989 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 15:11:52,990 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/helm-v3.12.1", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:11:53,003 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:53 +0300 (0:00:00.193)       0:03:48.746 ****** 
2023-07-10 15:11:53,044 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:53 +0300 (0:00:00.041)       0:03:48.787 ****** 
2023-07-10 15:11:53,092 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:53 +0300 (0:00:00.048)       0:03:48.835 ****** 
2023-07-10 15:11:54,638 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 15:11:54,639 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:54,641 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:11:54,658 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:54 +0300 (0:00:01.565)       0:03:50.401 ****** 
2023-07-10 15:11:54,720 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 15:11:54,720 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:11:54,739 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:11:54 +0300 (0:00:00.080)       0:03:50.482 ****** 
2023-07-10 15:12:05,232 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 15:12:05,232 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}
2023-07-10 15:12:05,247 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:05 +0300 (0:00:10.507)       0:04:00.990 ****** 
2023-07-10 15:12:05,292 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:05 +0300 (0:00:00.044)       0:04:01.035 ****** 
2023-07-10 15:12:05,339 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:05 +0300 (0:00:00.046)       0:04:01.082 ****** 
2023-07-10 15:12:05,384 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:05 +0300 (0:00:00.044)       0:04:01.126 ****** 
2023-07-10 15:12:05,412 p=14511 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 15:12:05,435 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:12:05,461 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:05 +0300 (0:00:00.077)       0:04:01.204 ****** 
2023-07-10 15:12:07,531 p=14511 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 15:12:07,532 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/tmp/releases/helm-v3.12.1", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/tmp/releases/helm-v3.12.1", "-z", "--owner=root", "-f", "/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:12:07,547 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:07 +0300 (0:00:02.085)       0:04:03.290 ****** 
2023-07-10 15:12:07,615 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:07,616 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:07,631 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:07 +0300 (0:00:00.083)       0:04:03.373 ****** 
2023-07-10 15:12:07,703 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:07,704 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/ingress-nginx/controller"
}
2023-07-10 15:12:07,720 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:07 +0300 (0:00:00.089)       0:04:03.463 ****** 
2023-07-10 15:12:07,798 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:07,799 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:12:07,815 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:07 +0300 (0:00:00.095)       0:04:03.558 ****** 
2023-07-10 15:12:07,886 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:07,886 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 15:12:07,902 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:07 +0300 (0:00:00.086)       0:04:03.645 ****** 
2023-07-10 15:12:07,969 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:07,970 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_ingress-nginx_controller_v1.8.0.tar"}, "changed": false}
2023-07-10 15:12:07,985 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:07 +0300 (0:00:00.082)       0:04:03.728 ****** 
2023-07-10 15:12:08,054 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:08,054 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar"}, "changed": false}
2023-07-10 15:12:08,070 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.084)       0:04:03.813 ****** 
2023-07-10 15:12:08,118 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.048)       0:04:03.861 ****** 
2023-07-10 15:12:08,188 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:08,189 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 15:12:08,204 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.085)       0:04:03.947 ****** 
2023-07-10 15:12:08,253 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.049)       0:04:03.996 ****** 
2023-07-10 15:12:08,302 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.048)       0:04:04.045 ****** 
2023-07-10 15:12:08,382 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:08,383 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 15:12:08,399 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.096)       0:04:04.142 ****** 
2023-07-10 15:12:08,447 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.048)       0:04:04.190 ****** 
2023-07-10 15:12:08,477 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:08,492 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:08,513 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.066)       0:04:04.256 ****** 
2023-07-10 15:12:08,975 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:08,975 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.244959", "end": "2023-07-10 12:12:08.963728", "msg": "", "rc": 0, "start": "2023-07-10 12:12:08.718769", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:08,984 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:08 +0300 (0:00:00.471)       0:04:04.728 ****** 
2023-07-10 15:12:09,038 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:09,038 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:09,048 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.063)       0:04:04.791 ****** 
2023-07-10 15:12:09,083 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.034)       0:04:04.826 ****** 
2023-07-10 15:12:09,124 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:09,124 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/ingress-nginx/controller:v1.8.0 required is: False"
}
2023-07-10 15:12:09,139 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.056)       0:04:04.882 ****** 
2023-07-10 15:12:09,168 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.029)       0:04:04.911 ****** 
2023-07-10 15:12:09,198 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.029)       0:04:04.941 ****** 
2023-07-10 15:12:09,238 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.039)       0:04:04.981 ****** 
2023-07-10 15:12:09,289 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.051)       0:04:05.032 ****** 
2023-07-10 15:12:09,330 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.040)       0:04:05.073 ****** 
2023-07-10 15:12:09,360 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.030)       0:04:05.103 ****** 
2023-07-10 15:12:09,391 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.030)       0:04:05.134 ****** 
2023-07-10 15:12:09,421 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.030)       0:04:05.164 ****** 
2023-07-10 15:12:09,593 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:09,594 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "state": "absent"}
2023-07-10 15:12:09,603 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.181)       0:04:05.346 ****** 
2023-07-10 15:12:09,645 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:09,645 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:09,655 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.051)       0:04:05.398 ****** 
2023-07-10 15:12:09,705 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:09,706 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/kubernetesui/dashboard"
}
2023-07-10 15:12:09,715 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.060)       0:04:05.458 ****** 
2023-07-10 15:12:09,769 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:09,769 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:12:09,781 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.065)       0:04:05.524 ****** 
2023-07-10 15:12:09,830 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:09,831 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 15:12:09,842 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.060)       0:04:05.585 ****** 
2023-07-10 15:12:09,888 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:09,888 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_kubernetesui_dashboard_v2.7.0.tar"}, "changed": false}
2023-07-10 15:12:09,898 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.056)       0:04:05.641 ****** 
2023-07-10 15:12:09,941 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:09,941 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "image_path_final": "/tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar"}, "changed": false}
2023-07-10 15:12:09,951 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.052)       0:04:05.694 ****** 
2023-07-10 15:12:09,982 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:09 +0300 (0:00:00.031)       0:04:05.725 ****** 
2023-07-10 15:12:10,028 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:10,029 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 15:12:10,039 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.056)       0:04:05.782 ****** 
2023-07-10 15:12:10,072 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.032)       0:04:05.815 ****** 
2023-07-10 15:12:10,103 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.031)       0:04:05.846 ****** 
2023-07-10 15:12:10,155 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:10,156 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_kubernetesui_dashboard_v2.7.0.tar docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 15:12:10,165 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.061)       0:04:05.908 ****** 
2023-07-10 15:12:10,198 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.032)       0:04:05.941 ****** 
2023-07-10 15:12:10,219 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:10,235 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:10,255 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.057)       0:04:05.998 ****** 
2023-07-10 15:12:10,695 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:10,696 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.271908", "end": "2023-07-10 12:12:10.683668", "msg": "", "rc": 0, "start": "2023-07-10 12:12:10.411760", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:10,704 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.448)       0:04:06.447 ****** 
2023-07-10 15:12:10,754 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:10,755 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:10,764 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.059)       0:04:06.507 ****** 
2023-07-10 15:12:10,795 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.031)       0:04:06.538 ****** 
2023-07-10 15:12:10,836 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:10,836 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/kubernetesui/dashboard:v2.7.0 required is: False"
}
2023-07-10 15:12:10,848 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.052)       0:04:06.591 ****** 
2023-07-10 15:12:10,878 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.029)       0:04:06.621 ****** 
2023-07-10 15:12:10,907 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.028)       0:04:06.650 ****** 
2023-07-10 15:12:10,946 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:10 +0300 (0:00:00.039)       0:04:06.689 ****** 
2023-07-10 15:12:11,065 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.118)       0:04:06.807 ****** 
2023-07-10 15:12:11,104 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.039)       0:04:06.847 ****** 
2023-07-10 15:12:11,134 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.030)       0:04:06.877 ****** 
2023-07-10 15:12:11,163 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.028)       0:04:06.906 ****** 
2023-07-10 15:12:11,194 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.030)       0:04:06.937 ****** 
2023-07-10 15:12:11,368 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:11,368 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "state": "absent"}
2023-07-10 15:12:11,377 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.182)       0:04:07.120 ****** 
2023-07-10 15:12:11,417 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:11,418 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:11,427 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.050)       0:04:07.170 ****** 
2023-07-10 15:12:11,473 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:11,473 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/kubernetesui/metrics-scraper"
}
2023-07-10 15:12:11,484 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.056)       0:04:07.227 ****** 
2023-07-10 15:12:11,532 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:11,533 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 15:12:11,542 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.058)       0:04:07.285 ****** 
2023-07-10 15:12:11,588 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:11,588 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 15:12:11,598 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.055)       0:04:07.341 ****** 
2023-07-10 15:12:11,642 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:11,642 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_kubernetesui_metrics-scraper_v1.0.8.tar"}, "changed": false}
2023-07-10 15:12:11,653 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.054)       0:04:07.395 ****** 
2023-07-10 15:12:11,698 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:11,699 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "image_path_final": "/tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar"}, "changed": false}
2023-07-10 15:12:11,710 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.057)       0:04:07.453 ****** 
2023-07-10 15:12:11,740 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.029)       0:04:07.483 ****** 
2023-07-10 15:12:11,787 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:11,787 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 15:12:11,797 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.056)       0:04:07.540 ****** 
2023-07-10 15:12:11,828 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.031)       0:04:07.571 ****** 
2023-07-10 15:12:11,859 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.031)       0:04:07.602 ****** 
2023-07-10 15:12:11,910 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:11,910 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 15:12:11,921 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.061)       0:04:07.664 ****** 
2023-07-10 15:12:11,953 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:11 +0300 (0:00:00.031)       0:04:07.696 ****** 
2023-07-10 15:12:11,971 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:11,989 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:12,009 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.056)       0:04:07.752 ****** 
2023-07-10 15:12:12,435 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:12,436 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.251749", "end": "2023-07-10 12:12:12.423391", "msg": "", "rc": 0, "start": "2023-07-10 12:12:12.171642", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:12,445 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.435)       0:04:08.187 ****** 
2023-07-10 15:12:12,489 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:12,489 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:12,507 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.062)       0:04:08.250 ****** 
2023-07-10 15:12:12,544 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.037)       0:04:08.287 ****** 
2023-07-10 15:12:12,585 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:12,586 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/kubernetesui/metrics-scraper:v1.0.8 required is: False"
}
2023-07-10 15:12:12,601 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.056)       0:04:08.344 ****** 
2023-07-10 15:12:12,630 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.029)       0:04:08.373 ****** 
2023-07-10 15:12:12,662 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.031)       0:04:08.405 ****** 
2023-07-10 15:12:12,703 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.040)       0:04:08.446 ****** 
2023-07-10 15:12:12,751 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.048)       0:04:08.494 ****** 
2023-07-10 15:12:12,793 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.041)       0:04:08.535 ****** 
2023-07-10 15:12:12,823 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.030)       0:04:08.566 ****** 
2023-07-10 15:12:12,856 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.032)       0:04:08.599 ****** 
2023-07-10 15:12:12,889 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:12 +0300 (0:00:00.033)       0:04:08.632 ****** 
2023-07-10 15:12:13,065 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:13,065 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "state": "absent"}
2023-07-10 15:12:13,074 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.185)       0:04:08.817 ****** 
2023-07-10 15:12:13,117 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:13,118 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:13,128 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.053)       0:04:08.871 ****** 
2023-07-10 15:12:13,174 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:13,174 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
2023-07-10 15:12:13,183 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.055)       0:04:08.926 ****** 
2023-07-10 15:12:13,234 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:13,235 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 15:12:13,244 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.061)       0:04:08.987 ****** 
2023-07-10 15:12:13,290 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:13,291 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 15:12:13,303 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.058)       0:04:09.046 ****** 
2023-07-10 15:12:13,347 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:13,348 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-apiserver_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:13,359 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.056)       0:04:09.102 ****** 
2023-07-10 15:12:13,405 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:13,406 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:13,415 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.056)       0:04:09.158 ****** 
2023-07-10 15:12:13,448 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.032)       0:04:09.191 ****** 
2023-07-10 15:12:13,494 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:13,494 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 15:12:13,503 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.055)       0:04:09.246 ****** 
2023-07-10 15:12:13,533 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.030)       0:04:09.276 ****** 
2023-07-10 15:12:13,564 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.030)       0:04:09.307 ****** 
2023-07-10 15:12:13,618 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:13,618 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-apiserver_v1.26.2.tar registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 15:12:13,628 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.063)       0:04:09.371 ****** 
2023-07-10 15:12:13,659 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.031)       0:04:09.402 ****** 
2023-07-10 15:12:13,679 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:13,695 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:13,715 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:13 +0300 (0:00:00.056)       0:04:09.458 ****** 
2023-07-10 15:12:14,133 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:14,133 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.249784", "end": "2023-07-10 12:12:14.122332", "msg": "", "rc": 0, "start": "2023-07-10 12:12:13.872548", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:14,143 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.427)       0:04:09.886 ****** 
2023-07-10 15:12:14,187 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:14,187 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:14,198 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.055)       0:04:09.941 ****** 
2023-07-10 15:12:14,229 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.030)       0:04:09.972 ****** 
2023-07-10 15:12:14,271 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:14,271 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.26.2 required is: False"
}
2023-07-10 15:12:14,283 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.054)       0:04:10.026 ****** 
2023-07-10 15:12:14,312 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.029)       0:04:10.055 ****** 
2023-07-10 15:12:14,344 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.031)       0:04:10.087 ****** 
2023-07-10 15:12:14,382 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.038)       0:04:10.125 ****** 
2023-07-10 15:12:14,432 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.049)       0:04:10.175 ****** 
2023-07-10 15:12:14,475 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.042)       0:04:10.218 ****** 
2023-07-10 15:12:14,510 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.034)       0:04:10.253 ****** 
2023-07-10 15:12:14,540 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.030)       0:04:10.283 ****** 
2023-07-10 15:12:14,570 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.029)       0:04:10.313 ****** 
2023-07-10 15:12:14,741 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:14,742 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "state": "absent"}
2023-07-10 15:12:14,752 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.181)       0:04:10.495 ****** 
2023-07-10 15:12:14,793 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:14,794 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:14,805 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.053)       0:04:10.548 ****** 
2023-07-10 15:12:14,852 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:14,852 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
2023-07-10 15:12:14,863 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.057)       0:04:10.606 ****** 
2023-07-10 15:12:14,916 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:14,916 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 15:12:14,927 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.064)       0:04:10.670 ****** 
2023-07-10 15:12:14,975 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:14,976 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 15:12:14,986 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:14 +0300 (0:00:00.058)       0:04:10.729 ****** 
2023-07-10 15:12:15,032 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:15,032 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-controller-manager_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:15,043 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.056)       0:04:10.785 ****** 
2023-07-10 15:12:15,086 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:15,086 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:15,097 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.054)       0:04:10.840 ****** 
2023-07-10 15:12:15,129 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.031)       0:04:10.872 ****** 
2023-07-10 15:12:15,174 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:15,175 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 15:12:15,184 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.054)       0:04:10.927 ****** 
2023-07-10 15:12:15,216 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.031)       0:04:10.959 ****** 
2023-07-10 15:12:15,250 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.034)       0:04:10.993 ****** 
2023-07-10 15:12:15,304 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:15,304 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 15:12:15,315 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.064)       0:04:11.058 ****** 
2023-07-10 15:12:15,347 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.031)       0:04:11.090 ****** 
2023-07-10 15:12:15,366 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:15,382 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:15,400 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.053)       0:04:11.143 ****** 
2023-07-10 15:12:15,801 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:15,801 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.230661", "end": "2023-07-10 12:12:15.790357", "msg": "", "rc": 0, "start": "2023-07-10 12:12:15.559696", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:15,811 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.410)       0:04:11.554 ****** 
2023-07-10 15:12:15,858 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:15,858 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:15,868 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.056)       0:04:11.611 ****** 
2023-07-10 15:12:15,903 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.035)       0:04:11.646 ****** 
2023-07-10 15:12:15,945 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:15,946 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.26.2 required is: False"
}
2023-07-10 15:12:15,958 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.054)       0:04:11.701 ****** 
2023-07-10 15:12:15,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:15 +0300 (0:00:00.029)       0:04:11.730 ****** 
2023-07-10 15:12:16,020 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.032)       0:04:11.763 ****** 
2023-07-10 15:12:16,062 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.042)       0:04:11.805 ****** 
2023-07-10 15:12:16,115 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.052)       0:04:11.857 ****** 
2023-07-10 15:12:16,158 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.043)       0:04:11.901 ****** 
2023-07-10 15:12:16,191 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.033)       0:04:11.934 ****** 
2023-07-10 15:12:16,223 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.031)       0:04:11.966 ****** 
2023-07-10 15:12:16,255 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.031)       0:04:11.998 ****** 
2023-07-10 15:12:16,429 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:16,430 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "state": "absent"}
2023-07-10 15:12:16,441 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.185)       0:04:12.184 ****** 
2023-07-10 15:12:16,483 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:16,483 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:16,495 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.054)       0:04:12.238 ****** 
2023-07-10 15:12:16,543 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:16,544 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
2023-07-10 15:12:16,554 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.059)       0:04:12.297 ****** 
2023-07-10 15:12:16,609 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:16,610 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 15:12:16,621 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.067)       0:04:12.364 ****** 
2023-07-10 15:12:16,668 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:16,669 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 15:12:16,682 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.060)       0:04:12.425 ****** 
2023-07-10 15:12:16,728 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:16,728 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-scheduler_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:16,738 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.056)       0:04:12.481 ****** 
2023-07-10 15:12:16,785 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:16,786 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:16,796 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.057)       0:04:12.539 ****** 
2023-07-10 15:12:16,827 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.031)       0:04:12.570 ****** 
2023-07-10 15:12:16,875 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:16,876 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 15:12:16,886 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.058)       0:04:12.628 ****** 
2023-07-10 15:12:16,919 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.033)       0:04:12.662 ****** 
2023-07-10 15:12:16,952 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:16 +0300 (0:00:00.032)       0:04:12.694 ****** 
2023-07-10 15:12:17,003 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:17,004 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-scheduler_v1.26.2.tar registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 15:12:17,013 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:17 +0300 (0:00:00.061)       0:04:12.756 ****** 
2023-07-10 15:12:17,045 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:17 +0300 (0:00:00.032)       0:04:12.788 ****** 
2023-07-10 15:12:17,065 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:17,081 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:17,106 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:17 +0300 (0:00:00.060)       0:04:12.849 ****** 
2023-07-10 15:12:17,816 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:17,817 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.436329", "end": "2023-07-10 12:12:17.797442", "msg": "", "rc": 0, "start": "2023-07-10 12:12:17.361113", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:17,832 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:17 +0300 (0:00:00.726)       0:04:13.575 ****** 
2023-07-10 15:12:17,903 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:17,903 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:17,919 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:17 +0300 (0:00:00.086)       0:04:13.662 ****** 
2023-07-10 15:12:17,972 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:17 +0300 (0:00:00.053)       0:04:13.715 ****** 
2023-07-10 15:12:18,043 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:18,044 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.26.2 required is: False"
}
2023-07-10 15:12:18,065 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.092)       0:04:13.808 ****** 
2023-07-10 15:12:18,112 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.047)       0:04:13.855 ****** 
2023-07-10 15:12:18,162 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.049)       0:04:13.905 ****** 
2023-07-10 15:12:18,225 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.062)       0:04:13.968 ****** 
2023-07-10 15:12:18,305 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.080)       0:04:14.048 ****** 
2023-07-10 15:12:18,378 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.072)       0:04:14.121 ****** 
2023-07-10 15:12:18,428 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.050)       0:04:14.171 ****** 
2023-07-10 15:12:18,477 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.048)       0:04:14.219 ****** 
2023-07-10 15:12:18,525 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.048)       0:04:14.268 ****** 
2023-07-10 15:12:18,810 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:18,811 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "state": "absent"}
2023-07-10 15:12:18,825 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.300)       0:04:14.568 ****** 
2023-07-10 15:12:18,895 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:18,896 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:18,911 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:18 +0300 (0:00:00.085)       0:04:14.653 ****** 
2023-07-10 15:12:18,987 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:18,988 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-proxy"
}
2023-07-10 15:12:19,004 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.093)       0:04:14.747 ****** 
2023-07-10 15:12:19,090 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:19,091 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 15:12:19,106 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.102)       0:04:14.849 ****** 
2023-07-10 15:12:19,184 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:19,185 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-proxy:v1.26.2"}, "changed": false}
2023-07-10 15:12:19,201 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.094)       0:04:14.944 ****** 
2023-07-10 15:12:19,270 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:19,271 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-proxy_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:19,287 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.085)       0:04:15.030 ****** 
2023-07-10 15:12:19,359 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:19,360 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-proxy_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar"}, "changed": false}
2023-07-10 15:12:19,376 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.089)       0:04:15.119 ****** 
2023-07-10 15:12:19,424 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.048)       0:04:15.167 ****** 
2023-07-10 15:12:19,495 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:19,496 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar registry.k8s.io/kube-proxy:v1.26.2"}, "changed": false}
2023-07-10 15:12:19,511 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.086)       0:04:15.254 ****** 
2023-07-10 15:12:19,558 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.046)       0:04:15.301 ****** 
2023-07-10 15:12:19,612 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.053)       0:04:15.355 ****** 
2023-07-10 15:12:19,693 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:19,694 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-proxy_v1.26.2.tar registry.k8s.io/kube-proxy:v1.26.2"}, "changed": false}
2023-07-10 15:12:19,708 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.096)       0:04:15.451 ****** 
2023-07-10 15:12:19,756 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.047)       0:04:15.499 ****** 
2023-07-10 15:12:19,785 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:19,810 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:19,841 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:19 +0300 (0:00:00.085)       0:04:15.584 ****** 
2023-07-10 15:12:20,580 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:20,581 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.459286", "end": "2023-07-10 12:12:20.557460", "msg": "", "rc": 0, "start": "2023-07-10 12:12:20.098174", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:20,596 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.754)       0:04:16.339 ****** 
2023-07-10 15:12:20,667 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:20,668 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 15:12:20,683 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.086)       0:04:16.426 ****** 
2023-07-10 15:12:20,732 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.048)       0:04:16.475 ****** 
2023-07-10 15:12:20,798 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:20,799 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-proxy:v1.26.2 required is: True"
}
2023-07-10 15:12:20,818 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.086)       0:04:16.561 ****** 
2023-07-10 15:12:20,864 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.045)       0:04:16.607 ****** 
2023-07-10 15:12:20,909 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.044)       0:04:16.652 ****** 
2023-07-10 15:12:20,971 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:20 +0300 (0:00:00.062)       0:04:16.714 ****** 
2023-07-10 15:12:36,884 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************************************************************************************************************
2023-07-10 15:12:36,885 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "registry.k8s.io/kube-proxy:v1.26.2"], "delta": "0:00:15.493789", "end": "2023-07-10 12:12:36.860780", "msg": "", "rc": 0, "start": "2023-07-10 12:12:21.366991", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:12:36,914 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:36 +0300 (0:00:15.942)       0:04:32.657 ****** 
2023-07-10 15:12:36,983 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:36 +0300 (0:00:00.069)       0:04:32.726 ****** 
2023-07-10 15:12:37,032 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.049)       0:04:32.775 ****** 
2023-07-10 15:12:37,086 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.053)       0:04:32.828 ****** 
2023-07-10 15:12:37,133 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.047)       0:04:32.876 ****** 
2023-07-10 15:12:37,419 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:37,420 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar", "state": "absent"}
2023-07-10 15:12:37,434 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.300)       0:04:33.177 ****** 
2023-07-10 15:12:37,498 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:37,499 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:37,514 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.079)       0:04:33.257 ****** 
2023-07-10 15:12:37,587 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:37,588 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/pause"
}
2023-07-10 15:12:37,604 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.090)       0:04:33.347 ****** 
2023-07-10 15:12:37,686 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:37,687 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 15:12:37,702 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.097)       0:04:33.445 ****** 
2023-07-10 15:12:37,774 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:37,775 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 15:12:37,790 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.088)       0:04:33.533 ****** 
2023-07-10 15:12:37,861 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:37,862 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 15:12:37,876 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.085)       0:04:33.619 ****** 
2023-07-10 15:12:37,945 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:37,946 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 15:12:37,963 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:37 +0300 (0:00:00.086)       0:04:33.706 ****** 
2023-07-10 15:12:38,013 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.050)       0:04:33.756 ****** 
2023-07-10 15:12:38,086 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:38,087 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_pause_3.9.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 15:12:38,103 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.090)       0:04:33.846 ****** 
2023-07-10 15:12:38,149 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.046)       0:04:33.892 ****** 
2023-07-10 15:12:38,197 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.047)       0:04:33.940 ****** 
2023-07-10 15:12:38,279 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:38,280 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 15:12:38,294 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.097)       0:04:34.037 ****** 
2023-07-10 15:12:38,344 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.049)       0:04:34.087 ****** 
2023-07-10 15:12:38,375 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:38,400 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:38,433 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.089)       0:04:34.176 ****** 
2023-07-10 15:12:38,981 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:38,982 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.298213", "end": "2023-07-10 12:12:38.971329", "msg": "", "rc": 0, "start": "2023-07-10 12:12:38.673116", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:38,990 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:38 +0300 (0:00:00.556)       0:04:34.733 ****** 
2023-07-10 15:12:39,035 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:39,036 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:39,047 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.057)       0:04:34.790 ****** 
2023-07-10 15:12:39,079 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.031)       0:04:34.822 ****** 
2023-07-10 15:12:39,122 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:39,122 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/pause:3.9 required is: False"
}
2023-07-10 15:12:39,135 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.056)       0:04:34.878 ****** 
2023-07-10 15:12:39,165 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.030)       0:04:34.908 ****** 
2023-07-10 15:12:39,195 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.030)       0:04:34.938 ****** 
2023-07-10 15:12:39,235 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.039)       0:04:34.978 ****** 
2023-07-10 15:12:39,285 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.050)       0:04:35.028 ****** 
2023-07-10 15:12:39,325 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.040)       0:04:35.068 ****** 
2023-07-10 15:12:39,357 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.031)       0:04:35.100 ****** 
2023-07-10 15:12:39,386 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.028)       0:04:35.128 ****** 
2023-07-10 15:12:39,415 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.029)       0:04:35.158 ****** 
2023-07-10 15:12:39,592 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:39,593 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar", "state": "absent"}
2023-07-10 15:12:39,602 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.186)       0:04:35.345 ****** 
2023-07-10 15:12:39,643 p=14511 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 15:12:39,644 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 15:12:39,653 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.050)       0:04:35.396 ****** 
2023-07-10 15:12:39,701 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 15:12:39,702 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
2023-07-10 15:12:39,712 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.059)       0:04:35.455 ****** 
2023-07-10 15:12:39,764 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 15:12:39,764 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 15:12:39,773 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.061)       0:04:35.516 ****** 
2023-07-10 15:12:39,820 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 15:12:39,820 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 15:12:39,829 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.055)       0:04:35.572 ****** 
2023-07-10 15:12:39,873 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 15:12:39,874 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 15:12:39,885 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.055)       0:04:35.628 ****** 
2023-07-10 15:12:39,930 p=14511 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 15:12:39,930 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 15:12:39,941 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.056)       0:04:35.684 ****** 
2023-07-10 15:12:39,977 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:39 +0300 (0:00:00.035)       0:04:35.720 ****** 
2023-07-10 15:12:40,024 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 15:12:40,025 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 15:12:40,035 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.057)       0:04:35.777 ****** 
2023-07-10 15:12:40,067 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.032)       0:04:35.810 ****** 
2023-07-10 15:12:40,101 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.034)       0:04:35.844 ****** 
2023-07-10 15:12:40,153 p=14511 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 15:12:40,153 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 15:12:40,165 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.063)       0:04:35.908 ****** 
2023-07-10 15:12:40,195 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.030)       0:04:35.938 ****** 
2023-07-10 15:12:40,214 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 15:12:40,231 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 15:12:40,249 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.053)       0:04:35.992 ****** 
2023-07-10 15:12:40,675 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 15:12:40,676 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.251181", "end": "2023-07-10 12:12:40.665649", "msg": "", "rc": 0, "start": "2023-07-10 12:12:40.414468", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 15:12:40,685 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.435)       0:04:36.428 ****** 
2023-07-10 15:12:40,730 p=14511 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 15:12:40,730 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 15:12:40,742 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.057)       0:04:36.485 ****** 
2023-07-10 15:12:40,775 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.032)       0:04:36.518 ****** 
2023-07-10 15:12:40,817 p=14511 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 15:12:40,817 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False"
}
2023-07-10 15:12:40,831 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.055)       0:04:36.574 ****** 
2023-07-10 15:12:40,862 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.031)       0:04:36.605 ****** 
2023-07-10 15:12:40,896 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.033)       0:04:36.639 ****** 
2023-07-10 15:12:40,936 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.040)       0:04:36.679 ****** 
2023-07-10 15:12:40,986 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:40 +0300 (0:00:00.049)       0:04:36.729 ****** 
2023-07-10 15:12:41,028 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.041)       0:04:36.770 ****** 
2023-07-10 15:12:41,059 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.031)       0:04:36.802 ****** 
2023-07-10 15:12:41,090 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.031)       0:04:36.833 ****** 
2023-07-10 15:12:41,119 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.029)       0:04:36.862 ****** 
2023-07-10 15:12:41,290 p=14511 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 15:12:41,290 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "state": "absent"}
2023-07-10 15:12:41,335 p=14511 u=kubernetmachine n=ansible | PLAY [etcd:kube_control_plane] ***************************************************************************************************************************************************************
2023-07-10 15:12:41,373 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.253)       0:04:37.115 ****** 
2023-07-10 15:12:41,412 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.039)       0:04:37.155 ****** 
2023-07-10 15:12:41,458 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.046)       0:04:37.201 ****** 
2023-07-10 15:12:41,502 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.043)       0:04:37.244 ****** 
2023-07-10 15:12:41,536 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.033)       0:04:37.278 ****** 
2023-07-10 15:12:41,572 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.036)       0:04:37.315 ****** 
2023-07-10 15:12:41,612 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.039)       0:04:37.354 ****** 
2023-07-10 15:12:41,649 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.037)       0:04:37.392 ****** 
2023-07-10 15:12:41,683 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.033)       0:04:37.426 ****** 
2023-07-10 15:12:41,719 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:41 +0300 (0:00:00.036)       0:04:37.462 ****** 
2023-07-10 15:12:43,743 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:43 +0300 (0:00:02.024)       0:04:39.486 ****** 
2023-07-10 15:12:43,808 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:12:43,809 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:12:43,885 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:43 +0300 (0:00:00.141)       0:04:39.628 ****** 
2023-07-10 15:12:43,957 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:43 +0300 (0:00:00.071)       0:04:39.700 ****** 
2023-07-10 15:12:44,013 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:44 +0300 (0:00:00.056)       0:04:39.756 ****** 
2023-07-10 15:12:44,075 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:44 +0300 (0:00:00.061)       0:04:39.818 ****** 
2023-07-10 15:12:44,134 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:44 +0300 (0:00:00.059)       0:04:39.877 ****** 
2023-07-10 15:12:44,193 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:44 +0300 (0:00:00.058)       0:04:39.936 ****** 
2023-07-10 15:12:44,255 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:44 +0300 (0:00:00.061)       0:04:39.998 ****** 
2023-07-10 15:12:44,576 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 15:12:44,577 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 998, "name": "etcd", "state": "present", "system": true}
2023-07-10 15:12:44,590 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:44 +0300 (0:00:00.334)       0:04:40.333 ****** 
2023-07-10 15:12:45,077 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 15:12:45,078 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "comment": "Etcd user", "create_home": false, "group": 998, "home": "/home/etcd", "name": "etcd", "shell": "/sbin/nologin", "state": "present", "system": true, "uid": 997}
2023-07-10 15:12:45,104 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:45 +0300 (0:00:00.514)       0:04:40.847 ****** 
2023-07-10 15:12:45,404 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 15:12:45,405 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 15:12:45,418 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:45 +0300 (0:00:00.313)       0:04:41.161 ****** 
2023-07-10 15:12:45,811 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 15:12:45,812 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 15:12:45,836 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:45 +0300 (0:00:00.418)       0:04:41.579 ****** 
2023-07-10 15:12:45,867 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:12:45,897 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/check_certs.yml for node1
2023-07-10 15:12:45,929 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:45 +0300 (0:00:00.093)       0:04:41.672 ****** 
2023-07-10 15:12:46,218 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***********************************************************************************************
2023-07-10 15:12:46,219 p=14511 u=kubernetmachine n=ansible | [WARNING]: Skipped '/etc/ssl/etcd/ssl' path due to this access issue: '/etc/ssl/etcd/ssl' is not a directory

2023-07-10 15:12:46,219 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 0, "files": [], "matched": 0, "msg": "Not all paths examined, check warnings for details", "skipped_paths": {"/etc/ssl/etcd/ssl": "'/etc/ssl/etcd/ssl' is not a directory"}}
2023-07-10 15:12:46,233 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:46 +0300 (0:00:00.303)       0:04:41.976 ****** 
2023-07-10 15:12:46,298 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] *******************************************************************************
2023-07-10 15:12:46,298 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"etcd_secret_changed": false, "gen_certs": false, "sync_certs": false}, "changed": false}
2023-07-10 15:12:46,312 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:46 +0300 (0:00:00.079)       0:04:42.055 ****** 
2023-07-10 15:12:46,597 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ************************************************************************************************************
2023-07-10 15:12:46,599 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=ca.pem) => {"ansible_loop_var": "item", "changed": false, "item": "ca.pem", "stat": {"exists": false}}
2023-07-10 15:12:46,863 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=member-node1.pem) => {"ansible_loop_var": "item", "changed": false, "item": "member-node1.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,112 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=member-node1-key.pem) => {"ansible_loop_var": "item", "changed": false, "item": "member-node1-key.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,316 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=admin-node1.pem) => {"ansible_loop_var": "item", "changed": false, "item": "admin-node1.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,457 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=admin-node1-key.pem) => {"ansible_loop_var": "item", "changed": false, "item": "admin-node1-key.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,467 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:47 +0300 (0:00:01.155)       0:04:43.211 ****** 
2023-07-10 15:12:47,648 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] **************************************************************************************************************
2023-07-10 15:12:47,648 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=ca.pem) => {"ansible_loop_var": "item", "changed": false, "item": "ca.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,801 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=node-node1.pem) => {"ansible_loop_var": "item", "changed": false, "item": "node-node1.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,944 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=node-node1-key.pem) => {"ansible_loop_var": "item", "changed": false, "item": "node-node1-key.pem", "stat": {"exists": false}}
2023-07-10 15:12:47,955 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:47 +0300 (0:00:00.487)       0:04:43.698 ****** 
2023-07-10 15:12:48,030 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node(1/2)] *****************************************************************************
2023-07-10 15:12:48,031 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/ca.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/ca.pem"}
2023-07-10 15:12:48,073 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/admin-node1.pem"}
2023-07-10 15:12:48,121 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/admin-node1-key.pem"}
2023-07-10 15:12:48,164 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/member-node1.pem"}
2023-07-10 15:12:48,205 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/member-node1-key.pem"}
2023-07-10 15:12:48,247 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/node-node1.pem"}
2023-07-10 15:12:48,284 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/node-node1-key.pem"}
2023-07-10 15:12:48,295 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:48 +0300 (0:00:00.340)       0:04:44.038 ****** 
2023-07-10 15:12:48,447 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:48 +0300 (0:00:00.151)       0:04:44.190 ****** 
2023-07-10 15:12:48,520 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] *******************************************************************
2023-07-10 15:12:48,521 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"gen_master_certs": {"node1": true}}, "changed": false}
2023-07-10 15:12:48,530 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:48 +0300 (0:00:00.083)       0:04:44.273 ****** 
2023-07-10 15:12:48,600 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] *********************************************************************************
2023-07-10 15:12:48,600 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"gen_node_certs": {"node1": true}}, "changed": false}
2023-07-10 15:12:48,610 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:48 +0300 (0:00:00.079)       0:04:44.353 ****** 
2023-07-10 15:12:49,165 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'etcd_member_requires_sync' to true if ca or member/admin cert and key don't exist on etcd member or checksum doesn't match] **********************************
2023-07-10 15:12:49,166 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"etcd_member_requires_sync": true}, "changed": false}
2023-07-10 15:12:49,175 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:49 +0300 (0:00:00.565)       0:04:44.918 ****** 
2023-07-10 15:12:49,204 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:49 +0300 (0:00:00.029)       0:04:44.947 ****** 
2023-07-10 15:12:49,264 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'sync_certs' to true] *****************************************************************************************************************************************
2023-07-10 15:12:49,265 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sync_certs": true}, "changed": false}
2023-07-10 15:12:49,273 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:49 +0300 (0:00:00.069)       0:04:45.016 ****** 
2023-07-10 15:12:49,300 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:12:49,319 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/gen_certs_script.yml for node1
2023-07-10 15:12:49,336 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:49 +0300 (0:00:00.062)       0:04:45.079 ****** 
2023-07-10 15:12:49,510 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | create etcd cert dir] ***********************************************************************************************************************************************
2023-07-10 15:12:49,510 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "etcd", "path": "/etc/ssl/etcd/ssl", "size": 4096, "state": "directory", "uid": 997}
2023-07-10 15:12:49,519 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:49 +0300 (0:00:00.183)       0:04:45.262 ****** 
2023-07-10 15:12:49,694 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | create etcd script dir (on node1)] **********************************************************************************************************************************
2023-07-10 15:12:49,694 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/usr/local/bin/etcd-scripts", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:12:49,709 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:49 +0300 (0:00:00.190)       0:04:45.452 ****** 
2023-07-10 15:12:50,108 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | write openssl config] ***********************************************************************************************************************************************
2023-07-10 15:12:50,108 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "4381cb8c3e050271396f1f6e828a5e8c9a819c2a", "dest": "/etc/ssl/etcd/openssl.conf", "gid": 0, "group": "root", "md5sum": "5a6cf9cc8aa38449fa15dc0ae863cb2d", "mode": "0640", "owner": "root", "size": 832, "src": "/root/.ansible/tmp/ansible-tmp-1688991169.7651002-17924-134070669280446/source", "state": "file", "uid": 0}
2023-07-10 15:12:50,116 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:50 +0300 (0:00:00.406)       0:04:45.859 ****** 
2023-07-10 15:12:50,473 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | copy certs generation script] ***************************************************************************************************************************************
2023-07-10 15:12:50,474 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "5cc9031b5c0e0c69783d3d5b93d5f5a36152936c", "dest": "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "gid": 0, "group": "root", "md5sum": "7c4f6cb299bbe15e7703f1747804f004", "mode": "0700", "owner": "root", "size": 3451, "src": "/root/.ansible/tmp/ansible-tmp-1688991170.1699436-17942-96169361485228/source", "state": "file", "uid": 0}
2023-07-10 15:12:50,491 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:50 +0300 (0:00:00.374)       0:04:46.234 ****** 
2023-07-10 15:12:51,324 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | run cert generation script for etcd and kube control plane nodes] ***************************************************************************************************
2023-07-10 15:12:51,325 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["bash", "-x", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "-f", "/etc/ssl/etcd/openssl.conf", "-d", "/etc/ssl/etcd/ssl"], "delta": "0:00:00.661526", "end": "2023-07-10 12:12:51.312273", "msg": "", "rc": 0, "start": "2023-07-10 12:12:50.650747", "stderr": "+ set -o errexit\n+ set -o pipefail\n+ (( 4 ))\n+ case \"$1\" in\n+ CONFIG=/etc/ssl/etcd/openssl.conf\n+ shift 2\n+ (( 2 ))\n+ case \"$1\" in\n+ SSLDIR=/etc/ssl/etcd/ssl\n+ shift 2\n+ (( 0 ))\n+ '[' -z /etc/ssl/etcd/openssl.conf ']'\n+ '[' -z /etc/ssl/etcd/ssl ']'\n++ mktemp -d /tmp/etcd_cacert.XXXXXX\n+ tmpdir=/tmp/etcd_cacert.fcJPw8\n+ trap 'rm -rf \"${tmpdir}\"' EXIT\n+ cd /tmp/etcd_cacert.fcJPw8\n+ mkdir -p /etc/ssl/etcd/ssl\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ openssl genrsa -out ca-key.pem 2048\n+ openssl req -x509 -new -nodes -key ca-key.pem -days 36500 -out ca.pem -subj /CN=etcd-ca\n+ '[' -n '      node1\n  ' ']'\n+ for host in $MASTERS\n+ cn=node1\n+ openssl genrsa -out member-node1-key.pem 2048\n+ openssl req -new -key member-node1-key.pem -out member-node1.csr -subj /CN=etcd-member-node1 -config /etc/ssl/etcd/openssl.conf\n+ openssl x509 -req -in member-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ openssl genrsa -out admin-node1-key.pem 2048\n+ openssl req -new -key admin-node1-key.pem -out admin-node1.csr -subj /CN=etcd-admin-node1\n+ openssl x509 -req -in admin-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -n '      node1\n  ' ']'\n+ for host in $HOSTS\n+ cn=node1\n+ openssl genrsa -out node-node1-key.pem 2048\n+ openssl req -new -key node-node1-key.pem -out node-node1.csr -subj /CN=etcd-node-node1\n+ openssl x509 -req -in node-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n++ ls -A admin-node1-key.pem admin-node1.pem ca-key.pem ca.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem\n+ '[' -n 'admin-node1-key.pem\nadmin-node1.pem\nca-key.pem\nca.pem\nmember-node1-key.pem\nmember-node1.pem\nnode-node1-key.pem\nnode-node1.pem' ']'\n+ mv admin-node1-key.pem admin-node1.pem ca-key.pem ca.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem /etc/ssl/etcd/ssl/\n+ rm -rf /tmp/etcd_cacert.fcJPw8", "stderr_lines": ["+ set -o errexit", "+ set -o pipefail", "+ (( 4 ))", "+ case \"$1\" in", "+ CONFIG=/etc/ssl/etcd/openssl.conf", "+ shift 2", "+ (( 2 ))", "+ case \"$1\" in", "+ SSLDIR=/etc/ssl/etcd/ssl", "+ shift 2", "+ (( 0 ))", "+ '[' -z /etc/ssl/etcd/openssl.conf ']'", "+ '[' -z /etc/ssl/etcd/ssl ']'", "++ mktemp -d /tmp/etcd_cacert.XXXXXX", "+ tmpdir=/tmp/etcd_cacert.fcJPw8", "+ trap 'rm -rf \"${tmpdir}\"' EXIT", "+ cd /tmp/etcd_cacert.fcJPw8", "+ mkdir -p /etc/ssl/etcd/ssl", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ openssl genrsa -out ca-key.pem 2048", "+ openssl req -x509 -new -nodes -key ca-key.pem -days 36500 -out ca.pem -subj /CN=etcd-ca", "+ '[' -n '      node1", "  ' ']'", "+ for host in $MASTERS", "+ cn=node1", "+ openssl genrsa -out member-node1-key.pem 2048", "+ openssl req -new -key member-node1-key.pem -out member-node1.csr -subj /CN=etcd-member-node1 -config /etc/ssl/etcd/openssl.conf", "+ openssl x509 -req -in member-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ openssl genrsa -out admin-node1-key.pem 2048", "+ openssl req -new -key admin-node1-key.pem -out admin-node1.csr -subj /CN=etcd-admin-node1", "+ openssl x509 -req -in admin-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -n '      node1", "  ' ']'", "+ for host in $HOSTS", "+ cn=node1", "+ openssl genrsa -out node-node1-key.pem 2048", "+ openssl req -new -key node-node1-key.pem -out node-node1.csr -subj /CN=etcd-node-node1", "+ openssl x509 -req -in node-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "++ ls -A admin-node1-key.pem admin-node1.pem ca-key.pem ca.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem", "+ '[' -n 'admin-node1-key.pem", "admin-node1.pem", "ca-key.pem", "ca.pem", "member-node1-key.pem", "member-node1.pem", "node-node1-key.pem", "node-node1.pem' ']'", "+ mv admin-node1-key.pem admin-node1.pem ca-key.pem ca.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem /etc/ssl/etcd/ssl/", "+ rm -rf /tmp/etcd_cacert.fcJPw8"], "stdout": "", "stdout_lines": []}
2023-07-10 15:12:51,340 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.849)       0:04:47.083 ****** 
2023-07-10 15:12:51,397 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.057)       0:04:47.140 ****** 
2023-07-10 15:12:51,516 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.118)       0:04:47.259 ****** 
2023-07-10 15:12:51,716 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.200)       0:04:47.459 ****** 
2023-07-10 15:12:51,788 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.071)       0:04:47.531 ****** 
2023-07-10 15:12:51,860 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.071)       0:04:47.603 ****** 
2023-07-10 15:12:51,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.063)       0:04:47.666 ****** 
2023-07-10 15:12:51,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:51 +0300 (0:00:00.063)       0:04:47.730 ****** 
2023-07-10 15:12:52,271 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | check certificate permissions] **************************************************************************************************************************************
2023-07-10 15:12:52,272 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "etcd", "path": "/etc/ssl/etcd/ssl", "size": 4096, "state": "directory", "uid": 997}
2023-07-10 15:12:52,284 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:52 +0300 (0:00:00.297)       0:04:48.027 ****** 
2023-07-10 15:12:52,327 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:12:52,349 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/upd_ca_trust.yml for node1
2023-07-10 15:12:52,381 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:52 +0300 (0:00:00.096)       0:04:48.124 ****** 
2023-07-10 15:12:52,446 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | target ca-certificate store file] ***********************************************************************************************************************************
2023-07-10 15:12:52,447 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ca_cert_path": "/usr/local/share/ca-certificates/etcd-ca.crt"}, "changed": false}
2023-07-10 15:12:52,460 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:52 +0300 (0:00:00.079)       0:04:48.203 ****** 
2023-07-10 15:12:52,792 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | add CA to trusted CA dir] *******************************************************************************************************************************************
2023-07-10 15:12:52,793 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "888ce867c2e191e3559d2a6286621320edfc2809", "dest": "/usr/local/share/ca-certificates/etcd-ca.crt", "gid": 0, "group": "root", "md5sum": "ad13c0d6cecb0101de7b023b4738e988", "mode": "0640", "owner": "root", "size": 1111, "src": "/etc/ssl/etcd/ssl/ca.pem", "state": "file", "uid": 0}
2023-07-10 15:12:52,805 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:52 +0300 (0:00:00.344)       0:04:48.548 ****** 
2023-07-10 15:12:53,986 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | update ca-certificates (Debian/Ubuntu/SUSE/Flatcar)] ****************************************************************************************************************
2023-07-10 15:12:53,986 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["update-ca-certificates"], "delta": "0:00:00.904313", "end": "2023-07-10 12:12:53.963577", "msg": "", "rc": 0, "start": "2023-07-10 12:12:53.059264", "stderr": "rehash: warning: skipping ca-certificates.crt,it does not contain exactly one certificate or CRL", "stderr_lines": ["rehash: warning: skipping ca-certificates.crt,it does not contain exactly one certificate or CRL"], "stdout": "Updating certificates in /etc/ssl/certs...\n1 added, 0 removed; done.\nRunning hooks in /etc/ca-certificates/update.d...\ndone.", "stdout_lines": ["Updating certificates in /etc/ssl/certs...", "1 added, 0 removed; done.", "Running hooks in /etc/ca-certificates/update.d...", "done."]}
2023-07-10 15:12:53,999 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:53 +0300 (0:00:01.194)       0:04:49.742 ****** 
2023-07-10 15:12:54,048 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.048)       0:04:49.791 ****** 
2023-07-10 15:12:54,096 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.048)       0:04:49.839 ****** 
2023-07-10 15:12:54,162 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.065)       0:04:49.905 ****** 
2023-07-10 15:12:54,226 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.064)       0:04:49.969 ****** 
2023-07-10 15:12:54,294 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.067)       0:04:50.037 ****** 
2023-07-10 15:12:54,327 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:12:54,350 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/install_host.yml for node1
2023-07-10 15:12:54,383 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.088)       0:04:50.126 ****** 
2023-07-10 15:12:54,665 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Get currently-deployed etcd version] ********************************************************************************************************************************************
2023-07-10 15:12:54,665 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": "/usr/local/bin/etcd --version", "msg": "[Errno 2] No such file or directory: b'/usr/local/bin/etcd'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:12:54,666 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:12:54,678 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.294)       0:04:50.421 ****** 
2023-07-10 15:12:54,973 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Restart etcd if necessary] ******************************************************************************************************************************************************
2023-07-10 15:12:54,973 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.003288", "end": "2023-07-10 12:12:54.952221", "msg": "", "rc": 0, "start": "2023-07-10 12:12:54.948933", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:12:54,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:54 +0300 (0:00:00.309)       0:04:50.730 ****** 
2023-07-10 15:12:55,031 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:55 +0300 (0:00:00.043)       0:04:50.774 ****** 
2023-07-10 15:12:55,490 p=14511 u=kubernetmachine n=ansible | TASK [etcd : install | Copy etcd and etcdctl binary from download dir] ***********************************************************************************************************************
2023-07-10 15:12:55,491 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=etcd) => {"ansible_loop_var": "item", "changed": true, "checksum": "e45541850ab48d1a671ed0777069192363200848", "dest": "/usr/local/bin/etcd", "gid": 0, "group": "root", "item": "etcd", "md5sum": "3c560415fad20c544e0c7a582f2ed803", "mode": "0755", "owner": "root", "size": 23691264, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64/etcd", "state": "file", "uid": 0}
2023-07-10 15:12:55,869 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=etcdctl) => {"ansible_loop_var": "item", "changed": true, "checksum": "7567314d685f42882defece640d19b4ebf537723", "dest": "/usr/local/bin/etcdctl", "gid": 0, "group": "root", "item": "etcdctl", "md5sum": "f8005b54ef9149377112661d00cba672", "mode": "0755", "owner": "root", "size": 17891328, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64/etcdctl", "state": "file", "uid": 0}
2023-07-10 15:12:55,882 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:55 +0300 (0:00:00.851)       0:04:51.625 ****** 
2023-07-10 15:12:55,901 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:12:55,922 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/configure.yml for node1
2023-07-10 15:12:55,944 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:12:55 +0300 (0:00:00.061)       0:04:51.687 ****** 
2023-07-10 15:13:01,164 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Configure | Check if etcd cluster is healthy] ***********************************************************************************************************************************
2023-07-10 15:13:01,164 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/etcdctl endpoint --cluster status && /usr/local/bin/etcdctl endpoint --cluster health  2>&1 | grep -v 'Error: unhealthy cluster' >/dev/null", "delta": "0:00:05.017808", "end": "2023-07-10 12:13:01.150542", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:12:56.132734", "stderr": "{\"level\":\"warn\",\"ts\":\"2023-07-10T12:13:01.149Z\",\"logger\":\"etcd-client\",\"caller\":\"v3@v3.5.6/retry_interceptor.go:62\",\"msg\":\"retrying of unary invoker failed\",\"target\":\"etcd-endpoints://0xc000514700/192.168.122.29:2379\",\"attempt\":0,\"error\":\"rpc error: code = DeadlineExceeded desc = latest balancer error: last connection error: connection error: desc = \\\"transport: Error while dialing dial tcp 192.168.122.29:2379: connect: connection refused\\\"\"}\nError: failed to fetch endpoints from etcd cluster member list: context deadline exceeded", "stderr_lines": ["{\"level\":\"warn\",\"ts\":\"2023-07-10T12:13:01.149Z\",\"logger\":\"etcd-client\",\"caller\":\"v3@v3.5.6/retry_interceptor.go:62\",\"msg\":\"retrying of unary invoker failed\",\"target\":\"etcd-endpoints://0xc000514700/192.168.122.29:2379\",\"attempt\":0,\"error\":\"rpc error: code = DeadlineExceeded desc = latest balancer error: last connection error: connection error: desc = \\\"transport: Error while dialing dial tcp 192.168.122.29:2379: connect: connection refused\\\"\"}", "Error: failed to fetch endpoints from etcd cluster member list: context deadline exceeded"], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:01,173 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:01 +0300 (0:00:05.228)       0:04:56.916 ****** 
2023-07-10 15:13:01,203 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:01 +0300 (0:00:00.030)       0:04:56.946 ****** 
2023-07-10 15:13:01,224 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:13:01,235 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/refresh_config.yml for node1
2023-07-10 15:13:01,248 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:01 +0300 (0:00:00.044)       0:04:56.991 ****** 
2023-07-10 15:13:01,713 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Refresh config | Create etcd config file] ***************************************************************************************************************************************
2023-07-10 15:13:01,714 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "65fa0da801971f9a83b86b5a3fa1d130fc186f07", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "md5sum": "222c233c8d69a9326461b4952e6a94db", "mode": "0640", "owner": "root", "size": 1401, "src": "/root/.ansible/tmp/ansible-tmp-1688991181.2970557-18058-71451467375286/source", "state": "file", "uid": 0}
2023-07-10 15:13:01,723 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:01 +0300 (0:00:00.475)       0:04:57.466 ****** 
2023-07-10 15:13:01,753 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:01 +0300 (0:00:00.029)       0:04:57.496 ****** 
2023-07-10 15:13:02,109 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Configure | Copy etcd.service systemd file] *************************************************************************************************************************************
2023-07-10 15:13:02,110 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "78add367e36c0813fb5975903c6cd7e211e369cc", "dest": "/etc/systemd/system/etcd.service", "gid": 0, "group": "root", "md5sum": "c68c2e2b67ef4530e84563f2154f5f47", "mode": "0644", "owner": "root", "size": 241, "src": "/root/.ansible/tmp/ansible-tmp-1688991181.802545-18078-62084100828183/source", "state": "file", "uid": 0}
2023-07-10 15:13:02,118 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:02 +0300 (0:00:00.365)       0:04:57.861 ****** 
2023-07-10 15:13:02,147 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:02 +0300 (0:00:00.028)       0:04:57.890 ****** 
2023-07-10 15:13:02,670 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Configure | reload systemd] *****************************************************************************************************************************************************
2023-07-10 15:13:02,671 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": null, "status": {}}
2023-07-10 15:13:02,678 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:02 +0300 (0:00:00.531)       0:04:58.421 ****** 
2023-07-10 15:13:06,299 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Configure | Ensure etcd is running] *********************************************************************************************************************************************
2023-07-10 15:13:06,300 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "enabled": true, "name": "etcd", "state": "started", "status": {"ActiveEnterTimestamp": "n/a", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "system.slice sysinit.target systemd-journald.socket network.target basic.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestamp": "n/a", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestamp": "n/a", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "etcd", "DevicePolicy": "auto", "DynamicUser": "no", "EnvironmentFiles": "/etc/etcd.env (ignore_errors=no)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestamp": "n/a", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/etcd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "etcd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "n/a", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "40000", "LimitNOFILESoft": "40000", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "etcd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "all", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "n/a", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "disabled", "User": "root", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}
2023-07-10 15:13:06,309 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:03.630)       0:05:02.052 ****** 
2023-07-10 15:13:06,339 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.030)       0:05:02.082 ****** 
2023-07-10 15:13:06,599 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Configure | Wait for etcd cluster to be healthy] ********************************************************************************************************************************
2023-07-10 15:13:06,600 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": "set -o pipefail && /usr/local/bin/etcdctl endpoint --cluster status && /usr/local/bin/etcdctl endpoint --cluster health 2>&1 | grep -v 'Error: unhealthy cluster' >/dev/null", "delta": "0:00:00.054680", "end": "2023-07-10 12:13:06.586909", "msg": "", "rc": 0, "start": "2023-07-10 12:13:06.532229", "stderr": "", "stderr_lines": [], "stdout": "https://192.168.122.29:2379, e2e351e0d54a79ed, 3.5.6, 20 kB, true, false, 2, 4, 4, ", "stdout_lines": ["https://192.168.122.29:2379, e2e351e0d54a79ed, 3.5.6, 20 kB, true, false, 2, 4, 4, "]}
2023-07-10 15:13:06,608 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.269)       0:05:02.351 ****** 
2023-07-10 15:13:06,641 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.033)       0:05:02.384 ****** 
2023-07-10 15:13:06,877 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Configure | Check if member is in etcd cluster] *********************************************************************************************************************************
2023-07-10 15:13:06,877 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/etcdctl member list | grep -q 192.168.122.29", "delta": "0:00:00.016799", "end": "2023-07-10 12:13:06.866006", "msg": "", "rc": 0, "start": "2023-07-10 12:13:06.849207", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:06,885 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.244)       0:05:02.628 ****** 
2023-07-10 15:13:06,915 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.029)       0:05:02.657 ****** 
2023-07-10 15:13:06,951 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.036)       0:05:02.694 ****** 
2023-07-10 15:13:06,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:06 +0300 (0:00:00.036)       0:05:02.730 ****** 
2023-07-10 15:13:07,007 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:13:07,017 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/refresh_config.yml for node1
2023-07-10 15:13:07,046 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:07 +0300 (0:00:00.058)       0:05:02.789 ****** 
2023-07-10 15:13:07,536 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Refresh config | Create etcd config file] ***************************************************************************************************************************************
2023-07-10 15:13:07,536 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "c0025bf4c668eefe9d090a7923de766e11bda06a", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "md5sum": "adb935d9c97f6657a1fa7c3dff311f22", "mode": "0640", "owner": "root", "size": 1406, "src": "/root/.ansible/tmp/ansible-tmp-1688991187.0967784-18135-24634331589644/source", "state": "file", "uid": 0}
2023-07-10 15:13:07,544 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:07 +0300 (0:00:00.498)       0:05:03.287 ****** 
2023-07-10 15:13:07,573 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:07 +0300 (0:00:00.028)       0:05:03.316 ****** 
2023-07-10 15:13:07,611 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:07 +0300 (0:00:00.038)       0:05:03.354 ****** 
2023-07-10 15:13:07,648 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:07 +0300 (0:00:00.036)       0:05:03.391 ****** 
2023-07-10 15:13:07,667 p=14511 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 15:13:07,677 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/refresh_config.yml for node1
2023-07-10 15:13:07,705 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:07 +0300 (0:00:00.057)       0:05:03.448 ****** 
2023-07-10 15:13:08,160 p=14511 u=kubernetmachine n=ansible | TASK [etcd : Refresh config | Create etcd config file] ***************************************************************************************************************************************
2023-07-10 15:13:08,161 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c0025bf4c668eefe9d090a7923de766e11bda06a", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/etcd.env", "size": 1406, "state": "file", "uid": 0}
2023-07-10 15:13:08,169 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:08 +0300 (0:00:00.463)       0:05:03.912 ****** 
2023-07-10 15:13:08,220 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:08 +0300 (0:00:00.050)       0:05:03.963 ****** 
2023-07-10 15:13:08,387 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : restart etcd] ********************************************************************************************************************************************************
2023-07-10 15:13:08,388 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001813", "end": "2023-07-10 12:13:08.376549", "msg": "", "rc": 0, "start": "2023-07-10 12:13:08.374736", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:08,396 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:08 +0300 (0:00:00.175)       0:05:04.138 ****** 
2023-07-10 15:13:08,560 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Backup etcd data] ****************************************************************************************************************************************************
2023-07-10 15:13:08,561 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001506", "end": "2023-07-10 12:13:08.549239", "msg": "", "rc": 0, "start": "2023-07-10 12:13:08.547733", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:08,569 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:08 +0300 (0:00:00.173)       0:05:04.312 ****** 
2023-07-10 15:13:09,483 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Refresh Time Fact] ***************************************************************************************************************************************************
2023-07-10 15:13:09,483 p=14511 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:13:09,495 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:09 +0300 (0:00:00.926)       0:05:05.238 ****** 
2023-07-10 15:13:09,564 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Set Backup Directory] ************************************************************************************************************************************************
2023-07-10 15:13:09,564 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"etcd_backup_directory": "/var/backups/etcd-2023-07-10_12:13:08"}, "changed": false}
2023-07-10 15:13:09,579 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:09 +0300 (0:00:00.083)       0:05:05.322 ****** 
2023-07-10 15:13:09,868 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Create Backup Directory] *********************************************************************************************************************************************
2023-07-10 15:13:09,868 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0600", "owner": "root", "path": "/var/backups/etcd-2023-07-10_12:13:08", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:13:09,882 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:09 +0300 (0:00:00.302)       0:05:05.625 ****** 
2023-07-10 15:13:10,183 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Stat etcd v2 data directory] *****************************************************************************************************************************************
2023-07-10 15:13:10,184 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991183.2322967, "block_size": 4096, "blocks": 8, "ctime": 1688991183.2722967, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 286882, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991183.2722967, "nlink": 4, "path": "/var/lib/etcd/member", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 15:13:10,200 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:10 +0300 (0:00:00.318)       0:05:05.943 ****** 
2023-07-10 15:13:10,542 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Backup etcd v2 data] *************************************************************************************************************************************************
2023-07-10 15:13:10,542 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/etcdctl", "backup", "--data-dir", "/var/lib/etcd", "--backup-dir", "/var/backups/etcd-2023-07-10_12:13:08"], "delta": "0:00:00.031390", "end": "2023-07-10 12:13:10.519741", "msg": "", "rc": 0, "start": "2023-07-10 12:13:10.488351", "stderr": "2023-07-10T12:13:10Z\tinfo\tetcdutl/backup_command.go:216\tignoring EntryConfChange raft entry\n2023-07-10T12:13:10Z\tinfo\tetcdutl/backup_command.go:231\tignoring member attribute update on\t{\"entry\": \"Term:2 Index:3 Data:\\\"\\\\010\\\\202\\\\334\\\\306\\\\301\\\\373\\\\247\\\\342\\\\366y\\\\022\\\\003PUT\\\\032&/0/members/e2e351e0d54a79ed/attributes\\\\\\\"={\\\\\\\"name\\\\\\\":\\\\\\\"etcd1\\\\\\\",\\\\\\\"clientURLs\\\\\\\":[\\\\\\\"https://192.168.122.29:2379\\\\\\\"]}(\\\\0002\\\\0008\\\\000H\\\\000P\\\\000X\\\\000`\\\\000h\\\\000p\\\\000x\\\\000\\\\200\\\\001\\\\000\\\" \", \"v2Req.Path\": \"/0/members/e2e351e0d54a79ed/attributes\"}\n2023-07-10T12:13:10Z\tinfo\tetcdutl/backup_command.go:252\tignoring v3 raft entry\n2023-07-10T12:13:10Z\tinfo\tmembership/store.go:141\tTrimming membership information from the backend...", "stderr_lines": ["2023-07-10T12:13:10Z\tinfo\tetcdutl/backup_command.go:216\tignoring EntryConfChange raft entry", "2023-07-10T12:13:10Z\tinfo\tetcdutl/backup_command.go:231\tignoring member attribute update on\t{\"entry\": \"Term:2 Index:3 Data:\\\"\\\\010\\\\202\\\\334\\\\306\\\\301\\\\373\\\\247\\\\342\\\\366y\\\\022\\\\003PUT\\\\032&/0/members/e2e351e0d54a79ed/attributes\\\\\\\"={\\\\\\\"name\\\\\\\":\\\\\\\"etcd1\\\\\\\",\\\\\\\"clientURLs\\\\\\\":[\\\\\\\"https://192.168.122.29:2379\\\\\\\"]}(\\\\0002\\\\0008\\\\000H\\\\000P\\\\000X\\\\000`\\\\000h\\\\000p\\\\000x\\\\000\\\\200\\\\001\\\\000\\\" \", \"v2Req.Path\": \"/0/members/e2e351e0d54a79ed/attributes\"}", "2023-07-10T12:13:10Z\tinfo\tetcdutl/backup_command.go:252\tignoring v3 raft entry", "2023-07-10T12:13:10Z\tinfo\tmembership/store.go:141\tTrimming membership information from the backend..."], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:10,556 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:10 +0300 (0:00:00.355)       0:05:06.299 ****** 
2023-07-10 15:13:10,941 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Backup etcd v3 data] *************************************************************************************************************************************************
2023-07-10 15:13:10,942 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/etcdctl", "snapshot", "save", "/var/backups/etcd-2023-07-10_12:13:08/snapshot.db"], "delta": "0:00:00.045473", "end": "2023-07-10 12:13:10.919637", "msg": "", "rc": 0, "start": "2023-07-10 12:13:10.874164", "stderr": "{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.891Z\",\"caller\":\"snapshot/v3_snapshot.go:65\",\"msg\":\"created temporary db file\",\"path\":\"/var/backups/etcd-2023-07-10_12:13:08/snapshot.db.part\"}\n{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.899Z\",\"logger\":\"client\",\"caller\":\"v3@v3.5.6/maintenance.go:212\",\"msg\":\"opened snapshot stream; downloading\"}\n{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.899Z\",\"caller\":\"snapshot/v3_snapshot.go:73\",\"msg\":\"fetching snapshot\",\"endpoint\":\"https://192.168.122.29:2379\"}\n{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.916Z\",\"logger\":\"client\",\"caller\":\"v3@v3.5.6/maintenance.go:220\",\"msg\":\"completed snapshot read; closing\"}\n{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.918Z\",\"caller\":\"snapshot/v3_snapshot.go:88\",\"msg\":\"fetched snapshot\",\"endpoint\":\"https://192.168.122.29:2379\",\"size\":\"20 kB\",\"took\":\"now\"}\n{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.918Z\",\"caller\":\"snapshot/v3_snapshot.go:97\",\"msg\":\"saved\",\"path\":\"/var/backups/etcd-2023-07-10_12:13:08/snapshot.db\"}", "stderr_lines": ["{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.891Z\",\"caller\":\"snapshot/v3_snapshot.go:65\",\"msg\":\"created temporary db file\",\"path\":\"/var/backups/etcd-2023-07-10_12:13:08/snapshot.db.part\"}", "{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.899Z\",\"logger\":\"client\",\"caller\":\"v3@v3.5.6/maintenance.go:212\",\"msg\":\"opened snapshot stream; downloading\"}", "{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.899Z\",\"caller\":\"snapshot/v3_snapshot.go:73\",\"msg\":\"fetching snapshot\",\"endpoint\":\"https://192.168.122.29:2379\"}", "{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.916Z\",\"logger\":\"client\",\"caller\":\"v3@v3.5.6/maintenance.go:220\",\"msg\":\"completed snapshot read; closing\"}", "{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.918Z\",\"caller\":\"snapshot/v3_snapshot.go:88\",\"msg\":\"fetched snapshot\",\"endpoint\":\"https://192.168.122.29:2379\",\"size\":\"20 kB\",\"took\":\"now\"}", "{\"level\":\"info\",\"ts\":\"2023-07-10T12:13:10.918Z\",\"caller\":\"snapshot/v3_snapshot.go:97\",\"msg\":\"saved\",\"path\":\"/var/backups/etcd-2023-07-10_12:13:08/snapshot.db\"}"], "stdout": "Snapshot saved at /var/backups/etcd-2023-07-10_12:13:08/snapshot.db", "stdout_lines": ["Snapshot saved at /var/backups/etcd-2023-07-10_12:13:08/snapshot.db"]}
2023-07-10 15:13:10,956 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:10 +0300 (0:00:00.400)       0:05:06.699 ****** 
2023-07-10 15:13:11,719 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : etcd | reload systemd] ***********************************************************************************************************************************************
2023-07-10 15:13:11,720 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": null, "status": {}}
2023-07-10 15:13:11,732 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:11 +0300 (0:00:00.776)       0:05:07.475 ****** 
2023-07-10 15:13:20,994 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : reload etcd] *********************************************************************************************************************************************************
2023-07-10 15:13:20,996 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "etcd", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:13:06 UTC", "ActiveEnterTimestampMonotonic": "15736968389", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "network.target systemd-journald.socket sysinit.target basic.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:13:03 UTC", "AssertTimestampMonotonic": "15733907380", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "77802000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:13:03 UTC", "ConditionTimestampMonotonic": "15733907379", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/etcd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "etcd", "DevicePolicy": "auto", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "EnvironmentFiles": "/etc/etcd.env (ignore_errors=no)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "12840", "ExecMainStartTimestamp": "Mon 2023-07-10 12:13:03 UTC", "ExecMainStartTimestampMonotonic": "15733908240", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/etcd.service", "FreezerState": "running", "GID": "0", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "etcd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Mon 2023-07-10 12:13:03 UTC", "InactiveExitTimestampMonotonic": "15733908617", "InvocationID": "ef0106dd164d4860909d57e1a60b402e", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "40000", "LimitNOFILESoft": "40000", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "12840", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "10432512", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "etcd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "all", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:13:06 UTC", "StateChangeTimestampMonotonic": "15736968389", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "9", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "0", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "User": "root", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 15:13:21,009 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:09.276)       0:05:16.752 ****** 
2023-07-10 15:13:21,460 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : wait for etcd up] ****************************************************************************************************************************************************
2023-07-10 15:13:21,461 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"access_control_allow_headers": "accept, content-type, authorization", "access_control_allow_methods": "POST, GET, OPTIONS, PUT, DELETE", "access_control_allow_origin": "*", "attempts": 1, "changed": false, "connection": "close", "content_length": "29", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:13:21 GMT", "elapsed": 0, "msg": "OK (29 bytes)", "redirected": false, "status": 200, "url": "https://192.168.122.29:2379/health"}
2023-07-10 15:13:21,475 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:00.466)       0:05:17.218 ****** 
2023-07-10 15:13:21,745 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : Cleanup etcd backups] ************************************************************************************************************************************************
2023-07-10 15:13:21,745 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002847", "end": "2023-07-10 12:13:21.727293", "msg": "", "rc": 0, "start": "2023-07-10 12:13:21.724446", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:21,754 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:00.279)       0:05:17.497 ****** 
2023-07-10 15:13:21,784 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:00.029)       0:05:17.527 ****** 
2023-07-10 15:13:21,825 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : set etcd_secret_changed] *********************************************************************************************************************************************
2023-07-10 15:13:21,825 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"etcd_secret_changed": true}, "changed": false}
2023-07-10 15:13:21,847 p=14511 u=kubernetmachine n=ansible | PLAY [k8s_cluster] ***************************************************************************************************************************************************************************
2023-07-10 15:13:21,888 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:00.103)       0:05:17.631 ****** 
2023-07-10 15:13:21,926 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:00.037)       0:05:17.668 ****** 
2023-07-10 15:13:21,967 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:21 +0300 (0:00:00.041)       0:05:17.710 ****** 
2023-07-10 15:13:22,005 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.037)       0:05:17.748 ****** 
2023-07-10 15:13:22,041 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.036)       0:05:17.784 ****** 
2023-07-10 15:13:22,077 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.035)       0:05:17.820 ****** 
2023-07-10 15:13:22,115 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.037)       0:05:17.858 ****** 
2023-07-10 15:13:22,153 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.037)       0:05:17.896 ****** 
2023-07-10 15:13:22,188 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.035)       0:05:17.931 ****** 
2023-07-10 15:13:22,224 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:22 +0300 (0:00:00.035)       0:05:17.967 ****** 
2023-07-10 15:13:23,899 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:23 +0300 (0:00:01.675)       0:05:19.642 ****** 
2023-07-10 15:13:23,938 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:13:23,939 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:13:23,982 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:23 +0300 (0:00:00.083)       0:05:19.725 ****** 
2023-07-10 15:13:24,028 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.045)       0:05:19.771 ****** 
2023-07-10 15:13:24,062 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.033)       0:05:19.805 ****** 
2023-07-10 15:13:24,100 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.038)       0:05:19.843 ****** 
2023-07-10 15:13:24,139 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.038)       0:05:19.882 ****** 
2023-07-10 15:13:24,177 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.038)       0:05:19.921 ****** 
2023-07-10 15:13:24,222 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.044)       0:05:19.965 ****** 
2023-07-10 15:13:24,267 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.044)       0:05:20.010 ****** 
2023-07-10 15:13:24,313 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.045)       0:05:20.056 ****** 
2023-07-10 15:13:24,352 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.038)       0:05:20.094 ****** 
2023-07-10 15:13:24,398 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.046)       0:05:20.141 ****** 
2023-07-10 15:13:24,437 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.039)       0:05:20.180 ****** 
2023-07-10 15:13:24,478 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.040)       0:05:20.221 ****** 
2023-07-10 15:13:24,517 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.039)       0:05:20.260 ****** 
2023-07-10 15:13:24,558 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.040)       0:05:20.301 ****** 
2023-07-10 15:13:24,597 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.038)       0:05:20.340 ****** 
2023-07-10 15:13:24,638 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.041)       0:05:20.381 ****** 
2023-07-10 15:13:24,678 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.040)       0:05:20.421 ****** 
2023-07-10 15:13:24,717 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.039)       0:05:20.460 ****** 
2023-07-10 15:13:24,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.041)       0:05:20.502 ****** 
2023-07-10 15:13:24,800 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.041)       0:05:20.543 ****** 
2023-07-10 15:13:24,839 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.038)       0:05:20.582 ****** 
2023-07-10 15:13:24,905 p=14511 u=kubernetmachine n=ansible | PLAY [k8s_cluster] ***************************************************************************************************************************************************************************
2023-07-10 15:13:24,961 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.122)       0:05:20.704 ****** 
2023-07-10 15:13:24,998 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:24 +0300 (0:00:00.037)       0:05:20.741 ****** 
2023-07-10 15:13:25,038 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.039)       0:05:20.781 ****** 
2023-07-10 15:13:25,075 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.036)       0:05:20.818 ****** 
2023-07-10 15:13:25,111 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.036)       0:05:20.854 ****** 
2023-07-10 15:13:25,208 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.097)       0:05:20.951 ****** 
2023-07-10 15:13:25,244 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.036)       0:05:20.987 ****** 
2023-07-10 15:13:25,283 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.039)       0:05:21.027 ****** 
2023-07-10 15:13:25,318 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.034)       0:05:21.061 ****** 
2023-07-10 15:13:25,351 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:25 +0300 (0:00:00.033)       0:05:21.094 ****** 
2023-07-10 15:13:27,568 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:02.217)       0:05:23.311 ****** 
2023-07-10 15:13:27,630 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:13:27,631 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:13:27,700 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:00.131)       0:05:23.443 ****** 
2023-07-10 15:13:27,766 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:00.066)       0:05:23.509 ****** 
2023-07-10 15:13:27,817 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:00.050)       0:05:23.560 ****** 
2023-07-10 15:13:27,873 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:00.055)       0:05:23.616 ****** 
2023-07-10 15:13:27,932 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:00.058)       0:05:23.675 ****** 
2023-07-10 15:13:27,991 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:27 +0300 (0:00:00.059)       0:05:23.734 ****** 
2023-07-10 15:13:28,053 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.061)       0:05:23.796 ****** 
2023-07-10 15:13:28,097 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.043)       0:05:23.840 ****** 
2023-07-10 15:13:28,141 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.043)       0:05:23.884 ****** 
2023-07-10 15:13:28,182 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.041)       0:05:23.925 ****** 
2023-07-10 15:13:28,225 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.042)       0:05:23.968 ****** 
2023-07-10 15:13:28,290 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for containerd] **************************************************************************************************************
2023-07-10 15:13:28,291 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubelet_cgroup_driver_detected": "systemd"}, "changed": false}
2023-07-10 15:13:28,308 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.082)       0:05:24.051 ****** 
2023-07-10 15:13:28,377 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : set kubelet_cgroup_driver] *******************************************************************************************************************************************
2023-07-10 15:13:28,378 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubelet_cgroup_driver": "systemd"}, "changed": false}
2023-07-10 15:13:28,391 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.083)       0:05:24.134 ****** 
2023-07-10 15:13:28,433 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.041)       0:05:24.176 ****** 
2023-07-10 15:13:28,477 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.043)       0:05:24.220 ****** 
2023-07-10 15:13:28,631 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : os specific vars] ****************************************************************************************************************************************************
2023-07-10 15:13:28,632 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml) => {"ansible_facts": {"kube_resolv_conf": "/run/systemd/resolve/resolv.conf"}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml"}
2023-07-10 15:13:28,647 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.170)       0:05:24.390 ****** 
2023-07-10 15:13:28,961 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] *********************************************************************************************************************
2023-07-10 15:13:28,961 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail &&  /usr/local/bin/crictl ps --all --name kubelet | grep kubelet ", "delta": "0:00:00.042287", "end": "2023-07-10 12:13:28.942430", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:13:28.900143", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:28,975 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:28 +0300 (0:00:00.327)       0:05:24.718 ****** 
2023-07-10 15:13:29,019 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:29 +0300 (0:00:00.043)       0:05:24.762 ****** 
2023-07-10 15:13:29,062 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:29 +0300 (0:00:00.043)       0:05:24.805 ****** 
2023-07-10 15:13:29,105 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:29 +0300 (0:00:00.043)       0:05:24.848 ****** 
2023-07-10 15:13:29,378 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Ensure /var/lib/cni exists] ******************************************************************************************************************************************
2023-07-10 15:13:29,379 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/var/lib/cni", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:13:29,391 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:29 +0300 (0:00:00.286)       0:05:25.134 ****** 
2023-07-10 15:13:29,435 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:29 +0300 (0:00:00.043)       0:05:25.178 ****** 
2023-07-10 15:13:31,184 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : install | Copy kubelet binary from download dir] *********************************************************************************************************************
2023-07-10 15:13:31,184 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "8aaadf0a0539ab605dd9a4e7f32645c84e34c37e", "dest": "/usr/local/bin/kubelet", "gid": 0, "group": "root", "md5sum": "663d7a867d65816dce3edf08301338a5", "mode": "0755", "owner": "root", "size": 121268472, "src": "/tmp/releases/kubelet-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 15:13:31,193 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:01.757)       0:05:26.935 ****** 
2023-07-10 15:13:31,223 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.030)       0:05:26.966 ****** 
2023-07-10 15:13:31,252 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.029)       0:05:26.995 ****** 
2023-07-10 15:13:31,282 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.029)       0:05:27.025 ****** 
2023-07-10 15:13:31,311 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.028)       0:05:27.054 ****** 
2023-07-10 15:13:31,342 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.031)       0:05:27.085 ****** 
2023-07-10 15:13:31,371 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.028)       0:05:27.114 ****** 
2023-07-10 15:13:31,400 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.029)       0:05:27.143 ****** 
2023-07-10 15:13:31,435 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.035)       0:05:27.178 ****** 
2023-07-10 15:13:31,464 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.029)       0:05:27.207 ****** 
2023-07-10 15:13:31,492 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.027)       0:05:27.235 ****** 
2023-07-10 15:13:31,520 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.027)       0:05:27.263 ****** 
2023-07-10 15:13:31,548 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.028)       0:05:27.291 ****** 
2023-07-10 15:13:31,718 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Ensure nodePort range is reserved] ***********************************************************************************************************************************
2023-07-10 15:13:31,719 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true}
2023-07-10 15:13:31,726 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.178)       0:05:27.469 ****** 
2023-07-10 15:13:31,891 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Verify if br_netfilter module exists] ********************************************************************************************************************************
2023-07-10 15:13:31,892 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["modinfo", "br_netfilter"], "delta": "0:00:00.004926", "end": "2023-07-10 12:13:31.878598", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:13:31.873672", "stderr": "", "stderr_lines": [], "stdout": "filename:       /lib/modules/5.15.0-76-generic/kernel/net/bridge/br_netfilter.ko\ndescription:    Linux ethernet netfilter firewall bridge\nauthor:         Bart De Schuymer <bdschuym@pandora.be>\nauthor:         Lennert Buytenhek <buytenh@gnu.org>\nlicense:        GPL\nsrcversion:     2021116F1E4798AA9BB346F\ndepends:        bridge\nretpoline:      Y\nintree:         Y\nname:           br_netfilter\nvermagic:       5.15.0-76-generic SMP mod_unload modversions \nsig_id:         PKCS#7\nsigner:         Build time autogenerated kernel key\nsig_key:        34:18:5F:0B:C9:D8:70:BD:91:78:CF:85:0F:BC:DA:EF:0F:4E:60:FB\nsig_hashalgo:   sha512\nsignature:      67:07:D0:AF:69:6A:11:EA:70:42:D6:40:BB:FE:04:82:22:6B:79:B6:\n\t\tDE:7A:0A:01:B4:6B:2B:A4:D5:E2:14:BD:AE:DC:65:26:A2:A9:1B:DF:\n\t\t49:93:60:EF:62:F7:5F:20:27:2B:3E:55:9C:89:14:04:0A:31:22:45:\n\t\tA9:7D:0B:6B:BB:49:A5:60:17:EF:9F:8C:6F:EE:DF:5A:6C:B1:49:5B:\n\t\t4F:2E:43:12:54:D6:61:F4:E9:BA:AE:4E:E9:89:6F:9D:02:38:1F:00:\n\t\t37:2E:02:51:E1:8F:D0:6B:B7:0D:29:BF:A6:95:E7:59:1D:6E:C9:CE:\n\t\t8F:8F:CC:31:28:D4:D0:E5:68:FE:A1:11:2F:84:07:61:C3:5E:11:57:\n\t\tA9:20:42:1C:C6:11:0B:A1:03:9D:96:DE:16:37:4B:B5:38:02:3C:43:\n\t\t47:7D:C2:F4:F1:2F:95:B7:6B:F8:97:F0:72:78:5B:80:29:0E:6E:61:\n\t\tEE:25:E4:17:6A:E6:61:9C:99:34:EA:D1:EA:6E:FA:AB:20:E6:15:0B:\n\t\t72:E0:72:62:2F:75:64:F4:82:D5:BA:33:04:98:05:5A:E7:8B:1E:95:\n\t\t5B:A0:AC:CA:C5:FA:59:AF:6B:7E:EE:D5:9D:86:CE:CE:5D:50:0D:C4:\n\t\tF6:90:B7:D8:EB:53:26:12:6C:6E:C2:92:7C:A4:3E:CB:E4:8C:7D:1E:\n\t\t07:05:9C:BA:60:CD:43:0E:FB:BA:9D:EB:05:03:16:A3:39:E4:4F:83:\n\t\t1C:26:D1:5D:67:7D:44:47:11:3E:19:20:80:E2:E6:B7:C2:8C:65:0C:\n\t\t0A:11:28:84:48:14:6C:09:1B:EA:89:2E:F8:23:2F:91:66:7B:8A:BA:\n\t\tA3:CD:A0:8C:D8:50:B0:C4:86:14:4F:F4:92:01:C8:0E:E5:46:41:2A:\n\t\t71:25:5D:F4:4C:A2:8A:60:4E:5C:9C:76:F0:D1:AC:6D:BD:F9:17:F0:\n\t\tF1:41:A4:80:D3:75:1F:BA:55:B8:29:89:90:F8:D9:36:69:20:A4:87:\n\t\t6F:7A:0E:B4:19:09:61:B2:D9:A2:56:5B:93:E5:81:93:41:BA:8F:2B:\n\t\tBC:32:E6:A9:F2:BB:4B:09:45:8C:30:8D:A7:C9:02:2A:69:39:44:7F:\n\t\t9D:CC:A5:0C:BD:F7:25:C6:CA:F7:B7:3F:FC:98:32:4A:DF:D6:EF:A2:\n\t\t9F:80:F4:CC:D4:F8:1D:7E:D9:CF:2D:74:D2:DB:E2:66:11:43:C3:7B:\n\t\tB1:F4:A8:C3:DB:EF:3B:72:CD:4F:E6:27:53:FE:66:D5:D8:2A:97:8D:\n\t\tE3:CF:BD:86:3E:DD:FC:0C:03:00:68:06:A2:7F:99:F1:19:0F:45:5E:\n\t\tFA:48:2D:AC:F8:0F:21:BC:4D:AC:4C:D5", "stdout_lines": ["filename:       /lib/modules/5.15.0-76-generic/kernel/net/bridge/br_netfilter.ko", "description:    Linux ethernet netfilter firewall bridge", "author:         Bart De Schuymer <bdschuym@pandora.be>", "author:         Lennert Buytenhek <buytenh@gnu.org>", "license:        GPL", "srcversion:     2021116F1E4798AA9BB346F", "depends:        bridge", "retpoline:      Y", "intree:         Y", "name:           br_netfilter", "vermagic:       5.15.0-76-generic SMP mod_unload modversions ", "sig_id:         PKCS#7", "signer:         Build time autogenerated kernel key", "sig_key:        34:18:5F:0B:C9:D8:70:BD:91:78:CF:85:0F:BC:DA:EF:0F:4E:60:FB", "sig_hashalgo:   sha512", "signature:      67:07:D0:AF:69:6A:11:EA:70:42:D6:40:BB:FE:04:82:22:6B:79:B6:", "\t\tDE:7A:0A:01:B4:6B:2B:A4:D5:E2:14:BD:AE:DC:65:26:A2:A9:1B:DF:", "\t\t49:93:60:EF:62:F7:5F:20:27:2B:3E:55:9C:89:14:04:0A:31:22:45:", "\t\tA9:7D:0B:6B:BB:49:A5:60:17:EF:9F:8C:6F:EE:DF:5A:6C:B1:49:5B:", "\t\t4F:2E:43:12:54:D6:61:F4:E9:BA:AE:4E:E9:89:6F:9D:02:38:1F:00:", "\t\t37:2E:02:51:E1:8F:D0:6B:B7:0D:29:BF:A6:95:E7:59:1D:6E:C9:CE:", "\t\t8F:8F:CC:31:28:D4:D0:E5:68:FE:A1:11:2F:84:07:61:C3:5E:11:57:", "\t\tA9:20:42:1C:C6:11:0B:A1:03:9D:96:DE:16:37:4B:B5:38:02:3C:43:", "\t\t47:7D:C2:F4:F1:2F:95:B7:6B:F8:97:F0:72:78:5B:80:29:0E:6E:61:", "\t\tEE:25:E4:17:6A:E6:61:9C:99:34:EA:D1:EA:6E:FA:AB:20:E6:15:0B:", "\t\t72:E0:72:62:2F:75:64:F4:82:D5:BA:33:04:98:05:5A:E7:8B:1E:95:", "\t\t5B:A0:AC:CA:C5:FA:59:AF:6B:7E:EE:D5:9D:86:CE:CE:5D:50:0D:C4:", "\t\tF6:90:B7:D8:EB:53:26:12:6C:6E:C2:92:7C:A4:3E:CB:E4:8C:7D:1E:", "\t\t07:05:9C:BA:60:CD:43:0E:FB:BA:9D:EB:05:03:16:A3:39:E4:4F:83:", "\t\t1C:26:D1:5D:67:7D:44:47:11:3E:19:20:80:E2:E6:B7:C2:8C:65:0C:", "\t\t0A:11:28:84:48:14:6C:09:1B:EA:89:2E:F8:23:2F:91:66:7B:8A:BA:", "\t\tA3:CD:A0:8C:D8:50:B0:C4:86:14:4F:F4:92:01:C8:0E:E5:46:41:2A:", "\t\t71:25:5D:F4:4C:A2:8A:60:4E:5C:9C:76:F0:D1:AC:6D:BD:F9:17:F0:", "\t\tF1:41:A4:80:D3:75:1F:BA:55:B8:29:89:90:F8:D9:36:69:20:A4:87:", "\t\t6F:7A:0E:B4:19:09:61:B2:D9:A2:56:5B:93:E5:81:93:41:BA:8F:2B:", "\t\tBC:32:E6:A9:F2:BB:4B:09:45:8C:30:8D:A7:C9:02:2A:69:39:44:7F:", "\t\t9D:CC:A5:0C:BD:F7:25:C6:CA:F7:B7:3F:FC:98:32:4A:DF:D6:EF:A2:", "\t\t9F:80:F4:CC:D4:F8:1D:7E:D9:CF:2D:74:D2:DB:E2:66:11:43:C3:7B:", "\t\tB1:F4:A8:C3:DB:EF:3B:72:CD:4F:E6:27:53:FE:66:D5:D8:2A:97:8D:", "\t\tE3:CF:BD:86:3E:DD:FC:0C:03:00:68:06:A2:7F:99:F1:19:0F:45:5E:", "\t\tFA:48:2D:AC:F8:0F:21:BC:4D:AC:4C:D5"]}
2023-07-10 15:13:31,900 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:31 +0300 (0:00:00.173)       0:05:27.643 ****** 
2023-07-10 15:13:32,070 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Verify br_netfilter module path exists] ******************************************************************************************************************************
2023-07-10 15:13:32,070 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/modules-load.d", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:13:32,078 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:32 +0300 (0:00:00.178)       0:05:27.821 ****** 
2023-07-10 15:13:32,269 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Enable br_netfilter module] ******************************************************************************************************************************************
2023-07-10 15:13:32,270 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "br_netfilter", "params": "", "state": "present"}
2023-07-10 15:13:32,278 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:32 +0300 (0:00:00.199)       0:05:28.021 ****** 
2023-07-10 15:13:32,624 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Persist br_netfilter module] *****************************************************************************************************************************************
2023-07-10 15:13:32,624 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "c3394aff3e3a3e3920e68205b8e839b3d725648e", "dest": "/etc/modules-load.d/kubespray-br_netfilter.conf", "gid": 0, "group": "root", "md5sum": "6f034a1d190cd9ba928c0c4df2a4aad4", "mode": "0644", "owner": "root", "size": 12, "src": "/root/.ansible/tmp/ansible-tmp-1688991212.3247306-18437-180526762480801/source", "state": "file", "uid": 0}
2023-07-10 15:13:32,633 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:32 +0300 (0:00:00.354)       0:05:28.376 ****** 
2023-07-10 15:13:32,793 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] *************************************************************************************************************************
2023-07-10 15:13:32,794 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["sysctl", "net.bridge.bridge-nf-call-iptables"], "delta": "0:00:00.001767", "end": "2023-07-10 12:13:32.783319", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:13:32.781552", "stderr": "", "stderr_lines": [], "stdout": "net.bridge.bridge-nf-call-iptables = 1", "stdout_lines": ["net.bridge.bridge-nf-call-iptables = 1"]}
2023-07-10 15:13:32,803 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:32 +0300 (0:00:00.170)       0:05:28.546 ****** 
2023-07-10 15:13:32,977 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Enable bridge-nf-call tables] ****************************************************************************************************************************************
2023-07-10 15:13:32,978 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=net.bridge.bridge-nf-call-iptables) => {"ansible_loop_var": "item", "changed": true, "item": "net.bridge.bridge-nf-call-iptables"}
2023-07-10 15:13:33,129 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=net.bridge.bridge-nf-call-arptables) => {"ansible_loop_var": "item", "changed": true, "item": "net.bridge.bridge-nf-call-arptables"}
2023-07-10 15:13:33,275 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=net.bridge.bridge-nf-call-ip6tables) => {"ansible_loop_var": "item", "changed": true, "item": "net.bridge.bridge-nf-call-ip6tables"}
2023-07-10 15:13:33,284 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:33 +0300 (0:00:00.481)       0:05:29.027 ****** 
2023-07-10 15:13:33,483 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Modprobe Kernel Module for IPVS] *************************************************************************************************************************************
2023-07-10 15:13:33,484 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=ip_vs) => {"ansible_loop_var": "item", "changed": true, "item": "ip_vs", "name": "ip_vs", "params": "", "state": "present"}
2023-07-10 15:13:33,638 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=ip_vs_rr) => {"ansible_loop_var": "item", "changed": true, "item": "ip_vs_rr", "name": "ip_vs_rr", "params": "", "state": "present"}
2023-07-10 15:13:33,796 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=ip_vs_wrr) => {"ansible_loop_var": "item", "changed": true, "item": "ip_vs_wrr", "name": "ip_vs_wrr", "params": "", "state": "present"}
2023-07-10 15:13:33,949 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=ip_vs_sh) => {"ansible_loop_var": "item", "changed": true, "item": "ip_vs_sh", "name": "ip_vs_sh", "params": "", "state": "present"}
2023-07-10 15:13:33,958 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:33 +0300 (0:00:00.674)       0:05:29.701 ****** 
2023-07-10 15:13:34,132 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Modprobe nf_conntrack_ipv4] ******************************************************************************************************************************************
2023-07-10 15:13:34,132 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-76-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-76-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-76-generic"], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:34,132 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:13:34,140 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.181)       0:05:29.883 ****** 
2023-07-10 15:13:34,486 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Persist ip_vs modules] ***********************************************************************************************************************************************
2023-07-10 15:13:34,487 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "963dae5d0f149158bd6b9a750827856f6f2382fd", "dest": "/etc/modules-load.d/kube_proxy-ipvs.conf", "gid": 0, "group": "root", "md5sum": "0f7f7753a47d8c043fb1f8043b65beb4", "mode": "0644", "owner": "root", "size": 34, "src": "/root/.ansible/tmp/ansible-tmp-1688991214.188065-18485-167451338326954/source", "state": "file", "uid": 0}
2023-07-10 15:13:34,496 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.355)       0:05:30.239 ****** 
2023-07-10 15:13:34,533 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.036)       0:05:30.276 ****** 
2023-07-10 15:13:34,563 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.030)       0:05:30.306 ****** 
2023-07-10 15:13:34,593 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.029)       0:05:30.336 ****** 
2023-07-10 15:13:34,625 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.031)       0:05:30.367 ****** 
2023-07-10 15:13:34,667 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Set kubelet api version to v1beta1] **********************************************************************************************************************************
2023-07-10 15:13:34,667 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeletConfig_api_version": "v1beta1"}, "changed": false}
2023-07-10 15:13:34,677 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:34 +0300 (0:00:00.052)       0:05:30.420 ****** 
2023-07-10 15:13:35,103 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] *********************************************************************************************************************
2023-07-10 15:13:35,103 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "23e16fc546f98f0e991c3021101dd21b992e0681", "dest": "/etc/kubernetes/kubelet.env", "gid": 0, "group": "root", "md5sum": "18b9789cfb112780ee5e02a8f5931f6b", "mode": "0640", "owner": "root", "size": 521, "src": "/root/.ansible/tmp/ansible-tmp-1688991214.7318838-18513-256766918326544/source", "state": "file", "uid": 0}
2023-07-10 15:13:35,111 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:35 +0300 (0:00:00.434)       0:05:30.854 ****** 
2023-07-10 15:13:35,591 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Write kubelet config file] *******************************************************************************************************************************************
2023-07-10 15:13:35,591 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "fe3362583ee795e5fca2b318a1af36c9eb9f3a37", "dest": "/etc/kubernetes/kubelet-config.yaml", "gid": 0, "group": "root", "md5sum": "dee2c3cbb489cdb51aa2356b9b71174b", "mode": "0640", "owner": "root", "size": 798, "src": "/root/.ansible/tmp/ansible-tmp-1688991215.1605308-18531-215333660536828/source", "state": "file", "uid": 0}
2023-07-10 15:13:35,599 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:35 +0300 (0:00:00.487)       0:05:31.342 ****** 
2023-07-10 15:13:35,967 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Write kubelet systemd init file] *************************************************************************************************************************************
2023-07-10 15:13:35,968 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "7c6e996e6a33a8e05266c72a072d76f9aeff796d", "dest": "/etc/systemd/system/kubelet.service", "gid": 0, "group": "root", "md5sum": "d6515056e48922388b2d95e180b49ef9", "mode": "0600", "owner": "root", "size": 562, "src": "/root/.ansible/tmp/ansible-tmp-1688991215.6469488-18549-222344923724500/source", "state": "file", "uid": 0}
2023-07-10 15:13:35,976 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:35 +0300 (0:00:00.376)       0:05:31.719 ****** 
2023-07-10 15:13:35,989 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:35 +0300 (0:00:00.012)       0:05:31.732 ****** 
2023-07-10 15:13:36,158 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/node : Node | restart kubelet] ***********************************************************************************************************************************
2023-07-10 15:13:36,159 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001743", "end": "2023-07-10 12:13:36.146729", "msg": "", "rc": 0, "start": "2023-07-10 12:13:36.144986", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:36,167 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:36 +0300 (0:00:00.177)       0:05:31.910 ****** 
2023-07-10 15:13:36,738 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/node : Kubelet | reload systemd] *********************************************************************************************************************************
2023-07-10 15:13:36,738 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": null, "status": {}}
2023-07-10 15:13:36,746 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:36 +0300 (0:00:00.579)       0:05:32.489 ****** 
2023-07-10 15:13:37,052 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] ********************************************************************************************************************************
2023-07-10 15:13:37,053 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "n/a", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "basic.target system.slice sysinit.target systemd-journald.socket containerd.service", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestamp": "n/a", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestamp": "n/a", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "DynamicUser": "no", "EnvironmentFiles": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestamp": "n/a", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "n/a", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "n/a", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "disabled", "UtmpMode": "init", "Wants": "containerd.service", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}
2023-07-10 15:13:37,061 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:37 +0300 (0:00:00.314)       0:05:32.804 ****** 
2023-07-10 15:13:37,612 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node : Enable kubelet] ******************************************************************************************************************************************************
2023-07-10 15:13:37,613 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "enabled": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ActiveEnterTimestampMonotonic": "15767711146", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "containerd.service sysinit.target basic.target system.slice systemd-journald.socket", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:13:37 UTC", "AssertTimestampMonotonic": "15767697098", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "276687000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ConditionTimestampMonotonic": "15767697096", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/kubelet.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "EnvironmentFiles": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "13362", "ExecMainStartTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ExecMainStartTimestampMonotonic": "15767710532", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[Mon 2023-07-10 12:13:37 UTC] ; stop_time=[n/a] ; pid=13362 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; flags= ; start_time=[Mon 2023-07-10 12:13:37 UTC] ; stop_time=[n/a] ; pid=13362 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Mon 2023-07-10 12:13:37 UTC", "InactiveExitTimestampMonotonic": "15767711146", "InvocationID": "b00daf3dc86443f9bafd1aee67d177c2", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "13362", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "18128896", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:13:37 UTC", "StateChangeTimestampMonotonic": "15767711146", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "7", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "disabled", "UtmpMode": "init", "Wants": "containerd.service", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 15:13:37,644 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:37 +0300 (0:00:00.583)       0:05:33.387 ****** 
2023-07-10 15:13:37,943 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] ********************************************************************************************************************************
2023-07-10 15:13:37,944 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ActiveEnterTimestampMonotonic": "15767711146", "ActiveExitTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ActiveExitTimestampMonotonic": "15768262853", "ActiveState": "activating", "After": "sysinit.target containerd.service basic.target systemd-journald.socket system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:13:37 UTC", "AssertTimestampMonotonic": "15767697098", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "351335000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ConditionTimestampMonotonic": "15767697096", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "DynamicUser": "no", "EnvironmentFiles": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "1", "ExecMainExitTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ExecMainExitTimestampMonotonic": "15768262741", "ExecMainPID": "13362", "ExecMainStartTimestamp": "Mon 2023-07-10 12:13:37 UTC", "ExecMainStartTimestampMonotonic": "15767710532", "ExecMainStatus": "1", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[Mon 2023-07-10 12:13:37 UTC] ; stop_time=[Mon 2023-07-10 12:13:37 UTC] ; pid=13362 ; code=exited ; status=1 }", "ExecStartEx": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; flags= ; start_time=[Mon 2023-07-10 12:13:37 UTC] ; stop_time=[Mon 2023-07-10 12:13:37 UTC] ; pid=13362 ; code=exited ; status=1 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Mon 2023-07-10 12:13:37 UTC", "InactiveEnterTimestampMonotonic": "15768262853", "InactiveExitTimestamp": "Mon 2023-07-10 12:13:37 UTC", "InactiveExitTimestampMonotonic": "15768263062", "InvocationID": "b00daf3dc86443f9bafd1aee67d177c2", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "exit-code", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:13:37 UTC", "StateChangeTimestampMonotonic": "15768263062", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "auto-restart", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "containerd.service", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 15:13:37,964 p=14511 u=kubernetmachine n=ansible | PLAY [kube_control_plane] ********************************************************************************************************************************************************************
2023-07-10 15:13:38,035 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.390)       0:05:33.778 ****** 
2023-07-10 15:13:38,074 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.039)       0:05:33.817 ****** 
2023-07-10 15:13:38,115 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.040)       0:05:33.858 ****** 
2023-07-10 15:13:38,151 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.036)       0:05:33.894 ****** 
2023-07-10 15:13:38,189 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.037)       0:05:33.932 ****** 
2023-07-10 15:13:38,228 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.039)       0:05:33.971 ****** 
2023-07-10 15:13:38,268 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.040)       0:05:34.011 ****** 
2023-07-10 15:13:38,309 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.040)       0:05:34.052 ****** 
2023-07-10 15:13:38,346 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.037)       0:05:34.089 ****** 
2023-07-10 15:13:38,381 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:38 +0300 (0:00:00.035)       0:05:34.124 ****** 
2023-07-10 15:13:40,098 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:01.716)       0:05:35.841 ****** 
2023-07-10 15:13:40,139 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:13:40,140 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:13:40,181 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.083)       0:05:35.924 ****** 
2023-07-10 15:13:40,224 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.043)       0:05:35.967 ****** 
2023-07-10 15:13:40,258 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.033)       0:05:36.001 ****** 
2023-07-10 15:13:40,296 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.037)       0:05:36.039 ****** 
2023-07-10 15:13:40,335 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.039)       0:05:36.078 ****** 
2023-07-10 15:13:40,375 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.039)       0:05:36.118 ****** 
2023-07-10 15:13:40,421 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.045)       0:05:36.164 ****** 
2023-07-10 15:13:40,448 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.027)       0:05:36.191 ****** 
2023-07-10 15:13:40,478 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.029)       0:05:36.221 ****** 
2023-07-10 15:13:40,509 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.030)       0:05:36.252 ****** 
2023-07-10 15:13:40,536 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.026)       0:05:36.279 ****** 
2023-07-10 15:13:40,565 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.029)       0:05:36.308 ****** 
2023-07-10 15:13:40,599 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.034)       0:05:36.342 ****** 
2023-07-10 15:13:40,637 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.038)       0:05:36.380 ****** 
2023-07-10 15:13:40,736 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.099)       0:05:36.479 ****** 
2023-07-10 15:13:40,778 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.042)       0:05:36.521 ****** 
2023-07-10 15:13:40,815 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.036)       0:05:36.558 ****** 
2023-07-10 15:13:40,843 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.028)       0:05:36.586 ****** 
2023-07-10 15:13:40,880 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.036)       0:05:36.623 ****** 
2023-07-10 15:13:40,907 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.027)       0:05:36.650 ****** 
2023-07-10 15:13:40,940 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:40 +0300 (0:00:00.032)       0:05:36.683 ****** 
2023-07-10 15:13:41,120 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Pre-upgrade | Delete master manifests if etcd secrets changed] **********************************************************************************************
2023-07-10 15:13:41,121 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=kube-apiserver) => {"ansible_loop_var": "item", "changed": false, "item": "kube-apiserver", "path": "/etc/kubernetes/manifests/kube-apiserver.manifest", "state": "absent"}
2023-07-10 15:13:41,276 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=kube-controller-manager) => {"ansible_loop_var": "item", "changed": false, "item": "kube-controller-manager", "path": "/etc/kubernetes/manifests/kube-controller-manager.manifest", "state": "absent"}
2023-07-10 15:13:41,427 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=kube-scheduler) => {"ansible_loop_var": "item", "changed": false, "item": "kube-scheduler", "path": "/etc/kubernetes/manifests/kube-scheduler.manifest", "state": "absent"}
2023-07-10 15:13:41,437 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.497)       0:05:37.181 ****** 
2023-07-10 15:13:41,481 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.043)       0:05:37.224 ****** 
2023-07-10 15:13:41,511 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.030)       0:05:37.254 ****** 
2023-07-10 15:13:41,543 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.032)       0:05:37.286 ****** 
2023-07-10 15:13:41,925 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Create kube-scheduler config] *******************************************************************************************************************************
2023-07-10 15:13:41,925 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "a365de8614a2515ae912e878d2bf0221eb8a99a6", "dest": "/etc/kubernetes/kubescheduler-config.yaml", "gid": 0, "group": "root", "md5sum": "a333abe118f32f51573e72a923b7ec2e", "mode": "0644", "owner": "root", "size": 204, "src": "/root/.ansible/tmp/ansible-tmp-1688991221.590395-18670-136681864372719/source", "state": "file", "uid": 0}
2023-07-10 15:13:41,935 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.391)       0:05:37.678 ****** 
2023-07-10 15:13:41,964 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.029)       0:05:37.707 ****** 
2023-07-10 15:13:41,994 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:41 +0300 (0:00:00.030)       0:05:37.737 ****** 
2023-07-10 15:13:42,026 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:42 +0300 (0:00:00.032)       0:05:37.769 ****** 
2023-07-10 15:13:42,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:42 +0300 (0:00:00.037)       0:05:37.807 ****** 
2023-07-10 15:13:42,097 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:42 +0300 (0:00:00.032)       0:05:37.840 ****** 
2023-07-10 15:13:42,124 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:42 +0300 (0:00:00.027)       0:05:37.867 ****** 
2023-07-10 15:13:43,298 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ************************************************************************************************************
2023-07-10 15:13:43,299 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "ff59da6d3c7647ffabc84c838258373bbab68764", "dest": "/usr/local/bin/kubectl", "gid": 0, "group": "root", "md5sum": "ed18bdf2d84364e928a97eedebebaba6", "mode": "0755", "owner": "root", "size": 48029696, "src": "/tmp/releases/kubectl-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 15:13:43,312 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:43 +0300 (0:00:01.187)       0:05:39.055 ****** 
2023-07-10 15:13:43,647 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Install kubectl bash completion] ****************************************************************************************************************************
2023-07-10 15:13:43,647 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": "/usr/local/bin/kubectl completion bash >/etc/bash_completion.d/kubectl.sh", "delta": "0:00:00.063607", "end": "2023-07-10 12:13:43.626379", "msg": "", "rc": 0, "start": "2023-07-10 12:13:43.562772", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:43,660 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:43 +0300 (0:00:00.347)       0:05:39.403 ****** 
2023-07-10 15:13:43,942 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] ***************************************************************************************************************
2023-07-10 15:13:43,943 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/kubectl.sh", "size": 11832, "state": "file", "uid": 0}
2023-07-10 15:13:43,957 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:43 +0300 (0:00:00.296)       0:05:39.700 ****** 
2023-07-10 15:13:44,000 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:43 +0300 (0:00:00.043)       0:05:39.743 ****** 
2023-07-10 15:13:44,335 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ******************************************************************************************
2023-07-10 15:13:44,336 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.070599", "end": "2023-07-10 12:13:44.314838", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:13:44.244239", "stderr": "E0710 12:13:44.304225   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nE0710 12:13:44.304511   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nE0710 12:13:44.307289   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nE0710 12:13:44.308738   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nE0710 12:13:44.310174   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nThe connection to the server localhost:8080 was refused - did you specify the right host or port?", "stderr_lines": ["E0710 12:13:44.304225   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused", "E0710 12:13:44.304511   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused", "E0710 12:13:44.307289   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused", "E0710 12:13:44.308738   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused", "E0710 12:13:44.310174   13492 memcache.go:238] couldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused", "The connection to the server localhost:8080 was refused - did you specify the right host or port?"], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:44,336 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:13:44,354 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:44 +0300 (0:00:00.354)       0:05:40.097 ****** 
2023-07-10 15:13:44,406 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:44 +0300 (0:00:00.052)       0:05:40.149 ****** 
2023-07-10 15:13:44,509 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set fact first_kube_control_plane] **************************************************************************************************************************
2023-07-10 15:13:44,509 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"first_kube_control_plane": "node1"}, "changed": false}
2023-07-10 15:13:44,524 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:44 +0300 (0:00:00.117)       0:05:40.267 ****** 
2023-07-10 15:13:44,567 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:44 +0300 (0:00:00.042)       0:05:40.310 ****** 
2023-07-10 15:13:44,839 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Check if kubeadm has already run] *****************************************************************************************************************
2023-07-10 15:13:44,840 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:13:44,853 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:44 +0300 (0:00:00.286)       0:05:40.596 ****** 
2023-07-10 15:13:44,947 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:44 +0300 (0:00:00.094)       0:05:40.690 ****** 
2023-07-10 15:13:45,031 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.083)       0:05:40.774 ****** 
2023-07-10 15:13:45,484 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | aggregate all SANs] *******************************************************************************************************************************
2023-07-10 15:13:45,485 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"apiserver_sans": ["kubernetes", "kubernetes.default", "kubernetes.default.svc", "kubernetes.default.svc.linuxtechi.local", "10.233.0.1", "localhost", "127.0.0.1", "node1", "lb-apiserver.kubernetes.local", "192.168.122.29", "node1.linuxtechi.local"]}, "changed": false}
2023-07-10 15:13:45,498 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.467)       0:05:41.241 ****** 
2023-07-10 15:13:45,559 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.060)       0:05:41.302 ****** 
2023-07-10 15:13:45,620 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.061)       0:05:41.363 ****** 
2023-07-10 15:13:45,674 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.053)       0:05:41.417 ****** 
2023-07-10 15:13:45,724 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.050)       0:05:41.467 ****** 
2023-07-10 15:13:45,787 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubeadm api version to v1beta3] *************************************************************************************************************************
2023-07-10 15:13:45,787 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta3"}, "changed": false}
2023-07-10 15:13:45,803 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:45 +0300 (0:00:00.079)       0:05:41.546 ****** 
2023-07-10 15:13:47,150 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Create kubeadm config] ****************************************************************************************************************************
2023-07-10 15:13:47,150 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "e7b5019752a931796c494de9c718585a01578f82", "dest": "/etc/kubernetes/kubeadm-config.yaml", "gid": 0, "group": "root", "md5sum": "48518f6704dc484fad8e5374efc8b911", "mode": "0640", "owner": "root", "size": 3647, "src": "/root/.ansible/tmp/ansible-tmp-1688991225.8804605-18755-120452580689937/source", "state": "file", "uid": 0}
2023-07-10 15:13:47,165 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:01.361)       0:05:42.908 ****** 
2023-07-10 15:13:47,208 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.043)       0:05:42.951 ****** 
2023-07-10 15:13:47,253 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.044)       0:05:42.996 ****** 
2023-07-10 15:13:47,294 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.040)       0:05:43.037 ****** 
2023-07-10 15:13:47,462 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.168)       0:05:43.205 ****** 
2023-07-10 15:13:47,629 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.166)       0:05:43.372 ****** 
2023-07-10 15:13:47,665 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.036)       0:05:43.408 ****** 
2023-07-10 15:13:47,694 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.029)       0:05:43.437 ****** 
2023-07-10 15:13:47,731 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.036)       0:05:43.474 ****** 
2023-07-10 15:13:47,767 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:47 +0300 (0:00:00.036)       0:05:43.510 ****** 
2023-07-10 15:13:55,932 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Initialize first master] **************************************************************************************************************************
2023-07-10 15:13:55,932 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["timeout", "-k", "300s", "300s", "/usr/local/bin/kubeadm", "init", "--config=/etc/kubernetes/kubeadm-config.yaml", "--ignore-preflight-errors=all", "--skip-phases=addon/coredns", "--upload-certs"], "delta": "0:00:07.957889", "end": "2023-07-10 12:13:55.908027", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:13:47.950138", "stderr": "W0710 12:13:47.982899   13530 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "stderr_lines": ["W0710 12:13:47.982899   13530 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]"], "stdout": "[init] Using Kubernetes version: v1.26.2\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[certs] Using certificateDir folder \"/etc/kubernetes/ssl\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.linuxtechi.local lb-apiserver.kubernetes.local localhost node1 node1.linuxtechi.local] and IPs [10.233.0.1 192.168.122.29 127.0.0.1]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] External etcd mode: Skipping etcd/ca certificate authority generation\n[certs] External etcd mode: Skipping etcd/server certificate generation\n[certs] External etcd mode: Skipping etcd/peer certificate generation\n[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation\n[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Starting the kubelet\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 5m0s\n[apiclient] All control plane components are healthy after 4.501454 seconds\n[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace\n[kubelet] Creating a ConfigMap \"kubelet-config\" in namespace kube-system with the configuration for the kubelets in the cluster\n[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace\n[upload-certs] Using certificate key:\nf3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b\n[mark-control-plane] Marking the node node1 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]\n[bootstrap-token] Using token: 7i4fzm.bqgmilz2tyez3a3b\n[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes\n[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace\n[kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key\n[addons] Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of the control-plane node running the following command on each as root:\n\n  kubeadm join 192.168.122.29:6443 --token 7i4fzm.bqgmilz2tyez3a3b \\\n\t--discovery-token-ca-cert-hash sha256:d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79 \\\n\t--control-plane --certificate-key f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b\n\nPlease note that the certificate-key gives access to cluster sensitive data, keep it secret!\nAs a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use\n\"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward.\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.122.29:6443 --token 7i4fzm.bqgmilz2tyez3a3b \\\n\t--discovery-token-ca-cert-hash sha256:d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79 ", "stdout_lines": ["[init] Using Kubernetes version: v1.26.2", "[preflight] Running pre-flight checks", "[preflight] Pulling images required for setting up a Kubernetes cluster", "[preflight] This might take a minute or two, depending on the speed of your internet connection", "[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'", "[certs] Using certificateDir folder \"/etc/kubernetes/ssl\"", "[certs] Generating \"ca\" certificate and key", "[certs] Generating \"apiserver\" certificate and key", "[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.linuxtechi.local lb-apiserver.kubernetes.local localhost node1 node1.linuxtechi.local] and IPs [10.233.0.1 192.168.122.29 127.0.0.1]", "[certs] Generating \"apiserver-kubelet-client\" certificate and key", "[certs] Generating \"front-proxy-ca\" certificate and key", "[certs] Generating \"front-proxy-client\" certificate and key", "[certs] External etcd mode: Skipping etcd/ca certificate authority generation", "[certs] External etcd mode: Skipping etcd/server certificate generation", "[certs] External etcd mode: Skipping etcd/peer certificate generation", "[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation", "[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation", "[certs] Generating \"sa\" key and public key", "[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"", "[kubeconfig] Writing \"admin.conf\" kubeconfig file", "[kubeconfig] Writing \"kubelet.conf\" kubeconfig file", "[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file", "[kubeconfig] Writing \"scheduler.conf\" kubeconfig file", "[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"", "[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"", "[kubelet-start] Starting the kubelet", "[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"", "[control-plane] Creating static Pod manifest for \"kube-apiserver\"", "[control-plane] Creating static Pod manifest for \"kube-controller-manager\"", "[control-plane] Creating static Pod manifest for \"kube-scheduler\"", "[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 5m0s", "[apiclient] All control plane components are healthy after 4.501454 seconds", "[upload-config] Storing the configuration used in ConfigMap \"kubeadm-config\" in the \"kube-system\" Namespace", "[kubelet] Creating a ConfigMap \"kubelet-config\" in namespace kube-system with the configuration for the kubelets in the cluster", "[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace", "[upload-certs] Using certificate key:", "f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b", "[mark-control-plane] Marking the node node1 as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]", "[bootstrap-token] Using token: 7i4fzm.bqgmilz2tyez3a3b", "[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles", "[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes", "[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials", "[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token", "[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster", "[bootstrap-token] Creating the \"cluster-info\" ConfigMap in the \"kube-public\" namespace", "[kubelet-finalize] Updating \"/etc/kubernetes/kubelet.conf\" to point to a rotatable kubelet client certificate and key", "[addons] Applied essential addon: kube-proxy", "", "Your Kubernetes control-plane has initialized successfully!", "", "To start using your cluster, you need to run the following as a regular user:", "", "  mkdir -p $HOME/.kube", "  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config", "  sudo chown $(id -u):$(id -g) $HOME/.kube/config", "", "Alternatively, if you are the root user, you can run:", "", "  export KUBECONFIG=/etc/kubernetes/admin.conf", "", "You should now deploy a pod network to the cluster.", "Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:", "  https://kubernetes.io/docs/concepts/cluster-administration/addons/", "", "You can now join any number of the control-plane node running the following command on each as root:", "", "  kubeadm join 192.168.122.29:6443 --token 7i4fzm.bqgmilz2tyez3a3b \\", "\t--discovery-token-ca-cert-hash sha256:d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79 \\", "\t--control-plane --certificate-key f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b", "", "Please note that the certificate-key gives access to cluster sensitive data, keep it secret!", "As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use", "\"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward.", "", "Then you can join any number of worker nodes by running the following on each as root:", "", "kubeadm join 192.168.122.29:6443 --token 7i4fzm.bqgmilz2tyez3a3b \\", "\t--discovery-token-ca-cert-hash sha256:d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79 "]}
2023-07-10 15:13:55,941 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:55 +0300 (0:00:08.173)       0:05:51.684 ****** 
2023-07-10 15:13:57,225 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:01.283)       0:05:52.968 ****** 
2023-07-10 15:13:57,266 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:00.041)       0:05:53.009 ****** 
2023-07-10 15:13:57,499 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Create kubeadm token for joining nodes with 24h expiration (default)] ***************************************************************************************
2023-07-10 15:13:57,500 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": ["/usr/local/bin/kubeadm", "--kubeconfig", "/etc/kubernetes/admin.conf", "token", "create"], "delta": "0:00:00.038689", "end": "2023-07-10 12:13:57.486069", "msg": "", "rc": 0, "start": "2023-07-10 12:13:57.447380", "stderr": "", "stderr_lines": [], "stdout": "jbip3v.uuluoagh63ex1qej", "stdout_lines": ["jbip3v.uuluoagh63ex1qej"]}
2023-07-10 15:13:57,508 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:00.241)       0:05:53.251 ****** 
2023-07-10 15:13:57,554 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubeadm_token] ******************************************************************************************************************************************
2023-07-10 15:13:57,554 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_token": "jbip3v.uuluoagh63ex1qej"}, "changed": false}
2023-07-10 15:13:57,564 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:00.056)       0:05:53.307 ****** 
2023-07-10 15:13:57,593 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:00.029)       0:05:53.336 ****** 
2023-07-10 15:13:57,611 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Join other masters] *******************************************************************************************************************************
2023-07-10 15:13:57,626 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-secondary.yml for node1
2023-07-10 15:13:57,643 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:00.049)       0:05:53.385 ****** 
2023-07-10 15:13:57,752 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubeadm_discovery_address] ******************************************************************************************************************************
2023-07-10 15:13:57,752 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_discovery_address": "192.168.122.29:6443"}, "changed": false}
2023-07-10 15:13:57,761 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:57 +0300 (0:00:00.118)       0:05:53.504 ****** 
2023-07-10 15:13:58,006 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Upload certificates so they are fresh and not expired] ******************************************************************************************************
2023-07-10 15:13:58,006 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/kubeadm", "init", "phase", "--config", "/etc/kubernetes/kubeadm-config.yaml", "upload-certs", "--upload-certs"], "delta": "0:00:00.065873", "end": "2023-07-10 12:13:57.994754", "msg": "", "rc": 0, "start": "2023-07-10 12:13:57.928881", "stderr": "W0710 12:13:57.955921   14052 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "stderr_lines": ["W0710 12:13:57.955921   14052 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]"], "stdout": "[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace\n[upload-certs] Using certificate key:\nf3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b", "stdout_lines": ["[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace", "[upload-certs] Using certificate key:", "f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b"]}
2023-07-10 15:13:58,016 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.255)       0:05:53.759 ****** 
2023-07-10 15:13:58,090 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Parse certificate key if not set] ***************************************************************************************************************************
2023-07-10 15:13:58,091 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_certificate_key": "f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b"}, "changed": false}
2023-07-10 15:13:58,100 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.084)       0:05:53.843 ****** 
2023-07-10 15:13:58,130 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.029)       0:05:53.873 ****** 
2023-07-10 15:13:58,480 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Wait for k8s apiserver] *************************************************************************************************************************************
2023-07-10 15:13:58,480 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "elapsed": 0, "match_groupdict": {}, "match_groups": [], "path": null, "port": 6443, "search_regex": null, "state": "started"}
2023-07-10 15:13:58,489 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.359)       0:05:54.232 ****** 
2023-07-10 15:13:58,532 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : check already run] ******************************************************************************************************************************************
2023-07-10 15:13:58,532 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": false
}
2023-07-10 15:13:58,541 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.052)       0:05:54.284 ****** 
2023-07-10 15:13:58,572 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.030)       0:05:54.315 ****** 
2023-07-10 15:13:58,603 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.031)       0:05:54.346 ****** 
2023-07-10 15:13:58,643 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:58 +0300 (0:00:00.039)       0:05:54.386 ****** 
2023-07-10 15:13:58,893 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Remove taint for master with node role] ***********************************************************************************************************
2023-07-10 15:13:58,893 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=node-role.kubernetes.io/master:NoSchedule-) => {"ansible_loop_var": "item", "changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "taint", "node", "node1", "node-role.kubernetes.io/master:NoSchedule-"], "delta": "0:00:00.063050", "end": "2023-07-10 12:13:58.876405", "failed_when_result": false, "item": "node-role.kubernetes.io/master:NoSchedule-", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:13:58.813355", "stderr": "error: taint \"node-role.kubernetes.io/master:NoSchedule\" not found", "stderr_lines": ["error: taint \"node-role.kubernetes.io/master:NoSchedule\" not found"], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:59,093 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=node-role.kubernetes.io/control-plane:NoSchedule-) => {"ansible_loop_var": "item", "changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "taint", "node", "node1", "node-role.kubernetes.io/control-plane:NoSchedule-"], "delta": "0:00:00.055201", "end": "2023-07-10 12:13:59.082879", "failed_when_result": false, "item": "node-role.kubernetes.io/control-plane:NoSchedule-", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:13:59.027678", "stderr": "error: taint \"node-role.kubernetes.io/control-plane:NoSchedule\" not found", "stderr_lines": ["error: taint \"node-role.kubernetes.io/control-plane:NoSchedule\" not found"], "stdout": "", "stdout_lines": []}
2023-07-10 15:13:59,103 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:59 +0300 (0:00:00.459)       0:05:54.846 ****** 
2023-07-10 15:13:59,131 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:59 +0300 (0:00:00.028)       0:05:54.874 ****** 
2023-07-10 15:13:59,146 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Include kubeadm secondary server apiserver fixes] ***********************************************************************************************************
2023-07-10 15:13:59,158 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-fix-apiserver.yml for node1
2023-07-10 15:13:59,182 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:13:59 +0300 (0:00:00.051)       0:05:54.926 ****** 
2023-07-10 15:13:59,412 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Update server field in component kubeconfigs] ***************************************************************************************************************
2023-07-10 15:13:59,412 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=admin.conf) => {"ansible_loop_var": "item", "backup": "/etc/kubernetes/admin.conf.14081.2023-07-10@12:13:59~", "changed": true, "item": "admin.conf", "msg": "line replaced"}
2023-07-10 15:13:59,621 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=controller-manager.conf) => {"ansible_loop_var": "item", "backup": "/etc/kubernetes/controller-manager.conf.14087.2023-07-10@12:13:59~", "changed": true, "item": "controller-manager.conf", "msg": "line replaced"}
2023-07-10 15:13:59,820 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=kubelet.conf) => {"ansible_loop_var": "item", "backup": "/etc/kubernetes/kubelet.conf.14093.2023-07-10@12:13:59~", "changed": true, "item": "kubelet.conf", "msg": "line replaced"}
2023-07-10 15:14:00,015 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item=scheduler.conf) => {"ansible_loop_var": "item", "backup": "/etc/kubernetes/scheduler.conf.14099.2023-07-10@12:14:00~", "changed": true, "item": "scheduler.conf", "msg": "line replaced"}
2023-07-10 15:14:00,027 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:00 +0300 (0:00:00.844)       0:05:55.770 ****** 
2023-07-10 15:14:00,228 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Update etcd-servers for apiserver] **************************************************************************************************************************
2023-07-10 15:14:00,228 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": ""}
2023-07-10 15:14:00,236 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:00 +0300 (0:00:00.208)       0:05:55.979 ****** 
2023-07-10 15:14:00,253 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Include kubelet client cert rotation fixes] *****************************************************************************************************************
2023-07-10 15:14:00,266 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes/control-plane/tasks/kubelet-fix-client-cert-rotation.yml for node1
2023-07-10 15:14:00,290 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:00 +0300 (0:00:00.053)       0:05:56.033 ****** 
2023-07-10 15:14:00,457 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 1/2] *********************************************************************************************************************
2023-07-10 15:14:00,457 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": ""}
2023-07-10 15:14:00,469 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:00 +0300 (0:00:00.179)       0:05:56.212 ****** 
2023-07-10 15:14:00,745 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 2/2] *********************************************************************************************************************
2023-07-10 15:14:00,746 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": ""}
2023-07-10 15:14:00,758 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:00 +0300 (0:00:00.288)       0:05:56.501 ****** 
2023-07-10 15:14:01,411 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Install script to renew K8S control plane certificates] *****************************************************************************************************
2023-07-10 15:14:01,412 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "a63e2b3ee9bbe6a1247d1973e973dfa05f85e91a", "dest": "/usr/local/bin/k8s-certs-renew.sh", "gid": 0, "group": "root", "md5sum": "d4f968dd0517d187c94ea9398782c6eb", "mode": "0755", "owner": "root", "size": 731, "src": "/root/.ansible/tmp/ansible-tmp-1688991240.835902-18875-120360093564948/source", "state": "file", "uid": 0}
2023-07-10 15:14:01,426 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:01 +0300 (0:00:00.667)       0:05:57.169 ****** 
2023-07-10 15:14:01,484 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:01 +0300 (0:00:00.058)       0:05:57.227 ****** 
2023-07-10 15:14:01,540 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:01 +0300 (0:00:00.055)       0:05:57.283 ****** 
2023-07-10 15:14:01,668 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/client : Set external kube-apiserver endpoint] ******************************************************************************************************************************
2023-07-10 15:14:01,668 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"external_apiserver_address": "192.168.122.29", "external_apiserver_port": "6443"}, "changed": false}
2023-07-10 15:14:01,682 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:01 +0300 (0:00:00.142)       0:05:57.425 ****** 
2023-07-10 15:14:01,971 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/client : Create kube config dir for current/ansible become user] ************************************************************************************************************
2023-07-10 15:14:01,972 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.kube", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:14:01,985 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:01 +0300 (0:00:00.302)       0:05:57.728 ****** 
2023-07-10 15:14:02,327 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/client : Copy admin kubeconfig to current/ansible become user home] *********************************************************************************************************
2023-07-10 15:14:02,327 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "3eb86b4da6443e6007f17a9238f7342b76e6cbfa", "dest": "/root/.kube/config", "gid": 0, "group": "root", "md5sum": "bb18dd836225bb61dea7e5e605271b08", "mode": "0600", "owner": "root", "size": 5661, "src": "/etc/kubernetes/admin.conf", "state": "file", "uid": 0}
2023-07-10 15:14:02,347 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.361)       0:05:58.090 ****** 
2023-07-10 15:14:02,388 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.040)       0:05:58.131 ****** 
2023-07-10 15:14:02,686 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/client : Wait for k8s apiserver] ********************************************************************************************************************************************
2023-07-10 15:14:02,687 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "elapsed": 0, "match_groupdict": {}, "match_groups": [], "path": null, "port": 6443, "search_regex": null, "state": "started"}
2023-07-10 15:14:02,700 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.311)       0:05:58.442 ****** 
2023-07-10 15:14:02,744 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.044)       0:05:58.487 ****** 
2023-07-10 15:14:02,786 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.042)       0:05:58.529 ****** 
2023-07-10 15:14:02,834 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.047)       0:05:58.577 ****** 
2023-07-10 15:14:02,876 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.042)       0:05:58.619 ****** 
2023-07-10 15:14:02,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.046)       0:05:58.666 ****** 
2023-07-10 15:14:02,976 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:02 +0300 (0:00:00.053)       0:05:58.719 ****** 
2023-07-10 15:14:03,496 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Wait for kube-apiserver] *************************************************************************************************************
2023-07-10 15:14:03,496 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "dde57d7f-40b4-4286-ac7c-a271815ed953", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:14:03 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 15:14:03,509 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:03 +0300 (0:00:00.532)       0:05:59.252 ****** 
2023-07-10 15:14:04,108 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding to admit nodes] ***********************************************************************************************
2023-07-10 15:14:04,109 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "7a5d333673421310e034bd1931c65d490d541632", "dest": "/etc/kubernetes/node-crb.yml", "gid": 0, "group": "root", "md5sum": "63565185c3821bd7eb783657a86d84c9", "mode": "0640", "owner": "root", "size": 408, "src": "/root/.ansible/tmp/ansible-tmp-1688991243.5883436-18945-281132616047149/source", "state": "file", "uid": 0}
2023-07-10 15:14:04,122 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:04 +0300 (0:00:00.613)       0:05:59.865 ****** 
2023-07-10 15:14:05,246 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Apply workaround to allow all nodes with cert O=system:nodes to register] ******************************************************************************
2023-07-10 15:14:05,247 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/kubespray:system:node created"}
2023-07-10 15:14:05,256 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:05 +0300 (0:00:01.133)       0:06:00.999 ****** 
2023-07-10 15:14:05,483 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Remove old webhook ClusterRole] ******************************************************************************************************
2023-07-10 15:14:05,483 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: "}
2023-07-10 15:14:05,492 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:05 +0300 (0:00:00.236)       0:06:01.235 ****** 
2023-07-10 15:14:05,718 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Remove old webhook ClusterRoleBinding] ***********************************************************************************************
2023-07-10 15:14:05,718 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: "}
2023-07-10 15:14:05,727 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:05 +0300 (0:00:00.234)       0:06:01.470 ****** 
2023-07-10 15:14:05,760 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:05 +0300 (0:00:00.032)       0:06:01.503 ****** 
2023-07-10 15:14:06,170 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : PriorityClass | Copy k8s-cluster-critical-pc.yml file] *************************************************************************************************
2023-07-10 15:14:06,170 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "7257562957d22ed747cbeca924c2dba4a0da01d0", "dest": "/etc/kubernetes/k8s-cluster-critical-pc.yml", "gid": 0, "group": "root", "md5sum": "c7dbbb6fa57858ed89f246156ef73afe", "mode": "0640", "owner": "root", "size": 229, "src": "/root/.ansible/tmp/ansible-tmp-1688991245.81351-18980-85031267353586/source", "state": "file", "uid": 0}
2023-07-10 15:14:06,179 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:06 +0300 (0:00:00.418)       0:06:01.922 ****** 
2023-07-10 15:14:06,512 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : PriorityClass | Create k8s-cluster-critical] ***********************************************************************************************************
2023-07-10 15:14:06,512 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: priorityclass.scheduling.k8s.io/k8s-cluster-critical created"}
2023-07-10 15:14:06,542 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:06 +0300 (0:00:00.363)       0:06:02.285 ****** 
2023-07-10 15:14:06,719 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | restart kubelet] ************************************************************************************************************************
2023-07-10 15:14:06,719 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001685", "end": "2023-07-10 12:14:06.706059", "msg": "", "rc": 0, "start": "2023-07-10 12:14:06.704374", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:14:06,727 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:06 +0300 (0:00:00.185)       0:06:02.470 ****** 
2023-07-10 15:14:06,900 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | wait for master static pods] ************************************************************************************************************
2023-07-10 15:14:06,901 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001714", "end": "2023-07-10 12:14:06.887633", "msg": "", "rc": 0, "start": "2023-07-10 12:14:06.885919", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:14:06,909 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:06 +0300 (0:00:00.182)       0:06:02.652 ****** 
2023-07-10 15:14:07,138 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | Restart kube-scheduler] *****************************************************************************************************************
2023-07-10 15:14:07,138 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002338", "end": "2023-07-10 12:14:07.074040", "msg": "", "rc": 0, "start": "2023-07-10 12:14:07.071702", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:14:07,145 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:07 +0300 (0:00:00.235)       0:06:02.888 ****** 
2023-07-10 15:14:07,325 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | Restart kube-controller-manager] ********************************************************************************************************
2023-07-10 15:14:07,326 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.001983", "end": "2023-07-10 12:14:07.312184", "msg": "", "rc": 0, "start": "2023-07-10 12:14:07.310201", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:14:07,334 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:07 +0300 (0:00:00.189)       0:06:03.077 ****** 
2023-07-10 15:14:07,912 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | reload systemd] *************************************************************************************************************************
2023-07-10 15:14:07,913 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": null, "status": {}}
2023-07-10 15:14:07,920 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:07 +0300 (0:00:00.585)       0:06:03.663 ****** 
2023-07-10 15:14:08,280 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | reload kubelet] *************************************************************************************************************************
2023-07-10 15:14:08,282 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:13:55 UTC", "ActiveEnterTimestampMonotonic": "15786562629", "ActiveExitTimestamp": "Mon 2023-07-10 12:13:55 UTC", "ActiveExitTimestampMonotonic": "15786485218", "ActiveState": "active", "After": "basic.target system.slice systemd-journald.socket containerd.service sysinit.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:13:55 UTC", "AssertTimestampMonotonic": "15786546068", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "417038000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:13:55 UTC", "ConditionTimestampMonotonic": "15786546067", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/kubelet.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "EnvironmentFiles": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "13989", "ExecMainStartTimestamp": "Mon 2023-07-10 12:13:55 UTC", "ExecMainStartTimestampMonotonic": "15786562321", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Mon 2023-07-10 12:13:55 UTC", "InactiveEnterTimestampMonotonic": "15786545736", "InactiveExitTimestamp": "Mon 2023-07-10 12:13:55 UTC", "InactiveExitTimestampMonotonic": "15786562629", "InvocationID": "e2ca37bcd8334a8f919327ce0bc20685", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "13989", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "30957568", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:13:55 UTC", "StateChangeTimestampMonotonic": "15786562629", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "10", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "containerd.service", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 15:14:08,296 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:08 +0300 (0:00:00.375)       0:06:04.039 ****** 
2023-07-10 15:14:08,326 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:08 +0300 (0:00:00.030)       0:06:04.069 ****** 
2023-07-10 15:14:08,736 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | Remove scheduler container containerd/crio] *********************************************************************************************
2023-07-10 15:14:08,736 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": "set -o pipefail && /usr/local/bin/crictl pods --name kube-scheduler* -q | xargs -I% --no-run-if-empty bash -c '/usr/local/bin/crictl stopp % && /usr/local/bin/crictl rmp %'", "delta": "0:00:00.171736", "end": "2023-07-10 12:14:08.720526", "msg": "", "rc": 0, "start": "2023-07-10 12:14:08.548790", "stderr": "", "stderr_lines": [], "stdout": "Stopped sandbox 9d2c95a4f7e060e6309a2f44014bcb42f869e4e3934134af595c89880360aaac\nRemoved sandbox 9d2c95a4f7e060e6309a2f44014bcb42f869e4e3934134af595c89880360aaac", "stdout_lines": ["Stopped sandbox 9d2c95a4f7e060e6309a2f44014bcb42f869e4e3934134af595c89880360aaac", "Removed sandbox 9d2c95a4f7e060e6309a2f44014bcb42f869e4e3934134af595c89880360aaac"]}
2023-07-10 15:14:08,745 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:08 +0300 (0:00:00.418)       0:06:04.488 ****** 
2023-07-10 15:14:08,776 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:08 +0300 (0:00:00.030)       0:06:04.519 ****** 
2023-07-10 15:14:09,190 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | Remove controller manager container containerd/crio] ************************************************************************************
2023-07-10 15:14:09,191 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": "set -o pipefail && /usr/local/bin/crictl pods --name kube-controller-manager* -q | xargs -I% --no-run-if-empty bash -c '/usr/local/bin/crictl stopp % && /usr/local/bin/crictl rmp %'", "delta": "0:00:00.224221", "end": "2023-07-10 12:14:09.177462", "msg": "", "rc": 0, "start": "2023-07-10 12:14:08.953241", "stderr": "", "stderr_lines": [], "stdout": "Stopped sandbox db97c35fc047ff5bebe567f45bee2c31fff0e939c9d4b5cfb73f94d651af29c1\nRemoved sandbox db97c35fc047ff5bebe567f45bee2c31fff0e939c9d4b5cfb73f94d651af29c1", "stdout_lines": ["Stopped sandbox db97c35fc047ff5bebe567f45bee2c31fff0e939c9d4b5cfb73f94d651af29c1", "Removed sandbox db97c35fc047ff5bebe567f45bee2c31fff0e939c9d4b5cfb73f94d651af29c1"]}
2023-07-10 15:14:09,199 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:09 +0300 (0:00:00.423)       0:06:04.942 ****** 
2023-07-10 15:14:10,717 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | wait for kube-scheduler] ****************************************************************************************************************
2023-07-10 15:14:10,718 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 2, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:14:10 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://localhost:10259/healthz", "x_content_type_options": "nosniff"}
2023-07-10 15:14:10,727 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:10 +0300 (0:00:01.527)       0:06:06.470 ****** 
2023-07-10 15:14:10,996 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | wait for kube-controller-manager] *******************************************************************************************************
2023-07-10 15:14:10,996 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:14:10 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://localhost:10257/healthz", "x_content_type_options": "nosniff"}
2023-07-10 15:14:11,004 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.277)       0:06:06.747 ****** 
2023-07-10 15:14:11,319 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/control-plane : Master | wait for the apiserver to be running] ***************************************************************************************************
2023-07-10 15:14:11,319 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "9ff65f56-02ca-46bb-ae45-e1d15ac8ae4e", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:14:11 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 15:14:11,340 p=14511 u=kubernetmachine n=ansible | PLAY [k8s_cluster] ***************************************************************************************************************************************************************************
2023-07-10 15:14:11,411 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.407)       0:06:07.154 ****** 
2023-07-10 15:14:11,450 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.038)       0:06:07.193 ****** 
2023-07-10 15:14:11,489 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.038)       0:06:07.232 ****** 
2023-07-10 15:14:11,525 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.036)       0:06:07.268 ****** 
2023-07-10 15:14:11,566 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.040)       0:06:07.309 ****** 
2023-07-10 15:14:11,604 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.038)       0:06:07.347 ****** 
2023-07-10 15:14:11,644 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.040)       0:06:07.387 ****** 
2023-07-10 15:14:11,682 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.037)       0:06:07.425 ****** 
2023-07-10 15:14:11,717 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.034)       0:06:07.460 ****** 
2023-07-10 15:14:11,749 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:11 +0300 (0:00:00.032)       0:06:07.492 ****** 
2023-07-10 15:14:13,424 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:01.674)       0:06:09.167 ****** 
2023-07-10 15:14:13,486 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:14:13,487 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:14:13,560 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.136)       0:06:09.303 ****** 
2023-07-10 15:14:13,628 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.067)       0:06:09.371 ****** 
2023-07-10 15:14:13,683 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.055)       0:06:09.426 ****** 
2023-07-10 15:14:13,744 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.060)       0:06:09.487 ****** 
2023-07-10 15:14:13,808 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.064)       0:06:09.551 ****** 
2023-07-10 15:14:13,869 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.060)       0:06:09.612 ****** 
2023-07-10 15:14:13,933 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:13 +0300 (0:00:00.064)       0:06:09.676 ****** 
2023-07-10 15:14:14,119 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Set kubeadm_discovery_address] ************************************************************************************************************************************
2023-07-10 15:14:14,120 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_discovery_address": "192.168.122.29:6443"}, "changed": false}
2023-07-10 15:14:14,133 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:14 +0300 (0:00:00.199)       0:06:09.875 ****** 
2023-07-10 15:14:14,415 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Check if kubelet.conf exists] *************************************************************************************************************************************
2023-07-10 15:14:14,416 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991240.4403322, "block_size": 4096, "blocks": 8, "ctime": 1688991239.8003318, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 287033, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0600", "mtime": 1688991239.8003318, "nlink": 1, "path": "/etc/kubernetes/kubelet.conf", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1977, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:14:14,445 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:14 +0300 (0:00:00.312)       0:06:10.188 ****** 
2023-07-10 15:14:14,733 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Check if kubeadm CA cert is accessible] ***************************************************************************************************************************
2023-07-10 15:14:14,734 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991228.532325, "block_size": 4096, "blocks": 8, "ctime": 1688991228.4883249, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286899, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688991228.4883249, "nlink": 1, "path": "/etc/kubernetes/ssl/ca.crt", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1099, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:14:14,763 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:14 +0300 (0:00:00.318)       0:06:10.506 ****** 
2023-07-10 15:14:15,065 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Calculate kubeadm CA cert hash] ***********************************************************************************************************************************
2023-07-10 15:14:15,066 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && openssl x509 -pubkey -in /etc/kubernetes/ssl/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'", "delta": "0:00:00.014969", "end": "2023-07-10 12:14:15.042499", "msg": "", "rc": 0, "start": "2023-07-10 12:14:15.027530", "stderr": "", "stderr_lines": [], "stdout": "d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79", "stdout_lines": ["d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79"]}
2023-07-10 15:14:15,092 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.329)       0:06:10.835 ****** 
2023-07-10 15:14:15,147 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.054)       0:06:10.890 ****** 
2023-07-10 15:14:15,199 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.052)       0:06:10.942 ****** 
2023-07-10 15:14:15,267 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Set kubeadm api version to v1beta3] *******************************************************************************************************************************
2023-07-10 15:14:15,268 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta3"}, "changed": false}
2023-07-10 15:14:15,282 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.082)       0:06:11.025 ****** 
2023-07-10 15:14:15,329 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.046)       0:06:11.072 ****** 
2023-07-10 15:14:15,381 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.052)       0:06:11.124 ****** 
2023-07-10 15:14:15,434 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.052)       0:06:11.177 ****** 
2023-07-10 15:14:15,483 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.048)       0:06:11.226 ****** 
2023-07-10 15:14:15,536 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.052)       0:06:11.279 ****** 
2023-07-10 15:14:15,614 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:15 +0300 (0:00:00.078)       0:06:11.357 ****** 
2023-07-10 15:14:16,344 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Update server field in kube-proxy kubeconfig] *********************************************************************************************************************
2023-07-10 15:14:16,345 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": "set -o pipefail && /usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf get configmap kube-proxy -n kube-system -o yaml | sed 's#server:.*#server: https://127.0.0.1:6443#g' | /usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf replace -f -", "delta": "0:00:00.294770", "end": "2023-07-10 12:14:16.321268", "msg": "", "rc": 0, "start": "2023-07-10 12:14:16.026498", "stderr": "", "stderr_lines": [], "stdout": "configmap/kube-proxy replaced", "stdout_lines": ["configmap/kube-proxy replaced"]}
2023-07-10 15:14:16,359 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:16 +0300 (0:00:00.744)       0:06:12.102 ****** 
2023-07-10 15:14:16,643 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Set ca.crt file permission] ***************************************************************************************************************************************
2023-07-10 15:14:16,644 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/kubernetes/ssl/ca.crt", "size": 1099, "state": "file", "uid": 0}
2023-07-10 15:14:16,682 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:16 +0300 (0:00:00.323)       0:06:12.425 ****** 
2023-07-10 15:14:17,203 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Restart all kube-proxy pods to ensure that they load the new configmap] *******************************************************************************************
2023-07-10 15:14:17,204 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "delete", "pod", "-n", "kube-system", "-l", "k8s-app=kube-proxy", "--force", "--grace-period=0"], "delta": "0:00:00.093368", "end": "2023-07-10 12:14:17.180696", "msg": "", "rc": 0, "start": "2023-07-10 12:14:17.087328", "stderr": "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.", "stderr_lines": ["Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely."], "stdout": "No resources found", "stdout_lines": ["No resources found"]}
2023-07-10 15:14:17,217 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.534)       0:06:12.960 ****** 
2023-07-10 15:14:17,275 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.058)       0:06:13.018 ****** 
2023-07-10 15:14:17,767 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : Kubernetes Apps | Wait for kube-apiserver] *********************************************************************************************************************
2023-07-10 15:14:17,768 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "fb137f76-5547-4558-a6ef-a915bad2da1b", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:14:17 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 15:14:17,776 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.501)       0:06:13.519 ****** 
2023-07-10 15:14:17,816 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : Set role node label to empty list] *****************************************************************************************************************************
2023-07-10 15:14:17,816 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"role_node_labels": []}, "changed": false}
2023-07-10 15:14:17,825 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.048)       0:06:13.568 ****** 
2023-07-10 15:14:17,858 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.033)       0:06:13.601 ****** 
2023-07-10 15:14:17,899 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : Set inventory node label to empty list] ************************************************************************************************************************
2023-07-10 15:14:17,899 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"inventory_node_labels": []}, "changed": false}
2023-07-10 15:14:17,910 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.051)       0:06:13.652 ****** 
2023-07-10 15:14:17,944 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.034)       0:06:13.687 ****** 
2023-07-10 15:14:17,985 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : debug] *********************************************************************************************************************************************************
2023-07-10 15:14:17,985 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "role_node_labels": []
}
2023-07-10 15:14:17,995 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:17 +0300 (0:00:00.051)       0:06:13.738 ****** 
2023-07-10 15:14:18,036 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : debug] *********************************************************************************************************************************************************
2023-07-10 15:14:18,037 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "inventory_node_labels": []
}
2023-07-10 15:14:18,048 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:18 +0300 (0:00:00.052)       0:06:13.791 ****** 
2023-07-10 15:14:18,082 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:18 +0300 (0:00:00.034)       0:06:13.825 ****** 
2023-07-10 15:14:18,261 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ******************************************************************************************************************************
2023-07-10 15:14:18,262 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:14:18,270 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:18 +0300 (0:00:00.187)       0:06:14.013 ****** 
2023-07-10 15:14:20,927 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/cni : CNI | Copy cni plugins] *******************************************************************************************************************************************
2023-07-10 15:14:20,928 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/opt/cni/bin", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/opt/cni/bin", "-z", "-f", "/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz", "state": "directory", "uid": 0}
2023-07-10 15:14:20,944 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:20 +0300 (0:00:02.674)       0:06:16.687 ****** 
2023-07-10 15:14:20,984 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:20 +0300 (0:00:00.040)       0:06:16.727 ****** 
2023-07-10 15:14:21,022 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.038)       0:06:16.766 ****** 
2023-07-10 15:14:21,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.041)       0:06:16.807 ****** 
2023-07-10 15:14:21,103 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.039)       0:06:16.846 ****** 
2023-07-10 15:14:21,141 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.037)       0:06:16.884 ****** 
2023-07-10 15:14:21,179 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.038)       0:06:16.922 ****** 
2023-07-10 15:14:21,221 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.041)       0:06:16.964 ****** 
2023-07-10 15:14:21,263 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.041)       0:06:17.006 ****** 
2023-07-10 15:14:21,300 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.037)       0:06:17.043 ****** 
2023-07-10 15:14:21,349 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.049)       0:06:17.092 ****** 
2023-07-10 15:14:21,519 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Slurp CNI config] **********************************************************************************************************************************************
2023-07-10 15:14:21,519 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "file not found: /etc/cni/net.d/10-calico.conflist"}
2023-07-10 15:14:21,529 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.179)       0:06:17.272 ****** 
2023-07-10 15:14:21,563 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.033)       0:06:17.306 ****** 
2023-07-10 15:14:21,607 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.044)       0:06:17.350 ****** 
2023-07-10 15:14:21,643 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.035)       0:06:17.386 ****** 
2023-07-10 15:14:21,745 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Gather os specific variables] *************************************************************************************************************************
2023-07-10 15:14:21,745 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml) => {"ansible_facts": {"calico_wireguard_packages": ["wireguard"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/network_plugin/calico/vars/debian.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml"}
2023-07-10 15:14:21,756 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.113)       0:06:17.499 ****** 
2023-07-10 15:14:21,788 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.032)       0:06:17.531 ****** 
2023-07-10 15:14:21,807 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : include_tasks] *************************************************************************************************************************************************
2023-07-10 15:14:21,853 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/network_plugin/calico/tasks/install.yml for node1
2023-07-10 15:14:21,880 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.091)       0:06:17.623 ****** 
2023-07-10 15:14:21,914 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:21 +0300 (0:00:00.034)       0:06:17.657 ****** 
2023-07-10 15:14:23,886 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Copy calicoctl binary from download dir] **************************************************************************************************************
2023-07-10 15:14:23,886 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "bc3f20a899aca3f62451bb7d9b015b9805305216", "dest": "/usr/local/bin/calicoctl", "gid": 0, "group": "root", "md5sum": "9ee5af5751d88e8e52144780db1bc85c", "mode": "0755", "owner": "root", "size": 63789280, "src": "/tmp/releases/calicoctl-v3.25.1-amd64", "state": "file", "uid": 0}
2023-07-10 15:14:23,900 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:23 +0300 (0:00:01.985)       0:06:19.643 ****** 
2023-07-10 15:14:23,946 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:23 +0300 (0:00:00.046)       0:06:19.689 ****** 
2023-07-10 15:14:24,021 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:24 +0300 (0:00:00.074)       0:06:19.764 ****** 
2023-07-10 15:14:24,068 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:24 +0300 (0:00:00.046)       0:06:19.811 ****** 
2023-07-10 15:14:24,118 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:24 +0300 (0:00:00.049)       0:06:19.861 ****** 
2023-07-10 15:14:24,722 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Install calicoctl wrapper script] *********************************************************************************************************************
2023-07-10 15:14:24,722 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "80849706cc7fd83e5d38364f1f00cd0ce675dab4", "dest": "/usr/local/bin/calicoctl.sh", "gid": 0, "group": "root", "md5sum": "371defb497a2ced8846134ded122c45d", "mode": "0755", "owner": "root", "size": 135, "src": "/root/.ansible/tmp/ansible-tmp-1688991264.1961753-19276-46183477026192/source", "state": "file", "uid": 0}
2023-07-10 15:14:24,736 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:24 +0300 (0:00:00.618)       0:06:20.479 ****** 
2023-07-10 15:14:24,783 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:24 +0300 (0:00:00.047)       0:06:20.526 ****** 
2023-07-10 15:14:25,134 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Check if calico network pool has already been configured] *********************************************************************************************
2023-07-10 15:14:25,135 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ippool | grep -w \"10.233.64.0/18\" | wc -l\n", "delta": "0:00:00.059609", "end": "2023-07-10 12:14:25.111448", "msg": "", "rc": 0, "start": "2023-07-10 12:14:25.051839", "stderr": "", "stderr_lines": [], "stdout": "0", "stdout_lines": ["0"]}
2023-07-10 15:14:25,148 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.364)       0:06:20.891 ****** 
2023-07-10 15:14:25,205 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.056)       0:06:20.947 ****** 
2023-07-10 15:14:25,257 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.052)       0:06:21.000 ****** 
2023-07-10 15:14:25,321 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.063)       0:06:21.064 ****** 
2023-07-10 15:14:25,638 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Check if extra directory is needed] *******************************************************************************************************************
2023-07-10 15:14:25,639 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990435.1600134, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "binary", "ctime": 1688990003.8480892, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393281, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "inode/directory", "mode": "0755", "mtime": 1680306051.0, "nlink": 2, "path": "/tmp/releases/calico-v3.25.1-kdd-crds/crd", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "3392280377", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:14:25,652 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.331)       0:06:21.395 ****** 
2023-07-10 15:14:25,704 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.051)       0:06:21.447 ****** 
2023-07-10 15:14:25,812 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kdd path when calico > v3.22.2] *******************************************************************************************************************
2023-07-10 15:14:25,813 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"calico_kdd_path": "/tmp/releases/calico-v3.25.1-kdd-crds/crd"}, "changed": false}
2023-07-10 15:14:25,831 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:25 +0300 (0:00:00.127)       0:06:21.574 ****** 
2023-07-10 15:14:26,364 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create calico manifests for kdd] **********************************************************************************************************************
2023-07-10 15:14:26,365 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "f73078ee458ec8f3f5419c9077bc95a1d2ac072d", "dest": "/etc/kubernetes/kdd-crds.yml", "gid": 0, "group": "root", "md5sum": "23787fd3852984600dc2041ad8065dbf", "mode": "0644", "msg": "OK", "owner": "root", "size": 214511, "src": "/tmp/releases/calico-v3.25.1-kdd-crds/crd", "state": "file", "uid": 0}
2023-07-10 15:14:26,373 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:26 +0300 (0:00:00.542)       0:06:22.116 ****** 
2023-07-10 15:14:27,037 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create Calico Kubernetes datastore resources] *********************************************************************************************************
2023-07-10 15:14:27,037 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "msg": "success: customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created"}
2023-07-10 15:14:27,049 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:27 +0300 (0:00:00.675)       0:06:22.792 ****** 
2023-07-10 15:14:27,285 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Get existing FelixConfiguration] **********************************************************************************************************************
2023-07-10 15:14:27,286 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "felixconfig", "default", "-o", "json"], "delta": "0:00:00.063974", "end": "2023-07-10 12:14:27.274480", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:14:27.210506", "stderr": "resource does not exist: FelixConfiguration(default) with error: felixconfigurations.crd.projectcalico.org \"default\" not found", "stderr_lines": ["resource does not exist: FelixConfiguration(default) with error: felixconfigurations.crd.projectcalico.org \"default\" not found"], "stdout": "null", "stdout_lines": ["null"]}
2023-07-10 15:14:27,286 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:14:27,294 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:27 +0300 (0:00:00.245)       0:06:23.037 ****** 
2023-07-10 15:14:27,339 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kubespray FelixConfiguration] *********************************************************************************************************************
2023-07-10 15:14:27,340 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_felix_config": {"apiVersion": "projectcalico.org/v3", "kind": "FelixConfiguration", "metadata": {"name": "default"}, "spec": {"bpfEnabled": false, "bpfExternalServiceMode": "Tunnel", "bpfLogLevel": "", "featureDetectOverride": "", "floatingIPs": "Disabled", "ipipEnabled": false, "logSeverityScreen": "Info", "reportingInterval": "0s", "vxlanEnabled": true, "wireguardEnabled": false}}}, "changed": false}
2023-07-10 15:14:27,350 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:27 +0300 (0:00:00.055)       0:06:23.093 ****** 
2023-07-10 15:14:27,382 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:27 +0300 (0:00:00.032)       0:06:23.125 ****** 
2023-07-10 15:14:29,601 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Configure calico FelixConfiguration] ******************************************************************************************************************
2023-07-10 15:14:29,601 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "apply", "-f", "-"], "delta": "0:00:02.043091", "end": "2023-07-10 12:14:29.588198", "msg": "", "rc": 0, "start": "2023-07-10 12:14:27.545107", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'FelixConfiguration' resource(s)", "stdout_lines": ["Successfully applied 1 'FelixConfiguration' resource(s)"]}
2023-07-10 15:14:29,610 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:29 +0300 (0:00:02.228)       0:06:25.353 ****** 
2023-07-10 15:14:29,848 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Get existing calico network pool] *********************************************************************************************************************
2023-07-10 15:14:29,848 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ippool", "default-pool", "-o", "json"], "delta": "0:00:00.049125", "end": "2023-07-10 12:14:29.837604", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:14:29.788479", "stderr": "resource does not exist: IPPool(default-pool) with error: ippools.crd.projectcalico.org \"default-pool\" not found", "stderr_lines": ["resource does not exist: IPPool(default-pool) with error: ippools.crd.projectcalico.org \"default-pool\" not found"], "stdout": "null", "stdout_lines": ["null"]}
2023-07-10 15:14:29,848 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:14:29,857 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:29 +0300 (0:00:00.246)       0:06:25.600 ****** 
2023-07-10 15:14:29,914 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kubespray calico network pool] ********************************************************************************************************************
2023-07-10 15:14:29,914 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_calico_pool": {"apiVersion": "projectcalico.org/v3", "kind": "IPPool", "metadata": {"name": "default-pool"}, "spec": {"blockSize": 26, "cidr": "10.233.64.0/18", "ipipMode": "Never", "natOutgoing": true, "vxlanMode": "Always"}}}, "changed": false}
2023-07-10 15:14:29,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:29 +0300 (0:00:00.066)       0:06:25.666 ****** 
2023-07-10 15:14:29,954 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:29 +0300 (0:00:00.030)       0:06:25.696 ****** 
2023-07-10 15:14:30,185 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Configure calico network pool] ************************************************************************************************************************
2023-07-10 15:14:30,185 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "apply", "-f", "-"], "delta": "0:00:00.051383", "end": "2023-07-10 12:14:30.173603", "msg": "", "rc": 0, "start": "2023-07-10 12:14:30.122220", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'IPPool' resource(s)", "stdout_lines": ["Successfully applied 1 'IPPool' resource(s)"]}
2023-07-10 15:14:30,194 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.240)       0:06:25.937 ****** 
2023-07-10 15:14:30,226 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.032)       0:06:25.969 ****** 
2023-07-10 15:14:30,257 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.030)       0:06:26.000 ****** 
2023-07-10 15:14:30,288 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.031)       0:06:26.031 ****** 
2023-07-10 15:14:30,321 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.032)       0:06:26.064 ****** 
2023-07-10 15:14:30,348 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.027)       0:06:26.091 ****** 
2023-07-10 15:14:30,372 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.023)       0:06:26.115 ****** 
2023-07-10 15:14:30,422 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.050)       0:06:26.166 ****** 
2023-07-10 15:14:30,636 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Get existing BGP Configuration] ***********************************************************************************************************************
2023-07-10 15:14:30,637 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "bgpconfig", "default", "-o", "json"], "delta": "0:00:00.046435", "end": "2023-07-10 12:14:30.626058", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:14:30.579623", "stderr": "resource does not exist: BGPConfiguration(default) with error: bgpconfigurations.crd.projectcalico.org \"default\" not found", "stderr_lines": ["resource does not exist: BGPConfiguration(default) with error: bgpconfigurations.crd.projectcalico.org \"default\" not found"], "stdout": "null", "stdout_lines": ["null"]}
2023-07-10 15:14:30,637 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:14:30,645 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.222)       0:06:26.388 ****** 
2023-07-10 15:14:30,711 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kubespray BGP Configuration] **********************************************************************************************************************
2023-07-10 15:14:30,711 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_bgp_config": {"apiVersion": "projectcalico.org/v3", "kind": "BGPConfiguration", "metadata": {"name": "default"}, "spec": {"asNumber": 64512, "listenPort": 179, "logSeverityScreen": "Info", "nodeToNodeMeshEnabled": true, "serviceExternalIPs": []}}}, "changed": false}
2023-07-10 15:14:30,720 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.074)       0:06:26.463 ****** 
2023-07-10 15:14:30,752 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.031)       0:06:26.495 ****** 
2023-07-10 15:14:30,964 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set up BGP Configuration] *****************************************************************************************************************************
2023-07-10 15:14:30,964 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "apply", "-f", "-"], "delta": "0:00:00.035628", "end": "2023-07-10 12:14:30.951583", "msg": "", "rc": 0, "start": "2023-07-10 12:14:30.915955", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'BGPConfiguration' resource(s)", "stdout_lines": ["Successfully applied 1 'BGPConfiguration' resource(s)"]}
2023-07-10 15:14:30,973 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:30 +0300 (0:00:00.221)       0:06:26.716 ****** 
2023-07-10 15:14:31,430 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create calico manifests] ******************************************************************************************************************************
2023-07-10 15:14:31,431 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "c665a33330ebee474eebe35c10a28d91c8535cd8", "dest": "/etc/kubernetes/calico-config.yml", "gid": 0, "group": "root", "item": {"file": "calico-config.yml", "name": "calico-config", "type": "cm"}, "md5sum": "b2785b8bcd9333e9b6186a9af010a99e", "mode": "0644", "owner": "root", "size": 1290, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.027194-19388-257334767225907/source", "state": "file", "uid": 0}
2023-07-10 15:14:31,839 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "4b4f2b7440bcce08026d388a931dd3c98e19f805", "dest": "/etc/kubernetes/calico-node.yml", "gid": 0, "group": "root", "item": {"file": "calico-node.yml", "name": "calico-node", "type": "ds"}, "md5sum": "326f0ac2da30d6c91e86b8653da6ccef", "mode": "0644", "owner": "root", "size": 11092, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.456976-19388-37891193894750/source", "state": "file", "uid": 0}
2023-07-10 15:14:32,186 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "a0486f717ae24476c480c8d36d7a739feb82a979", "dest": "/etc/kubernetes/calico-node-sa.yml", "gid": 0, "group": "root", "item": {"file": "calico-node-sa.yml", "name": "calico", "type": "sa"}, "md5sum": "b66d889f1dc1feab539f21f551d181cb", "mode": "0644", "owner": "root", "size": 95, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.8693476-19388-267501220556501/source", "state": "file", "uid": 0}
2023-07-10 15:14:32,548 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "28de303dfe4af1f78570be095b5a713fe078eeee", "dest": "/etc/kubernetes/calico-cr.yml", "gid": 0, "group": "root", "item": {"file": "calico-cr.yml", "name": "calico", "type": "clusterrole"}, "md5sum": "5310dff476206308ccc09549f088e91d", "mode": "0644", "owner": "root", "size": 3625, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.2282546-19388-273065361893580/source", "state": "file", "uid": 0}
2023-07-10 15:14:32,894 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "f7cf2e3bcd232f0a5ef12f1f47b7c70af7c9f5c1", "dest": "/etc/kubernetes/calico-crb.yml", "gid": 0, "group": "root", "item": {"file": "calico-crb.yml", "name": "calico", "type": "clusterrolebinding"}, "md5sum": "e74e2bf3ece316e2f7f1a54accd2001f", "mode": "0644", "owner": "root", "size": 265, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.5773706-19388-252127801303582/source", "state": "file", "uid": 0}
2023-07-10 15:14:33,294 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'kubernetes-services-endpoint', 'file': 'kubernetes-services-endpoint.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "9f82492c750fb008b548336fad4f5bad3020aa07", "dest": "/etc/kubernetes/kubernetes-services-endpoint.yml", "gid": 0, "group": "root", "item": {"file": "kubernetes-services-endpoint.yml", "name": "kubernetes-services-endpoint", "type": "cm"}, "md5sum": "7271fb7c8236596e81d660a8d0eb71c7", "mode": "0644", "owner": "root", "size": 113, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.9241924-19388-69509195351474/source", "state": "file", "uid": 0}
2023-07-10 15:14:33,306 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:33 +0300 (0:00:02.332)       0:06:29.049 ****** 
2023-07-10 15:14:33,345 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:33 +0300 (0:00:00.039)       0:06:29.088 ****** 
2023-07-10 15:14:33,376 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:33 +0300 (0:00:00.031)       0:06:29.119 ****** 
2023-07-10 15:14:33,407 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:33 +0300 (0:00:00.031)       0:06:29.150 ****** 
2023-07-10 15:14:33,443 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:33 +0300 (0:00:00.035)       0:06:29.186 ****** 
2023-07-10 15:14:34,231 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Start Calico resources] ****************************************************************************************************************************************
2023-07-10 15:14:34,231 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-config.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "c665a33330ebee474eebe35c10a28d91c8535cd8", "dest": "/etc/kubernetes/calico-config.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-config.yml.j2", "attributes": null, "backup": false, "checksum": "c665a33330ebee474eebe35c10a28d91c8535cd8", "content": null, "dest": "/etc/kubernetes/calico-config.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.027194-19388-257334767225907/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-config.yml", "name": "calico-config", "type": "cm"}, "md5sum": "b2785b8bcd9333e9b6186a9af010a99e", "mode": "0644", "owner": "root", "size": 1290, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.027194-19388-257334767225907/source", "state": "file", "uid": 0}, "msg": "success: configmap/calico-config created"}
2023-07-10 15:14:34,551 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-node.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "4b4f2b7440bcce08026d388a931dd3c98e19f805", "dest": "/etc/kubernetes/calico-node.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-node.yml.j2", "attributes": null, "backup": false, "checksum": "4b4f2b7440bcce08026d388a931dd3c98e19f805", "content": null, "dest": "/etc/kubernetes/calico-node.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.456976-19388-37891193894750/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-node.yml", "name": "calico-node", "type": "ds"}, "md5sum": "326f0ac2da30d6c91e86b8653da6ccef", "mode": "0644", "owner": "root", "size": 11092, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.456976-19388-37891193894750/source", "state": "file", "uid": 0}, "msg": "success: daemonset.apps/calico-node created"}
2023-07-10 15:14:34,862 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-node-sa.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "a0486f717ae24476c480c8d36d7a739feb82a979", "dest": "/etc/kubernetes/calico-node-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-node-sa.yml.j2", "attributes": null, "backup": false, "checksum": "a0486f717ae24476c480c8d36d7a739feb82a979", "content": null, "dest": "/etc/kubernetes/calico-node-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.8693476-19388-267501220556501/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-node-sa.yml", "name": "calico", "type": "sa"}, "md5sum": "b66d889f1dc1feab539f21f551d181cb", "mode": "0644", "owner": "root", "size": 95, "src": "/root/.ansible/tmp/ansible-tmp-1688991271.8693476-19388-267501220556501/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/calico-node created"}
2023-07-10 15:14:35,159 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-cr.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "28de303dfe4af1f78570be095b5a713fe078eeee", "dest": "/etc/kubernetes/calico-cr.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-cr.yml.j2", "attributes": null, "backup": false, "checksum": "28de303dfe4af1f78570be095b5a713fe078eeee", "content": null, "dest": "/etc/kubernetes/calico-cr.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.2282546-19388-273065361893580/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-cr.yml", "name": "calico", "type": "clusterrole"}, "md5sum": "5310dff476206308ccc09549f088e91d", "mode": "0644", "owner": "root", "size": 3625, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.2282546-19388-273065361893580/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/calico-node created"}
2023-07-10 15:14:35,462 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-crb.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "f7cf2e3bcd232f0a5ef12f1f47b7c70af7c9f5c1", "dest": "/etc/kubernetes/calico-crb.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-crb.yml.j2", "attributes": null, "backup": false, "checksum": "f7cf2e3bcd232f0a5ef12f1f47b7c70af7c9f5c1", "content": null, "dest": "/etc/kubernetes/calico-crb.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.5773706-19388-252127801303582/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-crb.yml", "name": "calico", "type": "clusterrolebinding"}, "md5sum": "e74e2bf3ece316e2f7f1a54accd2001f", "mode": "0644", "owner": "root", "size": 265, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.5773706-19388-252127801303582/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/calico-node created"}
2023-07-10 15:14:35,757 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=kubernetes-services-endpoint.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "9f82492c750fb008b548336fad4f5bad3020aa07", "dest": "/etc/kubernetes/kubernetes-services-endpoint.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "kubernetes-services-endpoint.yml.j2", "attributes": null, "backup": false, "checksum": "9f82492c750fb008b548336fad4f5bad3020aa07", "content": null, "dest": "/etc/kubernetes/kubernetes-services-endpoint.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.9241924-19388-69509195351474/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "kubernetes-services-endpoint.yml", "name": "kubernetes-services-endpoint", "type": "cm"}, "md5sum": "7271fb7c8236596e81d660a8d0eb71c7", "mode": "0644", "owner": "root", "size": 113, "src": "/root/.ansible/tmp/ansible-tmp-1688991272.9241924-19388-69509195351474/source", "state": "file", "uid": 0}, "msg": "success: configmap/kubernetes-services-endpoint created"}
2023-07-10 15:14:35,772 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:35 +0300 (0:00:02.329)       0:06:31.515 ****** 
2023-07-10 15:14:35,809 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:35 +0300 (0:00:00.037)       0:06:31.552 ****** 
2023-07-10 15:14:35,841 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:35 +0300 (0:00:00.031)       0:06:31.584 ****** 
2023-07-10 15:14:36,223 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create Calico ipam manifests] *************************************************************************************************************************
2023-07-10 15:14:36,224 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico', 'file': 'calico-ipamconfig.yml', 'type': 'ipam'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "c896a85b4dd7f3b156122af21e4f600852040cbc", "dest": "/etc/kubernetes/calico-ipamconfig.yml", "gid": 0, "group": "root", "item": {"file": "calico-ipamconfig.yml", "name": "calico", "type": "ipam"}, "md5sum": "de0fbd835c3b0439f37c120b112a002b", "mode": "0644", "owner": "root", "size": 159, "src": "/root/.ansible/tmp/ansible-tmp-1688991275.8957205-19508-217438036483131/source", "state": "file", "uid": 0}
2023-07-10 15:14:36,234 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.393)       0:06:31.977 ****** 
2023-07-10 15:14:36,582 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create ipamconfig resources] **************************************************************************************************************************
2023-07-10 15:14:36,583 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "msg": "success: ipamconfig.crd.projectcalico.org/default created"}
2023-07-10 15:14:36,592 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.357)       0:06:32.334 ****** 
2023-07-10 15:14:36,635 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.043)       0:06:32.378 ****** 
2023-07-10 15:14:36,679 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.043)       0:06:32.422 ****** 
2023-07-10 15:14:36,705 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.025)       0:06:32.448 ****** 
2023-07-10 15:14:36,754 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.049)       0:06:32.497 ****** 
2023-07-10 15:14:36,781 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.027)       0:06:32.524 ****** 
2023-07-10 15:14:36,828 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.046)       0:06:32.571 ****** 
2023-07-10 15:14:36,857 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.029)       0:06:32.600 ****** 
2023-07-10 15:14:36,884 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.027)       0:06:32.627 ****** 
2023-07-10 15:14:36,914 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.029)       0:06:32.657 ****** 
2023-07-10 15:14:36,942 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.027)       0:06:32.685 ****** 
2023-07-10 15:14:36,971 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:36 +0300 (0:00:00.029)       0:06:32.714 ****** 
2023-07-10 15:14:37,019 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.047)       0:06:32.762 ****** 
2023-07-10 15:14:37,045 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.026)       0:06:32.788 ****** 
2023-07-10 15:14:37,088 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.043)       0:06:32.831 ****** 
2023-07-10 15:14:37,119 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.031)       0:06:32.862 ****** 
2023-07-10 15:14:37,157 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.037)       0:06:32.900 ****** 
2023-07-10 15:14:37,204 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.046)       0:06:32.947 ****** 
2023-07-10 15:14:37,231 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.026)       0:06:32.974 ****** 
2023-07-10 15:14:37,261 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.029)       0:06:33.004 ****** 
2023-07-10 15:14:37,295 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.034)       0:06:33.038 ****** 
2023-07-10 15:14:37,329 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.033)       0:06:33.072 ****** 
2023-07-10 15:14:37,382 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.053)       0:06:33.125 ****** 
2023-07-10 15:14:37,411 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.028)       0:06:33.154 ****** 
2023-07-10 15:14:37,439 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.028)       0:06:33.182 ****** 
2023-07-10 15:14:37,467 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.027)       0:06:33.210 ****** 
2023-07-10 15:14:37,496 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.029)       0:06:33.239 ****** 
2023-07-10 15:14:37,526 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.029)       0:06:33.269 ****** 
2023-07-10 15:14:37,557 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.030)       0:06:33.300 ****** 
2023-07-10 15:14:37,585 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.028)       0:06:33.328 ****** 
2023-07-10 15:14:37,614 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.028)       0:06:33.356 ****** 
2023-07-10 15:14:37,641 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.027)       0:06:33.384 ****** 
2023-07-10 15:14:37,683 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.042)       0:06:33.426 ****** 
2023-07-10 15:14:37,730 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.046)       0:06:33.473 ****** 
2023-07-10 15:14:37,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.029)       0:06:33.502 ****** 
2023-07-10 15:14:37,786 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.027)       0:06:33.529 ****** 
2023-07-10 15:14:37,819 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.032)       0:06:33.562 ****** 
2023-07-10 15:14:37,870 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.050)       0:06:33.613 ****** 
2023-07-10 15:14:37,909 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.039)       0:06:33.652 ****** 
2023-07-10 15:14:37,967 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:37 +0300 (0:00:00.057)       0:06:33.710 ****** 
2023-07-10 15:14:38,054 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.087)       0:06:33.797 ****** 
2023-07-10 15:14:38,084 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.030)       0:06:33.827 ****** 
2023-07-10 15:14:38,117 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.032)       0:06:33.860 ****** 
2023-07-10 15:14:38,146 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.029)       0:06:33.889 ****** 
2023-07-10 15:14:38,177 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.031)       0:06:33.920 ****** 
2023-07-10 15:14:38,207 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.029)       0:06:33.950 ****** 
2023-07-10 15:14:38,250 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.042)       0:06:33.993 ****** 
2023-07-10 15:14:38,287 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.036)       0:06:34.030 ****** 
2023-07-10 15:14:38,323 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.036)       0:06:34.066 ****** 
2023-07-10 15:14:38,352 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.028)       0:06:34.095 ****** 
2023-07-10 15:14:38,425 p=14511 u=kubernetmachine n=ansible | PLAY [calico_rr] *****************************************************************************************************************************************************************************
2023-07-10 15:14:38,425 p=14511 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:14:38,427 p=14511 u=kubernetmachine n=ansible | PLAY [kube_control_plane[0]] *****************************************************************************************************************************************************************
2023-07-10 15:14:38,461 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.108)       0:06:34.204 ****** 
2023-07-10 15:14:38,505 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.044)       0:06:34.248 ****** 
2023-07-10 15:14:38,543 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.038)       0:06:34.286 ****** 
2023-07-10 15:14:38,579 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.036)       0:06:34.322 ****** 
2023-07-10 15:14:38,615 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.035)       0:06:34.358 ****** 
2023-07-10 15:14:38,652 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.037)       0:06:34.395 ****** 
2023-07-10 15:14:38,689 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.037)       0:06:34.432 ****** 
2023-07-10 15:14:38,728 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.038)       0:06:34.471 ****** 
2023-07-10 15:14:38,765 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.036)       0:06:34.508 ****** 
2023-07-10 15:14:38,801 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:38 +0300 (0:00:00.035)       0:06:34.544 ****** 
2023-07-10 15:14:41,611 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:41 +0300 (0:00:02.809)       0:06:37.353 ****** 
2023-07-10 15:14:41,678 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:14:41,679 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:14:41,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:41 +0300 (0:00:00.148)       0:06:37.502 ****** 
2023-07-10 15:14:41,837 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:41 +0300 (0:00:00.078)       0:06:37.580 ****** 
2023-07-10 15:14:41,911 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:41 +0300 (0:00:00.073)       0:06:37.654 ****** 
2023-07-10 15:14:41,991 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:41 +0300 (0:00:00.079)       0:06:37.734 ****** 
2023-07-10 15:14:42,062 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:42 +0300 (0:00:00.070)       0:06:37.805 ****** 
2023-07-10 15:14:42,131 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:42 +0300 (0:00:00.069)       0:06:37.874 ****** 
2023-07-10 15:14:42,214 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:42 +0300 (0:00:00.082)       0:06:37.957 ****** 
2023-07-10 15:14:42,633 p=14511 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : Ensure that user manifests directory exists] **************************************************************************************************************
2023-07-10 15:14:42,634 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/root/kube-manifests/kubernetes", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:14:42,647 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:42 +0300 (0:00:00.432)       0:06:38.390 ****** 
2023-07-10 15:14:43,154 p=14511 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : Check current nodeselector for kube-proxy daemonset] ******************************************************************************************************
2023-07-10 15:14:43,155 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "ds", "kube-proxy", "--namespace=kube-system", "-o", "jsonpath={.spec.template.spec.nodeSelector.kubernetes.io/os}"], "delta": "0:00:00.110794", "end": "2023-07-10 12:14:43.121056", "msg": "", "rc": 0, "start": "2023-07-10 12:14:43.010262", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:14:43,169 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:43 +0300 (0:00:00.522)       0:06:38.912 ****** 
2023-07-10 15:14:43,679 p=14511 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : Apply nodeselector patch for kube-proxy daemonset] ********************************************************************************************************
2023-07-10 15:14:43,680 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "patch", "ds", "kube-proxy", "--namespace=kube-system", "--type=strategic", "-p", "{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"} }}}}"], "delta": "0:00:00.083656", "end": "2023-07-10 12:14:43.665609", "msg": "", "rc": 0, "start": "2023-07-10 12:14:43.581953", "stderr": "", "stderr_lines": [], "stdout": "daemonset.apps/kube-proxy patched (no change)", "stdout_lines": ["daemonset.apps/kube-proxy patched (no change)"]}
2023-07-10 15:14:43,689 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:43 +0300 (0:00:00.519)       0:06:39.432 ****** 
2023-07-10 15:14:43,767 p=14511 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : debug] ****************************************************************************************************************************************************
2023-07-10 15:14:43,768 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": [
        "daemonset.apps/kube-proxy patched (no change)"
    ]
}
2023-07-10 15:14:43,778 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:43 +0300 (0:00:00.088)       0:06:39.521 ****** 
2023-07-10 15:14:43,867 p=14511 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : debug] ****************************************************************************************************************************************************
2023-07-10 15:14:43,868 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": []
}
2023-07-10 15:14:43,913 p=14511 u=kubernetmachine n=ansible | PLAY [kube_control_plane] ********************************************************************************************************************************************************************
2023-07-10 15:14:44,058 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.279)       0:06:39.801 ****** 
2023-07-10 15:14:44,098 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.040)       0:06:39.841 ****** 
2023-07-10 15:14:44,142 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.043)       0:06:39.885 ****** 
2023-07-10 15:14:44,181 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.039)       0:06:39.924 ****** 
2023-07-10 15:14:44,219 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.037)       0:06:39.962 ****** 
2023-07-10 15:14:44,263 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.043)       0:06:40.006 ****** 
2023-07-10 15:14:44,300 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.037)       0:06:40.043 ****** 
2023-07-10 15:14:44,339 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.038)       0:06:40.082 ****** 
2023-07-10 15:14:44,376 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.037)       0:06:40.119 ****** 
2023-07-10 15:14:44,417 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:44 +0300 (0:00:00.040)       0:06:40.160 ****** 
2023-07-10 15:14:46,354 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:01.936)       0:06:42.097 ****** 
2023-07-10 15:14:46,393 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:14:46,393 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:14:46,505 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.151)       0:06:42.248 ****** 
2023-07-10 15:14:46,555 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.050)       0:06:42.298 ****** 
2023-07-10 15:14:46,594 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.039)       0:06:42.337 ****** 
2023-07-10 15:14:46,636 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.041)       0:06:42.379 ****** 
2023-07-10 15:14:46,674 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.038)       0:06:42.417 ****** 
2023-07-10 15:14:46,717 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.042)       0:06:42.460 ****** 
2023-07-10 15:14:46,759 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.041)       0:06:42.502 ****** 
2023-07-10 15:14:46,790 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.031)       0:06:42.533 ****** 
2023-07-10 15:14:46,826 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.035)       0:06:42.569 ****** 
2023-07-10 15:14:46,859 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.032)       0:06:42.601 ****** 
2023-07-10 15:14:46,917 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.058)       0:06:42.660 ****** 
2023-07-10 15:14:46,986 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:46 +0300 (0:00:00.068)       0:06:42.729 ****** 
2023-07-10 15:14:47,018 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.032)       0:06:42.761 ****** 
2023-07-10 15:14:47,054 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.036)       0:06:42.797 ****** 
2023-07-10 15:14:47,113 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.058)       0:06:42.856 ****** 
2023-07-10 15:14:47,145 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.032)       0:06:42.888 ****** 
2023-07-10 15:14:47,182 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.036)       0:06:42.925 ****** 
2023-07-10 15:14:47,254 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.071)       0:06:42.997 ****** 
2023-07-10 15:14:47,286 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.032)       0:06:43.029 ****** 
2023-07-10 15:14:47,343 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.056)       0:06:43.086 ****** 
2023-07-10 15:14:47,382 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.038)       0:06:43.125 ****** 
2023-07-10 15:14:47,419 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.036)       0:06:43.162 ****** 
2023-07-10 15:14:47,476 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.057)       0:06:43.219 ****** 
2023-07-10 15:14:47,502 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.026)       0:06:43.245 ****** 
2023-07-10 15:14:47,556 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.053)       0:06:43.299 ****** 
2023-07-10 15:14:47,607 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.050)       0:06:43.349 ****** 
2023-07-10 15:14:47,721 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.114)       0:06:43.464 ****** 
2023-07-10 15:14:47,802 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:47 +0300 (0:00:00.081)       0:06:43.545 ****** 
2023-07-10 15:14:48,313 p=14511 u=kubernetmachine n=ansible | TASK [policy_controller/calico : Create calico-kube-controllers manifests] *******************************************************************************************************************
2023-07-10 15:14:48,314 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-controllers.yml', 'type': 'deployment'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "d2db5b321f4dac41d1edf44660b6dfceacd1bb80", "dest": "/etc/kubernetes/calico-kube-controllers.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-controllers.yml", "name": "calico-kube-controllers", "type": "deployment"}, "md5sum": "0834d9dd276999b6239532fafb27bbbc", "mode": "0644", "owner": "root", "size": 1656, "src": "/root/.ansible/tmp/ansible-tmp-1688991287.8769321-19762-260948027534356/source", "state": "file", "uid": 0}
2023-07-10 15:14:48,719 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "468d0809606571a9cf437d6f6e15f9ee1b372940", "dest": "/etc/kubernetes/calico-kube-sa.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-sa.yml", "name": "calico-kube-controllers", "type": "sa"}, "md5sum": "b0fdcaf547f95776c6bc705429bb94b5", "mode": "0644", "owner": "root", "size": 107, "src": "/root/.ansible/tmp/ansible-tmp-1688991288.3505943-19762-177381653918625/source", "state": "file", "uid": 0}
2023-07-10 15:14:49,086 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-cr.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "7e05b7fa4c9e581eb01e485bb6d3cae327031abf", "dest": "/etc/kubernetes/calico-kube-cr.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-cr.yml", "name": "calico-kube-controllers", "type": "clusterrole"}, "md5sum": "8e42eab3600f47a3759e63ee009a55d6", "mode": "0644", "owner": "root", "size": 1733, "src": "/root/.ansible/tmp/ansible-tmp-1688991288.7564738-19762-263708696377813/source", "state": "file", "uid": 0}
2023-07-10 15:14:49,441 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-crb.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "c53baef2dd6c15731acf1f9cb1a61f3d51cd7335", "dest": "/etc/kubernetes/calico-kube-crb.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-crb.yml", "name": "calico-kube-controllers", "type": "clusterrolebinding"}, "md5sum": "f378afa40f83da850197735bf0881ecf", "mode": "0644", "owner": "root", "size": 301, "src": "/root/.ansible/tmp/ansible-tmp-1688991289.124501-19762-176444323365654/source", "state": "file", "uid": 0}
2023-07-10 15:14:49,454 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:49 +0300 (0:00:01.651)       0:06:45.197 ****** 
2023-07-10 15:14:49,818 p=14511 u=kubernetmachine n=ansible | TASK [policy_controller/calico : Start of Calico kube controllers] ***************************************************************************************************************************
2023-07-10 15:14:49,819 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-controllers.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "d2db5b321f4dac41d1edf44660b6dfceacd1bb80", "dest": "/etc/kubernetes/calico-kube-controllers.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-controllers.yml.j2", "attributes": null, "backup": false, "checksum": "d2db5b321f4dac41d1edf44660b6dfceacd1bb80", "content": null, "dest": "/etc/kubernetes/calico-kube-controllers.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991287.8769321-19762-260948027534356/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-kube-controllers.yml", "name": "calico-kube-controllers", "type": "deployment"}, "md5sum": "0834d9dd276999b6239532fafb27bbbc", "mode": "0644", "owner": "root", "size": 1656, "src": "/root/.ansible/tmp/ansible-tmp-1688991287.8769321-19762-260948027534356/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/calico-kube-controllers created"}
2023-07-10 15:14:50,118 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "468d0809606571a9cf437d6f6e15f9ee1b372940", "dest": "/etc/kubernetes/calico-kube-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-sa.yml.j2", "attributes": null, "backup": false, "checksum": "468d0809606571a9cf437d6f6e15f9ee1b372940", "content": null, "dest": "/etc/kubernetes/calico-kube-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991288.3505943-19762-177381653918625/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-kube-sa.yml", "name": "calico-kube-controllers", "type": "sa"}, "md5sum": "b0fdcaf547f95776c6bc705429bb94b5", "mode": "0644", "owner": "root", "size": 107, "src": "/root/.ansible/tmp/ansible-tmp-1688991288.3505943-19762-177381653918625/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/calico-kube-controllers created"}
2023-07-10 15:14:50,445 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-cr.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "7e05b7fa4c9e581eb01e485bb6d3cae327031abf", "dest": "/etc/kubernetes/calico-kube-cr.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-cr.yml.j2", "attributes": null, "backup": false, "checksum": "7e05b7fa4c9e581eb01e485bb6d3cae327031abf", "content": null, "dest": "/etc/kubernetes/calico-kube-cr.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991288.7564738-19762-263708696377813/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-kube-cr.yml", "name": "calico-kube-controllers", "type": "clusterrole"}, "md5sum": "8e42eab3600f47a3759e63ee009a55d6", "mode": "0644", "owner": "root", "size": 1733, "src": "/root/.ansible/tmp/ansible-tmp-1688991288.7564738-19762-263708696377813/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created"}
2023-07-10 15:14:50,909 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-crb.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "c53baef2dd6c15731acf1f9cb1a61f3d51cd7335", "dest": "/etc/kubernetes/calico-kube-crb.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "calico-kube-crb.yml.j2", "attributes": null, "backup": false, "checksum": "c53baef2dd6c15731acf1f9cb1a61f3d51cd7335", "content": null, "dest": "/etc/kubernetes/calico-kube-crb.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991289.124501-19762-176444323365654/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "calico-kube-crb.yml", "name": "calico-kube-controllers", "type": "clusterrolebinding"}, "md5sum": "f378afa40f83da850197735bf0881ecf", "mode": "0644", "owner": "root", "size": 301, "src": "/root/.ansible/tmp/ansible-tmp-1688991289.124501-19762-176444323365654/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created"}
2023-07-10 15:14:50,940 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:50 +0300 (0:00:01.486)       0:06:46.683 ****** 
2023-07-10 15:14:51,147 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create addon dir] ****************************************************************************************
2023-07-10 15:14:51,147 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:14:51,157 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:51 +0300 (0:00:00.216)       0:06:46.900 ****** 
2023-07-10 15:14:51,200 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Templates list] ******************************************************************************************
2023-07-10 15:14:51,200 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ingress_nginx_templates": [{"file": "00-namespace.yml", "name": "00-namespace", "type": "ns"}, {"file": "cm-ingress-nginx.yml", "name": "cm-ingress-nginx", "type": "cm"}, {"file": "cm-tcp-services.yml", "name": "cm-tcp-services", "type": "cm"}, {"file": "cm-udp-services.yml", "name": "cm-udp-services", "type": "cm"}, {"file": "sa-ingress-nginx.yml", "name": "sa-ingress-nginx", "type": "sa"}, {"file": "clusterrole-ingress-nginx.yml", "name": "clusterrole-ingress-nginx", "type": "clusterrole"}, {"file": "clusterrolebinding-ingress-nginx.yml", "name": "clusterrolebinding-ingress-nginx", "type": "clusterrolebinding"}, {"file": "role-ingress-nginx.yml", "name": "role-ingress-nginx", "type": "role"}, {"file": "rolebinding-ingress-nginx.yml", "name": "rolebinding-ingress-nginx", "type": "rolebinding"}, {"file": "ingressclass-nginx.yml", "name": "ingressclass-nginx", "type": "ingressclass"}, {"file": "ds-ingress-nginx-controller.yml", "name": "ds-ingress-nginx-controller", "type": "ds"}], "ingress_nginx_templates_for_webhook": [{"file": "admission-webhook-configuration.yml", "name": "admission-webhook-configuration", "type": "sa"}, {"file": "sa-admission-webhook.yml", "name": "sa-admission-webhook", "type": "sa"}, {"file": "clusterrole-admission-webhook.yml", "name": "clusterrole-admission-webhook", "type": "clusterrole"}, {"file": "clusterrolebinding-admission-webhook.yml", "name": "clusterrolebinding-admission-webhook", "type": "clusterrolebinding"}, {"file": "role-admission-webhook.yml", "name": "role-admission-webhook", "type": "role"}, {"file": "rolebinding-admission-webhook.yml", "name": "rolebinding-admission-webhook", "type": "rolebinding"}, {"file": "admission-webhook-job.yml", "name": "admission-webhook-job", "type": "job"}]}, "changed": false}
2023-07-10 15:14:51,212 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:51 +0300 (0:00:00.055)       0:06:46.955 ****** 
2023-07-10 15:14:51,243 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:51 +0300 (0:00:00.030)       0:06:46.986 ****** 
2023-07-10 15:14:51,643 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create manifests] ****************************************************************************************
2023-07-10 15:14:51,644 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': '00-namespace', 'file': '00-namespace.yml', 'type': 'ns'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "ec784415eedb3d4acdc596120302f03ba1597d6c", "dest": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "gid": 0, "group": "root", "item": {"file": "00-namespace.yml", "name": "00-namespace", "type": "ns"}, "md5sum": "90b291f08b5285243675dd014915f424", "mode": "0644", "owner": "root", "size": 101, "src": "/root/.ansible/tmp/ansible-tmp-1688991291.2970667-19845-56695853603654/source", "state": "file", "uid": 0}
2023-07-10 15:14:52,003 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'cm-ingress-nginx', 'file': 'cm-ingress-nginx.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "21abafe1642e803c0dc8f42d517ac042aacb8758", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "cm-ingress-nginx.yml", "name": "cm-ingress-nginx", "type": "cm"}, "md5sum": "e7d720080f3e5e7a3e75fcaa826250d5", "mode": "0644", "owner": "root", "size": 191, "src": "/root/.ansible/tmp/ansible-tmp-1688991291.672029-19845-118454727367839/source", "state": "file", "uid": 0}
2023-07-10 15:14:52,349 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'cm-tcp-services', 'file': 'cm-tcp-services.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "73fadd9dc75443c74ec6fb32c3af0d6ee5e74725", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "gid": 0, "group": "root", "item": {"file": "cm-tcp-services.yml", "name": "cm-tcp-services", "type": "cm"}, "md5sum": "e89dc1c71a18a81e8cfd1d8c34c6cb9c", "mode": "0644", "owner": "root", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.0310047-19845-6093809250436/source", "state": "file", "uid": 0}
2023-07-10 15:14:52,700 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'cm-udp-services', 'file': 'cm-udp-services.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "d27cbf4031b2499e503d3543f8686db88e6a7b89", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "gid": 0, "group": "root", "item": {"file": "cm-udp-services.yml", "name": "cm-udp-services", "type": "cm"}, "md5sum": "141e0f3d41ca9f173c181700d5e508b0", "mode": "0644", "owner": "root", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.3773994-19845-16472254666485/source", "state": "file", "uid": 0}
2023-07-10 15:14:53,052 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'sa-ingress-nginx', 'file': 'sa-ingress-nginx.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "7dc36b670e034bcc62169c0235b180dbab4a29cc", "dest": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "sa-ingress-nginx.yml", "name": "sa-ingress-nginx", "type": "sa"}, "md5sum": "b09c8d35e9800c7f8d13b3191c14f148", "mode": "0644", "owner": "root", "size": 196, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.7277017-19845-94580842718629/source", "state": "file", "uid": 0}
2023-07-10 15:14:53,406 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'clusterrole-ingress-nginx', 'file': 'clusterrole-ingress-nginx.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "2d4cb86860884294a6f030640a68b0ce76dba4cc", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "clusterrole-ingress-nginx.yml", "name": "clusterrole-ingress-nginx", "type": "clusterrole"}, "md5sum": "bac3a7303da6847bb92677914601d04c", "mode": "0644", "owner": "root", "size": 1075, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.0804226-19845-252468439967363/source", "state": "file", "uid": 0}
2023-07-10 15:14:53,753 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'clusterrolebinding-ingress-nginx', 'file': 'clusterrolebinding-ingress-nginx.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "b398b84183957c90a208c29444b00c4443aa282e", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "clusterrolebinding-ingress-nginx.yml", "name": "clusterrolebinding-ingress-nginx", "type": "clusterrolebinding"}, "md5sum": "a9d598715fa4a61630c9df4278690840", "mode": "0644", "owner": "root", "size": 376, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.430092-19845-161079990756344/source", "state": "file", "uid": 0}
2023-07-10 15:14:54,104 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'role-ingress-nginx', 'file': 'role-ingress-nginx.yml', 'type': 'role'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "e6ed8e57add454469f73b46d916a2d57e08aae2c", "dest": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "role-ingress-nginx.yml", "name": "role-ingress-nginx", "type": "role"}, "md5sum": "d903b66972300b0cc727232f93de28b9", "mode": "0644", "owner": "root", "size": 1784, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.7787392-19845-33051237028047/source", "state": "file", "uid": 0}
2023-07-10 15:14:54,458 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'rolebinding-ingress-nginx', 'file': 'rolebinding-ingress-nginx.yml', 'type': 'rolebinding'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "784d7187b8125dbe6750d2186613dd24343bdf8b", "dest": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "rolebinding-ingress-nginx.yml", "name": "rolebinding-ingress-nginx", "type": "rolebinding"}, "md5sum": "a2179bc791155f445f93dd597fa8993c", "mode": "0644", "owner": "root", "size": 389, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.1297545-19845-3953501368328/source", "state": "file", "uid": 0}
2023-07-10 15:14:54,810 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'ingressclass-nginx', 'file': 'ingressclass-nginx.yml', 'type': 'ingressclass'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "ec7007c44829fc7ff2e076db13f169e9bc1c370e", "dest": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "gid": 0, "group": "root", "item": {"file": "ingressclass-nginx.yml", "name": "ingressclass-nginx", "type": "ingressclass"}, "md5sum": "19b8dbb721730b4dd5a9eca23b8303ed", "mode": "0644", "owner": "root", "size": 214, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.4863102-19845-238742224441719/source", "state": "file", "uid": 0}
2023-07-10 15:14:55,171 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'ds-ingress-nginx-controller', 'file': 'ds-ingress-nginx-controller.yml', 'type': 'ds'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "26de85996a58c8109592bde7851552551ff46353", "dest": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "gid": 0, "group": "root", "item": {"file": "ds-ingress-nginx-controller.yml", "name": "ds-ingress-nginx-controller", "type": "ds"}, "md5sum": "35f758e97185dd2ecc56d89ceb5db491", "mode": "0644", "owner": "root", "size": 2985, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.8375957-19845-245237259274115/source", "state": "file", "uid": 0}
2023-07-10 15:14:55,185 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:14:55 +0300 (0:00:03.942)       0:06:50.928 ****** 
2023-07-10 15:14:55,537 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Apply manifests] *****************************************************************************************
2023-07-10 15:14:55,537 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991291.2970667-19845-56695853603654/source', 'md5sum': '90b291f08b5285243675dd014915f424', 'checksum': 'ec784415eedb3d4acdc596120302f03ba1597d6c', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 101, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991291.2970667-19845-56695853603654/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml', 'mode': 420, 'follow': False, '_original_basename': '00-namespace.yml.j2', 'checksum': 'ec784415eedb3d4acdc596120302f03ba1597d6c', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': '00-namespace', 'file': '00-namespace.yml', 'type': 'ns'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "ec784415eedb3d4acdc596120302f03ba1597d6c", "dest": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "00-namespace.yml.j2", "attributes": null, "backup": false, "checksum": "ec784415eedb3d4acdc596120302f03ba1597d6c", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991291.2970667-19845-56695853603654/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "00-namespace.yml", "name": "00-namespace", "type": "ns"}, "md5sum": "90b291f08b5285243675dd014915f424", "mode": "0644", "owner": "root", "size": 101, "src": "/root/.ansible/tmp/ansible-tmp-1688991291.2970667-19845-56695853603654/source", "state": "file", "uid": 0}, "msg": "success: namespace/ingress-nginx created"}
2023-07-10 15:14:55,850 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991291.672029-19845-118454727367839/source', 'md5sum': 'e7d720080f3e5e7a3e75fcaa826250d5', 'checksum': '21abafe1642e803c0dc8f42d517ac042aacb8758', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 191, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991291.672029-19845-118454727367839/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'cm-ingress-nginx.yml.j2', 'checksum': '21abafe1642e803c0dc8f42d517ac042aacb8758', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'cm-ingress-nginx', 'file': 'cm-ingress-nginx.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "21abafe1642e803c0dc8f42d517ac042aacb8758", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "cm-ingress-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "21abafe1642e803c0dc8f42d517ac042aacb8758", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991291.672029-19845-118454727367839/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "cm-ingress-nginx.yml", "name": "cm-ingress-nginx", "type": "cm"}, "md5sum": "e7d720080f3e5e7a3e75fcaa826250d5", "mode": "0644", "owner": "root", "size": 191, "src": "/root/.ansible/tmp/ansible-tmp-1688991291.672029-19845-118454727367839/source", "state": "file", "uid": 0}, "msg": "success: configmap/ingress-nginx created"}
2023-07-10 15:14:56,151 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991292.0310047-19845-6093809250436/source', 'md5sum': 'e89dc1c71a18a81e8cfd1d8c34c6cb9c', 'checksum': '73fadd9dc75443c74ec6fb32c3af0d6ee5e74725', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 190, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991292.0310047-19845-6093809250436/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml', 'mode': 420, 'follow': False, '_original_basename': 'cm-tcp-services.yml.j2', 'checksum': '73fadd9dc75443c74ec6fb32c3af0d6ee5e74725', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'cm-tcp-services', 'file': 'cm-tcp-services.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "73fadd9dc75443c74ec6fb32c3af0d6ee5e74725", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "cm-tcp-services.yml.j2", "attributes": null, "backup": false, "checksum": "73fadd9dc75443c74ec6fb32c3af0d6ee5e74725", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.0310047-19845-6093809250436/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "cm-tcp-services.yml", "name": "cm-tcp-services", "type": "cm"}, "md5sum": "e89dc1c71a18a81e8cfd1d8c34c6cb9c", "mode": "0644", "owner": "root", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.0310047-19845-6093809250436/source", "state": "file", "uid": 0}, "msg": "success: configmap/tcp-services created"}
2023-07-10 15:14:56,461 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991292.3773994-19845-16472254666485/source', 'md5sum': '141e0f3d41ca9f173c181700d5e508b0', 'checksum': 'd27cbf4031b2499e503d3543f8686db88e6a7b89', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 190, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991292.3773994-19845-16472254666485/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml', 'mode': 420, 'follow': False, '_original_basename': 'cm-udp-services.yml.j2', 'checksum': 'd27cbf4031b2499e503d3543f8686db88e6a7b89', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'cm-udp-services', 'file': 'cm-udp-services.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "d27cbf4031b2499e503d3543f8686db88e6a7b89", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "cm-udp-services.yml.j2", "attributes": null, "backup": false, "checksum": "d27cbf4031b2499e503d3543f8686db88e6a7b89", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.3773994-19845-16472254666485/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "cm-udp-services.yml", "name": "cm-udp-services", "type": "cm"}, "md5sum": "141e0f3d41ca9f173c181700d5e508b0", "mode": "0644", "owner": "root", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.3773994-19845-16472254666485/source", "state": "file", "uid": 0}, "msg": "success: configmap/udp-services created"}
2023-07-10 15:14:56,992 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991292.7277017-19845-94580842718629/source', 'md5sum': 'b09c8d35e9800c7f8d13b3191c14f148', 'checksum': '7dc36b670e034bcc62169c0235b180dbab4a29cc', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 196, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991292.7277017-19845-94580842718629/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'sa-ingress-nginx.yml.j2', 'checksum': '7dc36b670e034bcc62169c0235b180dbab4a29cc', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'sa-ingress-nginx', 'file': 'sa-ingress-nginx.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "7dc36b670e034bcc62169c0235b180dbab4a29cc", "dest": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "sa-ingress-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "7dc36b670e034bcc62169c0235b180dbab4a29cc", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.7277017-19845-94580842718629/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "sa-ingress-nginx.yml", "name": "sa-ingress-nginx", "type": "sa"}, "md5sum": "b09c8d35e9800c7f8d13b3191c14f148", "mode": "0644", "owner": "root", "size": 196, "src": "/root/.ansible/tmp/ansible-tmp-1688991292.7277017-19845-94580842718629/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/ingress-nginx created"}
2023-07-10 15:14:57,504 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991293.0804226-19845-252468439967363/source', 'md5sum': 'bac3a7303da6847bb92677914601d04c', 'checksum': '2d4cb86860884294a6f030640a68b0ce76dba4cc', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 1075, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991293.0804226-19845-252468439967363/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'clusterrole-ingress-nginx.yml.j2', 'checksum': '2d4cb86860884294a6f030640a68b0ce76dba4cc', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'clusterrole-ingress-nginx', 'file': 'clusterrole-ingress-nginx.yml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "2d4cb86860884294a6f030640a68b0ce76dba4cc", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "clusterrole-ingress-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "2d4cb86860884294a6f030640a68b0ce76dba4cc", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.0804226-19845-252468439967363/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "clusterrole-ingress-nginx.yml", "name": "clusterrole-ingress-nginx", "type": "clusterrole"}, "md5sum": "bac3a7303da6847bb92677914601d04c", "mode": "0644", "owner": "root", "size": 1075, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.0804226-19845-252468439967363/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/ingress-nginx created"}
2023-07-10 15:14:57,995 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991293.430092-19845-161079990756344/source', 'md5sum': 'a9d598715fa4a61630c9df4278690840', 'checksum': 'b398b84183957c90a208c29444b00c4443aa282e', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 376, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991293.430092-19845-161079990756344/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'clusterrolebinding-ingress-nginx.yml.j2', 'checksum': 'b398b84183957c90a208c29444b00c4443aa282e', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'clusterrolebinding-ingress-nginx', 'file': 'clusterrolebinding-ingress-nginx.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "b398b84183957c90a208c29444b00c4443aa282e", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "clusterrolebinding-ingress-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "b398b84183957c90a208c29444b00c4443aa282e", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.430092-19845-161079990756344/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "clusterrolebinding-ingress-nginx.yml", "name": "clusterrolebinding-ingress-nginx", "type": "clusterrolebinding"}, "md5sum": "a9d598715fa4a61630c9df4278690840", "mode": "0644", "owner": "root", "size": 376, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.430092-19845-161079990756344/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created"}
2023-07-10 15:14:58,499 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991293.7787392-19845-33051237028047/source', 'md5sum': 'd903b66972300b0cc727232f93de28b9', 'checksum': 'e6ed8e57add454469f73b46d916a2d57e08aae2c', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 1784, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991293.7787392-19845-33051237028047/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'role-ingress-nginx.yml.j2', 'checksum': 'e6ed8e57add454469f73b46d916a2d57e08aae2c', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'role-ingress-nginx', 'file': 'role-ingress-nginx.yml', 'type': 'role'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "e6ed8e57add454469f73b46d916a2d57e08aae2c", "dest": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "role-ingress-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "e6ed8e57add454469f73b46d916a2d57e08aae2c", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.7787392-19845-33051237028047/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "role-ingress-nginx.yml", "name": "role-ingress-nginx", "type": "role"}, "md5sum": "d903b66972300b0cc727232f93de28b9", "mode": "0644", "owner": "root", "size": 1784, "src": "/root/.ansible/tmp/ansible-tmp-1688991293.7787392-19845-33051237028047/source", "state": "file", "uid": 0}, "msg": "success: role.rbac.authorization.k8s.io/ingress-nginx created"}
2023-07-10 15:14:58,993 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991294.1297545-19845-3953501368328/source', 'md5sum': 'a2179bc791155f445f93dd597fa8993c', 'checksum': '784d7187b8125dbe6750d2186613dd24343bdf8b', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 389, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991294.1297545-19845-3953501368328/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'rolebinding-ingress-nginx.yml.j2', 'checksum': '784d7187b8125dbe6750d2186613dd24343bdf8b', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'rolebinding-ingress-nginx', 'file': 'rolebinding-ingress-nginx.yml', 'type': 'rolebinding'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "784d7187b8125dbe6750d2186613dd24343bdf8b", "dest": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "rolebinding-ingress-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "784d7187b8125dbe6750d2186613dd24343bdf8b", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.1297545-19845-3953501368328/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "rolebinding-ingress-nginx.yml", "name": "rolebinding-ingress-nginx", "type": "rolebinding"}, "md5sum": "a2179bc791155f445f93dd597fa8993c", "mode": "0644", "owner": "root", "size": 389, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.1297545-19845-3953501368328/source", "state": "file", "uid": 0}, "msg": "success: rolebinding.rbac.authorization.k8s.io/ingress-nginx created"}
2023-07-10 15:14:59,474 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991294.4863102-19845-238742224441719/source', 'md5sum': '19b8dbb721730b4dd5a9eca23b8303ed', 'checksum': 'ec7007c44829fc7ff2e076db13f169e9bc1c370e', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 214, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991294.4863102-19845-238742224441719/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml', 'mode': 420, 'follow': False, '_original_basename': 'ingressclass-nginx.yml.j2', 'checksum': 'ec7007c44829fc7ff2e076db13f169e9bc1c370e', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'ingressclass-nginx', 'file': 'ingressclass-nginx.yml', 'type': 'ingressclass'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "ec7007c44829fc7ff2e076db13f169e9bc1c370e", "dest": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "ingressclass-nginx.yml.j2", "attributes": null, "backup": false, "checksum": "ec7007c44829fc7ff2e076db13f169e9bc1c370e", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.4863102-19845-238742224441719/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "ingressclass-nginx.yml", "name": "ingressclass-nginx", "type": "ingressclass"}, "md5sum": "19b8dbb721730b4dd5a9eca23b8303ed", "mode": "0644", "owner": "root", "size": 214, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.4863102-19845-238742224441719/source", "state": "file", "uid": 0}, "msg": "success: ingressclass.networking.k8s.io/nginx created"}
2023-07-10 15:14:59,996 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991294.8375957-19845-245237259274115/source', 'md5sum': '35f758e97185dd2ecc56d89ceb5db491', 'checksum': '26de85996a58c8109592bde7851552551ff46353', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 2985, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991294.8375957-19845-245237259274115/source', 'dest': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml', 'mode': 420, 'follow': False, '_original_basename': 'ds-ingress-nginx-controller.yml.j2', 'checksum': '26de85996a58c8109592bde7851552551ff46353', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'name': 'ds-ingress-nginx-controller', 'file': 'ds-ingress-nginx-controller.yml', 'type': 'ds'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "26de85996a58c8109592bde7851552551ff46353", "dest": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "ds-ingress-nginx-controller.yml.j2", "attributes": null, "backup": false, "checksum": "26de85996a58c8109592bde7851552551ff46353", "content": null, "dest": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.8375957-19845-245237259274115/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "ds-ingress-nginx-controller.yml", "name": "ds-ingress-nginx-controller", "type": "ds"}, "md5sum": "35f758e97185dd2ecc56d89ceb5db491", "mode": "0644", "owner": "root", "size": 2985, "src": "/root/.ansible/tmp/ansible-tmp-1688991294.8375957-19845-245237259274115/source", "state": "file", "uid": 0}, "msg": "success: daemonset.apps/ingress-nginx-controller created"}
2023-07-10 15:15:00,041 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:04.855)       0:06:55.784 ****** 
2023-07-10 15:15:00,086 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.044)       0:06:55.829 ****** 
2023-07-10 15:15:00,134 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.048)       0:06:55.877 ****** 
2023-07-10 15:15:00,181 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.046)       0:06:55.924 ****** 
2023-07-10 15:15:00,227 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.046)       0:06:55.970 ****** 
2023-07-10 15:15:00,276 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.048)       0:06:56.019 ****** 
2023-07-10 15:15:00,344 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.068)       0:06:56.087 ****** 
2023-07-10 15:15:00,391 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.046)       0:06:56.134 ****** 
2023-07-10 15:15:00,513 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.121)       0:06:56.256 ****** 
2023-07-10 15:15:00,654 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.141)       0:06:56.397 ****** 
2023-07-10 15:15:00,756 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.101)       0:06:56.499 ****** 
2023-07-10 15:15:00,802 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.046)       0:06:56.545 ****** 
2023-07-10 15:15:00,839 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.037)       0:06:56.582 ****** 
2023-07-10 15:15:00,871 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.031)       0:06:56.614 ****** 
2023-07-10 15:15:00,911 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.040)       0:06:56.654 ****** 
2023-07-10 15:15:00,948 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.036)       0:06:56.690 ****** 
2023-07-10 15:15:00,981 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:00 +0300 (0:00:00.033)       0:06:56.724 ****** 
2023-07-10 15:15:01,018 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.037)       0:06:56.761 ****** 
2023-07-10 15:15:01,052 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.033)       0:06:56.795 ****** 
2023-07-10 15:15:01,087 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.035)       0:06:56.830 ****** 
2023-07-10 15:15:01,121 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.034)       0:06:56.864 ****** 
2023-07-10 15:15:01,154 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.033)       0:06:56.897 ****** 
2023-07-10 15:15:01,194 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.039)       0:06:56.937 ****** 
2023-07-10 15:15:01,222 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.027)       0:06:56.964 ****** 
2023-07-10 15:15:01,252 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.029)       0:06:56.994 ****** 
2023-07-10 15:15:01,282 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.030)       0:06:57.025 ****** 
2023-07-10 15:15:01,315 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.033)       0:06:57.058 ****** 
2023-07-10 15:15:01,345 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.029)       0:06:57.088 ****** 
2023-07-10 15:15:01,372 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.027)       0:06:57.115 ****** 
2023-07-10 15:15:01,401 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.029)       0:06:57.144 ****** 
2023-07-10 15:15:01,438 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.036)       0:06:57.181 ****** 
2023-07-10 15:15:01,471 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.032)       0:06:57.214 ****** 
2023-07-10 15:15:01,498 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.027)       0:06:57.241 ****** 
2023-07-10 15:15:01,531 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.032)       0:06:57.273 ****** 
2023-07-10 15:15:01,562 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.031)       0:06:57.305 ****** 
2023-07-10 15:15:01,610 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.048)       0:06:57.353 ****** 
2023-07-10 15:15:01,946 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Wait for kube-apiserver] *******************************************************************************************************************
2023-07-10 15:15:01,946 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "00f3ba38-74c1-472e-b09b-4ac74f1e2fff", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:15:01 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 15:15:01,955 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:01 +0300 (0:00:00.344)       0:06:57.698 ****** 
2023-07-10 15:15:02,183 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns deployment annotation `createdby`] ****************************************************************************************
2023-07-10 15:15:02,184 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "deploy", "-n", "kube-system", "coredns", "-o", "jsonpath={ .spec.template.metadata.annotations.createdby }"], "delta": "0:00:00.048940", "end": "2023-07-10 12:15:02.173063", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:15:02.124123", "stderr": "Error from server (NotFound): deployments.apps \"coredns\" not found", "stderr_lines": ["Error from server (NotFound): deployments.apps \"coredns\" not found"], "stdout": "", "stdout_lines": []}
2023-07-10 15:15:02,184 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:15:02,193 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:02 +0300 (0:00:00.238)       0:06:57.936 ****** 
2023-07-10 15:15:02,418 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns service annotation `createdby`] *******************************************************************************************
2023-07-10 15:15:02,418 p=14511 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "svc", "-n", "kube-system", "coredns", "-o", "jsonpath={ .metadata.annotations.createdby }"], "delta": "0:00:00.048998", "end": "2023-07-10 12:15:02.405314", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:15:02.356316", "stderr": "Error from server (NotFound): services \"coredns\" not found", "stderr_lines": ["Error from server (NotFound): services \"coredns\" not found"], "stdout": "", "stdout_lines": []}
2023-07-10 15:15:02,418 p=14511 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 15:15:02,429 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:02 +0300 (0:00:00.235)       0:06:58.172 ****** 
2023-07-10 15:15:02,697 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm CoreDNS] ********************************************************************************************************************
2023-07-10 15:15:02,698 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: "}
2023-07-10 15:15:02,708 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:02 +0300 (0:00:00.279)       0:06:58.451 ****** 
2023-07-10 15:15:02,935 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Delete kubeadm Kube-DNS service] ***********************************************************************************************************
2023-07-10 15:15:02,936 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: "}
2023-07-10 15:15:02,947 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:02 +0300 (0:00:00.238)       0:06:58.690 ****** 
2023-07-10 15:15:03,345 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates] ****************************************************************************************************************
2023-07-10 15:15:03,346 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-clusterrole.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "b1698aff8f99fbfc39b032e3efdd719d548f70d4", "dest": "/etc/kubernetes/coredns-clusterrole.yml", "gid": 0, "group": "root", "item": {"file": "coredns-clusterrole.yml", "name": "coredns", "type": "clusterrole"}, "md5sum": "5e8da373acd2902137663496d7c7746f", "mode": "0644", "owner": "root", "size": 473, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.0097454-20140-176415306245645/source", "state": "file", "uid": 0}
2023-07-10 15:15:03,700 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "gid": 0, "group": "root", "item": {"file": "coredns-clusterrolebinding.yml", "name": "coredns", "type": "clusterrolebinding"}, "md5sum": "751c8b9b4b4de0d14eae5d3f4fc1f208", "mode": "0644", "owner": "root", "size": 451, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.3819914-20140-247719235191859/source", "state": "file", "uid": 0}
2023-07-10 15:15:04,148 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-config.yml', 'type': 'configmap'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "520a258c6c8d35c736550e241e69f6ae1b088aee", "dest": "/etc/kubernetes/coredns-config.yml", "gid": 0, "group": "root", "item": {"file": "coredns-config.yml", "name": "coredns", "type": "configmap"}, "md5sum": "2c0f9234dd04100de2001d579e1d37cd", "mode": "0644", "owner": "root", "size": 600, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.7329319-20140-182327389185321/source", "state": "file", "uid": 0}
2023-07-10 15:15:04,535 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-deployment.yml', 'type': 'deployment'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "a9db7c571600267aaa3d7fcfa3f97603b8feef0d", "dest": "/etc/kubernetes/coredns-deployment.yml", "gid": 0, "group": "root", "item": {"file": "coredns-deployment.yml", "name": "coredns", "type": "deployment"}, "md5sum": "92e96993e24757ee638e5b00adff9472", "mode": "0644", "owner": "root", "size": 3180, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.1780064-20140-51525139337779/source", "state": "file", "uid": 0}
2023-07-10 15:15:04,885 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "dest": "/etc/kubernetes/coredns-sa.yml", "gid": 0, "group": "root", "item": {"file": "coredns-sa.yml", "name": "coredns", "type": "sa"}, "md5sum": "bfec6ec350bf47d850c62497fed4a879", "mode": "0644", "owner": "root", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.5667686-20140-239440637271920/source", "state": "file", "uid": 0}
2023-07-10 15:15:05,393 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'coredns', 'file': 'coredns-svc.yml', 'type': 'svc'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "ea37b9ad1ce7b47e440c8f51a388de782761adae", "dest": "/etc/kubernetes/coredns-svc.yml", "gid": 0, "group": "root", "item": {"file": "coredns-svc.yml", "name": "coredns", "type": "svc"}, "md5sum": "02ac452dc944cf688168bb436bdbf31d", "mode": "0644", "owner": "root", "size": 539, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.9187505-20140-88306560091845/source", "state": "file", "uid": 0}
2023-07-10 15:15:06,056 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler.yml', 'type': 'deployment'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "37802726cb2ae4a3db5b47ead4b5b2322b3b2fa6", "dest": "/etc/kubernetes/dns-autoscaler.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler.yml", "name": "dns-autoscaler", "type": "deployment"}, "md5sum": "c132a8c33f44803328952ca351903d16", "mode": "0644", "owner": "root", "size": 2645, "src": "/root/.ansible/tmp/ansible-tmp-1688991305.4479823-20140-98054900475579/source", "state": "file", "uid": 0}
2023-07-10 15:15:06,618 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrole.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-clusterrole.yml", "name": "dns-autoscaler", "type": "clusterrole"}, "md5sum": "859012d2b25325835b044a62cc0226bc", "mode": "0644", "owner": "root", "size": 1150, "src": "/root/.ansible/tmp/ansible-tmp-1688991306.1089125-20140-126507094969359/source", "state": "file", "uid": 0}
2023-07-10 15:15:07,188 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-clusterrolebinding.yml", "name": "dns-autoscaler", "type": "clusterrolebinding"}, "md5sum": "7f8769d1e1b5cd33313edea39550fb6a", "mode": "0644", "owner": "root", "size": 959, "src": "/root/.ansible/tmp/ansible-tmp-1688991306.6752503-20140-80747955627068/source", "state": "file", "uid": 0}
2023-07-10 15:15:07,840 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-sa.yml", "name": "dns-autoscaler", "type": "sa"}, "md5sum": "a111f82d5400ea2f9af53e9d6e627b6c", "mode": "0644", "owner": "root", "size": 763, "src": "/root/.ansible/tmp/ansible-tmp-1688991307.3324566-20140-61938843738270/source", "state": "file", "uid": 0}
2023-07-10 15:15:07,859 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:07 +0300 (0:00:04.912)       0:07:03.602 ****** 
2023-07-10 15:15:07,958 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:07 +0300 (0:00:00.098)       0:07:03.701 ****** 
2023-07-10 15:15:08,107 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | set up necessary nodelocaldns parameters] **************************************************************************************************
2023-07-10 15:15:08,108 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"primaryClusterIP": "10.233.0.3", "secondaryclusterIP": "10.233.0.4"}, "changed": false}
2023-07-10 15:15:08,124 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:08 +0300 (0:00:00.165)       0:07:03.867 ****** 
2023-07-10 15:15:08,934 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns Template] ************************************************************************************************************
2023-07-10 15:15:08,934 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-config.yml', 'type': 'configmap'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "d6970b2754f07a30a3610552262bda2887c0f05a", "dest": "/etc/kubernetes/nodelocaldns-config.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-config.yml", "name": "nodelocaldns", "type": "configmap"}, "md5sum": "2333ef01c152ca8309780c194f017e1c", "mode": "0644", "owner": "root", "size": 1038, "src": "/root/.ansible/tmp/ansible-tmp-1688991308.2428372-20297-130115070649487/source", "state": "file", "uid": 0}
2023-07-10 15:15:09,479 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "aa80f91dc256a7e0812b32e5dbeb5fe895e554e6", "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-sa.yml", "name": "nodelocaldns", "type": "sa"}, "md5sum": "0c026246f6aa8648cd470b27feee7778", "mode": "0644", "owner": "root", "size": 149, "src": "/root/.ansible/tmp/ansible-tmp-1688991309.0145524-20297-7575801389553/source", "state": "file", "uid": 0}
2023-07-10 15:15:09,851 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-daemonset.yml', 'type': 'daemonset'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "bf53df275949fa0dccf23d985e43f462c2d92cf7", "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-daemonset.yml", "name": "nodelocaldns", "type": "daemonset"}, "md5sum": "7acf9fce01535b94ffd9ebc061857278", "mode": "0644", "owner": "root", "size": 2661, "src": "/root/.ansible/tmp/ansible-tmp-1688991309.5310824-20297-97186088650724/source", "state": "file", "uid": 0}
2023-07-10 15:15:09,863 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:09 +0300 (0:00:01.739)       0:07:05.606 ****** 
2023-07-10 15:15:09,925 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:09 +0300 (0:00:00.061)       0:07:05.668 ****** 
2023-07-10 15:15:10,295 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Resources] ***************************************************************************************************************************
2023-07-10 15:15:10,296 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-clusterrole.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "b1698aff8f99fbfc39b032e3efdd719d548f70d4", "dest": "/etc/kubernetes/coredns-clusterrole.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-clusterrole.yml.j2", "attributes": null, "backup": false, "checksum": "b1698aff8f99fbfc39b032e3efdd719d548f70d4", "content": null, "dest": "/etc/kubernetes/coredns-clusterrole.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.0097454-20140-176415306245645/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "coredns-clusterrole.yml", "name": "coredns", "type": "clusterrole"}, "md5sum": "5e8da373acd2902137663496d7c7746f", "mode": "0644", "owner": "root", "size": 473, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.0097454-20140-176415306245645/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:coredns created"}
2023-07-10 15:15:10,631 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-clusterrolebinding.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-clusterrolebinding.yml.j2", "attributes": null, "backup": false, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "content": null, "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.3819914-20140-247719235191859/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "coredns-clusterrolebinding.yml", "name": "coredns", "type": "clusterrolebinding"}, "md5sum": "751c8b9b4b4de0d14eae5d3f4fc1f208", "mode": "0644", "owner": "root", "size": 451, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.3819914-20140-247719235191859/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:coredns created"}
2023-07-10 15:15:11,025 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-config.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "520a258c6c8d35c736550e241e69f6ae1b088aee", "dest": "/etc/kubernetes/coredns-config.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-config.yml.j2", "attributes": null, "backup": false, "checksum": "520a258c6c8d35c736550e241e69f6ae1b088aee", "content": null, "dest": "/etc/kubernetes/coredns-config.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.7329319-20140-182327389185321/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "coredns-config.yml", "name": "coredns", "type": "configmap"}, "md5sum": "2c0f9234dd04100de2001d579e1d37cd", "mode": "0644", "owner": "root", "size": 600, "src": "/root/.ansible/tmp/ansible-tmp-1688991303.7329319-20140-182327389185321/source", "state": "file", "uid": 0}, "msg": "success: configmap/coredns created"}
2023-07-10 15:15:11,391 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-deployment.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "a9db7c571600267aaa3d7fcfa3f97603b8feef0d", "dest": "/etc/kubernetes/coredns-deployment.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-deployment.yml.j2", "attributes": null, "backup": false, "checksum": "a9db7c571600267aaa3d7fcfa3f97603b8feef0d", "content": null, "dest": "/etc/kubernetes/coredns-deployment.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.1780064-20140-51525139337779/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "coredns-deployment.yml", "name": "coredns", "type": "deployment"}, "md5sum": "92e96993e24757ee638e5b00adff9472", "mode": "0644", "owner": "root", "size": 3180, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.1780064-20140-51525139337779/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/coredns created"}
2023-07-10 15:15:11,701 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "dest": "/etc/kubernetes/coredns-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-sa.yml.j2", "attributes": null, "backup": false, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "content": null, "dest": "/etc/kubernetes/coredns-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.5667686-20140-239440637271920/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "coredns-sa.yml", "name": "coredns", "type": "sa"}, "md5sum": "bfec6ec350bf47d850c62497fed4a879", "mode": "0644", "owner": "root", "size": 190, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.5667686-20140-239440637271920/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/coredns created"}
2023-07-10 15:15:12,065 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-svc.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "ea37b9ad1ce7b47e440c8f51a388de782761adae", "dest": "/etc/kubernetes/coredns-svc.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "coredns-svc.yml.j2", "attributes": null, "backup": false, "checksum": "ea37b9ad1ce7b47e440c8f51a388de782761adae", "content": null, "dest": "/etc/kubernetes/coredns-svc.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.9187505-20140-88306560091845/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "coredns-svc.yml", "name": "coredns", "type": "svc"}, "md5sum": "02ac452dc944cf688168bb436bdbf31d", "mode": "0644", "owner": "root", "size": 539, "src": "/root/.ansible/tmp/ansible-tmp-1688991304.9187505-20140-88306560091845/source", "state": "file", "uid": 0}, "msg": "success: service/coredns created"}
2023-07-10 15:15:12,526 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "37802726cb2ae4a3db5b47ead4b5b2322b3b2fa6", "dest": "/etc/kubernetes/dns-autoscaler.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler.yml.j2", "attributes": null, "backup": false, "checksum": "37802726cb2ae4a3db5b47ead4b5b2322b3b2fa6", "content": null, "dest": "/etc/kubernetes/dns-autoscaler.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991305.4479823-20140-98054900475579/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "dns-autoscaler.yml", "name": "dns-autoscaler", "type": "deployment"}, "md5sum": "c132a8c33f44803328952ca351903d16", "mode": "0644", "owner": "root", "size": 2645, "src": "/root/.ansible/tmp/ansible-tmp-1688991305.4479823-20140-98054900475579/source", "state": "file", "uid": 0}, "msg": "success: deployment.apps/dns-autoscaler created"}
2023-07-10 15:15:12,881 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler-clusterrole.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler-clusterrole.yml.j2", "attributes": null, "backup": false, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "content": null, "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991306.1089125-20140-126507094969359/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "dns-autoscaler-clusterrole.yml", "name": "dns-autoscaler", "type": "clusterrole"}, "md5sum": "859012d2b25325835b044a62cc0226bc", "mode": "0644", "owner": "root", "size": 1150, "src": "/root/.ansible/tmp/ansible-tmp-1688991306.1089125-20140-126507094969359/source", "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:dns-autoscaler created"}
2023-07-10 15:15:13,188 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler-clusterrolebinding.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler-clusterrolebinding.yml.j2", "attributes": null, "backup": false, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "content": null, "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991306.6752503-20140-80747955627068/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "dns-autoscaler-clusterrolebinding.yml", "name": "dns-autoscaler", "type": "clusterrolebinding"}, "md5sum": "7f8769d1e1b5cd33313edea39550fb6a", "mode": "0644", "owner": "root", "size": 959, "src": "/root/.ansible/tmp/ansible-tmp-1688991306.6752503-20140-80747955627068/source", "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:dns-autoscaler created"}
2023-07-10 15:15:13,503 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dns-autoscaler-sa.yml.j2", "attributes": null, "backup": false, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "content": null, "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991307.3324566-20140-61938843738270/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "dns-autoscaler-sa.yml", "name": "dns-autoscaler", "type": "sa"}, "md5sum": "a111f82d5400ea2f9af53e9d6e627b6c", "mode": "0644", "owner": "root", "size": 763, "src": "/root/.ansible/tmp/ansible-tmp-1688991307.3324566-20140-61938843738270/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/dns-autoscaler created"}
2023-07-10 15:15:13,880 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=nodelocaldns-config.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "d6970b2754f07a30a3610552262bda2887c0f05a", "dest": "/etc/kubernetes/nodelocaldns-config.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "nodelocaldns-config.yml.j2", "attributes": null, "backup": false, "checksum": "d6970b2754f07a30a3610552262bda2887c0f05a", "content": null, "dest": "/etc/kubernetes/nodelocaldns-config.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991308.2428372-20297-130115070649487/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "nodelocaldns-config.yml", "name": "nodelocaldns", "type": "configmap"}, "md5sum": "2333ef01c152ca8309780c194f017e1c", "mode": "0644", "owner": "root", "size": 1038, "src": "/root/.ansible/tmp/ansible-tmp-1688991308.2428372-20297-130115070649487/source", "state": "file", "uid": 0}, "msg": "success: configmap/nodelocaldns created"}
2023-07-10 15:15:14,203 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=nodelocaldns-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "aa80f91dc256a7e0812b32e5dbeb5fe895e554e6", "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "nodelocaldns-sa.yml.j2", "attributes": null, "backup": false, "checksum": "aa80f91dc256a7e0812b32e5dbeb5fe895e554e6", "content": null, "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991309.0145524-20297-7575801389553/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "nodelocaldns-sa.yml", "name": "nodelocaldns", "type": "sa"}, "md5sum": "0c026246f6aa8648cd470b27feee7778", "mode": "0644", "owner": "root", "size": 149, "src": "/root/.ansible/tmp/ansible-tmp-1688991309.0145524-20297-7575801389553/source", "state": "file", "uid": 0}, "msg": "success: serviceaccount/nodelocaldns created"}
2023-07-10 15:15:14,644 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=nodelocaldns-daemonset.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "bf53df275949fa0dccf23d985e43f462c2d92cf7", "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "nodelocaldns-daemonset.yml.j2", "attributes": null, "backup": false, "checksum": "bf53df275949fa0dccf23d985e43f462c2d92cf7", "content": null, "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991309.5310824-20297-97186088650724/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "nodelocaldns-daemonset.yml", "name": "nodelocaldns", "type": "daemonset"}, "md5sum": "7acf9fce01535b94ffd9ebc061857278", "mode": "0644", "owner": "root", "size": 2661, "src": "/root/.ansible/tmp/ansible-tmp-1688991309.5310824-20297-97186088650724/source", "state": "file", "uid": 0}, "msg": "success: daemonset.apps/nodelocaldns created"}
2023-07-10 15:15:14,668 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:04.742)       0:07:10.411 ****** 
2023-07-10 15:15:14,732 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.064)       0:07:10.475 ****** 
2023-07-10 15:15:14,791 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.058)       0:07:10.534 ****** 
2023-07-10 15:15:14,821 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.029)       0:07:10.564 ****** 
2023-07-10 15:15:14,854 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.033)       0:07:10.597 ****** 
2023-07-10 15:15:14,885 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.031)       0:07:10.628 ****** 
2023-07-10 15:15:14,921 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.036)       0:07:10.664 ****** 
2023-07-10 15:15:14,955 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.034)       0:07:10.698 ****** 
2023-07-10 15:15:14,991 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:14 +0300 (0:00:00.035)       0:07:10.734 ****** 
2023-07-10 15:15:15,422 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay down dashboard template] ***************************************************************************************************************
2023-07-10 15:15:15,423 p=14511 u=kubernetmachine n=ansible | changed: [node1] => (item={'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}) => {"ansible_loop_var": "item", "changed": true, "checksum": "fd85ef539f936e6d67342d1fff153b2c4f38c011", "dest": "/etc/kubernetes/dashboard.yml", "gid": 0, "group": "root", "item": {"file": "dashboard.yml", "name": "kubernetes-dashboard", "type": "deploy"}, "md5sum": "c3a3b7d7a8f21ac56cc570d3a69cb664", "mode": "0644", "owner": "root", "size": 8427, "src": "/root/.ansible/tmp/ansible-tmp-1688991315.058065-20392-230760012092680/source", "state": "file", "uid": 0}
2023-07-10 15:15:15,434 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:15 +0300 (0:00:00.442)       0:07:11.177 ****** 
2023-07-10 15:15:15,935 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Start dashboard] ***************************************************************************************************************************
2023-07-10 15:15:15,936 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': [], 'dest': '/etc/kubernetes/dashboard.yml', 'src': '/root/.ansible/tmp/ansible-tmp-1688991315.058065-20392-230760012092680/source', 'md5sum': 'c3a3b7d7a8f21ac56cc570d3a69cb664', 'checksum': 'fd85ef539f936e6d67342d1fff153b2c4f38c011', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 8427, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1688991315.058065-20392-230760012092680/source', 'dest': '/etc/kubernetes/dashboard.yml', 'mode': 420, 'follow': False, '_original_basename': 'dashboard.yml.j2', 'checksum': 'fd85ef539f936e6d67342d1fff153b2c4f38c011', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': {'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": true, "checksum": "fd85ef539f936e6d67342d1fff153b2c4f38c011", "dest": "/etc/kubernetes/dashboard.yml", "diff": [], "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_original_basename": "dashboard.yml.j2", "attributes": null, "backup": false, "checksum": "fd85ef539f936e6d67342d1fff153b2c4f38c011", "content": null, "dest": "/etc/kubernetes/dashboard.yml", "directory_mode": null, "follow": false, "force": true, "group": null, "local_follow": null, "mode": 420, "owner": null, "remote_src": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": "/root/.ansible/tmp/ansible-tmp-1688991315.058065-20392-230760012092680/source", "unsafe_writes": false, "validate": null}}, "item": {"file": "dashboard.yml", "name": "kubernetes-dashboard", "type": "deploy"}, "md5sum": "c3a3b7d7a8f21ac56cc570d3a69cb664", "mode": "0644", "owner": "root", "size": 8427, "src": "/root/.ansible/tmp/ansible-tmp-1688991315.058065-20392-230760012092680/source", "state": "file", "uid": 0}, "msg": "success: secret/kubernetes-dashboard-certs created secret/kubernetes-dashboard-csrf created secret/kubernetes-dashboard-key-holder created configmap/kubernetes-dashboard-settings created serviceaccount/kubernetes-dashboard created role.rbac.authorization.k8s.io/kubernetes-dashboard created rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created deployment.apps/kubernetes-dashboard created service/kubernetes-dashboard created clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created service/dashboard-metrics-scraper created deployment.apps/kubernetes-metrics-scraper created"}
2023-07-10 15:15:15,956 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:15 +0300 (0:00:00.522)       0:07:11.699 ****** 
2023-07-10 15:15:16,064 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Gather os specific variables] ****************************************************************************************************************************
2023-07-10 15:15:16,065 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/vars/../vars/ubuntu.yml) => {"ansible_facts": {"pyyaml_package": "python3-yaml"}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/vars/../vars/ubuntu.yml"}
2023-07-10 15:15:16,076 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:16 +0300 (0:00:00.120)       0:07:11.819 ****** 
2023-07-10 15:15:16,867 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Install PyYaml] ******************************************************************************************************************************************
2023-07-10 15:15:16,868 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:15:16,880 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:16 +0300 (0:00:00.803)       0:07:12.623 ****** 
2023-07-10 15:15:16,915 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:16 +0300 (0:00:00.034)       0:07:12.658 ****** 
2023-07-10 15:15:16,934 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Download helm] *******************************************************************************************************************************************
2023-07-10 15:15:16,956 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:15:16,973 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:16 +0300 (0:00:00.057)       0:07:12.716 ****** 
2023-07-10 15:15:17,037 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : prep_download | Set a few facts] ********************************************************************************************************************************
2023-07-10 15:15:17,037 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:15:17,048 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:17 +0300 (0:00:00.075)       0:07:12.791 ****** 
2023-07-10 15:15:18,025 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Starting download of file] **********************************************************************************************************************
2023-07-10 15:15:18,025 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"
}
2023-07-10 15:15:18,039 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:18 +0300 (0:00:00.990)       0:07:13.782 ****** 
2023-07-10 15:15:18,958 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Set pathname of cached file] ********************************************************************************************************************
2023-07-10 15:15:18,958 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/helm-v3.12.1-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 15:15:18,969 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:18 +0300 (0:00:00.929)       0:07:14.711 ****** 
2023-07-10 15:15:20,941 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Create dest directory on node] ******************************************************************************************************************
2023-07-10 15:15:20,942 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/helm-v3.12.1", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:15:20,954 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:20 +0300 (0:00:01.985)       0:07:16.697 ****** 
2023-07-10 15:15:20,990 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:20 +0300 (0:00:00.036)       0:07:16.733 ****** 
2023-07-10 15:15:21,816 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:21 +0300 (0:00:00.825)       0:07:17.559 ****** 
2023-07-10 15:15:27,450 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Validate mirrors] *******************************************************************************************************************************
2023-07-10 15:15:27,451 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:15:27,455 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:15:27,487 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:27 +0300 (0:00:05.670)       0:07:23.229 ****** 
2023-07-10 15:15:27,595 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Get the list of working mirrors] ****************************************************************************************************************
2023-07-10 15:15:27,596 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 15:15:27,629 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:27 +0300 (0:00:00.142)       0:07:23.372 ****** 
2023-07-10 15:15:36,457 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Download item] **********************************************************************************************************************************
2023-07-10 15:15:36,457 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:15:36,472 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:36 +0300 (0:00:08.843)       0:07:32.215 ****** 
2023-07-10 15:15:36,521 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:36 +0300 (0:00:00.048)       0:07:32.264 ****** 
2023-07-10 15:15:36,571 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:36 +0300 (0:00:00.050)       0:07:32.314 ****** 
2023-07-10 15:15:36,620 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:36 +0300 (0:00:00.049)       0:07:32.363 ****** 
2023-07-10 15:15:36,649 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Extract file archives] **************************************************************************************************************************
2023-07-10 15:15:36,669 p=14511 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:15:36,694 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:36 +0300 (0:00:00.074)       0:07:32.437 ****** 
2023-07-10 15:15:43,861 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : extract_file | Unpacking archive] *******************************************************************************************************************************
2023-07-10 15:15:43,862 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases/helm-v3.12.1", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 15:15:43,871 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:43 +0300 (0:00:07.176)       0:07:39.614 ****** 
2023-07-10 15:15:44,253 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Copy helm binary from download dir] **********************************************************************************************************************
2023-07-10 15:15:44,254 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "8f183db9c99b59289b75353d1447da581049592f", "dest": "/usr/local/bin/helm", "gid": 0, "group": "root", "md5sum": "6b3df101de720886f2dda3a66e81d5aa", "mode": "0755", "owner": "root", "size": 50606080, "src": "/tmp/releases/helm-v3.12.1/linux-amd64/helm", "state": "file", "uid": 0}
2023-07-10 15:15:44,264 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:44 +0300 (0:00:00.392)       0:07:40.007 ****** 
2023-07-10 15:15:44,480 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Get helm completion] *************************************************************************************************************************************
2023-07-10 15:15:44,482 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/helm", "completion", "bash"], "delta": "0:00:00.038412", "end": "2023-07-10 12:15:44.468175", "msg": "", "rc": 0, "start": "2023-07-10 12:15:44.429763", "stderr": "", "stderr_lines": [], "stdout": "# bash completion V2 for helm                                 -*- shell-script -*-\n\n__helm_debug()\n{\n    if [[ -n ${BASH_COMP_DEBUG_FILE:-} ]]; then\n        echo \"$*\" >> \"${BASH_COMP_DEBUG_FILE}\"\n    fi\n}\n\n# Macs have bash3 for which the bash-completion package doesn't include\n# _init_completion. This is a minimal version of that function.\n__helm_init_completion()\n{\n    COMPREPLY=()\n    _get_comp_words_by_ref \"$@\" cur prev words cword\n}\n\n# This function calls the helm program to obtain the completion\n# results and the directive.  It fills the 'out' and 'directive' vars.\n__helm_get_completion_results() {\n    local requestComp lastParam lastChar args\n\n    # Prepare the command to request completions for the program.\n    # Calling ${words[0]} instead of directly helm allows to handle aliases\n    args=(\"${words[@]:1}\")\n    requestComp=\"${words[0]} __complete ${args[*]}\"\n\n    lastParam=${words[$((${#words[@]}-1))]}\n    lastChar=${lastParam:$((${#lastParam}-1)):1}\n    __helm_debug \"lastParam ${lastParam}, lastChar ${lastChar}\"\n\n    if [ -z \"${cur}\" ] && [ \"${lastChar}\" != \"=\" ]; then\n        # If the last parameter is complete (there is a space following it)\n        # We add an extra empty parameter so we can indicate this to the go method.\n        __helm_debug \"Adding extra empty parameter\"\n        requestComp=\"${requestComp} ''\"\n    fi\n\n    # When completing a flag with an = (e.g., helm -n=<TAB>)\n    # bash focuses on the part after the =, so we need to remove\n    # the flag part from $cur\n    if [[ \"${cur}\" == -*=* ]]; then\n        cur=\"${cur#*=}\"\n    fi\n\n    __helm_debug \"Calling ${requestComp}\"\n    # Use eval to handle any environment variables and such\n    out=$(eval \"${requestComp}\" 2>/dev/null)\n\n    # Extract the directive integer at the very end of the output following a colon (:)\n    directive=${out##*:}\n    # Remove the directive\n    out=${out%:*}\n    if [ \"${directive}\" = \"${out}\" ]; then\n        # There is not directive specified\n        directive=0\n    fi\n    __helm_debug \"The completion directive is: ${directive}\"\n    __helm_debug \"The completions are: ${out}\"\n}\n\n__helm_process_completion_results() {\n    local shellCompDirectiveError=1\n    local shellCompDirectiveNoSpace=2\n    local shellCompDirectiveNoFileComp=4\n    local shellCompDirectiveFilterFileExt=8\n    local shellCompDirectiveFilterDirs=16\n\n    if [ $((directive & shellCompDirectiveError)) -ne 0 ]; then\n        # Error code.  No completion.\n        __helm_debug \"Received error from custom completion go code\"\n        return\n    else\n        if [ $((directive & shellCompDirectiveNoSpace)) -ne 0 ]; then\n            if [[ $(type -t compopt) = \"builtin\" ]]; then\n                __helm_debug \"Activating no space\"\n                compopt -o nospace\n            else\n                __helm_debug \"No space directive not supported in this version of bash\"\n            fi\n        fi\n        if [ $((directive & shellCompDirectiveNoFileComp)) -ne 0 ]; then\n            if [[ $(type -t compopt) = \"builtin\" ]]; then\n                __helm_debug \"Activating no file completion\"\n                compopt +o default\n            else\n                __helm_debug \"No file completion directive not supported in this version of bash\"\n            fi\n        fi\n    fi\n\n    # Separate activeHelp from normal completions\n    local completions=()\n    local activeHelp=()\n    __helm_extract_activeHelp\n\n    if [ $((directive & shellCompDirectiveFilterFileExt)) -ne 0 ]; then\n        # File extension filtering\n        local fullFilter filter filteringCmd\n\n        # Do not use quotes around the $completions variable or else newline\n        # characters will be kept.\n        for filter in ${completions[*]}; do\n            fullFilter+=\"$filter|\"\n        done\n\n        filteringCmd=\"_filedir $fullFilter\"\n        __helm_debug \"File filtering command: $filteringCmd\"\n        $filteringCmd\n    elif [ $((directive & shellCompDirectiveFilterDirs)) -ne 0 ]; then\n        # File completion for directories only\n\n        # Use printf to strip any trailing newline\n        local subdir\n        subdir=$(printf \"%s\" \"${completions[0]}\")\n        if [ -n \"$subdir\" ]; then\n            __helm_debug \"Listing directories in $subdir\"\n            pushd \"$subdir\" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1 || return\n        else\n            __helm_debug \"Listing directories in .\"\n            _filedir -d\n        fi\n    else\n        __helm_handle_completion_types\n    fi\n\n    __helm_handle_special_char \"$cur\" :\n    __helm_handle_special_char \"$cur\" =\n\n    # Print the activeHelp statements before we finish\n    if [ ${#activeHelp[*]} -ne 0 ]; then\n        printf \"\\n\";\n        printf \"%s\\n\" \"${activeHelp[@]}\"\n        printf \"\\n\"\n\n        # The prompt format is only available from bash 4.4.\n        # We test if it is available before using it.\n        if (x=${PS1@P}) 2> /dev/null; then\n            printf \"%s\" \"${PS1@P}${COMP_LINE[@]}\"\n        else\n            # Can't print the prompt.  Just print the\n            # text the user had typed, it is workable enough.\n            printf \"%s\" \"${COMP_LINE[@]}\"\n        fi\n    fi\n}\n\n# Separate activeHelp lines from real completions.\n# Fills the $activeHelp and $completions arrays.\n__helm_extract_activeHelp() {\n    local activeHelpMarker=\"_activeHelp_ \"\n    local endIndex=${#activeHelpMarker}\n\n    while IFS='' read -r comp; do\n        if [ \"${comp:0:endIndex}\" = \"$activeHelpMarker\" ]; then\n            comp=${comp:endIndex}\n            __helm_debug \"ActiveHelp found: $comp\"\n            if [ -n \"$comp\" ]; then\n                activeHelp+=(\"$comp\")\n            fi\n        else\n            # Not an activeHelp line but a normal completion\n            completions+=(\"$comp\")\n        fi\n    done < <(printf \"%s\\n\" \"${out}\")\n}\n\n__helm_handle_completion_types() {\n    __helm_debug \"__helm_handle_completion_types: COMP_TYPE is $COMP_TYPE\"\n\n    case $COMP_TYPE in\n    37|42)\n        # Type: menu-complete/menu-complete-backward and insert-completions\n        # If the user requested inserting one completion at a time, or all\n        # completions at once on the command-line we must remove the descriptions.\n        # https://github.com/spf13/cobra/issues/1508\n        local tab=$'\\t' comp\n        while IFS='' read -r comp; do\n            [[ -z $comp ]] && continue\n            # Strip any description\n            comp=${comp%%$tab*}\n            # Only consider the completions that match\n            if [[ $comp == \"$cur\"* ]]; then\n                COMPREPLY+=(\"$comp\")\n            fi\n        done < <(printf \"%s\\n\" \"${completions[@]}\")\n        ;;\n\n    *)\n        # Type: complete (normal completion)\n        __helm_handle_standard_completion_case\n        ;;\n    esac\n}\n\n__helm_handle_standard_completion_case() {\n    local tab=$'\\t' comp\n\n    # Short circuit to optimize if we don't have descriptions\n    if [[ \"${completions[*]}\" != *$tab* ]]; then\n        IFS=$'\\n' read -ra COMPREPLY -d '' < <(compgen -W \"${completions[*]}\" -- \"$cur\")\n        return 0\n    fi\n\n    local longest=0\n    local compline\n    # Look for the longest completion so that we can format things nicely\n    while IFS='' read -r compline; do\n        [[ -z $compline ]] && continue\n        # Strip any description before checking the length\n        comp=${compline%%$tab*}\n        # Only consider the completions that match\n        [[ $comp == \"$cur\"* ]] || continue\n        COMPREPLY+=(\"$compline\")\n        if ((${#comp}>longest)); then\n            longest=${#comp}\n        fi\n    done < <(printf \"%s\\n\" \"${completions[@]}\")\n\n    # If there is a single completion left, remove the description text\n    if [ ${#COMPREPLY[*]} -eq 1 ]; then\n        __helm_debug \"COMPREPLY[0]: ${COMPREPLY[0]}\"\n        comp=\"${COMPREPLY[0]%%$tab*}\"\n        __helm_debug \"Removed description from single completion, which is now: ${comp}\"\n        COMPREPLY[0]=$comp\n    else # Format the descriptions\n        __helm_format_comp_descriptions $longest\n    fi\n}\n\n__helm_handle_special_char()\n{\n    local comp=\"$1\"\n    local char=$2\n    if [[ \"$comp\" == *${char}* && \"$COMP_WORDBREAKS\" == *${char}* ]]; then\n        local word=${comp%\"${comp##*${char}}\"}\n        local idx=${#COMPREPLY[*]}\n        while [[ $((--idx)) -ge 0 ]]; do\n            COMPREPLY[$idx]=${COMPREPLY[$idx]#\"$word\"}\n        done\n    fi\n}\n\n__helm_format_comp_descriptions()\n{\n    local tab=$'\\t'\n    local comp desc maxdesclength\n    local longest=$1\n\n    local i ci\n    for ci in ${!COMPREPLY[*]}; do\n        comp=${COMPREPLY[ci]}\n        # Properly format the description string which follows a tab character if there is one\n        if [[ \"$comp\" == *$tab* ]]; then\n            __helm_debug \"Original comp: $comp\"\n            desc=${comp#*$tab}\n            comp=${comp%%$tab*}\n\n            # $COLUMNS stores the current shell width.\n            # Remove an extra 4 because we add 2 spaces and 2 parentheses.\n            maxdesclength=$(( COLUMNS - longest - 4 ))\n\n            # Make sure we can fit a description of at least 8 characters\n            # if we are to align the descriptions.\n            if [[ $maxdesclength -gt 8 ]]; then\n                # Add the proper number of spaces to align the descriptions\n                for ((i = ${#comp} ; i < longest ; i++)); do\n                    comp+=\" \"\n                done\n            else\n                # Don't pad the descriptions so we can fit more text after the completion\n                maxdesclength=$(( COLUMNS - ${#comp} - 4 ))\n            fi\n\n            # If there is enough space for any description text,\n            # truncate the descriptions that are too long for the shell width\n            if [ $maxdesclength -gt 0 ]; then\n                if [ ${#desc} -gt $maxdesclength ]; then\n                    desc=${desc:0:$(( maxdesclength - 1 ))}\n                    desc+=\"…\"\n                fi\n                comp+=\"  ($desc)\"\n            fi\n            COMPREPLY[ci]=$comp\n            __helm_debug \"Final comp: $comp\"\n        fi\n    done\n}\n\n__start_helm()\n{\n    local cur prev words cword split\n\n    COMPREPLY=()\n\n    # Call _init_completion from the bash-completion package\n    # to prepare the arguments properly\n    if declare -F _init_completion >/dev/null 2>&1; then\n        _init_completion -n \"=:\" || return\n    else\n        __helm_init_completion -n \"=:\" || return\n    fi\n\n    __helm_debug\n    __helm_debug \"========= starting completion logic ==========\"\n    __helm_debug \"cur is ${cur}, words[*] is ${words[*]}, #words[@] is ${#words[@]}, cword is $cword\"\n\n    # The user could have moved the cursor backwards on the command-line.\n    # We need to trigger completion from the $cword location, so we need\n    # to truncate the command-line ($words) up to the $cword location.\n    words=(\"${words[@]:0:$cword+1}\")\n    __helm_debug \"Truncated words[*]: ${words[*]},\"\n\n    local out directive\n    __helm_get_completion_results\n    __helm_process_completion_results\n}\n\nif [[ $(type -t compopt) = \"builtin\" ]]; then\n    complete -o default -F __start_helm helm\nelse\n    complete -o default -o nospace -F __start_helm helm\nfi\n\n# ex: ts=4 sw=4 et filetype=sh", "stdout_lines": ["# bash completion V2 for helm                                 -*- shell-script -*-", "", "__helm_debug()", "{", "    if [[ -n ${BASH_COMP_DEBUG_FILE:-} ]]; then", "        echo \"$*\" >> \"${BASH_COMP_DEBUG_FILE}\"", "    fi", "}", "", "# Macs have bash3 for which the bash-completion package doesn't include", "# _init_completion. This is a minimal version of that function.", "__helm_init_completion()", "{", "    COMPREPLY=()", "    _get_comp_words_by_ref \"$@\" cur prev words cword", "}", "", "# This function calls the helm program to obtain the completion", "# results and the directive.  It fills the 'out' and 'directive' vars.", "__helm_get_completion_results() {", "    local requestComp lastParam lastChar args", "", "    # Prepare the command to request completions for the program.", "    # Calling ${words[0]} instead of directly helm allows to handle aliases", "    args=(\"${words[@]:1}\")", "    requestComp=\"${words[0]} __complete ${args[*]}\"", "", "    lastParam=${words[$((${#words[@]}-1))]}", "    lastChar=${lastParam:$((${#lastParam}-1)):1}", "    __helm_debug \"lastParam ${lastParam}, lastChar ${lastChar}\"", "", "    if [ -z \"${cur}\" ] && [ \"${lastChar}\" != \"=\" ]; then", "        # If the last parameter is complete (there is a space following it)", "        # We add an extra empty parameter so we can indicate this to the go method.", "        __helm_debug \"Adding extra empty parameter\"", "        requestComp=\"${requestComp} ''\"", "    fi", "", "    # When completing a flag with an = (e.g., helm -n=<TAB>)", "    # bash focuses on the part after the =, so we need to remove", "    # the flag part from $cur", "    if [[ \"${cur}\" == -*=* ]]; then", "        cur=\"${cur#*=}\"", "    fi", "", "    __helm_debug \"Calling ${requestComp}\"", "    # Use eval to handle any environment variables and such", "    out=$(eval \"${requestComp}\" 2>/dev/null)", "", "    # Extract the directive integer at the very end of the output following a colon (:)", "    directive=${out##*:}", "    # Remove the directive", "    out=${out%:*}", "    if [ \"${directive}\" = \"${out}\" ]; then", "        # There is not directive specified", "        directive=0", "    fi", "    __helm_debug \"The completion directive is: ${directive}\"", "    __helm_debug \"The completions are: ${out}\"", "}", "", "__helm_process_completion_results() {", "    local shellCompDirectiveError=1", "    local shellCompDirectiveNoSpace=2", "    local shellCompDirectiveNoFileComp=4", "    local shellCompDirectiveFilterFileExt=8", "    local shellCompDirectiveFilterDirs=16", "", "    if [ $((directive & shellCompDirectiveError)) -ne 0 ]; then", "        # Error code.  No completion.", "        __helm_debug \"Received error from custom completion go code\"", "        return", "    else", "        if [ $((directive & shellCompDirectiveNoSpace)) -ne 0 ]; then", "            if [[ $(type -t compopt) = \"builtin\" ]]; then", "                __helm_debug \"Activating no space\"", "                compopt -o nospace", "            else", "                __helm_debug \"No space directive not supported in this version of bash\"", "            fi", "        fi", "        if [ $((directive & shellCompDirectiveNoFileComp)) -ne 0 ]; then", "            if [[ $(type -t compopt) = \"builtin\" ]]; then", "                __helm_debug \"Activating no file completion\"", "                compopt +o default", "            else", "                __helm_debug \"No file completion directive not supported in this version of bash\"", "            fi", "        fi", "    fi", "", "    # Separate activeHelp from normal completions", "    local completions=()", "    local activeHelp=()", "    __helm_extract_activeHelp", "", "    if [ $((directive & shellCompDirectiveFilterFileExt)) -ne 0 ]; then", "        # File extension filtering", "        local fullFilter filter filteringCmd", "", "        # Do not use quotes around the $completions variable or else newline", "        # characters will be kept.", "        for filter in ${completions[*]}; do", "            fullFilter+=\"$filter|\"", "        done", "", "        filteringCmd=\"_filedir $fullFilter\"", "        __helm_debug \"File filtering command: $filteringCmd\"", "        $filteringCmd", "    elif [ $((directive & shellCompDirectiveFilterDirs)) -ne 0 ]; then", "        # File completion for directories only", "", "        # Use printf to strip any trailing newline", "        local subdir", "        subdir=$(printf \"%s\" \"${completions[0]}\")", "        if [ -n \"$subdir\" ]; then", "            __helm_debug \"Listing directories in $subdir\"", "            pushd \"$subdir\" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1 || return", "        else", "            __helm_debug \"Listing directories in .\"", "            _filedir -d", "        fi", "    else", "        __helm_handle_completion_types", "    fi", "", "    __helm_handle_special_char \"$cur\" :", "    __helm_handle_special_char \"$cur\" =", "", "    # Print the activeHelp statements before we finish", "    if [ ${#activeHelp[*]} -ne 0 ]; then", "        printf \"\\n\";", "        printf \"%s\\n\" \"${activeHelp[@]}\"", "        printf \"\\n\"", "", "        # The prompt format is only available from bash 4.4.", "        # We test if it is available before using it.", "        if (x=${PS1@P}) 2> /dev/null; then", "            printf \"%s\" \"${PS1@P}${COMP_LINE[@]}\"", "        else", "            # Can't print the prompt.  Just print the", "            # text the user had typed, it is workable enough.", "            printf \"%s\" \"${COMP_LINE[@]}\"", "        fi", "    fi", "}", "", "# Separate activeHelp lines from real completions.", "# Fills the $activeHelp and $completions arrays.", "__helm_extract_activeHelp() {", "    local activeHelpMarker=\"_activeHelp_ \"", "    local endIndex=${#activeHelpMarker}", "", "    while IFS='' read -r comp; do", "        if [ \"${comp:0:endIndex}\" = \"$activeHelpMarker\" ]; then", "            comp=${comp:endIndex}", "            __helm_debug \"ActiveHelp found: $comp\"", "            if [ -n \"$comp\" ]; then", "                activeHelp+=(\"$comp\")", "            fi", "        else", "            # Not an activeHelp line but a normal completion", "            completions+=(\"$comp\")", "        fi", "    done < <(printf \"%s\\n\" \"${out}\")", "}", "", "__helm_handle_completion_types() {", "    __helm_debug \"__helm_handle_completion_types: COMP_TYPE is $COMP_TYPE\"", "", "    case $COMP_TYPE in", "    37|42)", "        # Type: menu-complete/menu-complete-backward and insert-completions", "        # If the user requested inserting one completion at a time, or all", "        # completions at once on the command-line we must remove the descriptions.", "        # https://github.com/spf13/cobra/issues/1508", "        local tab=$'\\t' comp", "        while IFS='' read -r comp; do", "            [[ -z $comp ]] && continue", "            # Strip any description", "            comp=${comp%%$tab*}", "            # Only consider the completions that match", "            if [[ $comp == \"$cur\"* ]]; then", "                COMPREPLY+=(\"$comp\")", "            fi", "        done < <(printf \"%s\\n\" \"${completions[@]}\")", "        ;;", "", "    *)", "        # Type: complete (normal completion)", "        __helm_handle_standard_completion_case", "        ;;", "    esac", "}", "", "__helm_handle_standard_completion_case() {", "    local tab=$'\\t' comp", "", "    # Short circuit to optimize if we don't have descriptions", "    if [[ \"${completions[*]}\" != *$tab* ]]; then", "        IFS=$'\\n' read -ra COMPREPLY -d '' < <(compgen -W \"${completions[*]}\" -- \"$cur\")", "        return 0", "    fi", "", "    local longest=0", "    local compline", "    # Look for the longest completion so that we can format things nicely", "    while IFS='' read -r compline; do", "        [[ -z $compline ]] && continue", "        # Strip any description before checking the length", "        comp=${compline%%$tab*}", "        # Only consider the completions that match", "        [[ $comp == \"$cur\"* ]] || continue", "        COMPREPLY+=(\"$compline\")", "        if ((${#comp}>longest)); then", "            longest=${#comp}", "        fi", "    done < <(printf \"%s\\n\" \"${completions[@]}\")", "", "    # If there is a single completion left, remove the description text", "    if [ ${#COMPREPLY[*]} -eq 1 ]; then", "        __helm_debug \"COMPREPLY[0]: ${COMPREPLY[0]}\"", "        comp=\"${COMPREPLY[0]%%$tab*}\"", "        __helm_debug \"Removed description from single completion, which is now: ${comp}\"", "        COMPREPLY[0]=$comp", "    else # Format the descriptions", "        __helm_format_comp_descriptions $longest", "    fi", "}", "", "__helm_handle_special_char()", "{", "    local comp=\"$1\"", "    local char=$2", "    if [[ \"$comp\" == *${char}* && \"$COMP_WORDBREAKS\" == *${char}* ]]; then", "        local word=${comp%\"${comp##*${char}}\"}", "        local idx=${#COMPREPLY[*]}", "        while [[ $((--idx)) -ge 0 ]]; do", "            COMPREPLY[$idx]=${COMPREPLY[$idx]#\"$word\"}", "        done", "    fi", "}", "", "__helm_format_comp_descriptions()", "{", "    local tab=$'\\t'", "    local comp desc maxdesclength", "    local longest=$1", "", "    local i ci", "    for ci in ${!COMPREPLY[*]}; do", "        comp=${COMPREPLY[ci]}", "        # Properly format the description string which follows a tab character if there is one", "        if [[ \"$comp\" == *$tab* ]]; then", "            __helm_debug \"Original comp: $comp\"", "            desc=${comp#*$tab}", "            comp=${comp%%$tab*}", "", "            # $COLUMNS stores the current shell width.", "            # Remove an extra 4 because we add 2 spaces and 2 parentheses.", "            maxdesclength=$(( COLUMNS - longest - 4 ))", "", "            # Make sure we can fit a description of at least 8 characters", "            # if we are to align the descriptions.", "            if [[ $maxdesclength -gt 8 ]]; then", "                # Add the proper number of spaces to align the descriptions", "                for ((i = ${#comp} ; i < longest ; i++)); do", "                    comp+=\" \"", "                done", "            else", "                # Don't pad the descriptions so we can fit more text after the completion", "                maxdesclength=$(( COLUMNS - ${#comp} - 4 ))", "            fi", "", "            # If there is enough space for any description text,", "            # truncate the descriptions that are too long for the shell width", "            if [ $maxdesclength -gt 0 ]; then", "                if [ ${#desc} -gt $maxdesclength ]; then", "                    desc=${desc:0:$(( maxdesclength - 1 ))}", "                    desc+=\"…\"", "                fi", "                comp+=\"  ($desc)\"", "            fi", "            COMPREPLY[ci]=$comp", "            __helm_debug \"Final comp: $comp\"", "        fi", "    done", "}", "", "__start_helm()", "{", "    local cur prev words cword split", "", "    COMPREPLY=()", "", "    # Call _init_completion from the bash-completion package", "    # to prepare the arguments properly", "    if declare -F _init_completion >/dev/null 2>&1; then", "        _init_completion -n \"=:\" || return", "    else", "        __helm_init_completion -n \"=:\" || return", "    fi", "", "    __helm_debug", "    __helm_debug \"========= starting completion logic ==========\"", "    __helm_debug \"cur is ${cur}, words[*] is ${words[*]}, #words[@] is ${#words[@]}, cword is $cword\"", "", "    # The user could have moved the cursor backwards on the command-line.", "    # We need to trigger completion from the $cword location, so we need", "    # to truncate the command-line ($words) up to the $cword location.", "    words=(\"${words[@]:0:$cword+1}\")", "    __helm_debug \"Truncated words[*]: ${words[*]},\"", "", "    local out directive", "    __helm_get_completion_results", "    __helm_process_completion_results", "}", "", "if [[ $(type -t compopt) = \"builtin\" ]]; then", "    complete -o default -F __start_helm helm", "else", "    complete -o default -o nospace -F __start_helm helm", "fi", "", "# ex: ts=4 sw=4 et filetype=sh"]}
2023-07-10 15:15:44,492 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:44 +0300 (0:00:00.227)       0:07:40.235 ****** 
2023-07-10 15:15:44,857 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Install helm completion] *********************************************************************************************************************************
2023-07-10 15:15:44,857 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "fc9ea4f663fa40b5144874864a3eda5d458b5615", "dest": "/etc/bash_completion.d/helm.sh", "gid": 0, "group": "root", "md5sum": "ded5795b45fb0e33a9254e86b7c60d76", "mode": "0755", "owner": "root", "size": 11093, "src": "/root/.ansible/tmp/ansible-tmp-1688991344.5419967-20496-205666404854720/source", "state": "file", "uid": 0}
2023-07-10 15:15:44,876 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:44 +0300 (0:00:00.384)       0:07:40.619 ****** 
2023-07-10 15:15:44,909 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:44 +0300 (0:00:00.032)       0:07:40.652 ****** 
2023-07-10 15:15:44,941 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:44 +0300 (0:00:00.032)       0:07:40.684 ****** 
2023-07-10 15:15:44,972 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:44 +0300 (0:00:00.031)       0:07:40.715 ****** 
2023-07-10 15:15:45,004 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.031)       0:07:40.747 ****** 
2023-07-10 15:15:45,035 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.030)       0:07:40.778 ****** 
2023-07-10 15:15:45,071 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.035)       0:07:40.814 ****** 
2023-07-10 15:15:45,107 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.036)       0:07:40.850 ****** 
2023-07-10 15:15:45,139 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.031)       0:07:40.882 ****** 
2023-07-10 15:15:45,173 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.033)       0:07:40.916 ****** 
2023-07-10 15:15:45,208 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.035)       0:07:40.952 ****** 
2023-07-10 15:15:45,244 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.035)       0:07:40.987 ****** 
2023-07-10 15:15:45,283 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.039)       0:07:41.026 ****** 
2023-07-10 15:15:45,317 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.033)       0:07:41.059 ****** 
2023-07-10 15:15:45,345 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.028)       0:07:41.088 ****** 
2023-07-10 15:15:45,374 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.028)       0:07:41.117 ****** 
2023-07-10 15:15:45,405 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.031)       0:07:41.148 ****** 
2023-07-10 15:15:45,434 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.029)       0:07:41.177 ****** 
2023-07-10 15:15:45,465 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.030)       0:07:41.208 ****** 
2023-07-10 15:15:45,495 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.030)       0:07:41.238 ****** 
2023-07-10 15:15:45,531 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.035)       0:07:41.274 ****** 
2023-07-10 15:15:45,563 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.031)       0:07:41.306 ****** 
2023-07-10 15:15:45,593 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.030)       0:07:41.336 ****** 
2023-07-10 15:15:45,631 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.037)       0:07:41.374 ****** 
2023-07-10 15:15:45,676 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.044)       0:07:41.419 ****** 
2023-07-10 15:15:45,703 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.027)       0:07:41.446 ****** 
2023-07-10 15:15:45,732 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.029)       0:07:41.475 ****** 
2023-07-10 15:15:45,762 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.029)       0:07:41.505 ****** 
2023-07-10 15:15:45,790 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.027)       0:07:41.533 ****** 
2023-07-10 15:15:45,819 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.029)       0:07:41.562 ****** 
2023-07-10 15:15:45,859 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.039)       0:07:41.602 ****** 
2023-07-10 15:15:45,905 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.045)       0:07:41.648 ****** 
2023-07-10 15:15:45,956 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.051)       0:07:41.699 ****** 
2023-07-10 15:15:45,983 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:45 +0300 (0:00:00.026)       0:07:41.726 ****** 
2023-07-10 15:15:46,016 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.033)       0:07:41.759 ****** 
2023-07-10 15:15:46,047 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.030)       0:07:41.790 ****** 
2023-07-10 15:15:46,078 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.030)       0:07:41.821 ****** 
2023-07-10 15:15:46,139 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.061)       0:07:41.882 ****** 
2023-07-10 15:15:46,212 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.073)       0:07:41.955 ****** 
2023-07-10 15:15:46,268 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.055)       0:07:42.011 ****** 
2023-07-10 15:15:46,327 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.059)       0:07:42.070 ****** 
2023-07-10 15:15:46,355 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.028)       0:07:42.098 ****** 
2023-07-10 15:15:46,385 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.029)       0:07:42.128 ****** 
2023-07-10 15:15:46,414 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.028)       0:07:42.157 ****** 
2023-07-10 15:15:46,469 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.055)       0:07:42.212 ****** 
2023-07-10 15:15:46,536 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.067)       0:07:42.279 ****** 
2023-07-10 15:15:46,565 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.028)       0:07:42.308 ****** 
2023-07-10 15:15:46,596 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.030)       0:07:42.339 ****** 
2023-07-10 15:15:46,624 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.028)       0:07:42.367 ****** 
2023-07-10 15:15:46,745 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.120)       0:07:42.488 ****** 
2023-07-10 15:15:46,815 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.070)       0:07:42.558 ****** 
2023-07-10 15:15:46,843 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.027)       0:07:42.586 ****** 
2023-07-10 15:15:46,871 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.028)       0:07:42.614 ****** 
2023-07-10 15:15:46,925 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.054)       0:07:42.668 ****** 
2023-07-10 15:15:46,986 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:46 +0300 (0:00:00.060)       0:07:42.729 ****** 
2023-07-10 15:15:47,012 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.026)       0:07:42.755 ****** 
2023-07-10 15:15:47,047 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.034)       0:07:42.790 ****** 
2023-07-10 15:15:47,117 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.069)       0:07:42.859 ****** 
2023-07-10 15:15:47,192 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.075)       0:07:42.934 ****** 
2023-07-10 15:15:47,225 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.033)       0:07:42.968 ****** 
2023-07-10 15:15:47,267 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.041)       0:07:43.010 ****** 
2023-07-10 15:15:47,297 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.029)       0:07:43.040 ****** 
2023-07-10 15:15:47,335 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.038)       0:07:43.078 ****** 
2023-07-10 15:15:47,366 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.030)       0:07:43.109 ****** 
2023-07-10 15:15:47,406 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.039)       0:07:43.149 ****** 
2023-07-10 15:15:47,435 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.029)       0:07:43.178 ****** 
2023-07-10 15:15:47,473 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.037)       0:07:43.216 ****** 
2023-07-10 15:15:47,506 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.032)       0:07:43.249 ****** 
2023-07-10 15:15:47,541 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.035)       0:07:43.284 ****** 
2023-07-10 15:15:47,569 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.028)       0:07:43.312 ****** 
2023-07-10 15:15:47,607 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.037)       0:07:43.350 ****** 
2023-07-10 15:15:47,635 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.028)       0:07:43.378 ****** 
2023-07-10 15:15:47,682 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.046)       0:07:43.425 ****** 
2023-07-10 15:15:47,713 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.030)       0:07:43.456 ****** 
2023-07-10 15:15:47,770 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.057)       0:07:43.513 ****** 
2023-07-10 15:15:47,834 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.063)       0:07:43.577 ****** 
2023-07-10 15:15:47,865 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.031)       0:07:43.608 ****** 
2023-07-10 15:15:47,913 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.047)       0:07:43.656 ****** 
2023-07-10 15:15:47,945 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.031)       0:07:43.688 ****** 
2023-07-10 15:15:47,976 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:47 +0300 (0:00:00.031)       0:07:43.719 ****** 
2023-07-10 15:15:48,007 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.030)       0:07:43.750 ****** 
2023-07-10 15:15:48,047 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.040)       0:07:43.790 ****** 
2023-07-10 15:15:48,076 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.029)       0:07:43.819 ****** 
2023-07-10 15:15:48,109 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.032)       0:07:43.852 ****** 
2023-07-10 15:15:48,141 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.032)       0:07:43.884 ****** 
2023-07-10 15:15:48,182 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.041)       0:07:43.925 ****** 
2023-07-10 15:15:48,218 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.035)       0:07:43.961 ****** 
2023-07-10 15:15:48,257 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.039)       0:07:44.000 ****** 
2023-07-10 15:15:48,291 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.033)       0:07:44.034 ****** 
2023-07-10 15:15:48,339 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.048)       0:07:44.082 ****** 
2023-07-10 15:15:48,416 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.076)       0:07:44.159 ****** 
2023-07-10 15:15:48,444 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.027)       0:07:44.187 ****** 
2023-07-10 15:15:48,473 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.029)       0:07:44.216 ****** 
2023-07-10 15:15:48,503 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.030)       0:07:44.246 ****** 
2023-07-10 15:15:48,543 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.039)       0:07:44.286 ****** 
2023-07-10 15:15:48,600 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.056)       0:07:44.343 ****** 
2023-07-10 15:15:48,635 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.035)       0:07:44.378 ****** 
2023-07-10 15:15:48,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.035)       0:07:44.414 ****** 
2023-07-10 15:15:48,708 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.036)       0:07:44.451 ****** 
2023-07-10 15:15:48,741 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.033)       0:07:44.484 ****** 
2023-07-10 15:15:48,777 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.034)       0:07:44.519 ****** 
2023-07-10 15:15:48,814 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.037)       0:07:44.557 ****** 
2023-07-10 15:15:48,849 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.035)       0:07:44.592 ****** 
2023-07-10 15:15:48,884 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.035)       0:07:44.627 ****** 
2023-07-10 15:15:48,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.038)       0:07:44.666 ****** 
2023-07-10 15:15:48,957 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.034)       0:07:44.700 ****** 
2023-07-10 15:15:48,991 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:48 +0300 (0:00:00.033)       0:07:44.734 ****** 
2023-07-10 15:15:49,025 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.033)       0:07:44.768 ****** 
2023-07-10 15:15:49,056 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.030)       0:07:44.799 ****** 
2023-07-10 15:15:49,090 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.034)       0:07:44.833 ****** 
2023-07-10 15:15:49,134 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.043)       0:07:44.876 ****** 
2023-07-10 15:15:49,162 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.028)       0:07:44.905 ****** 
2023-07-10 15:15:49,192 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.029)       0:07:44.935 ****** 
2023-07-10 15:15:49,238 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.045)       0:07:44.981 ****** 
2023-07-10 15:15:49,278 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.040)       0:07:45.021 ****** 
2023-07-10 15:15:49,306 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.027)       0:07:45.049 ****** 
2023-07-10 15:15:49,334 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.028)       0:07:45.077 ****** 
2023-07-10 15:15:49,363 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.028)       0:07:45.106 ****** 
2023-07-10 15:15:49,395 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.032)       0:07:45.138 ****** 
2023-07-10 15:15:49,428 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.032)       0:07:45.170 ****** 
2023-07-10 15:15:49,458 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.030)       0:07:45.201 ****** 
2023-07-10 15:15:49,488 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.029)       0:07:45.231 ****** 
2023-07-10 15:15:49,516 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.028)       0:07:45.259 ****** 
2023-07-10 15:15:49,548 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.031)       0:07:45.291 ****** 
2023-07-10 15:15:49,587 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.039)       0:07:45.330 ****** 
2023-07-10 15:15:49,624 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.036)       0:07:45.367 ****** 
2023-07-10 15:15:49,655 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.030)       0:07:45.398 ****** 
2023-07-10 15:15:49,683 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.028)       0:07:45.426 ****** 
2023-07-10 15:15:49,745 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.061)       0:07:45.488 ****** 
2023-07-10 15:15:49,781 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.035)       0:07:45.524 ****** 
2023-07-10 15:15:49,826 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.044)       0:07:45.569 ****** 
2023-07-10 15:15:49,867 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.041)       0:07:45.610 ****** 
2023-07-10 15:15:49,894 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:49 +0300 (0:00:00.027)       0:07:45.637 ****** 
2023-07-10 15:15:49,968 p=14511 u=kubernetmachine n=ansible | PLAY [Apply resolv.conf changes now that cluster DNS is up] **********************************************************************************************************************************
2023-07-10 15:15:50,087 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.192)       0:07:45.830 ****** 
2023-07-10 15:15:50,124 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.037)       0:07:45.867 ****** 
2023-07-10 15:15:50,162 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.037)       0:07:45.905 ****** 
2023-07-10 15:15:50,199 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.036)       0:07:45.942 ****** 
2023-07-10 15:15:50,238 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.038)       0:07:45.981 ****** 
2023-07-10 15:15:50,275 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.036)       0:07:46.018 ****** 
2023-07-10 15:15:50,314 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.039)       0:07:46.057 ****** 
2023-07-10 15:15:50,354 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.039)       0:07:46.097 ****** 
2023-07-10 15:15:50,389 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.034)       0:07:46.132 ****** 
2023-07-10 15:15:50,427 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:50 +0300 (0:00:00.038)       0:07:46.170 ****** 
2023-07-10 15:15:52,111 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:01.684)       0:07:47.854 ****** 
2023-07-10 15:15:52,152 p=14511 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:15:52,152 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:15:52,197 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.085)       0:07:47.940 ****** 
2023-07-10 15:15:52,241 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.043)       0:07:47.984 ****** 
2023-07-10 15:15:52,276 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.035)       0:07:48.019 ****** 
2023-07-10 15:15:52,315 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.038)       0:07:48.058 ****** 
2023-07-10 15:15:52,352 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.037)       0:07:48.095 ****** 
2023-07-10 15:15:52,390 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.038)       0:07:48.133 ****** 
2023-07-10 15:15:52,431 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.040)       0:07:48.174 ****** 
2023-07-10 15:15:52,660 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 15:15:52,661 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 15:15:52,674 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:52 +0300 (0:00:00.242)       0:07:48.417 ****** 
2023-07-10 15:15:53,083 p=14511 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 15:15:53,084 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 15:15:53,108 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.434)       0:07:48.851 ****** 
2023-07-10 15:15:53,170 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.061)       0:07:48.913 ****** 
2023-07-10 15:15:53,216 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.046)       0:07:48.959 ****** 
2023-07-10 15:15:53,271 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.054)       0:07:49.014 ****** 
2023-07-10 15:15:53,317 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.046)       0:07:49.060 ****** 
2023-07-10 15:15:53,365 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.047)       0:07:49.108 ****** 
2023-07-10 15:15:53,414 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.049)       0:07:49.157 ****** 
2023-07-10 15:15:53,463 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.048)       0:07:49.206 ****** 
2023-07-10 15:15:53,751 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************************************************************************************************************
2023-07-10 15:15:53,751 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:15:53,765 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:53 +0300 (0:00:00.302)       0:07:49.508 ****** 
2023-07-10 15:15:54,050 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:15:54,050 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 15:15:54,065 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:54 +0300 (0:00:00.299)       0:07:49.808 ****** 
2023-07-10 15:15:54,133 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:15:54,134 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 15:15:54,148 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:54 +0300 (0:00:00.082)       0:07:49.891 ****** 
2023-07-10 15:15:54,436 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************************************************************************************************************
2023-07-10 15:15:54,437 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.003511", "end": "2023-07-10 12:15:54.414430", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:15:54.410919", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:15:54,451 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:54 +0300 (0:00:00.302)       0:07:50.194 ****** 
2023-07-10 15:15:54,740 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************************************************************************************************************
2023-07-10 15:15:54,740 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 15:15:54,755 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:54 +0300 (0:00:00.304)       0:07:50.498 ****** 
2023-07-10 15:15:55,047 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************************************************************************************************************
2023-07-10 15:15:55,047 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:15:55,062 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:55 +0300 (0:00:00.306)       0:07:50.805 ****** 
2023-07-10 15:15:55,359 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************************************************************************************************************
2023-07-10 15:15:55,360 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 15:15:55,375 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:55 +0300 (0:00:00.312)       0:07:51.118 ****** 
2023-07-10 15:15:55,514 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************************************************************************************************************
2023-07-10 15:15:55,515 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 15:15:55,528 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:55 +0300 (0:00:00.153)       0:07:51.271 ****** 
2023-07-10 15:15:55,657 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********************************************************************************************************
2023-07-10 15:15:55,658 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:15:55,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:55 +0300 (0:00:00.142)       0:07:51.414 ****** 
2023-07-10 15:15:55,971 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************************************************************************************************************
2023-07-10 15:15:55,972 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.013059", "end": "2023-07-10 12:15:55.950986", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 12:15:55.937927", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:15:55,987 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:55 +0300 (0:00:00.315)       0:07:51.730 ****** 
2023-07-10 15:15:56,280 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************************************************************************************************************
2023-07-10 15:15:56,281 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.012942", "end": "2023-07-10 12:15:56.256067", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:15:56.243125", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 15:15:56,296 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:56 +0300 (0:00:00.309)       0:07:52.039 ****** 
2023-07-10 15:15:56,546 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******************************************************************************************************
2023-07-10 15:15:56,546 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 15:15:56,559 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:56 +0300 (0:00:00.262)       0:07:52.301 ****** 
2023-07-10 15:15:56,685 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************************************************************************************************************
2023-07-10 15:15:56,686 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 15:15:56,700 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:56 +0300 (0:00:00.141)       0:07:52.443 ****** 
2023-07-10 15:15:56,940 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************************************************************************************************************
2023-07-10 15:15:56,941 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991217.020318, "block_size": 4096, "blocks": 8, "ctime": 1688991215.0763168, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286894, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1688991214.9523168, "nlink": 1, "path": "/etc/kubernetes/kubelet.env", "pw_name": "root", "readable": true, "rgrp": true, "roth": false, "rusr": true, "size": 521, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:15:56,948 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:56 +0300 (0:00:00.248)       0:07:52.691 ****** 
2023-07-10 15:15:56,991 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************************************************************************************************************
2023-07-10 15:15:56,991 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": false}, "changed": false}
2023-07-10 15:15:57,000 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:56 +0300 (0:00:00.052)       0:07:52.743 ****** 
2023-07-10 15:15:57,046 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************************************************************************************************************
2023-07-10 15:15:57,047 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 15:15:57,055 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.054)       0:07:52.798 ****** 
2023-07-10 15:15:57,087 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.031)       0:07:52.830 ****** 
2023-07-10 15:15:57,261 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************************************************************************************************************
2023-07-10 15:15:57,261 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:15:57,270 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.182)       0:07:53.013 ****** 
2023-07-10 15:15:57,301 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.031)       0:07:53.044 ****** 
2023-07-10 15:15:57,472 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************************************************************************************************************
2023-07-10 15:15:57,472 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990413.7360163, "block_size": 4096, "blocks": 8, "ctime": 1688989265.0324173, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 262558, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989265.0324173, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1935, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:15:57,482 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.181)       0:07:53.225 ****** 
2023-07-10 15:15:57,529 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********************************************************************************************************
2023-07-10 15:15:57,529 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 15:15:57,538 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.055)       0:07:53.281 ****** 
2023-07-10 15:15:57,571 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.032)       0:07:53.314 ****** 
2023-07-10 15:15:57,615 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************************************************************************************************************
2023-07-10 15:15:57,616 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 15:15:57,626 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.055)       0:07:53.369 ****** 
2023-07-10 15:15:57,709 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************************************************************************************************************
2023-07-10 15:15:57,710 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 15:15:57,719 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.092)       0:07:53.462 ****** 
2023-07-10 15:15:57,811 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************************************************************************************************************
2023-07-10 15:15:57,811 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": ["10.233.0.3"]}, "changed": false}
2023-07-10 15:15:57,820 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.100)       0:07:53.562 ****** 
2023-07-10 15:15:57,956 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] ****************************************************************************************************
2023-07-10 15:15:57,956 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "169.254.25.10,127.0.0.53", "supersede_nameserver": "supersede domain-name-servers 169.254.25.10;"}, "changed": false}
2023-07-10 15:15:57,965 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.145)       0:07:53.708 ****** 
2023-07-10 15:15:57,997 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:57 +0300 (0:00:00.031)       0:07:53.740 ****** 
2023-07-10 15:15:58,092 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************************************************************************************************************
2023-07-10 15:15:58,093 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 15:15:58,105 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.107)       0:07:53.848 ****** 
2023-07-10 15:15:58,136 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:53.879 ****** 
2023-07-10 15:15:58,311 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************************************************************************************************************
2023-07-10 15:15:58,312 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:15:58,320 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.183)       0:07:54.063 ****** 
2023-07-10 15:15:58,350 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:54.093 ****** 
2023-07-10 15:15:58,392 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.041)       0:07:54.135 ****** 
2023-07-10 15:15:58,423 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.031)       0:07:54.166 ****** 
2023-07-10 15:15:58,454 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:54.197 ****** 
2023-07-10 15:15:58,485 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.031)       0:07:54.228 ****** 
2023-07-10 15:15:58,515 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:54.258 ****** 
2023-07-10 15:15:58,545 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.029)       0:07:54.288 ****** 
2023-07-10 15:15:58,603 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.057)       0:07:54.346 ****** 
2023-07-10 15:15:58,633 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:54.376 ****** 
2023-07-10 15:15:58,667 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.033)       0:07:54.410 ****** 
2023-07-10 15:15:58,699 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.031)       0:07:54.442 ****** 
2023-07-10 15:15:58,730 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.031)       0:07:54.473 ****** 
2023-07-10 15:15:58,761 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.031)       0:07:54.504 ****** 
2023-07-10 15:15:58,794 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.032)       0:07:54.536 ****** 
2023-07-10 15:15:58,826 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.031)       0:07:54.568 ****** 
2023-07-10 15:15:58,855 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.029)       0:07:54.598 ****** 
2023-07-10 15:15:58,884 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.029)       0:07:54.627 ****** 
2023-07-10 15:15:58,915 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:54.658 ****** 
2023-07-10 15:15:58,945 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.029)       0:07:54.688 ****** 
2023-07-10 15:15:58,975 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:58 +0300 (0:00:00.030)       0:07:54.718 ****** 
2023-07-10 15:15:59,010 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.034)       0:07:54.753 ****** 
2023-07-10 15:15:59,039 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.028)       0:07:54.782 ****** 
2023-07-10 15:15:59,067 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.028)       0:07:54.810 ****** 
2023-07-10 15:15:59,096 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.028)       0:07:54.839 ****** 
2023-07-10 15:15:59,128 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.031)       0:07:54.871 ****** 
2023-07-10 15:15:59,157 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.029)       0:07:54.900 ****** 
2023-07-10 15:15:59,188 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.030)       0:07:54.931 ****** 
2023-07-10 15:15:59,219 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.031)       0:07:54.962 ****** 
2023-07-10 15:15:59,250 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.030)       0:07:54.993 ****** 
2023-07-10 15:15:59,279 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.028)       0:07:55.022 ****** 
2023-07-10 15:15:59,308 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.029)       0:07:55.051 ****** 
2023-07-10 15:15:59,337 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.029)       0:07:55.080 ****** 
2023-07-10 15:15:59,369 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.031)       0:07:55.112 ****** 
2023-07-10 15:15:59,399 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.030)       0:07:55.142 ****** 
2023-07-10 15:15:59,430 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.031)       0:07:55.173 ****** 
2023-07-10 15:15:59,461 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.030)       0:07:55.204 ****** 
2023-07-10 15:15:59,490 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.029)       0:07:55.233 ****** 
2023-07-10 15:15:59,520 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.029)       0:07:55.263 ****** 
2023-07-10 15:15:59,551 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.031)       0:07:55.294 ****** 
2023-07-10 15:15:59,581 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.030)       0:07:55.325 ****** 
2023-07-10 15:15:59,614 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.032)       0:07:55.357 ****** 
2023-07-10 15:15:59,671 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.056)       0:07:55.414 ****** 
2023-07-10 15:15:59,715 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.044)       0:07:55.458 ****** 
2023-07-10 15:15:59,747 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.032)       0:07:55.490 ****** 
2023-07-10 15:15:59,778 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.030)       0:07:55.521 ****** 
2023-07-10 15:15:59,819 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.041)       0:07:55.562 ****** 
2023-07-10 15:15:59,854 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.035)       0:07:55.597 ****** 
2023-07-10 15:15:59,908 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.053)       0:07:55.651 ****** 
2023-07-10 15:15:59,940 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.032)       0:07:55.683 ****** 
2023-07-10 15:15:59,974 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:15:59 +0300 (0:00:00.034)       0:07:55.717 ****** 
2023-07-10 15:16:00,057 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.082)       0:07:55.800 ****** 
2023-07-10 15:16:00,128 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.071)       0:07:55.871 ****** 
2023-07-10 15:16:00,163 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.034)       0:07:55.906 ****** 
2023-07-10 15:16:00,197 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.034)       0:07:55.940 ****** 
2023-07-10 15:16:00,757 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************************************************************************************************************
2023-07-10 15:16:00,757 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "checksum": "9a78babd29d4e2749f09460b635e9de854bfa856", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "md5sum": "de4842c0654e57ad4bdf9bed594642d6", "mode": "0644", "owner": "root", "size": 126, "src": "/root/.ansible/tmp/ansible-tmp-1688991360.250224-21043-41853260457798/source", "state": "file", "uid": 0}
2023-07-10 15:16:00,767 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.570)       0:07:56.510 ****** 
2023-07-10 15:16:00,799 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.031)       0:07:56.542 ****** 
2023-07-10 15:16:00,832 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.032)       0:07:56.575 ****** 
2023-07-10 15:16:00,864 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.031)       0:07:56.607 ****** 
2023-07-10 15:16:00,898 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.034)       0:07:56.641 ****** 
2023-07-10 15:16:00,934 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.035)       0:07:56.677 ****** 
2023-07-10 15:16:00,968 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:00 +0300 (0:00:00.034)       0:07:56.711 ****** 
2023-07-10 15:16:01,003 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.034)       0:07:56.746 ****** 
2023-07-10 15:16:01,036 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.033)       0:07:56.779 ****** 
2023-07-10 15:16:01,067 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.030)       0:07:56.810 ****** 
2023-07-10 15:16:01,100 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:56.843 ****** 
2023-07-10 15:16:01,133 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:56.876 ****** 
2023-07-10 15:16:01,166 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.033)       0:07:56.909 ****** 
2023-07-10 15:16:01,198 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.031)       0:07:56.941 ****** 
2023-07-10 15:16:01,232 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.033)       0:07:56.975 ****** 
2023-07-10 15:16:01,265 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.008 ****** 
2023-07-10 15:16:01,297 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.040 ****** 
2023-07-10 15:16:01,330 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.073 ****** 
2023-07-10 15:16:01,363 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.106 ****** 
2023-07-10 15:16:01,394 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.031)       0:07:57.137 ****** 
2023-07-10 15:16:01,427 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.033)       0:07:57.170 ****** 
2023-07-10 15:16:01,470 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.042)       0:07:57.213 ****** 
2023-07-10 15:16:01,501 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.031)       0:07:57.244 ****** 
2023-07-10 15:16:01,534 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.277 ****** 
2023-07-10 15:16:01,567 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.310 ****** 
2023-07-10 15:16:01,600 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.033)       0:07:57.343 ****** 
2023-07-10 15:16:01,636 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.035)       0:07:57.378 ****** 
2023-07-10 15:16:01,667 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.031)       0:07:57.410 ****** 
2023-07-10 15:16:01,700 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.032)       0:07:57.443 ****** 
2023-07-10 15:16:01,771 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.070)       0:07:57.514 ****** 
2023-07-10 15:16:01,802 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.030)       0:07:57.545 ****** 
2023-07-10 15:16:01,831 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.029)       0:07:57.574 ****** 
2023-07-10 15:16:01,863 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.031)       0:07:57.606 ****** 
2023-07-10 15:16:01,894 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.030)       0:07:57.637 ****** 
2023-07-10 15:16:01,923 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.029)       0:07:57.666 ****** 
2023-07-10 15:16:01,957 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.033)       0:07:57.700 ****** 
2023-07-10 15:16:01,988 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:01 +0300 (0:00:00.031)       0:07:57.731 ****** 
2023-07-10 15:16:02,021 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.033)       0:07:57.764 ****** 
2023-07-10 15:16:02,052 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.030)       0:07:57.795 ****** 
2023-07-10 15:16:02,084 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.032)       0:07:57.827 ****** 
2023-07-10 15:16:02,114 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.029)       0:07:57.857 ****** 
2023-07-10 15:16:02,146 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.032)       0:07:57.889 ****** 
2023-07-10 15:16:02,249 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************************************************************************************************************
2023-07-10 15:16:02,249 p=14511 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 15:16:02,259 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.112)       0:07:58.002 ****** 
2023-07-10 15:16:02,438 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************************************************************************************************************
2023-07-10 15:16:02,439 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:16:02,447 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.188)       0:07:58.190 ****** 
2023-07-10 15:16:02,484 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.036)       0:07:58.227 ****** 
2023-07-10 15:16:02,651 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************************************************************************************************************
2023-07-10 15:16:02,652 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4KMTI3LjAuMS4xIGt1YmVybmV0bWFjaGluZXR3bwoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sgbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluCmZlMDA6OjAgaXA2LWxvY2FsbmV0CmZmMDA6OjAgaXA2LW1jYXN0cHJlZml4CmZmMDI6OjEgaXA2LWFsbG5vZGVzCmZmMDI6OjIgaXA2LWFsbHJvdXRlcnMKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxOTIuMTY4LjEyMi4yOSBub2RlMS5saW51eHRlY2hpLmxvY2FsIG5vZGUxIAojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 15:16:02,660 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.176)       0:07:58.403 ****** 
2023-07-10 15:16:02,738 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ************************************************************************************************
2023-07-10 15:16:02,739 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost localhost.localdomain"}
2023-07-10 15:16:02,824 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain"}
2023-07-10 15:16:02,917 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:02 +0300 (0:00:00.257)       0:07:58.660 ****** 
2023-07-10 15:16:02,989 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *******************************************************************************************
2023-07-10 15:16:02,990 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:16:03,032 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:16:03,043 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:03 +0300 (0:00:00.125)       0:07:58.786 ****** 
2023-07-10 15:16:03,246 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************************************************************************************************************
2023-07-10 15:16:03,246 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": ""}
2023-07-10 15:16:03,407 p=14511 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": ""}
2023-07-10 15:16:03,417 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:03 +0300 (0:00:00.374)       0:07:59.160 ****** 
2023-07-10 15:16:03,447 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:03 +0300 (0:00:00.030)       0:07:59.190 ****** 
2023-07-10 15:16:03,639 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****************************************************************************************************
2023-07-10 15:16:03,640 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"backup_file": "/etc/dhcp/dhclient.conf.19883.2023-07-10@12:16:03~", "changed": true, "msg": "Block inserted"}
2023-07-10 15:16:03,648 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:03 +0300 (0:00:00.200)       0:07:59.391 ****** 
2023-07-10 15:16:04,015 p=14511 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************************************************************************************************************
2023-07-10 15:16:04,016 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "size": 456, "state": "file", "uid": 0}
2023-07-10 15:16:04,024 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.376)       0:07:59.767 ****** 
2023-07-10 15:16:04,064 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.039)       0:07:59.806 ****** 
2023-07-10 15:16:04,095 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.031)       0:07:59.838 ****** 
2023-07-10 15:16:04,128 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.033)       0:07:59.871 ****** 
2023-07-10 15:16:04,145 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.016)       0:07:59.888 ****** 
2023-07-10 15:16:04,336 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | propagate resolvconf to k8s components] ************************************************************************************************
2023-07-10 15:16:04,337 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/bin/true"], "delta": "0:00:00.002885", "end": "2023-07-10 12:16:04.324622", "msg": "", "rc": 0, "start": "2023-07-10 12:16:04.321737", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:16:04,346 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.200)       0:08:00.089 ****** 
2023-07-10 15:16:04,681 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | reload kubelet] ************************************************************************************************************************
2023-07-10 15:16:04,682 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:14:08 UTC", "ActiveEnterTimestampMonotonic": "15798942463", "ActiveExitTimestamp": "Mon 2023-07-10 12:14:08 UTC", "ActiveExitTimestampMonotonic": "15798877552", "ActiveState": "active", "After": "basic.target system.slice systemd-journald.socket containerd.service sysinit.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:14:08 UTC", "AssertTimestampMonotonic": "15798926481", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "2332107000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:14:08 UTC", "ConditionTimestampMonotonic": "15798926479", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/kubelet.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "EnvironmentFiles": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "14331", "ExecMainStartTimestamp": "Mon 2023-07-10 12:14:08 UTC", "ExecMainStartTimestampMonotonic": "15798942234", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[Mon 2023-07-10 12:14:08 UTC] ; stop_time=[n/a] ; pid=14331 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; flags= ; start_time=[Mon 2023-07-10 12:14:08 UTC] ; stop_time=[n/a] ; pid=14331 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Mon 2023-07-10 12:14:08 UTC", "InactiveEnterTimestampMonotonic": "15798926084", "InactiveExitTimestamp": "Mon 2023-07-10 12:14:08 UTC", "InactiveExitTimestampMonotonic": "15798942463", "InvocationID": "263a7a9b61fe44f59472bf74ce7acc0d", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "14331", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "43790336", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:14:08 UTC", "StateChangeTimestampMonotonic": "15798942463", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "11", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "containerd.service", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 15:16:04,691 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.344)       0:08:00.433 ****** 
2023-07-10 15:16:04,927 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-apiserver configured] *************************************************************************************************************
2023-07-10 15:16:04,928 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991229.928326, "block_size": 4096, "blocks": 16, "ctime": 1688991229.8683257, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286914, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0600", "mtime": 1688991229.8683257, "nlink": 1, "path": "/etc/kubernetes/manifests/kube-apiserver.yaml", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 4636, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:16:04,938 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:04 +0300 (0:00:00.247)       0:08:00.681 ****** 
2023-07-10 15:16:05,142 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | kube-controller configured] ************************************************************************************************************
2023-07-10 15:16:05,142 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991229.928326, "block_size": 4096, "blocks": 8, "ctime": 1688991229.8683257, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286915, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0600", "mtime": 1688991229.8683257, "nlink": 1, "path": "/etc/kubernetes/manifests/kube-controller-manager.yaml", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 3761, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:16:05,151 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:05 +0300 (0:00:00.212)       0:08:00.894 ****** 
2023-07-10 15:16:05,183 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:05 +0300 (0:00:00.032)       0:08:00.926 ****** 
2023-07-10 15:16:05,584 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-controller-manager crio/containerd] ***************************************************************************************
2023-07-10 15:16:05,585 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": "set -o pipefail && /usr/local/bin/crictl pods --name kube-controller-manager* -q | xargs -I% --no-run-if-empty bash -c '/usr/local/bin/crictl stopp % && /usr/local/bin/crictl rmp %'", "delta": "0:00:00.216566", "end": "2023-07-10 12:16:05.571058", "msg": "", "rc": 0, "start": "2023-07-10 12:16:05.354492", "stderr": "", "stderr_lines": [], "stdout": "Stopped sandbox 6329a266fa229e5099c6fe2cf89b4dc3532ed5d3bd3ab7e78e957e6ba1fca30c\nRemoved sandbox 6329a266fa229e5099c6fe2cf89b4dc3532ed5d3bd3ab7e78e957e6ba1fca30c", "stdout_lines": ["Stopped sandbox 6329a266fa229e5099c6fe2cf89b4dc3532ed5d3bd3ab7e78e957e6ba1fca30c", "Removed sandbox 6329a266fa229e5099c6fe2cf89b4dc3532ed5d3bd3ab7e78e957e6ba1fca30c"]}
2023-07-10 15:16:05,592 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:05 +0300 (0:00:00.408)       0:08:01.335 ****** 
2023-07-10 15:16:05,622 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:05 +0300 (0:00:00.030)       0:08:01.365 ****** 
2023-07-10 15:16:06,042 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | restart kube-apiserver crio/containerd] ************************************************************************************************
2023-07-10 15:16:06,043 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": "set -o pipefail && /usr/local/bin/crictl pods --name kube-apiserver* -q | xargs -I% --no-run-if-empty bash -c '/usr/local/bin/crictl stopp % && /usr/local/bin/crictl rmp %'", "delta": "0:00:00.238592", "end": "2023-07-10 12:16:06.029107", "msg": "", "rc": 0, "start": "2023-07-10 12:16:05.790515", "stderr": "", "stderr_lines": [], "stdout": "Stopped sandbox a634307f753b70eb6bd7e67ecee6956e4c808153de6859f002d1597b29f2e997\nRemoved sandbox a634307f753b70eb6bd7e67ecee6956e4c808153de6859f002d1597b29f2e997", "stdout_lines": ["Stopped sandbox a634307f753b70eb6bd7e67ecee6956e4c808153de6859f002d1597b29f2e997", "Removed sandbox a634307f753b70eb6bd7e67ecee6956e4c808153de6859f002d1597b29f2e997"]}
2023-07-10 15:16:06,051 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:06 +0300 (0:00:00.428)       0:08:01.794 ****** 
2023-07-10 15:16:14,815 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | wait for the apiserver to be running] **************************************************************************************************
2023-07-10 15:16:14,815 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 6, "audit_id": "83247322-ccdc-4b44-81b7-33205d2cb5df", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 12:16:14 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 15:16:14,823 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:14 +0300 (0:00:08.772)       0:08:10.566 ****** 
2023-07-10 15:16:15,282 p=14511 u=kubernetmachine n=ansible | RUNNING HANDLER [kubernetes/preinstall : Preinstall | Restart systemd-resolved] **************************************************************************************************************
2023-07-10 15:16:15,283 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "name": "systemd-resolved", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 11:41:06 UTC", "ActiveEnterTimestampMonotonic": "13817222318", "ActiveExitTimestamp": "Mon 2023-07-10 11:41:06 UTC", "ActiveExitTimestampMonotonic": "13817156749", "ActiveState": "active", "After": "tmp.mount systemd-tmpfiles-setup.service system.slice -.mount systemd-networkd.service systemd-sysusers.service systemd-journald.socket", "AllowIsolate": "no", "AmbientCapabilities": "cap_setpcap cap_net_bind_service cap_net_raw", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 11:41:06 UTC", "AssertTimestampMonotonic": "13817159475", "Before": "nss-lookup.target network.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "BusName": "org.freedesktop.resolve1", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "159603000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanClean": "runtime", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_setpcap cap_net_bind_service cap_net_raw", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 11:41:06 UTC", "ConditionTimestampMonotonic": "13817159474", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/systemd-resolved.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "no", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Network Name Resolution", "DeviceAllow": "char-rtc r", "DevicePolicy": "closed", "Documentation": "\"man:systemd-resolved.service(8)\" \"man:org.freedesktop.resolve1(5)\" https://www.freedesktop.org/wiki/Software/systemd/writing-network-configuration-managers https://www.freedesktop.org/wiki/Software/systemd/writing-resolver-clients", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "4661", "ExecMainStartTimestamp": "Mon 2023-07-10 11:41:06 UTC", "ExecMainStartTimestampMonotonic": "13817174692", "ExecMainStatus": "0", "ExecStart": "{ path=/lib/systemd/systemd-resolved ; argv[]=/lib/systemd/systemd-resolved ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/lib/systemd/systemd-resolved ; argv[]=/lib/systemd/systemd-resolved ; flags=ambient ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/lib/systemd/system/systemd-resolved.service", "FreezerState": "running", "GID": "103", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "systemd-resolved.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Mon 2023-07-10 11:41:06 UTC", "InactiveEnterTimestampMonotonic": "13817158970", "InactiveExitTimestamp": "Mon 2023-07-10 11:41:06 UTC", "InactiveExitTimestampMonotonic": "13817175012", "InvocationID": "eec3632e867349809e6f59501bf187e1", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "yes", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "4661", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "5754880", "MemoryDenyWriteExecute": "yes", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "systemd-resolved.service dbus-org.freedesktop.resolve1.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "yes", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "yes", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "yes", "ProtectControlGroups": "yes", "ProtectHome": "yes", "ProtectHostname": "no", "ProtectKernelLogs": "yes", "ProtectKernelModules": "yes", "ProtectKernelTunables": "yes", "ProtectProc": "invisible", "ProtectSystem": "strict", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice -.mount", "RequiresMountsFor": "/run/systemd/resolve /var/tmp", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "0", "RestrictAddressFamilies": "AF_INET AF_INET6 AF_NETLINK AF_UNIX", "RestrictNamespaces": "yes", "RestrictRealtime": "yes", "RestrictSUIDSGID": "yes", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectory": "systemd/resolve", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "yes", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 11:41:06 UTC", "StateChangeTimestampMonotonic": "13817222318", "StateDirectoryMode": "0755", "StatusErrno": "0", "StatusText": "Processing requests...", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallArchitectures": "native", "SystemCallErrorNumber": "1", "SystemCallFilter": "_llseek _newselect accept accept4 access add_key alarm arch_prctl bind brk cacheflush capget capset chdir chmod chown chown32 clock_getres clock_getres_time64 clock_gettime clock_gettime64 clock_nanosleep clock_nanosleep_time64 clone clone3 close close_range connect copy_file_range creat dup dup2 dup3 epoll_create epoll_create1 epoll_ctl epoll_ctl_old epoll_pwait epoll_pwait2 epoll_wait epoll_wait_old eventfd eventfd2 execve execveat exit exit_group faccessat faccessat2 fadvise64 fadvise64_64 fallocate fchdir fchmod fchmodat fchown fchown32 fchownat fcntl fcntl64 fdatasync fgetxattr flistxattr flock fork fremovexattr fsetxattr fstat fstat64 fstatat64 fstatfs fstatfs64 fsync ftruncate ftruncate64 futex futex_time64 futimesat get_mempolicy get_robust_list get_thread_area getcpu getcwd getdents getdents64 getegid getegid32 geteuid geteuid32 getgid getgid32 getgroups getgroups32 getitimer getpeername getpgid getpgrp getpid getppid getpriority getrandom getresgid getresgid32 getresuid getresuid32 getrlimit getrusage getsid getsockname getsockopt gettid gettimeofday getuid getuid32 getxattr inotify_add_watch inotify_init inotify_init1 inotify_rm_watch io_cancel io_destroy io_getevents io_pgetevents io_pgetevents_time64 io_setup io_submit io_uring_enter io_uring_register io_uring_setup ioctl ioprio_get ioprio_set ipc kcmp keyctl kill lchown lchown32 lgetxattr link linkat listen listxattr llistxattr lremovexattr lseek lsetxattr lstat lstat64 madvise mbind membarrier memfd_create migrate_pages mkdir mkdirat mknod mknodat mlock mlock2 mlockall mmap mmap2 move_pages mprotect mq_getsetattr mq_notify mq_open mq_timedreceive mq_timedreceive_time64 mq_timedsend mq_timedsend_time64 mq_unlink mremap msgctl msgget msgrcv msgsnd msync munlock munlockall munmap name_to_handle_at nanosleep newfstatat nice oldfstat oldlstat oldolduname oldstat olduname open openat openat2 pause personality pidfd_open pidfd_send_signal pipe pipe2 poll ppoll ppoll_time64 prctl pread64 preadv preadv2 prlimit64 process_madvise process_vm_readv process_vm_writev pselect6 pselect6_time64 pwrite64 pwritev pwritev2 read readahead readdir readlink readlinkat readv recv recvfrom recvmmsg recvmmsg_time64 recvmsg remap_file_pages removexattr rename renameat renameat2 request_key restart_syscall rmdir rseq rt_sigaction rt_sigpending rt_sigprocmask rt_sigqueueinfo rt_sigreturn rt_sigsuspend rt_sigtimedwait rt_sigtimedwait_time64 rt_tgsigqueueinfo sched_get_priority_max sched_get_priority_min sched_getaffinity sched_getattr sched_getparam sched_getscheduler sched_rr_get_interval sched_rr_get_interval_time64 sched_setaffinity sched_setattr sched_setparam sched_setscheduler sched_yield select semctl semget semop semtimedop semtimedop_time64 send sendfile sendfile64 sendmmsg sendmsg sendto set_mempolicy set_robust_list set_thread_area set_tid_address set_tls setfsgid setfsgid32 setfsuid setfsuid32 setgid setgid32 setgroups setgroups32 setitimer setns setpgid setpriority setregid setregid32 setresgid setresgid32 setresuid setresuid32 setreuid setreuid32 setrlimit setsid setsockopt setuid setuid32 setxattr shmat shmctl shmdt shmget shutdown sigaction sigaltstack signal signalfd signalfd4 sigpending sigprocmask sigreturn sigsuspend socket socketcall socketpair splice stat stat64 statfs statfs64 statx swapcontext symlink symlinkat sync sync_file_range sync_file_range2 syncfs sysinfo tee tgkill time timer_create timer_delete timer_getoverrun timer_gettime timer_gettime64 timer_settime timer_settime64 timerfd_create timerfd_gettime timerfd_gettime64 timerfd_settime timerfd_settime64 times tkill truncate truncate64 ugetrlimit umask uname unlink unlinkat unshare userfaultfd utime utimensat utimensat_time64 utimes vfork vmsplice wait4 waitid waitpid write writev", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "1", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "102", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "User": "systemd-resolve", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "nss-lookup.target tmp.mount", "WatchdogSignal": "6", "WatchdogTimestamp": "Mon 2023-07-10 12:15:12 UTC", "WatchdogTimestampMonotonic": "15862794167", "WatchdogUSec": "3min"}}
2023-07-10 15:16:15,293 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.469)       0:08:11.036 ****** 
2023-07-10 15:16:15,325 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.031)       0:08:11.068 ****** 
2023-07-10 15:16:15,362 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.036)       0:08:11.104 ****** 
2023-07-10 15:16:15,393 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.031)       0:08:11.136 ****** 
2023-07-10 15:16:15,428 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.034)       0:08:11.171 ****** 
2023-07-10 15:16:15,460 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.032)       0:08:11.203 ****** 
2023-07-10 15:16:15,490 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.030)       0:08:11.233 ****** 
2023-07-10 15:16:15,521 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.030)       0:08:11.264 ****** 
2023-07-10 15:16:15,553 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.032)       0:08:11.296 ****** 
2023-07-10 15:16:15,589 p=14511 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************************************************************************************************************
2023-07-10 15:16:15,818 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.264)       0:08:11.561 ****** 
2023-07-10 15:16:15,866 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****************************************************************************************************
2023-07-10 15:16:15,867 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:15,887 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.069)       0:08:11.630 ****** 
2023-07-10 15:16:15,942 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***********************************************************************************************
2023-07-10 15:16:15,942 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:15,959 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:15 +0300 (0:00:00.071)       0:08:11.702 ****** 
2023-07-10 15:16:16,010 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] **************************************************************************
2023-07-10 15:16:16,011 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:16,027 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.067)       0:08:11.770 ****** 
2023-07-10 15:16:16,072 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.044)       0:08:11.815 ****** 
2023-07-10 15:16:16,120 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************************************************************************************************************
2023-07-10 15:16:16,120 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:16,141 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.068)       0:08:11.884 ****** 
2023-07-10 15:16:16,323 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************************************************************************************************************
2023-07-10 15:16:16,323 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991265.0523465, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "80849706cc7fd83e5d38364f1f00cd0ce675dab4", "ctime": 1688991264.6803463, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 287028, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/x-shellscript", "mode": "0755", "mtime": 1688991264.468346, "nlink": 1, "path": "/usr/local/bin/calicoctl.sh", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 135, "uid": 0, "version": "2961686142", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:16:16,344 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.203)       0:08:12.087 ****** 
2023-07-10 15:16:16,560 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calico ready] *****************************************************************************************************************************************
2023-07-10 15:16:16,560 p=14511 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ClusterInformation", "default"], "delta": "0:00:00.037156", "end": "2023-07-10 12:16:16.546440", "msg": "", "rc": 0, "start": "2023-07-10 12:16:16.509284", "stderr": "", "stderr_lines": [], "stdout": "NAME      CLUSTERGUID                        CLUSTERTYPE                 CALICOVERSION   DATASTOREREADY   \ndefault   cd4a57747119425babcb1a8c3bc95303   kubespray,kubeadm,kdd,k8s   v3.25.1         true             ", "stdout_lines": ["NAME      CLUSTERGUID                        CLUSTERTYPE                 CALICOVERSION   DATASTOREREADY   ", "default   cd4a57747119425babcb1a8c3bc95303   kubespray,kubeadm,kdd,k8s   v3.25.1         true             "]}
2023-07-10 15:16:16,576 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.231)       0:08:12.319 ****** 
2023-07-10 15:16:16,793 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get current calico version] ************************************************************************************************************************************
2023-07-10 15:16:16,794 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/calicoctl.sh version | grep 'Client Version:' | awk '{ print $3}'", "delta": "0:00:00.035764", "end": "2023-07-10 12:16:16.781635", "msg": "", "rc": 0, "start": "2023-07-10 12:16:16.745871", "stderr": "", "stderr_lines": [], "stdout": "v3.25.1", "stdout_lines": ["v3.25.1"]}
2023-07-10 15:16:16,812 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.235)       0:08:12.554 ****** 
2023-07-10 15:16:16,859 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Assert that current calico version is enough for upgrade] ******************************************************************************************************
2023-07-10 15:16:16,859 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:16,877 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.065)       0:08:12.620 ****** 
2023-07-10 15:16:16,925 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.047)       0:08:12.668 ****** 
2023-07-10 15:16:16,965 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:16 +0300 (0:00:00.040)       0:08:12.708 ****** 
2023-07-10 15:16:17,017 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************************************************************************************************************
2023-07-10 15:16:17,018 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:17,037 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.071)       0:08:12.780 ****** 
2023-07-10 15:16:17,086 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************************************************************************************************************
2023-07-10 15:16:17,086 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:17,102 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.065)       0:08:12.845 ****** 
2023-07-10 15:16:17,150 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************************************************************************************************************
2023-07-10 15:16:17,151 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:17,168 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.066)       0:08:12.912 ****** 
2023-07-10 15:16:17,212 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.043)       0:08:12.955 ****** 
2023-07-10 15:16:17,263 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********************************************************************************************************
2023-07-10 15:16:17,263 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:17,285 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.072)       0:08:13.028 ****** 
2023-07-10 15:16:17,516 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************************************************************************************************************
2023-07-10 15:16:17,516 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ipPool", "default-pool", "-o", "json"], "delta": "0:00:00.042993", "end": "2023-07-10 12:16:17.499812", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:16:17.456819", "stderr": "", "stderr_lines": [], "stdout": "{\n  \"kind\": \"IPPool\",\n  \"apiVersion\": \"projectcalico.org/v3\",\n  \"metadata\": {\n    \"name\": \"default-pool\",\n    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",\n    \"resourceVersion\": \"414\",\n    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"\n  },\n  \"spec\": {\n    \"cidr\": \"10.233.64.0/18\",\n    \"vxlanMode\": \"Always\",\n    \"ipipMode\": \"Never\",\n    \"natOutgoing\": true,\n    \"blockSize\": 26,\n    \"nodeSelector\": \"all()\",\n    \"allowedUses\": [\n      \"Workload\",\n      \"Tunnel\"\n    ]\n  }\n}", "stdout_lines": ["{", "  \"kind\": \"IPPool\",", "  \"apiVersion\": \"projectcalico.org/v3\",", "  \"metadata\": {", "    \"name\": \"default-pool\",", "    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",", "    \"resourceVersion\": \"414\",", "    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"", "  },", "  \"spec\": {", "    \"cidr\": \"10.233.64.0/18\",", "    \"vxlanMode\": \"Always\",", "    \"ipipMode\": \"Never\",", "    \"natOutgoing\": true,", "    \"blockSize\": 26,", "    \"nodeSelector\": \"all()\",", "    \"allowedUses\": [", "      \"Workload\",", "      \"Tunnel\"", "    ]", "  }", "}"]}
2023-07-10 15:16:17,534 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.248)       0:08:13.277 ****** 
2023-07-10 15:16:17,580 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Set calico_pool_conf] ******************************************************************************************************************************************
2023-07-10 15:16:17,580 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"calico_pool_conf": {"apiVersion": "projectcalico.org/v3", "kind": "IPPool", "metadata": {"creationTimestamp": "2023-07-10T12:14:30Z", "name": "default-pool", "resourceVersion": "414", "uid": "650dc92c-8e47-48ea-83aa-10436adf420a"}, "spec": {"allowedUses": ["Workload", "Tunnel"], "blockSize": 26, "cidr": "10.233.64.0/18", "ipipMode": "Never", "natOutgoing": true, "nodeSelector": "all()", "vxlanMode": "Always"}}}, "changed": false}
2023-07-10 15:16:17,595 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.061)       0:08:13.338 ****** 
2023-07-10 15:16:17,689 p=14511 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if inventory match current cluster configuration] ********************************************************************************************************
2023-07-10 15:16:17,690 p=14511 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:16:17,706 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.110)       0:08:13.449 ****** 
2023-07-10 15:16:17,744 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.038)       0:08:13.487 ****** 
2023-07-10 15:16:17,782 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.037)       0:08:13.525 ****** 
2023-07-10 15:16:17,849 p=14511 u=kubernetmachine n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2023-07-10 15:16:17,850 p=14511 u=kubernetmachine n=ansible | localhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-10 15:16:17,850 p=14511 u=kubernetmachine n=ansible | node1                      : ok=838  changed=89   unreachable=0    failed=0    skipped=1341 rescued=0    ignored=8   
2023-07-10 15:16:17,850 p=14511 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:16:17 +0300 (0:00:00.068)       0:08:13.593 ****** 
2023-07-10 15:16:17,850 p=14511 u=kubernetmachine n=ansible | =============================================================================== 
2023-07-10 15:16:17,854 p=14511 u=kubernetmachine n=ansible | download : download_container | Download image if required --------------------------------------------------------------------------------------------------------------------------- 15.94s
2023-07-10 15:16:17,854 p=14511 u=kubernetmachine n=ansible | download : download_file | Download item --------------------------------------------------------------------------------------------------------------------------------------------- 10.51s
2023-07-10 15:16:17,854 p=14511 u=kubernetmachine n=ansible | etcd : reload etcd -------------------------------------------------------------------------------------------------------------------------------------------------------------------- 9.28s
2023-07-10 15:16:17,854 p=14511 u=kubernetmachine n=ansible | download : download_file | Download item ---------------------------------------------------------------------------------------------------------------------------------------------- 8.92s
2023-07-10 15:16:17,854 p=14511 u=kubernetmachine n=ansible | kubernetes-apps/helm : download_file | Download item ---------------------------------------------------------------------------------------------------------------------------------- 8.84s
2023-07-10 15:16:17,854 p=14511 u=kubernetmachine n=ansible | container-engine/containerd : download_file | Download item --------------------------------------------------------------------------------------------------------------------------- 8.79s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | kubernetes/preinstall : Preinstall | wait for the apiserver to be running ------------------------------------------------------------------------------------------------------------- 8.77s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | container-engine/nerdctl : download_file | Download item ------------------------------------------------------------------------------------------------------------------------------ 8.56s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | container-engine/crictl : download_file | Download item ------------------------------------------------------------------------------------------------------------------------------- 8.44s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | container-engine/runc : download_file | Download item --------------------------------------------------------------------------------------------------------------------------------- 8.37s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | kubernetes/control-plane : kubeadm | Initialize first master -------------------------------------------------------------------------------------------------------------------------- 8.17s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | container-engine/crictl : extract_file | Unpacking archive ---------------------------------------------------------------------------------------------------------------------------- 7.95s
2023-07-10 15:16:17,855 p=14511 u=kubernetmachine n=ansible | kubernetes-apps/helm : extract_file | Unpacking archive ------------------------------------------------------------------------------------------------------------------------------- 7.18s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | container-engine/nerdctl : extract_file | Unpacking archive --------------------------------------------------------------------------------------------------------------------------- 6.09s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | kubernetes-apps/helm : download_file | Validate mirrors ------------------------------------------------------------------------------------------------------------------------------- 5.67s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | download : download_file | Validate mirrors ------------------------------------------------------------------------------------------------------------------------------------------- 5.25s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | etcd : Configure | Check if etcd cluster is healthy ----------------------------------------------------------------------------------------------------------------------------------- 5.23s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates ---------------------------------------------------------------------------------------------------------------- 4.91s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Apply manifests ----------------------------------------------------------------------------------------- 4.86s
2023-07-10 15:16:17,856 p=14511 u=kubernetmachine n=ansible | kubernetes-apps/ansible : Kubernetes Apps | Start Resources --------------------------------------------------------------------------------------------------------------------------- 4.74s
2023-07-10 15:58:45,141 p=24624 u=kubernetmachine n=ansible | Using /home/kubernetmachine/kubespray/ansible.cfg as config file
2023-07-10 15:58:51,605 p=24624 u=kubernetmachine n=ansible | [WARNING]: Skipping callback plugin 'ara_default', unable to load

2023-07-10 15:58:51,607 p=24624 u=kubernetmachine n=ansible | PLAY [localhost] *****************************************************************************************************************************************************************************
2023-07-10 15:58:51,636 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:51 +0300 (0:00:00.031)       0:00:00.032 ****** 
2023-07-10 15:58:51,692 p=24624 u=kubernetmachine n=ansible | TASK [Check 2.14.0 <= Ansible version < 2.16.0] **********************************************************************************************************************************************
2023-07-10 15:58:51,692 p=24624 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:58:51,696 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:51 +0300 (0:00:00.059)       0:00:00.092 ****** 
2023-07-10 15:58:51,797 p=24624 u=kubernetmachine n=ansible | TASK [Check that python netaddr is installed] ************************************************************************************************************************************************
2023-07-10 15:58:51,797 p=24624 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:58:51,800 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:51 +0300 (0:00:00.103)       0:00:00.195 ****** 
2023-07-10 15:58:51,818 p=24624 u=kubernetmachine n=ansible | TASK [Check that jinja is not too old (install via pip)] *************************************************************************************************************************************
2023-07-10 15:58:51,819 p=24624 u=kubernetmachine n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:58:51,831 p=24624 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-master

2023-07-10 15:58:51,832 p=24624 u=kubernetmachine n=ansible | PLAY [Add kube-master nodes to kube_control_plane] *******************************************************************************************************************************************
2023-07-10 15:58:51,832 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:58:51,833 p=24624 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: kube-node

2023-07-10 15:58:51,833 p=24624 u=kubernetmachine n=ansible | PLAY [Add kube-node nodes to kube_node] ******************************************************************************************************************************************************
2023-07-10 15:58:51,833 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:58:51,834 p=24624 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: k8s-cluster

2023-07-10 15:58:51,834 p=24624 u=kubernetmachine n=ansible | PLAY [Add k8s-cluster nodes to k8s_cluster] **************************************************************************************************************************************************
2023-07-10 15:58:51,834 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:58:51,835 p=24624 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: calico-rr

2023-07-10 15:58:51,835 p=24624 u=kubernetmachine n=ansible | PLAY [Add calico-rr nodes to calico_rr] ******************************************************************************************************************************************************
2023-07-10 15:58:51,835 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:58:51,836 p=24624 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: no-floating

2023-07-10 15:58:51,836 p=24624 u=kubernetmachine n=ansible | PLAY [Add no-floating nodes to no_floating] **************************************************************************************************************************************************
2023-07-10 15:58:51,836 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:58:51,837 p=24624 u=kubernetmachine n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: bastion

2023-07-10 15:58:51,839 p=24624 u=kubernetmachine n=ansible | PLAY [bastion[0]] ****************************************************************************************************************************************************************************
2023-07-10 15:58:51,839 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 15:58:51,841 p=24624 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd:calico_rr] ************************************************************************************************************************************************************
2023-07-10 15:58:51,891 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:51 +0300 (0:00:00.090)       0:00:00.286 ****** 
2023-07-10 15:58:51,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:51 +0300 (0:00:00.046)       0:00:00.333 ****** 
2023-07-10 15:58:51,985 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:51 +0300 (0:00:00.047)       0:00:00.380 ****** 
2023-07-10 15:58:52,073 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.087)       0:00:00.468 ****** 
2023-07-10 15:58:52,117 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.044)       0:00:00.512 ****** 
2023-07-10 15:58:52,163 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.046)       0:00:00.559 ****** 
2023-07-10 15:58:52,216 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.052)       0:00:00.611 ****** 
2023-07-10 15:58:52,265 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.049)       0:00:00.660 ****** 
2023-07-10 15:58:52,314 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.048)       0:00:00.709 ****** 
2023-07-10 15:58:52,363 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:52 +0300 (0:00:00.049)       0:00:00.758 ****** 
2023-07-10 15:58:53,979 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:53 +0300 (0:00:01.616)       0:00:02.374 ****** 
2023-07-10 15:58:54,034 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:58:54,034 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:58:54,089 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.109)       0:00:02.484 ****** 
2023-07-10 15:58:54,126 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.036)       0:00:02.521 ****** 
2023-07-10 15:58:54,157 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.030)       0:00:02.552 ****** 
2023-07-10 15:58:54,189 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.031)       0:00:02.584 ****** 
2023-07-10 15:58:54,220 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.030)       0:00:02.615 ****** 
2023-07-10 15:58:54,249 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.029)       0:00:02.644 ****** 
2023-07-10 15:58:54,348 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.099)       0:00:02.743 ****** 
2023-07-10 15:58:54,385 p=24624 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:58:54,972 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Fetch /etc/os-release] **************************************************************************************************************************************************
2023-07-10 15:58:54,973 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"\r\nNAME=\"Ubuntu\"\r\nVERSION_ID=\"22.04\"\r\nVERSION=\"22.04.2 LTS (Jammy Jellyfish)\"\r\nVERSION_CODENAME=jammy\r\nID=ubuntu\r\nID_LIKE=debian\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nUBUNTU_CODENAME=jammy\r\n", "stdout_lines": ["PRETTY_NAME=\"Ubuntu 22.04.2 LTS\"", "NAME=\"Ubuntu\"", "VERSION_ID=\"22.04\"", "VERSION=\"22.04.2 LTS (Jammy Jellyfish)\"", "VERSION_CODENAME=jammy", "ID=ubuntu", "ID_LIKE=debian", "HOME_URL=\"https://www.ubuntu.com/\"", "SUPPORT_URL=\"https://help.ubuntu.com/\"", "BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"", "PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"", "UBUNTU_CODENAME=jammy"]}
2023-07-10 15:58:54,985 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:54 +0300 (0:00:00.637)       0:00:03.380 ****** 
2023-07-10 15:58:55,015 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.030)       0:00:03.411 ****** 
2023-07-10 15:58:55,044 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.028)       0:00:03.439 ****** 
2023-07-10 15:58:55,073 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.029)       0:00:03.468 ****** 
2023-07-10 15:58:55,101 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.027)       0:00:03.496 ****** 
2023-07-10 15:58:55,127 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.026)       0:00:03.523 ****** 
2023-07-10 15:58:55,153 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.025)       0:00:03.549 ****** 
2023-07-10 15:58:55,174 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : include_tasks] **********************************************************************************************************************************************************
2023-07-10 15:58:55,199 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1
2023-07-10 15:58:55,217 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.063)       0:00:03.612 ****** 
2023-07-10 15:58:55,257 p=24624 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:58:55,271 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check if bootstrap is needed] *******************************************************************************************************************************************
2023-07-10 15:58:55,271 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "rc": 0, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "/usr/bin/python3\r\n", "stdout_lines": ["/usr/bin/python3"]}
2023-07-10 15:58:55,281 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.063)       0:00:03.676 ****** 
2023-07-10 15:58:55,318 p=24624 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:58:55,340 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check http::proxy in apt configuration files] ***************************************************************************************************************************
2023-07-10 15:58:55,340 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 15:58:55,352 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.071)       0:00:03.747 ****** 
2023-07-10 15:58:55,386 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.034)       0:00:03.781 ****** 
2023-07-10 15:58:55,429 p=24624 u=kubernetmachine n=ansible | [WARNING]: raw module does not support the environment keyword

2023-07-10 15:58:55,447 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Check https::proxy in apt configuration files] **************************************************************************************************************************
2023-07-10 15:58:55,447 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to 192.168.122.29 closed.\r\n", "stderr_lines": ["Shared connection to 192.168.122.29 closed."], "stdout": "", "stdout_lines": []}
2023-07-10 15:58:55,458 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.071)       0:00:03.853 ****** 
2023-07-10 15:58:55,493 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.035)       0:00:03.888 ****** 
2023-07-10 15:58:55,523 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.029)       0:00:03.918 ****** 
2023-07-10 15:58:55,550 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.027)       0:00:03.945 ****** 
2023-07-10 15:58:55,590 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Set the ansible_python_interpreter fact] ********************************************************************************************************************************
2023-07-10 15:58:55,591 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_python_interpreter": "/usr/bin/python3"}, "changed": false}
2023-07-10 15:58:55,603 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:55 +0300 (0:00:00.052)       0:00:03.998 ****** 
2023-07-10 15:58:56,474 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Install dbus for the hostname module] ***********************************************************************************************************************************
2023-07-10 15:58:56,474 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:58:56,484 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:56 +0300 (0:00:00.880)       0:00:04.879 ****** 
2023-07-10 15:58:56,510 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:56 +0300 (0:00:00.025)       0:00:04.905 ****** 
2023-07-10 15:58:56,538 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:56 +0300 (0:00:00.028)       0:00:04.933 ****** 
2023-07-10 15:58:56,860 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Create remote_tmp for it is used by another module] *********************************************************************************************************************
2023-07-10 15:58:56,861 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.ansible/tmp", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:58:56,870 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:56 +0300 (0:00:00.332)       0:00:05.265 ****** 
2023-07-10 15:58:57,511 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Gather host facts to get ansible_os_family] *****************************************************************************************************************************
2023-07-10 15:58:57,511 p=24624 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:58:57,521 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:57 +0300 (0:00:00.650)       0:00:05.916 ****** 
2023-07-10 15:58:58,318 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] *************************************************************
2023-07-10 15:58:58,318 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ansible_domain": "linuxtechi.local", "ansible_fqdn": "node1.linuxtechi.local", "ansible_hostname": "node1", "ansible_nodename": "node1"}, "changed": false, "name": "node1"}
2023-07-10 15:58:58,328 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:58 +0300 (0:00:00.807)       0:00:06.723 ****** 
2023-07-10 15:58:58,358 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:58 +0300 (0:00:00.030)       0:00:06.753 ****** 
2023-07-10 15:58:58,388 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:58 +0300 (0:00:00.028)       0:00:06.783 ****** 
2023-07-10 15:58:58,420 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:58 +0300 (0:00:00.032)       0:00:06.815 ****** 
2023-07-10 15:58:58,657 p=24624 u=kubernetmachine n=ansible | TASK [bootstrap-os : Ensure bash_completion.d folder exists] *********************************************************************************************************************************
2023-07-10 15:58:58,658 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:58:58,703 p=24624 u=kubernetmachine n=ansible | PLAY [Gather facts] **************************************************************************************************************************************************************************
2023-07-10 15:58:58,730 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:58 +0300 (0:00:00.310)       0:00:07.125 ****** 
2023-07-10 15:58:59,100 p=24624 u=kubernetmachine n=ansible | TASK [Gather minimal facts] ******************************************************************************************************************************************************************
2023-07-10 15:58:59,100 p=24624 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:58:59,109 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:59 +0300 (0:00:00.378)       0:00:07.504 ****** 
2023-07-10 15:58:59,499 p=24624 u=kubernetmachine n=ansible | TASK [Gather necessary facts (network)] ******************************************************************************************************************************************************
2023-07-10 15:58:59,500 p=24624 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:58:59,510 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:58:59 +0300 (0:00:00.401)       0:00:07.905 ****** 
2023-07-10 15:59:00,216 p=24624 u=kubernetmachine n=ansible | TASK [Gather necessary facts (hardware)] *****************************************************************************************************************************************************
2023-07-10 15:59:00,216 p=24624 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:59:00,259 p=24624 u=kubernetmachine n=ansible | PLAY [k8s_cluster:etcd] **********************************************************************************************************************************************************************
2023-07-10 15:59:00,487 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.976)       0:00:08.882 ****** 
2023-07-10 15:59:00,526 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.039)       0:00:08.921 ****** 
2023-07-10 15:59:00,569 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.042)       0:00:08.964 ****** 
2023-07-10 15:59:00,605 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.036)       0:00:09.000 ****** 
2023-07-10 15:59:00,641 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.036)       0:00:09.037 ****** 
2023-07-10 15:59:00,678 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.036)       0:00:09.073 ****** 
2023-07-10 15:59:00,716 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.038)       0:00:09.111 ****** 
2023-07-10 15:59:00,810 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.093)       0:00:09.205 ****** 
2023-07-10 15:59:00,845 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.035)       0:00:09.240 ****** 
2023-07-10 15:59:00,883 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:00 +0300 (0:00:00.038)       0:00:09.279 ****** 
2023-07-10 15:59:02,547 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:01.663)       0:00:10.942 ****** 
2023-07-10 15:59:02,588 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 15:59:02,588 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 15:59:02,638 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.090)       0:00:11.033 ****** 
2023-07-10 15:59:02,707 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.069)       0:00:11.102 ****** 
2023-07-10 15:59:02,781 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : create fallback_ips_base] *****************************************************************************************************************************************
2023-07-10 15:59:02,782 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"fallback_ips_base": "---\nnode1: \"192.168.122.29\"\n"}, "changed": false}
2023-07-10 15:59:02,794 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.086)       0:00:11.189 ****** 
2023-07-10 15:59:02,850 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : set fallback_ips] *************************************************************************************************************************************************
2023-07-10 15:59:02,850 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"fallback_ips": {"node1": "192.168.122.29"}}, "changed": false}
2023-07-10 15:59:02,863 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.069)       0:00:11.259 ****** 
2023-07-10 15:59:02,905 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.041)       0:00:11.300 ****** 
2023-07-10 15:59:02,945 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.040)       0:00:11.340 ****** 
2023-07-10 15:59:02,994 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:02 +0300 (0:00:00.048)       0:00:11.389 ****** 
2023-07-10 15:59:03,315 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 15:59:03,315 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 15:59:03,326 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:03 +0300 (0:00:00.331)       0:00:11.721 ****** 
2023-07-10 15:59:03,725 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 15:59:03,726 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 15:59:03,746 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:03 +0300 (0:00:00.420)       0:00:12.141 ****** 
2023-07-10 15:59:04,091 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *******************************************************************************************************************************
2023-07-10 15:59:04,091 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=swap) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "swap", "name": "swap", "opts": "defaults", "passno": "0"}
2023-07-10 15:59:04,241 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=none) => {"ansible_loop_var": "item", "backup_file": "", "boot": "yes", "changed": false, "dump": "0", "fstab": "/etc/fstab", "fstype": "swap", "item": "none", "name": "none", "opts": "defaults", "passno": "0"}
2023-07-10 15:59:04,254 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.507)       0:00:12.649 ****** 
2023-07-10 15:59:04,507 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check swap] ****************************************************************************************************************************************************
2023-07-10 15:59:04,508 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/sbin/swapon", "-s"], "delta": "0:00:00.006993", "end": "2023-07-10 12:59:04.501189", "msg": "", "rc": 0, "start": "2023-07-10 12:59:04.494196", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:59:04,519 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.265)       0:00:12.914 ****** 
2023-07-10 15:59:04,552 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.032)       0:00:12.947 ****** 
2023-07-10 15:59:04,584 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.032)       0:00:12.980 ****** 
2023-07-10 15:59:04,614 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.029)       0:00:13.009 ****** 
2023-07-10 15:59:04,647 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.033)       0:00:13.043 ****** 
2023-07-10 15:59:04,678 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:04 +0300 (0:00:00.030)       0:00:13.074 ****** 
2023-07-10 15:59:04,995 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************************************************************************************************************
2023-07-10 15:59:04,996 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:05,008 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:05 +0300 (0:00:00.329)       0:00:13.403 ****** 
2023-07-10 15:59:05,326 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:59:05,326 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 15:59:05,337 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:05 +0300 (0:00:00.328)       0:00:13.732 ****** 
2023-07-10 15:59:05,380 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 15:59:05,381 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 15:59:05,395 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:05 +0300 (0:00:00.058)       0:00:13.790 ****** 
2023-07-10 15:59:05,570 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************************************************************************************************************
2023-07-10 15:59:05,571 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.001926", "end": "2023-07-10 12:59:05.563809", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 12:59:05.561883", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:59:05,582 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:05 +0300 (0:00:00.186)       0:00:13.977 ****** 
2023-07-10 15:59:05,751 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************************************************************************************************************
2023-07-10 15:59:05,751 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 15:59:05,763 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:05 +0300 (0:00:00.181)       0:00:14.158 ****** 
2023-07-10 15:59:05,933 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************************************************************************************************************
2023-07-10 15:59:05,933 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:59:05,945 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:05 +0300 (0:00:00.182)       0:00:14.340 ****** 
2023-07-10 15:59:06,262 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************************************************************************************************************
2023-07-10 15:59:06,262 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 15:59:06,273 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:06 +0300 (0:00:00.327)       0:00:14.668 ****** 
2023-07-10 15:59:06,360 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************************************************************************************************************
2023-07-10 15:59:06,360 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 15:59:06,371 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:06 +0300 (0:00:00.097)       0:00:14.766 ****** 
2023-07-10 15:59:06,493 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********************************************************************************************************
2023-07-10 15:59:06,494 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:06,503 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:06 +0300 (0:00:00.132)       0:00:14.898 ****** 
2023-07-10 15:59:06,676 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************************************************************************************************************
2023-07-10 15:59:06,677 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.003709", "end": "2023-07-10 12:59:06.669943", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 12:59:06.666234", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 15:59:06,689 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:06 +0300 (0:00:00.185)       0:00:15.084 ****** 
2023-07-10 15:59:06,864 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************************************************************************************************************
2023-07-10 15:59:06,864 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.003981", "end": "2023-07-10 12:59:06.857505", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:59:06.853524", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 15:59:06,876 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:06 +0300 (0:00:00.186)       0:00:15.271 ****** 
2023-07-10 15:59:06,971 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******************************************************************************************************
2023-07-10 15:59:06,971 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 15:59:06,982 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:06 +0300 (0:00:00.106)       0:00:15.377 ****** 
2023-07-10 15:59:07,059 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************************************************************************************************************
2023-07-10 15:59:07,059 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 15:59:07,072 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.089)       0:00:15.467 ****** 
2023-07-10 15:59:07,248 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************************************************************************************************************
2023-07-10 15:59:07,248 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991217.020318, "block_size": 4096, "blocks": 8, "ctime": 1688991215.0763168, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286894, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1688991214.9523168, "nlink": 1, "path": "/etc/kubernetes/kubelet.env", "pw_name": "root", "readable": true, "rgrp": true, "roth": false, "rusr": true, "size": 521, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:59:07,258 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.186)       0:00:15.653 ****** 
2023-07-10 15:59:07,302 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************************************************************************************************************
2023-07-10 15:59:07,302 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": false}, "changed": false}
2023-07-10 15:59:07,315 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.057)       0:00:15.711 ****** 
2023-07-10 15:59:07,365 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************************************************************************************************************
2023-07-10 15:59:07,366 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 15:59:07,378 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.062)       0:00:15.773 ****** 
2023-07-10 15:59:07,407 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.029)       0:00:15.802 ****** 
2023-07-10 15:59:07,586 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************************************************************************************************************
2023-07-10 15:59:07,587 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:07,598 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.190)       0:00:15.993 ****** 
2023-07-10 15:59:07,628 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.030)       0:00:16.023 ****** 
2023-07-10 15:59:07,806 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************************************************************************************************************
2023-07-10 15:59:07,806 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991363.6163988, "block_size": 4096, "blocks": 8, "ctime": 1688991363.6163988, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 262569, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688991363.6163988, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1948, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:59:07,818 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.189)       0:00:16.213 ****** 
2023-07-10 15:59:07,865 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********************************************************************************************************
2023-07-10 15:59:07,866 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 15:59:07,877 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.058)       0:00:16.272 ****** 
2023-07-10 15:59:07,910 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.032)       0:00:16.305 ****** 
2023-07-10 15:59:07,959 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************************************************************************************************************
2023-07-10 15:59:07,959 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 15:59:07,971 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:07 +0300 (0:00:00.061)       0:00:16.366 ****** 
2023-07-10 15:59:08,053 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************************************************************************************************************
2023-07-10 15:59:08,054 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 15:59:08,066 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.095)       0:00:16.461 ****** 
2023-07-10 15:59:08,156 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************************************************************************************************************
2023-07-10 15:59:08,157 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": ["10.233.0.3"]}, "changed": false}
2023-07-10 15:59:08,169 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.102)       0:00:16.564 ****** 
2023-07-10 15:59:08,374 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] ****************************************************************************************************
2023-07-10 15:59:08,374 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "169.254.25.10,127.0.0.53", "supersede_nameserver": "supersede domain-name-servers 169.254.25.10;"}, "changed": false}
2023-07-10 15:59:08,384 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.215)       0:00:16.779 ****** 
2023-07-10 15:59:08,415 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.030)       0:00:16.810 ****** 
2023-07-10 15:59:08,515 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************************************************************************************************************
2023-07-10 15:59:08,515 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 15:59:08,529 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.114)       0:00:16.924 ****** 
2023-07-10 15:59:08,562 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.032)       0:00:16.957 ****** 
2023-07-10 15:59:08,732 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************************************************************************************************************
2023-07-10 15:59:08,732 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:59:08,743 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.181)       0:00:17.138 ****** 
2023-07-10 15:59:08,772 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.029)       0:00:17.167 ****** 
2023-07-10 15:59:08,861 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if either kube_control_plane or kube_node group is empty] *************************************************************************************************
2023-07-10 15:59:08,862 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_control_plane) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_control_plane",
    "msg": "All assertions passed"
}
2023-07-10 15:59:08,892 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kube_node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube_node",
    "msg": "All assertions passed"
}
2023-07-10 15:59:08,910 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.137)       0:00:17.305 ****** 
2023-07-10 15:59:08,961 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd group is empty in external etcd mode] *************************************************************************************************************
2023-07-10 15:59:08,961 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:08,973 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:08 +0300 (0:00:00.063)       0:00:17.368 ****** 
2023-07-10 15:59:09,027 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if non systemd OS type] ***********************************************************************************************************************************
2023-07-10 15:59:09,027 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,039 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.065)       0:00:17.434 ****** 
2023-07-10 15:59:09,095 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if the os does not support] *******************************************************************************************************************************
2023-07-10 15:59:09,096 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,108 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.068)       0:00:17.503 ****** 
2023-07-10 15:59:09,160 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown network plugin] ********************************************************************************************************************************
2023-07-10 15:59:09,161 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,173 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.065)       0:00:17.568 ****** 
2023-07-10 15:59:09,222 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unsupported version of Kubernetes] *********************************************************************************************************************
2023-07-10 15:59:09,223 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,235 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.062)       0:00:17.630 ****** 
2023-07-10 15:59:09,293 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***********************************************************************
2023-07-10 15:59:09,294 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_run_once', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_run_once",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,320 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'deploy_netchecker', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "deploy_netchecker",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,349 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'download_always_pull', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "download_always_pull",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,377 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'helm_enabled', 'value': True}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "helm_enabled",
        "value": true
    },
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,400 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'openstack_lbaas_enabled', 'value': False}) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "name": "openstack_lbaas_enabled",
        "value": false
    },
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,414 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.179)       0:00:17.809 ****** 
2023-07-10 15:59:09,478 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if even number of etcd hosts] *****************************************************************************************************************************
2023-07-10 15:59:09,478 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,489 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.074)       0:00:17.884 ****** 
2023-07-10 15:59:09,538 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for masters] ***********************************************************************************************************************
2023-07-10 15:59:09,539 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,552 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.062)       0:00:17.947 ****** 
2023-07-10 15:59:09,601 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if memory is too small for nodes] *************************************************************************************************************************
2023-07-10 15:59:09,602 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,618 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.066)       0:00:18.013 ****** 
2023-07-10 15:59:09,661 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.043)       0:00:18.057 ****** 
2023-07-10 15:59:09,711 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if ip var does not match local ips] ***********************************************************************************************************************
2023-07-10 15:59:09,712 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:09,725 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:09 +0300 (0:00:00.063)       0:00:18.120 ****** 
2023-07-10 15:59:10,467 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure ping package] *******************************************************************************************************************************************
2023-07-10 15:59:10,468 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688989251, "cache_updated": false, "changed": false}
2023-07-10 15:59:10,478 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.752)       0:00:18.873 ****** 
2023-07-10 15:59:10,662 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if access_ip is not pingable] *****************************************************************************************************************************
2023-07-10 15:59:10,663 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["ping", "-c1", "192.168.122.29"], "delta": "0:00:00.007113", "end": "2023-07-10 12:59:10.655075", "msg": "", "rc": 0, "start": "2023-07-10 12:59:10.647962", "stderr": "", "stderr_lines": [], "stdout": "PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.\n64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.069 ms\n\n--- 192.168.122.29 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 0.069/0.069/0.069/0.000 ms", "stdout_lines": ["PING 192.168.122.29 (192.168.122.29) 56(84) bytes of data.", "64 bytes from 192.168.122.29: icmp_seq=1 ttl=64 time=0.069 ms", "", "--- 192.168.122.29 ping statistics ---", "1 packets transmitted, 1 received, 0% packet loss, time 0ms", "rtt min/avg/max/mdev = 0.069/0.069/0.069/0.000 ms"]}
2023-07-10 15:59:10,675 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.196)       0:00:19.070 ****** 
2023-07-10 15:59:10,726 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if RBAC is not enabled when dashboard is enabled] *********************************************************************************************************
2023-07-10 15:59:10,727 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:10,738 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.063)       0:00:19.133 ****** 
2023-07-10 15:59:10,783 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.044)       0:00:19.178 ****** 
2023-07-10 15:59:10,825 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.041)       0:00:19.220 ****** 
2023-07-10 15:59:10,877 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if bad hostname] ******************************************************************************************************************************************
2023-07-10 15:59:10,877 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:10,892 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.067)       0:00:19.287 ****** 
2023-07-10 15:59:10,945 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:10 +0300 (0:00:00.052)       0:00:19.339 ****** 
2023-07-10 15:59:11,035 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_service_addresses is a network range] **********************************************************************************************************
2023-07-10 15:59:11,036 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,047 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.102)       0:00:19.442 ****** 
2023-07-10 15:59:11,125 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet is a network range] ****************************************************************************************************************
2023-07-10 15:59:11,125 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,138 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.090)       0:00:19.533 ****** 
2023-07-10 15:59:11,217 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check that kube_pods_subnet does not collide with kube_service_addresses] **************************************************************************************
2023-07-10 15:59:11,217 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,228 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.089)       0:00:19.623 ****** 
2023-07-10 15:59:11,264 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.036)       0:00:19.659 ****** 
2023-07-10 15:59:11,314 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown dns mode] **************************************************************************************************************************************
2023-07-10 15:59:11,314 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,326 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.061)       0:00:19.721 ****** 
2023-07-10 15:59:11,376 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown kube proxy mode] *******************************************************************************************************************************
2023-07-10 15:59:11,377 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,389 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.063)       0:00:19.785 ****** 
2023-07-10 15:59:11,439 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown cert_management] *******************************************************************************************************************************
2023-07-10 15:59:11,439 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,451 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.061)       0:00:19.846 ****** 
2023-07-10 15:59:11,499 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if unknown resolvconf_mode] *******************************************************************************************************************************
2023-07-10 15:59:11,500 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,510 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.058)       0:00:19.905 ****** 
2023-07-10 15:59:11,560 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host, docker or kubeadm] ***************************************************************************************************
2023-07-10 15:59:11,560 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,572 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.062)       0:00:19.968 ****** 
2023-07-10 15:59:11,618 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if container manager is not docker, crio or containerd] ***************************************************************************************************
2023-07-10 15:59:11,618 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,629 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.056)       0:00:20.024 ****** 
2023-07-10 15:59:11,677 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if etcd deployment type is not host or kubeadm when container_manager != docker] **************************************************************************
2023-07-10 15:59:11,677 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:11,747 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.118)       0:00:20.142 ****** 
2023-07-10 15:59:11,786 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.038)       0:00:20.181 ****** 
2023-07-10 15:59:11,829 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.042)       0:00:20.224 ****** 
2023-07-10 15:59:11,861 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.032)       0:00:20.256 ****** 
2023-07-10 15:59:11,894 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.032)       0:00:20.289 ****** 
2023-07-10 15:59:11,925 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.031)       0:00:20.320 ****** 
2023-07-10 15:59:11,960 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:11 +0300 (0:00:00.034)       0:00:20.355 ****** 
2023-07-10 15:59:12,012 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure minimum containerd version] *****************************************************************************************************************************
2023-07-10 15:59:12,012 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:12,023 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:12 +0300 (0:00:00.063)       0:00:20.418 ****** 
2023-07-10 15:59:12,069 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:12 +0300 (0:00:00.045)       0:00:20.464 ****** 
2023-07-10 15:59:12,099 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:12 +0300 (0:00:00.030)       0:00:20.494 ****** 
2023-07-10 15:59:12,139 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:12 +0300 (0:00:00.039)       0:00:20.534 ****** 
2023-07-10 15:59:12,337 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create kubernetes directories] *********************************************************************************************************************************
2023-07-10 15:59:12,337 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:12,490 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/manifests) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/manifests", "mode": "0755", "owner": "kube", "path": "/etc/kubernetes/manifests", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:12,646 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin/kubernetes-scripts) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin/kubernetes-scripts", "mode": "0755", "owner": "kube", "path": "/usr/local/bin/kubernetes-scripts", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:12,803 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "mode": "0755", "owner": "kube", "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:12,817 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:12 +0300 (0:00:00.678)       0:00:21.212 ****** 
2023-07-10 15:59:13,012 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create other directories of root owner] ************************************************************************************************************************
2023-07-10 15:59:13,012 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/kubernetes/ssl) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/kubernetes/ssl", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/ssl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:59:13,171 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/usr/local/bin) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/usr/local/bin", "mode": "0755", "owner": "root", "path": "/usr/local/bin", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:59:13,184 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:13 +0300 (0:00:00.366)       0:00:21.579 ****** 
2023-07-10 15:59:13,363 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ************************************************************************************************************
2023-07-10 15:59:13,364 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990404.9480176, "block_size": 4096, "blocks": 0, "ctime": 1688989248.4084306, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 262564, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/kubernetes/ssl", "lnk_target": "/etc/kubernetes/ssl", "mode": "0777", "mtime": 1688989248.4084306, "nlink": 1, "path": "/etc/kubernetes/pki", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 19, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:59:13,377 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:13 +0300 (0:00:00.192)       0:00:21.772 ****** 
2023-07-10 15:59:13,412 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:13 +0300 (0:00:00.035)       0:00:21.807 ****** 
2023-07-10 15:59:13,602 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create cni directories] ****************************************************************************************************************************************
2023-07-10 15:59:13,602 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/cni/net.d) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/cni/net.d", "mode": "0755", "owner": "kube", "path": "/etc/cni/net.d", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:13,804 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=/opt/cni/bin) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "/opt/cni/bin", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:13,815 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:13 +0300 (0:00:00.403)       0:00:22.210 ****** 
2023-07-10 15:59:14,002 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Create calico cni directories] *********************************************************************************************************************************
2023-07-10 15:59:14,002 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/var/lib/calico) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/var/lib/calico", "mode": "0755", "owner": "kube", "path": "/var/lib/calico", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 15:59:14,015 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.199)       0:00:22.410 ****** 
2023-07-10 15:59:14,074 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.058)       0:00:22.469 ****** 
2023-07-10 15:59:14,104 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.030)       0:00:22.499 ****** 
2023-07-10 15:59:14,136 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.032)       0:00:22.531 ****** 
2023-07-10 15:59:14,212 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.075)       0:00:22.607 ****** 
2023-07-10 15:59:14,286 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.073)       0:00:22.681 ****** 
2023-07-10 15:59:14,317 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.031)       0:00:22.713 ****** 
2023-07-10 15:59:14,352 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.034)       0:00:22.747 ****** 
2023-07-10 15:59:14,821 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************************************************************************************************************
2023-07-10 15:59:14,822 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "9a78babd29d4e2749f09460b635e9de854bfa856", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/resolved.conf", "size": 126, "state": "file", "uid": 0}
2023-07-10 15:59:14,833 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.480)       0:00:23.228 ****** 
2023-07-10 15:59:14,868 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.034)       0:00:23.263 ****** 
2023-07-10 15:59:14,900 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.032)       0:00:23.295 ****** 
2023-07-10 15:59:14,933 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.032)       0:00:23.328 ****** 
2023-07-10 15:59:14,968 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:14 +0300 (0:00:00.035)       0:00:23.364 ****** 
2023-07-10 15:59:15,003 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:15 +0300 (0:00:00.034)       0:00:23.398 ****** 
2023-07-10 15:59:15,039 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:15 +0300 (0:00:00.035)       0:00:23.434 ****** 
2023-07-10 15:59:15,073 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:15 +0300 (0:00:00.034)       0:00:23.468 ****** 
2023-07-10 15:59:15,104 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:15 +0300 (0:00:00.030)       0:00:23.499 ****** 
2023-07-10 15:59:15,138 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:15 +0300 (0:00:00.034)       0:00:23.533 ****** 
2023-07-10 15:59:15,224 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:15 +0300 (0:00:00.086)       0:00:23.620 ****** 
2023-07-10 15:59:16,608 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update package management cache (APT)] *************************************************************************************************************************
2023-07-10 15:59:16,608 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"cache_update_time": 1688993956, "cache_updated": true, "changed": true}
2023-07-10 15:59:16,620 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:16 +0300 (0:00:01.395)       0:00:25.015 ****** 
2023-07-10 15:59:16,653 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:16 +0300 (0:00:00.032)       0:00:25.048 ****** 
2023-07-10 15:59:16,689 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:16 +0300 (0:00:00.035)       0:00:25.084 ****** 
2023-07-10 15:59:16,723 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:16 +0300 (0:00:00.034)       0:00:25.118 ****** 
2023-07-10 15:59:16,780 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update common_required_pkgs with ipvsadm when kube_proxy_mode is ipvs] *****************************************************************************************
2023-07-10 15:59:16,781 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"common_required_pkgs": ["openssl", "curl", "rsync", "socat", "unzip", "e2fsprogs", "xfsprogs", "ebtables", "bash-completion", "tar", "ipvsadm", "ipset"]}, "changed": false}
2023-07-10 15:59:16,793 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:16 +0300 (0:00:00.069)       0:00:25.188 ****** 
2023-07-10 15:59:17,477 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Install packages requirements] *********************************************************************************************************************************
2023-07-10 15:59:17,477 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "cache_update_time": 1688993956, "cache_updated": false, "changed": false}
2023-07-10 15:59:17,488 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:17 +0300 (0:00:00.695)       0:00:25.883 ****** 
2023-07-10 15:59:17,521 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:17 +0300 (0:00:00.032)       0:00:25.915 ****** 
2023-07-10 15:59:17,556 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:17 +0300 (0:00:00.035)       0:00:25.951 ****** 
2023-07-10 15:59:17,589 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:17 +0300 (0:00:00.032)       0:00:25.984 ****** 
2023-07-10 15:59:17,620 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:17 +0300 (0:00:00.031)       0:00:26.015 ****** 
2023-07-10 15:59:17,806 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *******************************************************************************************************************
2023-07-10 15:59:17,807 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ipv4-ip_forward.conf) => {"ansible_loop_var": "item", "changed": false, "item": "ipv4-ip_forward.conf", "path": "/etc/sysctl.d/ipv4-ip_forward.conf", "state": "absent"}
2023-07-10 15:59:17,963 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=bridge-nf-call.conf) => {"ansible_loop_var": "item", "changed": false, "item": "bridge-nf-call.conf", "path": "/etc/sysctl.d/bridge-nf-call.conf", "state": "absent"}
2023-07-10 15:59:17,977 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:17 +0300 (0:00:00.356)       0:00:26.372 ****** 
2023-07-10 15:59:18,149 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stat sysctl file configuration] ********************************************************************************************************************************
2023-07-10 15:59:18,149 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975452.148, "block_size": 4096, "blocks": 0, "ctime": 1688975046.4383185, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 161054, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/etc/sysctl.conf", "lnk_target": "../sysctl.conf", "mode": "0777", "mtime": 1677761882.0, "nlink": 1, "path": "/etc/sysctl.d/99-sysctl.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 14, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:59:18,161 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:18 +0300 (0:00:00.183)       0:00:26.556 ****** 
2023-07-10 15:59:18,211 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] **************************************************************************************************************
2023-07-10 15:59:18,212 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sysctl_file_path": "/etc/sysctl.conf"}, "changed": false}
2023-07-10 15:59:18,223 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:18 +0300 (0:00:00.062)       0:00:26.618 ****** 
2023-07-10 15:59:18,429 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] **********************************************************************************************************************
2023-07-10 15:59:18,429 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:59:18,440 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:18 +0300 (0:00:00.216)       0:00:26.835 ****** 
2023-07-10 15:59:18,764 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Enable ip forwarding] ******************************************************************************************************************************************
2023-07-10 15:59:18,764 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:59:18,834 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:18 +0300 (0:00:00.394)       0:00:27.229 ****** 
2023-07-10 15:59:18,867 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:18 +0300 (0:00:00.032)       0:00:27.262 ****** 
2023-07-10 15:59:19,074 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ******************************************************************************************************************
2023-07-10 15:59:19,075 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:19,086 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:19 +0300 (0:00:00.218)       0:00:27.481 ****** 
2023-07-10 15:59:19,124 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:19 +0300 (0:00:00.038)       0:00:27.519 ****** 
2023-07-10 15:59:19,328 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Ensure kube-bench parameters are set] **************************************************************************************************************************
2023-07-10 15:59:19,328 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxbytes", "value": 25000000}}
2023-07-10 15:59:19,485 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.keys.root_maxkeys", "value": 1000000}}
2023-07-10 15:59:19,666 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic', 'value': 10}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic", "value": 10}}
2023-07-10 15:59:19,836 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kernel.panic_on_oops', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "kernel.panic_on_oops", "value": 1}}
2023-07-10 15:59:19,995 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.overcommit_memory', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.overcommit_memory", "value": 1}}
2023-07-10 15:59:20,146 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'vm.panic_on_oom', 'value': 0}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "vm.panic_on_oom", "value": 0}}
2023-07-10 15:59:20,160 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:20 +0300 (0:00:01.035)       0:00:28.555 ****** 
2023-07-10 15:59:20,479 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check dummy module] ********************************************************************************************************************************************
2023-07-10 15:59:20,479 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": "dummy", "params": "numdummies=0", "state": "present"}
2023-07-10 15:59:20,490 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:20 +0300 (0:00:00.330)       0:00:28.885 ****** 
2023-07-10 15:59:20,522 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:20 +0300 (0:00:00.031)       0:00:28.917 ****** 
2023-07-10 15:59:21,038 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Disable fapolicyd service] *************************************************************************************************************************************
2023-07-10 15:59:21,038 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "msg": "Could not find the requested service fapolicyd: host"}
2023-07-10 15:59:21,050 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.527)       0:00:29.445 ****** 
2023-07-10 15:59:21,083 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.032)       0:00:29.478 ****** 
2023-07-10 15:59:21,114 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.031)       0:00:29.509 ****** 
2023-07-10 15:59:21,149 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.034)       0:00:29.544 ****** 
2023-07-10 15:59:21,179 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.030)       0:00:29.574 ****** 
2023-07-10 15:59:21,222 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.043)       0:00:29.617 ****** 
2023-07-10 15:59:21,253 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.031)       0:00:29.649 ****** 
2023-07-10 15:59:21,287 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.033)       0:00:29.682 ****** 
2023-07-10 15:59:21,317 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.030)       0:00:29.713 ****** 
2023-07-10 15:59:21,354 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.036)       0:00:29.749 ****** 
2023-07-10 15:59:21,549 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************************************************************************************************************
2023-07-10 15:59:21,549 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 15:59:21,628 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.273)       0:00:30.023 ****** 
2023-07-10 15:59:21,887 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************************************************************************************************************
2023-07-10 15:59:21,887 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:59:21,898 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.270)       0:00:30.294 ****** 
2023-07-10 15:59:21,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:21 +0300 (0:00:00.039)       0:00:30.333 ****** 
2023-07-10 15:59:22,111 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************************************************************************************************************
2023-07-10 15:59:22,112 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4KMTI3LjAuMS4xIGt1YmVybmV0bWFjaGluZXR3bwoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sgbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluCmZlMDA6OjAgaXA2LWxvY2FsbmV0CmZmMDA6OjAgaXA2LW1jYXN0cHJlZml4CmZmMDI6OjEgaXA2LWFsbG5vZGVzCmZmMDI6OjIgaXA2LWFsbHJvdXRlcnMKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxOTIuMTY4LjEyMi4yOSBub2RlMS5saW51eHRlY2hpLmxvY2FsIG5vZGUxIAojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 15:59:22,123 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:22 +0300 (0:00:00.184)       0:00:30.518 ****** 
2023-07-10 15:59:22,201 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ************************************************************************************************
2023-07-10 15:59:22,201 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost localhost.localdomain"}
2023-07-10 15:59:22,277 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain"}
2023-07-10 15:59:22,363 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:22 +0300 (0:00:00.240)       0:00:30.758 ****** 
2023-07-10 15:59:22,433 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *******************************************************************************************
2023-07-10 15:59:22,433 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:59:22,469 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 15:59:22,483 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:22 +0300 (0:00:00.120)       0:00:30.878 ****** 
2023-07-10 15:59:22,681 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************************************************************************************************************
2023-07-10 15:59:22,682 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": ""}
2023-07-10 15:59:22,838 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": ""}
2023-07-10 15:59:22,853 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:22 +0300 (0:00:00.369)       0:00:31.248 ****** 
2023-07-10 15:59:23,202 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Update facts] **************************************************************************************************************************************************
2023-07-10 15:59:23,203 p=24624 u=kubernetmachine n=ansible | ok: [node1]
2023-07-10 15:59:23,213 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.360)       0:00:31.608 ****** 
2023-07-10 15:59:23,390 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****************************************************************************************************
2023-07-10 15:59:23,391 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 15:59:23,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.189)       0:00:31.798 ****** 
2023-07-10 15:59:23,771 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************************************************************************************************************
2023-07-10 15:59:23,771 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "size": 456, "state": "file", "uid": 0}
2023-07-10 15:59:23,782 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.379)       0:00:32.177 ****** 
2023-07-10 15:59:23,823 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.040)       0:00:32.218 ****** 
2023-07-10 15:59:23,852 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.029)       0:00:32.248 ****** 
2023-07-10 15:59:23,882 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.029)       0:00:32.277 ****** 
2023-07-10 15:59:23,900 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:23 +0300 (0:00:00.018)       0:00:32.296 ****** 
2023-07-10 15:59:24,069 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *********************************************************************************************************************
2023-07-10 15:59:24,069 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:24,080 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.179)       0:00:32.475 ****** 
2023-07-10 15:59:24,109 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.029)       0:00:32.504 ****** 
2023-07-10 15:59:24,141 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.031)       0:00:32.536 ****** 
2023-07-10 15:59:24,223 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.082)       0:00:32.618 ****** 
2023-07-10 15:59:24,252 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.029)       0:00:32.648 ****** 
2023-07-10 15:59:24,282 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.029)       0:00:32.677 ****** 
2023-07-10 15:59:24,310 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.027)       0:00:32.705 ****** 
2023-07-10 15:59:24,341 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.031)       0:00:32.736 ****** 
2023-07-10 15:59:24,359 p=24624 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************************************************************************************************************
2023-07-10 15:59:24,515 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.173)       0:00:32.910 ****** 
2023-07-10 15:59:24,560 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****************************************************************************************************
2023-07-10 15:59:24,560 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:24,583 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.067)       0:00:32.978 ****** 
2023-07-10 15:59:24,628 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***********************************************************************************************
2023-07-10 15:59:24,629 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:24,650 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.067)       0:00:33.045 ****** 
2023-07-10 15:59:24,695 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] **************************************************************************
2023-07-10 15:59:24,696 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:24,717 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.066)       0:00:33.112 ****** 
2023-07-10 15:59:24,764 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.046)       0:00:33.159 ****** 
2023-07-10 15:59:24,805 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************************************************************************************************************
2023-07-10 15:59:24,806 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:24,827 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:24 +0300 (0:00:00.063)       0:00:33.222 ****** 
2023-07-10 15:59:24,999 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************************************************************************************************************
2023-07-10 15:59:25,000 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991265.0523465, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "80849706cc7fd83e5d38364f1f00cd0ce675dab4", "ctime": 1688991264.6803463, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 287028, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/x-shellscript", "mode": "0755", "mtime": 1688991264.468346, "nlink": 1, "path": "/usr/local/bin/calicoctl.sh", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 135, "uid": 0, "version": "2961686142", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 15:59:25,020 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.192)       0:00:33.415 ****** 
2023-07-10 15:59:25,326 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calico ready] *****************************************************************************************************************************************
2023-07-10 15:59:25,326 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ClusterInformation", "default"], "delta": "0:00:00.037814", "end": "2023-07-10 12:59:25.317146", "msg": "", "rc": 0, "start": "2023-07-10 12:59:25.279332", "stderr": "", "stderr_lines": [], "stdout": "NAME      CLUSTERGUID                        CLUSTERTYPE                 CALICOVERSION   DATASTOREREADY   \ndefault   cd4a57747119425babcb1a8c3bc95303   kubespray,kubeadm,kdd,k8s   v3.25.1         true             ", "stdout_lines": ["NAME      CLUSTERGUID                        CLUSTERTYPE                 CALICOVERSION   DATASTOREREADY   ", "default   cd4a57747119425babcb1a8c3bc95303   kubespray,kubeadm,kdd,k8s   v3.25.1         true             "]}
2023-07-10 15:59:25,345 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.325)       0:00:33.740 ****** 
2023-07-10 15:59:25,550 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get current calico version] ************************************************************************************************************************************
2023-07-10 15:59:25,550 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/calicoctl.sh version | grep 'Client Version:' | awk '{ print $3}'", "delta": "0:00:00.034386", "end": "2023-07-10 12:59:25.541285", "msg": "", "rc": 0, "start": "2023-07-10 12:59:25.506899", "stderr": "", "stderr_lines": [], "stdout": "v3.25.1", "stdout_lines": ["v3.25.1"]}
2023-07-10 15:59:25,570 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.224)       0:00:33.965 ****** 
2023-07-10 15:59:25,615 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Assert that current calico version is enough for upgrade] ******************************************************************************************************
2023-07-10 15:59:25,616 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:25,637 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.066)       0:00:34.032 ****** 
2023-07-10 15:59:25,684 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.046)       0:00:34.079 ****** 
2023-07-10 15:59:25,724 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.039)       0:00:34.119 ****** 
2023-07-10 15:59:25,769 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************************************************************************************************************
2023-07-10 15:59:25,770 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:25,791 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.067)       0:00:34.186 ****** 
2023-07-10 15:59:25,836 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************************************************************************************************************
2023-07-10 15:59:25,836 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:25,856 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.065)       0:00:34.252 ****** 
2023-07-10 15:59:25,902 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************************************************************************************************************
2023-07-10 15:59:25,903 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:25,924 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.067)       0:00:34.319 ****** 
2023-07-10 15:59:25,964 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:25 +0300 (0:00:00.039)       0:00:34.359 ****** 
2023-07-10 15:59:26,009 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********************************************************************************************************
2023-07-10 15:59:26,009 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:26,033 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.068)       0:00:34.428 ****** 
2023-07-10 15:59:26,233 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************************************************************************************************************
2023-07-10 15:59:26,233 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ipPool", "default-pool", "-o", "json"], "delta": "0:00:00.032704", "end": "2023-07-10 12:59:26.226618", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 12:59:26.193914", "stderr": "", "stderr_lines": [], "stdout": "{\n  \"kind\": \"IPPool\",\n  \"apiVersion\": \"projectcalico.org/v3\",\n  \"metadata\": {\n    \"name\": \"default-pool\",\n    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",\n    \"resourceVersion\": \"414\",\n    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"\n  },\n  \"spec\": {\n    \"cidr\": \"10.233.64.0/18\",\n    \"vxlanMode\": \"Always\",\n    \"ipipMode\": \"Never\",\n    \"natOutgoing\": true,\n    \"blockSize\": 26,\n    \"nodeSelector\": \"all()\",\n    \"allowedUses\": [\n      \"Workload\",\n      \"Tunnel\"\n    ]\n  }\n}", "stdout_lines": ["{", "  \"kind\": \"IPPool\",", "  \"apiVersion\": \"projectcalico.org/v3\",", "  \"metadata\": {", "    \"name\": \"default-pool\",", "    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",", "    \"resourceVersion\": \"414\",", "    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"", "  },", "  \"spec\": {", "    \"cidr\": \"10.233.64.0/18\",", "    \"vxlanMode\": \"Always\",", "    \"ipipMode\": \"Never\",", "    \"natOutgoing\": true,", "    \"blockSize\": 26,", "    \"nodeSelector\": \"all()\",", "    \"allowedUses\": [", "      \"Workload\",", "      \"Tunnel\"", "    ]", "  }", "}"]}
2023-07-10 15:59:26,316 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.283)       0:00:34.711 ****** 
2023-07-10 15:59:26,360 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Set calico_pool_conf] ******************************************************************************************************************************************
2023-07-10 15:59:26,361 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"calico_pool_conf": {"apiVersion": "projectcalico.org/v3", "kind": "IPPool", "metadata": {"creationTimestamp": "2023-07-10T12:14:30Z", "name": "default-pool", "resourceVersion": "414", "uid": "650dc92c-8e47-48ea-83aa-10436adf420a"}, "spec": {"allowedUses": ["Workload", "Tunnel"], "blockSize": 26, "cidr": "10.233.64.0/18", "ipipMode": "Never", "natOutgoing": true, "nodeSelector": "all()", "vxlanMode": "Always"}}}, "changed": false}
2023-07-10 15:59:26,382 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.065)       0:00:34.777 ****** 
2023-07-10 15:59:26,464 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if inventory match current cluster configuration] ********************************************************************************************************
2023-07-10 15:59:26,464 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 15:59:26,485 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.102)       0:00:34.880 ****** 
2023-07-10 15:59:26,523 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.038)       0:00:34.918 ****** 
2023-07-10 15:59:26,560 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.036)       0:00:34.955 ****** 
2023-07-10 15:59:26,606 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.046)       0:00:35.001 ****** 
2023-07-10 15:59:26,776 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | check if fedora coreos] ***************************************************************************************
2023-07-10 15:59:26,776 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:26,786 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.180)       0:00:35.181 ****** 
2023-07-10 15:59:26,826 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : validate-container-engine | set is_ostree] ************************************************************************************************
2023-07-10 15:59:26,826 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:59:26,838 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:26 +0300 (0:00:00.051)       0:00:35.233 ****** 
2023-07-10 15:59:27,013 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] *******************************************************************************************************
2023-07-10 15:59:27,013 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991216.996318, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "7c6e996e6a33a8e05266c72a072d76f9aeff796d", "ctime": 1688991215.9403174, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286896, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1688991215.8203173, "nlink": 1, "path": "/etc/systemd/system/kubelet.service", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 562, "uid": 0, "version": "2191980135", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 15:59:27,026 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:27 +0300 (0:00:00.187)       0:00:35.421 ****** 
2023-07-10 15:59:29,069 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Populate service facts] *******************************************************************************************************************
2023-07-10 15:59:29,072 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"services": {"ModemManager.service": {"name": "ModemManager.service", "source": "systemd", "state": "running", "status": "enabled"}, "NetworkManager.service": {"name": "NetworkManager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "apparmor": {"name": "apparmor", "source": "sysv", "state": "running"}, "apparmor.service": {"name": "apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "apport": {"name": "apport", "source": "sysv", "state": "running"}, "apport-autoreport.service": {"name": "apport-autoreport.service", "source": "systemd", "state": "stopped", "status": "static"}, "apport-forward@.service": {"name": "apport-forward@.service", "source": "systemd", "state": "unknown", "status": "static"}, "apport.service": {"name": "apport.service", "source": "systemd", "state": "stopped", "status": "generated"}, "apt-daily-upgrade.service": {"name": "apt-daily-upgrade.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-daily.service": {"name": "apt-daily.service", "source": "systemd", "state": "stopped", "status": "static"}, "apt-news.service": {"name": "apt-news.service", "source": "systemd", "state": "inactive", "status": "static"}, "auditd.service": {"name": "auditd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autovt@.service": {"name": "autovt@.service", "source": "systemd", "state": "unknown", "status": "alias"}, "blk-availability.service": {"name": "blk-availability.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "bolt.service": {"name": "bolt.service", "source": "systemd", "state": "inactive", "status": "static"}, "cloud-config.service": {"name": "cloud-config.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-final.service": {"name": "cloud-final.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init-hotplugd.service": {"name": "cloud-init-hotplugd.service", "source": "systemd", "state": "stopped", "status": "static"}, "cloud-init-local.service": {"name": "cloud-init-local.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init.service": {"name": "cloud-init.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "connman.service": {"name": "connman.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-getty.service": {"name": "console-getty.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "console-screen.service": {"name": "console-screen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "console-setup.service": {"name": "console-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "console-setup.sh": {"name": "console-setup.sh", "source": "sysv", "state": "stopped"}, "container-getty@.service": {"name": "container-getty@.service", "source": "systemd", "state": "unknown", "status": "static"}, "containerd.service": {"name": "containerd.service", "source": "systemd", "state": "running", "status": "enabled"}, "cron": {"name": "cron", "source": "sysv", "state": "running"}, "cron.service": {"name": "cron.service", "source": "systemd", "state": "running", "status": "enabled"}, "cryptdisks": {"name": "cryptdisks", "source": "sysv", "state": "stopped"}, "cryptdisks-early": {"name": "cryptdisks-early", "source": "sysv", "state": "stopped"}, "cryptdisks-early.service": {"name": "cryptdisks-early.service", "source": "systemd", "state": "inactive", "status": "masked"}, "cryptdisks.service": {"name": "cryptdisks.service", "source": "systemd", "state": "inactive", "status": "masked"}, "dbus": {"name": "dbus", "source": "sysv", "state": "running"}, "dbus-org.freedesktop.ModemManager1.service": {"name": "dbus-org.freedesktop.ModemManager1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.hostname1.service": {"name": "dbus-org.freedesktop.hostname1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.locale1.service": {"name": "dbus-org.freedesktop.locale1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.login1.service": {"name": "dbus-org.freedesktop.login1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.resolve1.service": {"name": "dbus-org.freedesktop.resolve1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.thermald.service": {"name": "dbus-org.freedesktop.thermald.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timedate1.service": {"name": "dbus-org.freedesktop.timedate1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timesync1.service": {"name": "dbus-org.freedesktop.timesync1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus.service": {"name": "dbus.service", "source": "systemd", "state": "running", "status": "static"}, "debug-shell.service": {"name": "debug-shell.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "display-manager.service": {"name": "display-manager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "dm-event.service": {"name": "dm-event.service", "source": "systemd", "state": "stopped", "status": "static"}, "dmesg.service": {"name": "dmesg.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "dpkg-db-backup.service": {"name": "dpkg-db-backup.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub@.service": {"name": "e2scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_all.service": {"name": "e2scrub_all.service", "source": "systemd", "state": "stopped", "status": "static"}, "e2scrub_fail@.service": {"name": "e2scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "e2scrub_reap.service": {"name": "e2scrub_reap.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "emergency.service": {"name": "emergency.service", "source": "systemd", "state": "stopped", "status": "static"}, "esm-cache.service": {"name": "esm-cache.service", "source": "systemd", "state": "inactive", "status": "static"}, "etcd.service": {"name": "etcd.service", "source": "systemd", "state": "running", "status": "enabled"}, "fcoe.service": {"name": "fcoe.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "finalrd.service": {"name": "finalrd.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "friendly-recovery.service": {"name": "friendly-recovery.service", "source": "systemd", "state": "inactive", "status": "static"}, "fstrim.service": {"name": "fstrim.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd-offline-update.service": {"name": "fwupd-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-refresh.service": {"name": "fwupd-refresh.service", "source": "systemd", "state": "stopped", "status": "static"}, "fwupd.service": {"name": "fwupd.service", "source": "systemd", "state": "inactive", "status": "static"}, "getty-static.service": {"name": "getty-static.service", "source": "systemd", "state": "stopped", "status": "static"}, "getty@.service": {"name": "getty@.service", "source": "systemd", "state": "unknown", "status": "enabled"}, "getty@tty1.service": {"name": "getty@tty1.service", "source": "systemd", "state": "running", "status": "active"}, "gpu-manager.service": {"name": "gpu-manager.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "grub-common": {"name": "grub-common", "source": "sysv", "state": "stopped"}, "grub-common.service": {"name": "grub-common.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "grub-initrd-fallback.service": {"name": "grub-initrd-fallback.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "hv_kvp_daemon.service": {"name": "hv_kvp_daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "hwclock.service": {"name": "hwclock.service", "source": "systemd", "state": "inactive", "status": "masked"}, "hwclock.sh": {"name": "hwclock.sh", "source": "sysv", "state": "stopped"}, "initrd-cleanup.service": {"name": "initrd-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-parse-etc.service": {"name": "initrd-parse-etc.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-switch-root.service": {"name": "initrd-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "initrd-udevadm-cleanup-db.service": {"name": "initrd-udevadm-cleanup-db.service", "source": "systemd", "state": "inactive", "status": "static"}, "ipvsadm": {"name": "ipvsadm", "source": "sysv", "state": "running"}, "ipvsadm.service": {"name": "ipvsadm.service", "source": "systemd", "state": "stopped", "status": "generated"}, "irqbalance": {"name": "irqbalance", "source": "sysv", "state": "running"}, "irqbalance.service": {"name": "irqbalance.service", "source": "systemd", "state": "running", "status": "enabled"}, "iscsi-shutdown.service": {"name": "iscsi-shutdown.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "iscsi.service": {"name": "iscsi.service", "source": "systemd", "state": "inactive", "status": "alias"}, "iscsid": {"name": "iscsid", "source": "sysv", "state": "stopped"}, "iscsid.service": {"name": "iscsid.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "kbd.service": {"name": "kbd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "keyboard-setup.service": {"name": "keyboard-setup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "keyboard-setup.sh": {"name": "keyboard-setup.sh", "source": "sysv", "state": "stopped"}, "kmod": {"name": "kmod", "source": "sysv", "state": "running"}, "kmod-static-nodes.service": {"name": "kmod-static-nodes.service", "source": "systemd", "state": "stopped", "status": "static"}, "kmod.service": {"name": "kmod.service", "source": "systemd", "state": "active", "status": "alias"}, "kubelet.service": {"name": "kubelet.service", "source": "systemd", "state": "running", "status": "enabled"}, "loaded": {"name": "loaded", "source": "systemd", "state": "stopped", "status": "failed"}, "logrotate.service": {"name": "logrotate.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2": {"name": "lvm2", "source": "sysv", "state": "stopped"}, "lvm2-activation-early.service": {"name": "lvm2-activation-early.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-activation.service": {"name": "lvm2-activation.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "lvm2-lvmpolld": {"name": "lvm2-lvmpolld", "source": "sysv", "state": "stopped"}, "lvm2-lvmpolld.service": {"name": "lvm2-lvmpolld.service", "source": "systemd", "state": "stopped", "status": "static"}, "lvm2-monitor.service": {"name": "lvm2-monitor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "lvm2-pvscan@.service": {"name": "lvm2-pvscan@.service", "source": "systemd", "state": "unknown", "status": "static"}, "lvm2-pvscan@252:3.service": {"name": "lvm2-pvscan@252:3.service", "source": "systemd", "state": "stopped", "status": "active"}, "lvm2.service": {"name": "lvm2.service", "source": "systemd", "state": "inactive", "status": "masked"}, "lxd-agent.service": {"name": "lxd-agent.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "man-db.service": {"name": "man-db.service", "source": "systemd", "state": "stopped", "status": "static"}, "mdadm-grow-continue@.service": {"name": "mdadm-grow-continue@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdadm-last-resort@.service": {"name": "mdadm-last-resort@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdcheck_continue.service": {"name": "mdcheck_continue.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdcheck_start.service": {"name": "mdcheck_start.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmon@.service": {"name": "mdmon@.service", "source": "systemd", "state": "unknown", "status": "static"}, "mdmonitor-oneshot.service": {"name": "mdmonitor-oneshot.service", "source": "systemd", "state": "inactive", "status": "static"}, "mdmonitor.service": {"name": "mdmonitor.service", "source": "systemd", "state": "inactive", "status": "static"}, "modprobe@.service": {"name": "modprobe@.service", "source": "systemd", "state": "unknown", "status": "static"}, "modprobe@chromeos_pstore.service": {"name": "modprobe@chromeos_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@configfs.service": {"name": "modprobe@configfs.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@drm.service": {"name": "modprobe@drm.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@efi_pstore.service": {"name": "modprobe@efi_pstore.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@fuse.service": {"name": "modprobe@fuse.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_blk.service": {"name": "modprobe@pstore_blk.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@pstore_zone.service": {"name": "modprobe@pstore_zone.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@ramoops.service": {"name": "modprobe@ramoops.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "motd-news.service": {"name": "motd-news.service", "source": "systemd", "state": "stopped", "status": "static"}, "multipath-tools": {"name": "multipath-tools", "source": "sysv", "state": "running"}, "multipath-tools-boot.service": {"name": "multipath-tools-boot.service", "source": "systemd", "state": "inactive", "status": "masked"}, "multipath-tools.service": {"name": "multipath-tools.service", "source": "systemd", "state": "active", "status": "alias"}, "multipathd.service": {"name": "multipathd.service", "source": "systemd", "state": "running", "status": "enabled"}, "netplan-ovs-cleanup.service": {"name": "netplan-ovs-cleanup.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "networkd-dispatcher.service": {"name": "networkd-dispatcher.service", "source": "systemd", "state": "running", "status": "enabled"}, "networking.service": {"name": "networking.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "nftables.service": {"name": "nftables.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "open-iscsi": {"name": "open-iscsi", "source": "sysv", "state": "stopped"}, "open-iscsi.service": {"name": "open-iscsi.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "open-vm-tools": {"name": "open-vm-tools", "source": "sysv", "state": "stopped"}, "open-vm-tools.service": {"name": "open-vm-tools.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ovsdb-server.service": {"name": "ovsdb-server.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "packagekit-offline-update.service": {"name": "packagekit-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "packagekit.service": {"name": "packagekit.service", "source": "systemd", "state": "running", "status": "static"}, "plymouth": {"name": "plymouth", "source": "sysv", "state": "running"}, "plymouth-halt.service": {"name": "plymouth-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-kexec.service": {"name": "plymouth-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-log": {"name": "plymouth-log", "source": "sysv", "state": "running"}, "plymouth-log.service": {"name": "plymouth-log.service", "source": "systemd", "state": "active", "status": "alias"}, "plymouth-poweroff.service": {"name": "plymouth-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-quit-wait.service": {"name": "plymouth-quit-wait.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-quit.service": {"name": "plymouth-quit.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-read-write.service": {"name": "plymouth-read-write.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-reboot.service": {"name": "plymouth-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-start.service": {"name": "plymouth-start.service", "source": "systemd", "state": "stopped", "status": "static"}, "plymouth-switch-root-initramfs.service": {"name": "plymouth-switch-root-initramfs.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-switch-root.service": {"name": "plymouth-switch-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth.service": {"name": "plymouth.service", "source": "systemd", "state": "active", "status": "alias"}, "polkit.service": {"name": "polkit.service", "source": "systemd", "state": "running", "status": "static"}, "pollinate.service": {"name": "pollinate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "procps": {"name": "procps", "source": "sysv", "state": "running"}, "procps.service": {"name": "procps.service", "source": "systemd", "state": "active", "status": "alias"}, "quotaon.service": {"name": "quotaon.service", "source": "systemd", "state": "inactive", "status": "static"}, "rbdmap.service": {"name": "rbdmap.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "rc-local.service": {"name": "rc-local.service", "source": "systemd", "state": "stopped", "status": "static"}, "rc.service": {"name": "rc.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rcS.service": {"name": "rcS.service", "source": "systemd", "state": "inactive", "status": "masked"}, "rescue.service": {"name": "rescue.service", "source": "systemd", "state": "stopped", "status": "static"}, "rsync": {"name": "rsync", "source": "sysv", "state": "stopped"}, "rsync.service": {"name": "rsync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rsyslog.service": {"name": "rsyslog.service", "source": "systemd", "state": "running", "status": "enabled"}, "screen-cleanup": {"name": "screen-cleanup", "source": "sysv", "state": "stopped"}, "screen-cleanup.service": {"name": "screen-cleanup.service", "source": "systemd", "state": "inactive", "status": "masked"}, "secureboot-db.service": {"name": "secureboot-db.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "serial-getty@.service": {"name": "serial-getty@.service", "source": "systemd", "state": "unknown", "status": "disabled"}, "setvtrgb.service": {"name": "setvtrgb.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.activate.service": {"name": "snap.lxd.activate.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snap.lxd.daemon.service": {"name": "snap.lxd.daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snap.lxd.user-daemon.service": {"name": "snap.lxd.user-daemon.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.aa-prompt-listener.service": {"name": "snapd.aa-prompt-listener.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.apparmor.service": {"name": "snapd.apparmor.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.autoimport.service": {"name": "snapd.autoimport.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.core-fixup.service": {"name": "snapd.core-fixup.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.failure.service": {"name": "snapd.failure.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.recovery-chooser-trigger.service": {"name": "snapd.recovery-chooser-trigger.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.seeded.service": {"name": "snapd.seeded.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "snapd.service": {"name": "snapd.service", "source": "systemd", "state": "running", "status": "enabled"}, "snapd.snap-repair.service": {"name": "snapd.snap-repair.service", "source": "systemd", "state": "stopped", "status": "static"}, "snapd.system-shutdown.service": {"name": "snapd.system-shutdown.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "ssh": {"name": "ssh", "source": "sysv", "state": "running"}, "ssh.service": {"name": "ssh.service", "source": "systemd", "state": "running", "status": "enabled"}, "ssh@.service": {"name": "ssh@.service", "source": "systemd", "state": "unknown", "status": "static"}, "sshd-keygen.service": {"name": "sshd-keygen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd.service": {"name": "sshd.service", "source": "systemd", "state": "active", "status": "alias"}, "sudo.service": {"name": "sudo.service", "source": "systemd", "state": "inactive", "status": "masked"}, "syslog.service": {"name": "syslog.service", "source": "systemd", "state": "active", "status": "alias"}, "system-update-cleanup.service": {"name": "system-update-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-ask-password-console.service": {"name": "systemd-ask-password-console.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-plymouth.service": {"name": "systemd-ask-password-plymouth.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-wall.service": {"name": "systemd-ask-password-wall.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-backlight@.service": {"name": "systemd-backlight@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-binfmt.service": {"name": "systemd-binfmt.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-bless-boot.service": {"name": "systemd-bless-boot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-boot-check-no-failures.service": {"name": "systemd-boot-check-no-failures.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-boot-system-token.service": {"name": "systemd-boot-system-token.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-exit.service": {"name": "systemd-exit.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-fsck-root.service": {"name": "systemd-fsck-root.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-fsck@.service": {"name": "systemd-fsck@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service": {"name": "systemd-fsck@dev-disk-by\\x2duuid-81fc86a2\\x2d96f9\\x2d41c9\\x2d886f\\x2d6832031c00dd.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-fsckd.service": {"name": "systemd-fsckd.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-halt.service": {"name": "systemd-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hibernate-resume@.service": {"name": "systemd-hibernate-resume@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-hibernate.service": {"name": "systemd-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hostnamed.service": {"name": "systemd-hostnamed.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-hwdb-update.service": {"name": "systemd-hwdb-update.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-hybrid-sleep.service": {"name": "systemd-hybrid-sleep.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-initctl.service": {"name": "systemd-initctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-flush.service": {"name": "systemd-journal-flush.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journald.service": {"name": "systemd-journald.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-journald@.service": {"name": "systemd-journald@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-kexec.service": {"name": "systemd-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-localed.service": {"name": "systemd-localed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-logind.service": {"name": "systemd-logind.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-machine-id-commit.service": {"name": "systemd-machine-id-commit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-modules-load.service": {"name": "systemd-modules-load.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-network-generator.service": {"name": "systemd-network-generator.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-networkd-wait-online.service": {"name": "systemd-networkd-wait-online.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-networkd.service": {"name": "systemd-networkd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-poweroff.service": {"name": "systemd-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pstore.service": {"name": "systemd-pstore.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-quotacheck.service": {"name": "systemd-quotacheck.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-random-seed.service": {"name": "systemd-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-reboot.service": {"name": "systemd-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-remount-fs.service": {"name": "systemd-remount-fs.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-resolved.service": {"name": "systemd-resolved.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-rfkill.service": {"name": "systemd-rfkill.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-suspend-then-hibernate.service": {"name": "systemd-suspend-then-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-suspend.service": {"name": "systemd-suspend.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-sysctl.service": {"name": "systemd-sysctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-sysext.service": {"name": "systemd-sysext.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-sysusers.service": {"name": "systemd-sysusers.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-time-wait-sync.service": {"name": "systemd-time-wait-sync.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-timedated.service": {"name": "systemd-timedated.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-timesyncd.service": {"name": "systemd-timesyncd.service", "source": "systemd", "state": "running", "status": "enabled"}, "systemd-tmpfiles-clean.service": {"name": "systemd-tmpfiles-clean.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup-dev.service": {"name": "systemd-tmpfiles-setup-dev.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup.service": {"name": "systemd-tmpfiles-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udev-settle.service": {"name": "systemd-udev-settle.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-udev-trigger.service": {"name": "systemd-udev-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udevd.service": {"name": "systemd-udevd.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-update-done.service": {"name": "systemd-update-done.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-update-utmp-runlevel.service": {"name": "systemd-update-utmp-runlevel.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp.service": {"name": "systemd-update-utmp.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-user-sessions.service": {"name": "systemd-user-sessions.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-vconsole-setup.service": {"name": "systemd-vconsole-setup.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-volatile-root.service": {"name": "systemd-volatile-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "thermald.service": {"name": "thermald.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-auto-attach.service": {"name": "ua-auto-attach.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ua-reboot-cmds.service": {"name": "ua-reboot-cmds.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "ua-timer.service": {"name": "ua-timer.service", "source": "systemd", "state": "stopped", "status": "static"}, "ubuntu-advantage-cloud-id-shim.service": {"name": "ubuntu-advantage-cloud-id-shim.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ubuntu-advantage.service": {"name": "ubuntu-advantage.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "udev": {"name": "udev", "source": "sysv", "state": "running"}, "udev.service": {"name": "udev.service", "source": "systemd", "state": "active", "status": "alias"}, "udisks2.service": {"name": "udisks2.service", "source": "systemd", "state": "running", "status": "enabled"}, "ufw": {"name": "ufw", "source": "sysv", "state": "running"}, "ufw.service": {"name": "ufw.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "unattended-upgrades": {"name": "unattended-upgrades", "source": "sysv", "state": "running"}, "unattended-upgrades.service": {"name": "unattended-upgrades.service", "source": "systemd", "state": "running", "status": "enabled"}, "update-notifier-download.service": {"name": "update-notifier-download.service", "source": "systemd", "state": "inactive", "status": "static"}, "update-notifier-motd.service": {"name": "update-notifier-motd.service", "source": "systemd", "state": "stopped", "status": "static"}, "upower.service": {"name": "upower.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "usb_modeswitch@.service": {"name": "usb_modeswitch@.service", "source": "systemd", "state": "unknown", "status": "static"}, "usbmuxd.service": {"name": "usbmuxd.service", "source": "systemd", "state": "inactive", "status": "static"}, "user-runtime-dir@.service": {"name": "user-runtime-dir@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user-runtime-dir@0.service": {"name": "user-runtime-dir@0.service", "source": "systemd", "state": "stopped", "status": "active"}, "user-runtime-dir@1000.service": {"name": "user-runtime-dir@1000.service", "source": "systemd", "state": "stopped", "status": "active"}, "user@.service": {"name": "user@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user@0.service": {"name": "user@0.service", "source": "systemd", "state": "running", "status": "active"}, "user@1000.service": {"name": "user@1000.service", "source": "systemd", "state": "running", "status": "active"}, "uuidd": {"name": "uuidd", "source": "sysv", "state": "stopped"}, "uuidd.service": {"name": "uuidd.service", "source": "systemd", "state": "stopped", "status": "indirect"}, "vgauth.service": {"name": "vgauth.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "vmtoolsd.service": {"name": "vmtoolsd.service", "source": "systemd", "state": "inactive", "status": "alias"}, "x11-common.service": {"name": "x11-common.service", "source": "systemd", "state": "inactive", "status": "masked"}, "xfs_scrub@.service": {"name": "xfs_scrub@.service", "source": "systemd", "state": "unknown", "status": "static"}, "xfs_scrub_all.service": {"name": "xfs_scrub_all.service", "source": "systemd", "state": "inactive", "status": "static"}, "xfs_scrub_fail@.service": {"name": "xfs_scrub_fail@.service", "source": "systemd", "state": "unknown", "status": "static"}, "zfs-mount.service": {"name": "zfs-mount.service", "source": "systemd", "state": "stopped", "status": "not-found"}}}, "changed": false}
2023-07-10 15:59:29,081 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:02.055)       0:00:37.476 ****** 
2023-07-10 15:59:29,346 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if containerd is installed] *********************************************************************************************************
2023-07-10 15:59:29,346 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 1171, "files": [{"atime": 1688989439.1442995, "ctime": 1688989436.4363012, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 262627, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688989436.3123012, "nlink": 1, "path": "/etc/systemd/system/containerd.service", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 1365, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 1, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:59:29,355 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.274)       0:00:37.750 ****** 
2023-07-10 15:59:29,536 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if docker is installed] *************************************************************************************************************
2023-07-10 15:59:29,537 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 1171, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:59:29,547 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.192)       0:00:37.942 ****** 
2023-07-10 15:59:29,742 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/validate-container-engine : Check if crio is installed] ***************************************************************************************************************
2023-07-10 15:59:29,742 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 1171, "files": [], "matched": 0, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 15:59:29,751 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.203)       0:00:38.146 ****** 
2023-07-10 15:59:29,780 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.029)       0:00:38.175 ****** 
2023-07-10 15:59:29,810 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.029)       0:00:38.205 ****** 
2023-07-10 15:59:29,840 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.030)       0:00:38.235 ****** 
2023-07-10 15:59:29,871 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.031)       0:00:38.267 ****** 
2023-07-10 15:59:29,989 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:29 +0300 (0:00:00.117)       0:00:38.384 ****** 
2023-07-10 15:59:30,019 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.030)       0:00:38.414 ****** 
2023-07-10 15:59:30,053 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.034)       0:00:38.448 ****** 
2023-07-10 15:59:30,084 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.030)       0:00:38.479 ****** 
2023-07-10 15:59:30,114 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.030)       0:00:38.509 ****** 
2023-07-10 15:59:30,144 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.029)       0:00:38.539 ****** 
2023-07-10 15:59:30,179 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.035)       0:00:38.574 ****** 
2023-07-10 15:59:30,217 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.037)       0:00:38.612 ****** 
2023-07-10 15:59:30,249 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.031)       0:00:38.644 ****** 
2023-07-10 15:59:30,281 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.032)       0:00:38.676 ****** 
2023-07-10 15:59:30,313 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.031)       0:00:38.708 ****** 
2023-07-10 15:59:30,352 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.039)       0:00:38.747 ****** 
2023-07-10 15:59:30,386 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.033)       0:00:38.781 ****** 
2023-07-10 15:59:30,427 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.041)       0:00:38.822 ****** 
2023-07-10 15:59:30,467 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.039)       0:00:38.862 ****** 
2023-07-10 15:59:30,542 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.075)       0:00:38.937 ****** 
2023-07-10 15:59:30,573 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.031)       0:00:38.968 ****** 
2023-07-10 15:59:30,607 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.033)       0:00:39.002 ****** 
2023-07-10 15:59:30,642 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.034)       0:00:39.037 ****** 
2023-07-10 15:59:30,675 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.033)       0:00:39.070 ****** 
2023-07-10 15:59:30,791 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.115)       0:00:39.186 ****** 
2023-07-10 15:59:30,834 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.043)       0:00:39.230 ****** 
2023-07-10 15:59:30,869 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.034)       0:00:39.264 ****** 
2023-07-10 15:59:30,904 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.035)       0:00:39.299 ****** 
2023-07-10 15:59:30,934 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.029)       0:00:39.329 ****** 
2023-07-10 15:59:30,963 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:30 +0300 (0:00:00.029)       0:00:39.358 ****** 
2023-07-10 15:59:31,007 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.043)       0:00:39.402 ****** 
2023-07-10 15:59:31,044 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.037)       0:00:39.439 ****** 
2023-07-10 15:59:31,083 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.038)       0:00:39.478 ****** 
2023-07-10 15:59:31,121 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.037)       0:00:39.516 ****** 
2023-07-10 15:59:31,153 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.031)       0:00:39.548 ****** 
2023-07-10 15:59:31,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.054)       0:00:39.602 ****** 
2023-07-10 15:59:31,241 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.034)       0:00:39.636 ****** 
2023-07-10 15:59:31,276 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.034)       0:00:39.671 ****** 
2023-07-10 15:59:31,314 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.037)       0:00:39.709 ****** 
2023-07-10 15:59:31,346 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.031)       0:00:39.741 ****** 
2023-07-10 15:59:31,379 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.032)       0:00:39.774 ****** 
2023-07-10 15:59:31,464 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.085)       0:00:39.859 ****** 
2023-07-10 15:59:31,502 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.038)       0:00:39.897 ****** 
2023-07-10 15:59:31,533 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.031)       0:00:39.928 ****** 
2023-07-10 15:59:31,563 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.029)       0:00:39.958 ****** 
2023-07-10 15:59:31,594 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.031)       0:00:39.989 ****** 
2023-07-10 15:59:31,625 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.030)       0:00:40.020 ****** 
2023-07-10 15:59:31,659 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.033)       0:00:40.054 ****** 
2023-07-10 15:59:31,690 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.030)       0:00:40.085 ****** 
2023-07-10 15:59:31,721 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.031)       0:00:40.116 ****** 
2023-07-10 15:59:31,771 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.049)       0:00:40.166 ****** 
2023-07-10 15:59:31,809 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.038)       0:00:40.204 ****** 
2023-07-10 15:59:31,842 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.033)       0:00:40.237 ****** 
2023-07-10 15:59:31,875 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.032)       0:00:40.270 ****** 
2023-07-10 15:59:31,907 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.031)       0:00:40.302 ****** 
2023-07-10 15:59:31,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.030)       0:00:40.333 ****** 
2023-07-10 15:59:31,976 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:31 +0300 (0:00:00.038)       0:00:40.371 ****** 
2023-07-10 15:59:32,010 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.033)       0:00:40.405 ****** 
2023-07-10 15:59:32,043 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.033)       0:00:40.438 ****** 
2023-07-10 15:59:32,074 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.031)       0:00:40.469 ****** 
2023-07-10 15:59:32,106 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.031)       0:00:40.501 ****** 
2023-07-10 15:59:32,138 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.032)       0:00:40.533 ****** 
2023-07-10 15:59:32,168 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.030)       0:00:40.563 ****** 
2023-07-10 15:59:32,213 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.045)       0:00:40.609 ****** 
2023-07-10 15:59:32,245 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.032)       0:00:40.641 ****** 
2023-07-10 15:59:32,298 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.052)       0:00:40.693 ****** 
2023-07-10 15:59:32,374 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.076)       0:00:40.770 ****** 
2023-07-10 15:59:32,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.028)       0:00:40.798 ****** 
2023-07-10 15:59:32,430 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.027)       0:00:40.825 ****** 
2023-07-10 15:59:32,459 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.028)       0:00:40.854 ****** 
2023-07-10 15:59:32,491 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.032)       0:00:40.886 ****** 
2023-07-10 15:59:32,524 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.032)       0:00:40.919 ****** 
2023-07-10 15:59:32,564 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.040)       0:00:40.959 ****** 
2023-07-10 15:59:32,601 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.036)       0:00:40.996 ****** 
2023-07-10 15:59:32,629 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.028)       0:00:41.024 ****** 
2023-07-10 15:59:32,658 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:32 +0300 (0:00:00.028)       0:00:41.053 ****** 
2023-07-10 15:59:34,263 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:01.605)       0:00:42.659 ****** 
2023-07-10 15:59:34,290 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.026)       0:00:42.685 ****** 
2023-07-10 15:59:34,324 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.033)       0:00:42.719 ****** 
2023-07-10 15:59:34,352 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.027)       0:00:42.747 ****** 
2023-07-10 15:59:34,389 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.037)       0:00:42.784 ****** 
2023-07-10 15:59:34,417 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.028)       0:00:42.812 ****** 
2023-07-10 15:59:34,446 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.028)       0:00:42.841 ****** 
2023-07-10 15:59:34,474 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.028)       0:00:42.870 ****** 
2023-07-10 15:59:34,502 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.027)       0:00:42.897 ****** 
2023-07-10 15:59:34,529 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.027)       0:00:42.924 ****** 
2023-07-10 15:59:34,565 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.036)       0:00:42.960 ****** 
2023-07-10 15:59:34,602 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.036)       0:00:42.997 ****** 
2023-07-10 15:59:34,628 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.025)       0:00:43.023 ****** 
2023-07-10 15:59:34,658 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.029)       0:00:43.053 ****** 
2023-07-10 15:59:34,686 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.028)       0:00:43.081 ****** 
2023-07-10 15:59:34,718 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.031)       0:00:43.113 ****** 
2023-07-10 15:59:34,753 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.035)       0:00:43.148 ****** 
2023-07-10 15:59:34,793 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.040)       0:00:43.189 ****** 
2023-07-10 15:59:34,840 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.046)       0:00:43.235 ****** 
2023-07-10 15:59:34,886 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.046)       0:00:43.281 ****** 
2023-07-10 15:59:34,935 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.048)       0:00:43.330 ****** 
2023-07-10 15:59:34,984 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:34 +0300 (0:00:00.049)       0:00:43.379 ****** 
2023-07-10 15:59:35,034 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.049)       0:00:43.429 ****** 
2023-07-10 15:59:35,084 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.049)       0:00:43.479 ****** 
2023-07-10 15:59:35,132 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.048)       0:00:43.527 ****** 
2023-07-10 15:59:35,180 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.047)       0:00:43.575 ****** 
2023-07-10 15:59:35,229 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.048)       0:00:43.624 ****** 
2023-07-10 15:59:35,278 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.048)       0:00:43.673 ****** 
2023-07-10 15:59:35,323 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.045)       0:00:43.718 ****** 
2023-07-10 15:59:35,373 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.049)       0:00:43.768 ****** 
2023-07-10 15:59:35,421 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.048)       0:00:43.816 ****** 
2023-07-10 15:59:35,469 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.048)       0:00:43.864 ****** 
2023-07-10 15:59:35,518 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.048)       0:00:43.913 ****** 
2023-07-10 15:59:35,563 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.045)       0:00:43.958 ****** 
2023-07-10 15:59:35,611 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.047)       0:00:44.006 ****** 
2023-07-10 15:59:35,673 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.061)       0:00:44.068 ****** 
2023-07-10 15:59:35,751 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.078)       0:00:44.146 ****** 
2023-07-10 15:59:35,831 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.079)       0:00:44.226 ****** 
2023-07-10 15:59:35,875 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.043)       0:00:44.270 ****** 
2023-07-10 15:59:35,919 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.044)       0:00:44.314 ****** 
2023-07-10 15:59:35,961 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:35 +0300 (0:00:00.041)       0:00:44.356 ****** 
2023-07-10 15:59:36,037 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.075)       0:00:44.432 ****** 
2023-07-10 15:59:36,082 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.045)       0:00:44.477 ****** 
2023-07-10 15:59:36,125 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.043)       0:00:44.520 ****** 
2023-07-10 15:59:36,218 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.093)       0:00:44.613 ****** 
2023-07-10 15:59:36,264 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.045)       0:00:44.659 ****** 
2023-07-10 15:59:36,309 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.045)       0:00:44.704 ****** 
2023-07-10 15:59:36,354 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.045)       0:00:44.749 ****** 
2023-07-10 15:59:36,401 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.046)       0:00:44.796 ****** 
2023-07-10 15:59:36,443 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.041)       0:00:44.838 ****** 
2023-07-10 15:59:36,504 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.060)       0:00:44.899 ****** 
2023-07-10 15:59:36,546 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.042)       0:00:44.941 ****** 
2023-07-10 15:59:36,589 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.042)       0:00:44.984 ****** 
2023-07-10 15:59:36,625 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.036)       0:00:45.020 ****** 
2023-07-10 15:59:36,669 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.044)       0:00:45.064 ****** 
2023-07-10 15:59:36,714 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.044)       0:00:45.109 ****** 
2023-07-10 15:59:36,776 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.061)       0:00:45.171 ****** 
2023-07-10 15:59:36,817 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.041)       0:00:45.212 ****** 
2023-07-10 15:59:36,863 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.045)       0:00:45.258 ****** 
2023-07-10 15:59:36,921 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:36 +0300 (0:00:00.057)       0:00:45.316 ****** 
2023-07-10 15:59:37,201 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | check if fedora coreos] *******************************************************************************************************
2023-07-10 15:59:37,202 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:37,215 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:37 +0300 (0:00:00.293)       0:00:45.610 ****** 
2023-07-10 15:59:37,291 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | set is_ostree] ****************************************************************************************************************
2023-07-10 15:59:37,292 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:59:37,308 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:37 +0300 (0:00:00.092)       0:00:45.703 ****** 
2023-07-10 15:59:37,528 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd-common : containerd-common | gather os specific variables] *************************************************************************************************
2023-07-10 15:59:37,529 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml) => {"ansible_facts": {"containerd_repo_info": {"repos": ["deb {{ containerd_ubuntu_repo_base_url }} {{ ansible_distribution_release | lower }} {{ containerd_ubuntu_repo_component }}\n"]}}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/container-engine/containerd/vars/../vars/ubuntu.yml"}
2023-07-10 15:59:37,558 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:37 +0300 (0:00:00.250)       0:00:45.953 ****** 
2023-07-10 15:59:37,836 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | check if fedora coreos] *********************************************************************************************************************************
2023-07-10 15:59:37,837 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 15:59:37,850 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:37 +0300 (0:00:00.291)       0:00:46.245 ****** 
2023-07-10 15:59:37,922 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | set is_ostree] ******************************************************************************************************************************************
2023-07-10 15:59:37,923 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_ostree": false}, "changed": false}
2023-07-10 15:59:37,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:37 +0300 (0:00:00.087)       0:00:46.333 ****** 
2023-07-10 15:59:38,707 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Uninstall runc package managed by package manager] ******************************************************************************************************
2023-07-10 15:59:38,707 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 15:59:38,722 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:38 +0300 (0:00:00.783)       0:00:47.117 ****** 
2023-07-10 15:59:38,751 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Download runc binary] ***********************************************************************************************************************************
2023-07-10 15:59:38,871 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 15:59:38,895 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:38 +0300 (0:00:00.173)       0:00:47.290 ****** 
2023-07-10 15:59:38,979 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : prep_download | Set a few facts] *******************************************************************************************************************************
2023-07-10 15:59:38,980 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 15:59:38,995 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:38 +0300 (0:00:00.099)       0:00:47.390 ****** 
2023-07-10 15:59:39,920 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Starting download of file] *********************************************************************************************************************
2023-07-10 15:59:39,920 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 15:59:39,929 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:39 +0300 (0:00:00.933)       0:00:48.324 ****** 
2023-07-10 15:59:40,767 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Set pathname of cached file] *******************************************************************************************************************
2023-07-10 15:59:40,767 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 15:59:40,776 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:40 +0300 (0:00:00.847)       0:00:49.171 ****** 
2023-07-10 15:59:42,581 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Create dest directory on node] *****************************************************************************************************************
2023-07-10 15:59:42,581 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 15:59:42,592 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:42 +0300 (0:00:01.816)       0:00:50.987 ****** 
2023-07-10 15:59:42,632 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:42 +0300 (0:00:00.039)       0:00:51.027 ****** 
2023-07-10 15:59:43,548 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:43 +0300 (0:00:00.916)       0:00:51.943 ****** 
2023-07-10 15:59:49,110 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Validate mirrors] ******************************************************************************************************************************
2023-07-10 15:59:49,110 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:59:49,112 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:59:49,130 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:49 +0300 (0:00:05.581)       0:00:57.525 ****** 
2023-07-10 15:59:49,196 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Get the list of working mirrors] ***************************************************************************************************************
2023-07-10 15:59:49,196 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 15:59:49,214 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:49 +0300 (0:00:00.084)       0:00:57.609 ****** 
2023-07-10 15:59:56,280 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Download item] *********************************************************************************************************************************
2023-07-10 15:59:56,280 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 15:59:56,294 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:56 +0300 (0:00:07.079)       0:01:04.689 ****** 
2023-07-10 15:59:56,352 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:56 +0300 (0:00:00.058)       0:01:04.747 ****** 
2023-07-10 15:59:56,409 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:56 +0300 (0:00:00.057)       0:01:04.804 ****** 
2023-07-10 15:59:56,466 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:56 +0300 (0:00:00.056)       0:01:04.861 ****** 
2023-07-10 15:59:56,507 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : download_file | Extract file archives] *************************************************************************************************************************
2023-07-10 15:59:56,530 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 15:59:56,555 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:56 +0300 (0:00:00.089)       0:01:04.950 ****** 
2023-07-10 15:59:58,040 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  15:59:58 +0300 (0:00:01.485)       0:01:06.435 ****** 
2023-07-10 16:00:00,328 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : Copy runc binary from download dir] ****************************************************************************************************************************
2023-07-10 16:00:00,329 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c2a25f41774ecb90b4f51fb11ebb06337862e2b7", "dest": "/usr/local/bin/runc", "gid": 0, "group": "root", "md5sum": "0407860329c7f81077a17b574eccc75e", "mode": "0755", "owner": "root", "size": 9644288, "src": "/tmp/releases/runc-v1.1.7.amd64", "state": "file", "uid": 0}
2023-07-10 16:00:00,345 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:00 +0300 (0:00:02.304)       0:01:08.740 ****** 
2023-07-10 16:00:00,647 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/runc : runc | Remove orphaned binary] *********************************************************************************************************************************
2023-07-10 16:00:00,647 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/usr/bin/runc", "state": "absent"}
2023-07-10 16:00:00,662 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:00 +0300 (0:00:00.317)       0:01:09.058 ****** 
2023-07-10 16:00:00,681 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : install crictl] **********************************************************************************************************************************************
2023-07-10 16:00:00,696 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/crictl.yml for node1
2023-07-10 16:00:00,707 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:00 +0300 (0:00:00.044)       0:01:09.102 ****** 
2023-07-10 16:00:00,732 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : crictl | Download crictl] ************************************************************************************************************************************
2023-07-10 16:00:00,752 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 16:00:00,768 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:00 +0300 (0:00:00.060)       0:01:09.163 ****** 
2023-07-10 16:00:00,841 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : prep_download | Set a few facts] *****************************************************************************************************************************
2023-07-10 16:00:00,842 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:00:00,855 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:00 +0300 (0:00:00.087)       0:01:09.251 ****** 
2023-07-10 16:00:02,728 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Starting download of file] *******************************************************************************************************************
2023-07-10 16:00:02,729 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 16:00:02,738 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:02 +0300 (0:00:01.882)       0:01:11.133 ****** 
2023-07-10 16:00:04,055 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Set pathname of cached file] *****************************************************************************************************************
2023-07-10 16:00:04,056 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:00:04,067 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:04 +0300 (0:00:01.328)       0:01:12.462 ****** 
2023-07-10 16:00:06,546 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Create dest directory on node] ***************************************************************************************************************
2023-07-10 16:00:06,547 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:00:06,579 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:06 +0300 (0:00:02.512)       0:01:14.974 ****** 
2023-07-10 16:00:06,669 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:06 +0300 (0:00:00.089)       0:01:15.064 ****** 
2023-07-10 16:00:08,084 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:08 +0300 (0:00:01.415)       0:01:16.479 ****** 
2023-07-10 16:00:11,821 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Validate mirrors] ****************************************************************************************************************************
2023-07-10 16:00:11,821 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:00:11,823 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:00:11,849 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:11 +0300 (0:00:03.764)       0:01:20.244 ****** 
2023-07-10 16:00:11,925 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Get the list of working mirrors] *************************************************************************************************************
2023-07-10 16:00:11,926 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:00:11,943 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:11 +0300 (0:00:00.094)       0:01:20.338 ****** 
2023-07-10 16:00:20,791 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Download item] *******************************************************************************************************************************
2023-07-10 16:00:20,792 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:00:20,800 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:20 +0300 (0:00:08.857)       0:01:29.195 ****** 
2023-07-10 16:00:20,836 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:20 +0300 (0:00:00.035)       0:01:29.231 ****** 
2023-07-10 16:00:20,873 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:20 +0300 (0:00:00.036)       0:01:29.268 ****** 
2023-07-10 16:00:20,910 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:20 +0300 (0:00:00.036)       0:01:29.305 ****** 
2023-07-10 16:00:20,936 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : download_file | Extract file archives] ***********************************************************************************************************************
2023-07-10 16:00:20,946 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:00:20,961 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:20 +0300 (0:00:00.051)       0:01:29.356 ****** 
2023-07-10 16:00:27,027 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : extract_file | Unpacking archive] ****************************************************************************************************************************
2023-07-10 16:00:27,028 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:00:27,044 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:27 +0300 (0:00:06.082)       0:01:35.439 ****** 
2023-07-10 16:00:27,710 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Install crictl config] ***************************************************************************************************************************************
2023-07-10 16:00:27,711 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "8c563ee377b8aad181d3a00e06314316dc085513", "dest": "/etc/crictl.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/crictl.yaml", "size": 145, "state": "file", "uid": 0}
2023-07-10 16:00:27,725 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:27 +0300 (0:00:00.681)       0:01:36.120 ****** 
2023-07-10 16:00:28,433 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/crictl : Copy crictl binary from download dir] ************************************************************************************************************************
2023-07-10 16:00:28,434 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "ecebb8d084fb6bfcd42716ecb222a0bd7599d3f5", "dest": "/usr/local/bin/crictl", "gid": 0, "group": "root", "md5sum": "d8aaa4799d86a7beda6c6378b78f80b1", "mode": "0755", "owner": "root", "size": 52586151, "src": "/tmp/releases/crictl", "state": "file", "uid": 0}
2023-07-10 16:00:28,459 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:28 +0300 (0:00:00.734)       0:01:36.854 ****** 
2023-07-10 16:00:28,489 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Download nerdctl] *********************************************************************************************************************************
2023-07-10 16:00:28,518 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 16:00:28,536 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:28 +0300 (0:00:00.077)       0:01:36.931 ****** 
2023-07-10 16:00:28,608 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : prep_download | Set a few facts] ****************************************************************************************************************************
2023-07-10 16:00:28,608 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:00:28,627 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:28 +0300 (0:00:00.090)       0:01:37.022 ****** 
2023-07-10 16:00:30,292 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Starting download of file] ******************************************************************************************************************
2023-07-10 16:00:30,292 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 16:00:30,307 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:30 +0300 (0:00:01.680)       0:01:38.702 ****** 
2023-07-10 16:00:31,382 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Set pathname of cached file] ****************************************************************************************************************
2023-07-10 16:00:31,382 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:00:31,400 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:31 +0300 (0:00:01.092)       0:01:39.795 ****** 
2023-07-10 16:00:33,195 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Create dest directory on node] **************************************************************************************************************
2023-07-10 16:00:33,195 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:00:33,208 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:33 +0300 (0:00:01.808)       0:01:41.603 ****** 
2023-07-10 16:00:33,251 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:33 +0300 (0:00:00.043)       0:01:41.647 ****** 
2023-07-10 16:00:34,112 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:34 +0300 (0:00:00.860)       0:01:42.507 ****** 
2023-07-10 16:00:38,743 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Validate mirrors] ***************************************************************************************************************************
2023-07-10 16:00:38,744 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:00:38,747 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:00:38,776 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:38 +0300 (0:00:04.663)       0:01:47.171 ****** 
2023-07-10 16:00:38,883 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Get the list of working mirrors] ************************************************************************************************************
2023-07-10 16:00:38,884 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:00:38,914 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:38 +0300 (0:00:00.138)       0:01:47.309 ****** 
2023-07-10 16:00:46,863 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Download item] ******************************************************************************************************************************
2023-07-10 16:00:46,863 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:00:46,875 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:46 +0300 (0:00:07.960)       0:01:55.270 ****** 
2023-07-10 16:00:46,984 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:46 +0300 (0:00:00.109)       0:01:55.380 ****** 
2023-07-10 16:00:47,020 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:47 +0300 (0:00:00.035)       0:01:55.415 ****** 
2023-07-10 16:00:47,053 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:47 +0300 (0:00:00.032)       0:01:55.448 ****** 
2023-07-10 16:00:47,076 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : download_file | Extract file archives] **********************************************************************************************************************
2023-07-10 16:00:47,088 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:00:47,104 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:47 +0300 (0:00:00.051)       0:01:55.500 ****** 
2023-07-10 16:00:53,425 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : extract_file | Unpacking archive] ***************************************************************************************************************************
2023-07-10 16:00:53,426 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:00:53,440 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:53 +0300 (0:00:06.335)       0:02:01.835 ****** 
2023-07-10 16:00:53,959 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Copy nerdctl binary from download dir] ************************************************************************************************************
2023-07-10 16:00:53,960 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "36ed3de5ebdc71f782c80b95c6838797e71f1d06", "dest": "/usr/local/bin/nerdctl", "gid": 0, "group": "root", "md5sum": "1382ce88987ba5832c4477d0a781b6f1", "mode": "0755", "owner": "root", "size": 24379392, "src": "/tmp/releases/nerdctl", "state": "file", "uid": 0}
2023-07-10 16:00:53,973 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:53 +0300 (0:00:00.533)       0:02:02.368 ****** 
2023-07-10 16:00:54,258 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Create configuration dir] *************************************************************************************************************************
2023-07-10 16:00:54,259 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/nerdctl", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:00:54,274 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:54 +0300 (0:00:00.300)       0:02:02.669 ****** 
2023-07-10 16:00:54,937 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/nerdctl : nerdctl | Install nerdctl configuration] ********************************************************************************************************************
2023-07-10 16:00:54,938 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "e46d9c0efd0a617d0682d1b779320ada3a505ca4", "dest": "/etc/nerdctl/nerdctl.toml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/nerdctl/nerdctl.toml", "size": 354, "state": "file", "uid": 0}
2023-07-10 16:00:54,964 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:54 +0300 (0:00:00.690)       0:02:03.359 ****** 
2023-07-10 16:00:55,031 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:55 +0300 (0:00:00.066)       0:02:03.426 ****** 
2023-07-10 16:00:55,771 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove any package manager controlled containerd package] ***********************************************************************************
2023-07-10 16:00:55,771 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 16:00:55,786 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:55 +0300 (0:00:00.754)       0:02:04.181 ****** 
2023-07-10 16:00:55,837 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:55 +0300 (0:00:00.050)       0:02:04.231 ****** 
2023-07-10 16:00:56,616 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove containerd repository] ***************************************************************************************************************
2023-07-10 16:00:56,617 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=deb https://download.docker.com/linux/ubuntu jammy stable
) => {"ansible_loop_var": "item", "changed": false, "item": "deb https://download.docker.com/linux/ubuntu jammy stable\n", "repo": "deb https://download.docker.com/linux/ubuntu jammy stable\n", "state": "absent"}
2023-07-10 16:00:56,630 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:56 +0300 (0:00:00.793)       0:02:05.025 ****** 
2023-07-10 16:00:56,649 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Download containerd] ************************************************************************************************************************
2023-07-10 16:00:56,668 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 16:00:56,681 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:56 +0300 (0:00:00.051)       0:02:05.076 ****** 
2023-07-10 16:00:56,724 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : prep_download | Set a few facts] *************************************************************************************************************************
2023-07-10 16:00:56,725 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:00:56,735 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:56 +0300 (0:00:00.053)       0:02:05.130 ****** 
2023-07-10 16:00:57,567 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Starting download of file] ***************************************************************************************************************
2023-07-10 16:00:57,567 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
}
2023-07-10 16:00:57,577 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:57 +0300 (0:00:00.842)       0:02:05.972 ****** 
2023-07-10 16:00:58,494 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Set pathname of cached file] *************************************************************************************************************
2023-07-10 16:00:58,495 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/containerd-1.7.2-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:00:58,504 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:00:58 +0300 (0:00:00.926)       0:02:06.899 ****** 
2023-07-10 16:01:00,306 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Create dest directory on node] ***********************************************************************************************************
2023-07-10 16:01:00,306 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:00,318 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:00 +0300 (0:00:01.813)       0:02:08.713 ****** 
2023-07-10 16:01:00,358 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:00 +0300 (0:00:00.039)       0:02:08.753 ****** 
2023-07-10 16:01:01,417 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:01 +0300 (0:00:01.059)       0:02:09.812 ****** 
2023-07-10 16:01:06,417 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Validate mirrors] ************************************************************************************************************************
2023-07-10 16:01:06,417 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:06,420 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:06,438 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:06 +0300 (0:00:05.020)       0:02:14.833 ****** 
2023-07-10 16:01:06,503 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Get the list of working mirrors] *********************************************************************************************************
2023-07-10 16:01:06,503 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:01:06,522 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:06 +0300 (0:00:00.084)       0:02:14.917 ****** 
2023-07-10 16:01:14,033 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Download item] ***************************************************************************************************************************
2023-07-10 16:01:14,034 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:14,053 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:14 +0300 (0:00:07.531)       0:02:22.448 ****** 
2023-07-10 16:01:14,104 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:14 +0300 (0:00:00.051)       0:02:22.499 ****** 
2023-07-10 16:01:14,159 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:14 +0300 (0:00:00.054)       0:02:22.554 ****** 
2023-07-10 16:01:14,211 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:14 +0300 (0:00:00.052)       0:02:22.606 ****** 
2023-07-10 16:01:14,250 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : download_file | Extract file archives] *******************************************************************************************************************
2023-07-10 16:01:14,266 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:01:14,291 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:14 +0300 (0:00:00.079)       0:02:22.686 ****** 
2023-07-10 16:01:15,719 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:15 +0300 (0:00:01.428)       0:02:24.115 ****** 
2023-07-10 16:01:19,426 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Unpack containerd archive] ******************************************************************************************************************
2023-07-10 16:01:19,427 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/usr/local/bin", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:01:19,435 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:19 +0300 (0:00:03.716)       0:02:27.831 ****** 
2023-07-10 16:01:19,642 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Remove orphaned binary] *********************************************************************************************************************
2023-07-10 16:01:19,642 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd) => {"ansible_loop_var": "item", "changed": false, "item": "containerd", "path": "/usr/bin/containerd", "state": "absent"}
2023-07-10 16:01:19,809 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim", "path": "/usr/bin/containerd-shim", "state": "absent"}
2023-07-10 16:01:19,970 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim-runc-v1) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim-runc-v1", "path": "/usr/bin/containerd-shim-runc-v1", "state": "absent"}
2023-07-10 16:01:20,124 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=containerd-shim-runc-v2) => {"ansible_loop_var": "item", "changed": false, "item": "containerd-shim-runc-v2", "path": "/usr/bin/containerd-shim-runc-v2", "state": "absent"}
2023-07-10 16:01:20,281 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ctr) => {"ansible_loop_var": "item", "changed": false, "item": "ctr", "path": "/usr/bin/ctr", "state": "absent"}
2023-07-10 16:01:20,291 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:20 +0300 (0:00:00.855)       0:02:28.686 ****** 
2023-07-10 16:01:20,651 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Generate systemd service for containerd] ****************************************************************************************************
2023-07-10 16:01:20,652 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "2ebef812a5ebb2a712a694da85860395a349c40a", "dest": "/etc/systemd/system/containerd.service", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/system/containerd.service", "size": 1365, "state": "file", "uid": 0}
2023-07-10 16:01:20,661 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:20 +0300 (0:00:00.370)       0:02:29.056 ****** 
2023-07-10 16:01:20,847 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Ensure containerd directories exist] ********************************************************************************************************
2023-07-10 16:01:20,848 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/systemd/system/containerd.service.d) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/systemd/system/containerd.service.d", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/containerd.service.d", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:20,998 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/containerd) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/etc/containerd", "mode": "0755", "owner": "root", "path": "/etc/containerd", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:21,151 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/var/lib/containerd) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/var/lib/containerd", "mode": "0755", "owner": "root", "path": "/var/lib/containerd", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:21,334 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/run/containerd) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "/run/containerd", "mode": "0755", "owner": "root", "path": "/run/containerd", "size": 180, "state": "directory", "uid": 0}
2023-07-10 16:01:21,348 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:21 +0300 (0:00:00.686)       0:02:29.743 ****** 
2023-07-10 16:01:21,394 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:21 +0300 (0:00:00.046)       0:02:29.789 ****** 
2023-07-10 16:01:21,573 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Generate default base_runtime_spec] *********************************************************************************************************
2023-07-10 16:01:21,574 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/ctr", "oci", "spec"], "delta": "0:00:00.009903", "end": "2023-07-10 13:01:21.564977", "msg": "", "rc": 0, "start": "2023-07-10 13:01:21.555074", "stderr": "", "stderr_lines": [], "stdout": "{\n    \"ociVersion\": \"1.1.0-rc.1\",\n    \"process\": {\n        \"user\": {\n            \"uid\": 0,\n            \"gid\": 0\n        },\n        \"cwd\": \"/\",\n        \"capabilities\": {\n            \"bounding\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ],\n            \"effective\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ],\n            \"permitted\": [\n                \"CAP_CHOWN\",\n                \"CAP_DAC_OVERRIDE\",\n                \"CAP_FSETID\",\n                \"CAP_FOWNER\",\n                \"CAP_MKNOD\",\n                \"CAP_NET_RAW\",\n                \"CAP_SETGID\",\n                \"CAP_SETUID\",\n                \"CAP_SETFCAP\",\n                \"CAP_SETPCAP\",\n                \"CAP_NET_BIND_SERVICE\",\n                \"CAP_SYS_CHROOT\",\n                \"CAP_KILL\",\n                \"CAP_AUDIT_WRITE\"\n            ]\n        },\n        \"rlimits\": [\n            {\n                \"type\": \"RLIMIT_NOFILE\",\n                \"hard\": 1024,\n                \"soft\": 1024\n            }\n        ],\n        \"noNewPrivileges\": true\n    },\n    \"root\": {\n        \"path\": \"rootfs\"\n    },\n    \"mounts\": [\n        {\n            \"destination\": \"/proc\",\n            \"type\": \"proc\",\n            \"source\": \"proc\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/dev\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/pts\",\n            \"type\": \"devpts\",\n            \"source\": \"devpts\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"newinstance\",\n                \"ptmxmode=0666\",\n                \"mode=0620\",\n                \"gid=5\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/shm\",\n            \"type\": \"tmpfs\",\n            \"source\": \"shm\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"mode=1777\",\n                \"size=65536k\"\n            ]\n        },\n        {\n            \"destination\": \"/dev/mqueue\",\n            \"type\": \"mqueue\",\n            \"source\": \"mqueue\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\"\n            ]\n        },\n        {\n            \"destination\": \"/sys\",\n            \"type\": \"sysfs\",\n            \"source\": \"sysfs\",\n            \"options\": [\n                \"nosuid\",\n                \"noexec\",\n                \"nodev\",\n                \"ro\"\n            ]\n        },\n        {\n            \"destination\": \"/run\",\n            \"type\": \"tmpfs\",\n            \"source\": \"tmpfs\",\n            \"options\": [\n                \"nosuid\",\n                \"strictatime\",\n                \"mode=755\",\n                \"size=65536k\"\n            ]\n        }\n    ],\n    \"linux\": {\n        \"resources\": {\n            \"devices\": [\n                {\n                    \"allow\": false,\n                    \"access\": \"rwm\"\n                }\n            ]\n        },\n        \"cgroupsPath\": \"/default\",\n        \"namespaces\": [\n            {\n                \"type\": \"pid\"\n            },\n            {\n                \"type\": \"ipc\"\n            },\n            {\n                \"type\": \"uts\"\n            },\n            {\n                \"type\": \"mount\"\n            },\n            {\n                \"type\": \"network\"\n            }\n        ],\n        \"maskedPaths\": [\n            \"/proc/acpi\",\n            \"/proc/asound\",\n            \"/proc/kcore\",\n            \"/proc/keys\",\n            \"/proc/latency_stats\",\n            \"/proc/timer_list\",\n            \"/proc/timer_stats\",\n            \"/proc/sched_debug\",\n            \"/sys/firmware\",\n            \"/proc/scsi\"\n        ],\n        \"readonlyPaths\": [\n            \"/proc/bus\",\n            \"/proc/fs\",\n            \"/proc/irq\",\n            \"/proc/sys\",\n            \"/proc/sysrq-trigger\"\n        ]\n    }\n}", "stdout_lines": ["{", "    \"ociVersion\": \"1.1.0-rc.1\",", "    \"process\": {", "        \"user\": {", "            \"uid\": 0,", "            \"gid\": 0", "        },", "        \"cwd\": \"/\",", "        \"capabilities\": {", "            \"bounding\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ],", "            \"effective\": [", "                \"CAP_CHOWN\",", "                \"CAP_DAC_OVERRIDE\",", "                \"CAP_FSETID\",", "                \"CAP_FOWNER\",", "                \"CAP_MKNOD\",", "                \"CAP_NET_RAW\",", "                \"CAP_SETGID\",", "                \"CAP_SETUID\",", "                \"CAP_SETFCAP\",", "                \"CAP_SETPCAP\",", "                \"CAP_NET_BIND_SERVICE\",", "                \"CAP_SYS_CHROOT\",", "                \"CAP_KILL\",", "                \"CAP_AUDIT_WRITE\"", "            ],", "            \"permitted},", "        \"rlimits\": [", "            {", "                \"type\": \"RLIMIT_NOFILE\",", "                \"hard\": 1024,", "                \"soft\": 1024", "            }", "        ],", "        \"noNewPrivileges\": true", "    },", "    \"root\": {", "        \"path\": \"rootfs\"", "    },", "    \"mounts\": [", "        {", "            \"destination\": \"/proc\",", "            \"type\": \"proc\",", "            \"source\": \"proc\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\"", "            ]", "        },", "        {", "            \"destination\": \"/dev\",", "            \"type\": \"tmpfs\",", "            \"source\": \"tmpfs\",", "            \"options\": [", "                \"nosuid\",", "                \"strictatime\",", "                \"mode=755\",", "                \"size=65536k\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/pts\",", "            \"type\": \"devpts\",", "            \"source\": \"devpts\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"newinstance\",", "                \"ptmxmode=0666\",", "                \"mode=0620\",", "                \"gid=5\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/shm\",", "            \"type\": \"tmpfs\",", "            \"source\": \"shm\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\",", "                \"mode=1777\",", "                \"size=65536k\"", "            ]", "        },", "        {", "            \"destination\": \"/dev/mqueue\",", "            \"type\": \"mqueue\",", "            \"source\": \"mqueue\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\"", "            ]", "        },", "        {", "            \"destination\": \"/sys\",", "            \"type\": \"sysfs\",", "            \"source\": \"sysfs\",", "            \"options\": [", "                \"nosuid\",", "                \"noexec\",", "                \"nodev\",", "                \"ro\"", "            ]", "        },", "        {", "            \"destination\": \"/run\",", "            \"type\": \"tmpfs\",", "            \"source\": \"tmpfs\",", "            \"options\": [", "                \"nosuid\",", "                \"strictatime\",", "                \"mode=755\",", "                \"size=65536k\"", "            ]", "        }", "    ],", "    \"linux\": {", "        \"resources\": {", "            \"devices\": [", "                {", "                    \"allow\": false,", "                    \"access\": \"rwm\"", "                }", "            ]", "        },", "        \"cgroupsPath\": \"/default\",", "        \"namespaces\": [", "            {", "                \"type\": \"pid\"", "            },", "            {", "                \"type\": \"ipc\"", "            },", "            {", "                \"type\": \"uts\"", "            },", "            {", "                \"type\": \"mount\"", "            },", "            {", "                \"type\": \"network\"", "            }", "        ],", "        \"maskedPaths\": [", "            \"/proc/acpi\",", "            \"/proc/asound\",", "            \"/proc/kcore\",", "            \"/proc/keys\",", "            \"/proc/latency_stats\",", "            \"/proc/timer_list\",", "            \"/proc/timer_stats\",", "            \"/proc/sched_debug\",", "            \"/sys/firmware\",", "            \"/proc/scsi\"", "        ],", "        \"readonlyPaths\": [", "            \"/proc/bus\",", "            \"/proc/fs\",", "            \"/proc/irq\",", "            \"/proc/sys\",", "            \"/proc/sysrq-trigger\"", "        ]", "    }", "}"]}
2023-07-10 16:01:21,583 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:21 +0300 (0:00:00.189)       0:02:29.978 ****** 
2023-07-10 16:01:21,627 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Store generated default base_runtime_spec] **************************************************************************************************
2023-07-10 16:01:21,627 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"containerd_default_base_runtime_spec": {"linux": {"cgroupsPath": "/default", "maskedPaths": ["/proc/acpi", "/proc/asound", "/proc/kcore", "/proc/keys", "/proc/latency_stats", "/proc/timer_list", "/proc/timer_stats", "/proc/sched_debug", "/sys/firmware", "/proc/scsi"], "namespaces": [{"type": "pid"}, {"type": "ipc"}, {"type": "uts"}, {"type": "mount"}, {"type": "network"}], "readonlyPaths": ["/proc/bus", "/proc/fs", "/proc/irq", "/proc/sys", "/proc/sysrq-trigger"], "resources": {"devices": [{"access": "rwm", "allow": false}]}}, "mounts": [{"destination": "/proc", "options": ["nosuid", "noexec", "nodev"], "source": "proc", "type": "proc"}, {"destination": "/dev", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}, {"destination": "/dev/pts", "options": ["nosuid", "noexec", "newinstance", "ptmxmode=0666", "mode=0620", "gid=5"], "source": "devpts", "type": "devpts"}, {"destination": "/dev/shm", "options": ["nosuid", "noexec", "nodev", "mode=1777", "size=65536k"], "source": "shm", "type": "tmpfs"}, {"destination": "/dev/mqueue", "options": ["nosuid", "noexec", "nodev"], "source": "mqueue", "type": "mqueue"}, {"destination": "/sys", "options": ["nosuid", "noexec", "nodev", "ro"], "source": "sysfs", "type": "sysfs"}, {"destination": "/run", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}], "ociVersion": "1.1.0-rc.1", "process": {"capabilities": {"bounding": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "effective": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "permitted": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"]}, "cwd": "/", "noNewPrivileges": true, "rlimits": [{"hard": 1024, "soft": 1024, "type": "RLIMIT_NOFILE"}], "user": {"gid": 0, "uid": 0}}, "root": {"path": "rootfs"}}}, "changed": false}
2023-07-10 16:01:21,638 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:21 +0300 (0:00:00.054)       0:02:30.033 ****** 
2023-07-10 16:01:22,040 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Write base_runtime_specs] *******************************************************************************************************************
2023-07-10 16:01:22,041 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.1.0-rc.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}}) => {"ansible_loop_var": "item", "changed": false, "checksum": "ca010433eff9d7cb6f6886f2384190c5cbc2f01d", "dest": "/etc/containerd/cri-base.json", "gid": 0, "group": "root", "item": {"key": "cri-base.json", "value": {"linux": {"cgroupsPath": "/default", "maskedPaths": ["/proc/acpi", "/proc/asound", "/proc/kcore", "/proc/keys", "/proc/latency_stats", "/proc/timer_list", "/proc/timer_stats", "/proc/sched_debug", "/sys/firmware", "/proc/scsi"], "namespaces": [{"type": "pid"}, {"type": "ipc"}, {"type": "uts"}, {"type": "mount"}, {"type": "network"}], "readonlyPaths": ["/proc/bus", "/proc/fs", "/proc/irq", "/proc/sys", "/proc/sysrq-trigger"], "resources": {"devices": [{"access": "rwm", "allow": false}]}}, "mounts": [{"destination": "/proc", "options": ["nosuid", "noexec", "nodev"], "source": "proc", "type": "proc"}, {"destination": "/dev", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}, {"destination": "/dev/pts", "options": ["nosuid", "noexec", "newinstance", "ptmxmode=0666", "mode=0620", "gid=5"], "source": "devpts", "type": "devpts"}, {"destination": "/dev/shm", "options": ["nosuid", "noexec", "nodev", "mode=1777", "size=65536k"], "source": "shm", "type": "tmpfs"}, {"destination": "/dev/mqueue", "options": ["nosuid", "noexec", "nodev"], "source": "mqueue", "type": "mqueue"}, {"destination": "/sys", "options": ["nosuid", "noexec", "nodev", "ro"], "source": "sysfs", "type": "sysfs"}, {"destination": "/run", "options": ["nosuid", "strictatime", "mode=755", "size=65536k"], "source": "tmpfs", "type": "tmpfs"}], "ociVersion": "1.1.0-rc.1", "process": {"capabilities": {"bounding": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "effective": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"], "permitted": ["CAP_CHOWN", "CAP_DAC_OVERRIDE", "CAP_FSETID", "CAP_FOWNER", "CAP_MKNOD", "CAP_NET_RAW", "CAP_SETGID", "CAP_SETUID", "CAP_SETFCAP", "CAP_SETPCAP", "CAP_NET_BIND_SERVICE", "CAP_SYS_CHROOT", "CAP_KILL", "CAP_AUDIT_WRITE"]}, "cwd": "/", "noNewPrivileges": true, "rlimits": [{"hard": 65535, "soft": 65535, "type": "RLIMIT_NOFILE"}], "user": {"gid": 0, "uid": 0}}, "root": {"path": "rootfs"}}}, "mode": "0644", "owner": "root", "path": "/etc/containerd/cri-base.json", "size": 2295, "state": "file", "uid": 0}
2023-07-10 16:01:22,057 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:22 +0300 (0:00:00.419)       0:02:30.452 ****** 
2023-07-10 16:01:22,519 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Copy containerd config file] ****************************************************************************************************************
2023-07-10 16:01:22,520 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "7481f73c81ce443d6d8501704dab0633db9bf7b4", "dest": "/etc/containerd/config.toml", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/containerd/config.toml", "size": 1230, "state": "file", "uid": 0}
2023-07-10 16:01:22,528 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:22 +0300 (0:00:00.471)       0:02:30.923 ****** 
2023-07-10 16:01:22,553 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:22 +0300 (0:00:00.024)       0:02:30.948 ****** 
2023-07-10 16:01:22,578 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:22 +0300 (0:00:00.024)       0:02:30.973 ****** 
2023-07-10 16:01:22,595 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:22 +0300 (0:00:00.017)       0:02:30.990 ****** 
2023-07-10 16:01:23,213 p=24624 u=kubernetmachine n=ansible | TASK [container-engine/containerd : containerd | Ensure containerd is started and enabled] ***************************************************************************************************
2023-07-10 16:01:23,214 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "enabled": true, "name": "containerd", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ActiveEnterTimestampMonotonic": "13990220594", "ActiveExitTimestamp": "n/a", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "network.target sysinit.target local-fs.target systemd-journald.socket system.slice basic.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 11:43:59 UTC", "AssertTimestampMonotonic": "13990149561", "Before": "shutdown.target kubelet.service multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "76055051000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ConditionTimestampMonotonic": "13990149559", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/containerd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "yes", "DelegateControllers": "cpu cpuacct cpuset io blkio memory devices pids bpf-firewall bpf-devices bpf-foreign bpf-socket-bind", "Description": "containerd container runtime", "DevicePolicy": "auto", "Documentation": "https://containerd.io", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "5685", "ExecMainStartTimestamp": "Mon 2023-07-10 11:43:59 UTC", "ExecMainStartTimestampMonotonic": "13990181696", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/containerd ; argv[]=/usr/local/bin/containerd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; ignore_errors=yes ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/sbin/modprobe ; argv[]=/sbin/modprobe overlay ; flags=ignore-failure ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/containerd.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "containerd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "n/a", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Mon 2023-07-10 11:43:59 UTC", "InactiveExitTimestampMonotonic": "13990150455", "InvocationID": "03387208a4804fad97a58edfb791a0fe", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "process", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "infinity", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "infinity", "LimitMEMLOCKSoft": "infinity", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "infinity", "LimitNOFILESoft": "infinity", "LimitNPROC": "infinity", "LimitNPROCSoft": "infinity", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "5685", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "810745856", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "containerd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "continue", "OOMScoreAdjust": "-999", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "5s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 11:43:59 UTC", "StateChangeTimestampMonotonic": "13990220594", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "160", "TasksMax": "infinity", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "kubelet.service multi-user.target", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 16:01:23,230 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.634)       0:02:31.625 ****** 
2023-07-10 16:01:23,259 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.028)       0:02:31.654 ****** 
2023-07-10 16:01:23,287 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.028)       0:02:31.682 ****** 
2023-07-10 16:01:23,402 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.115)       0:02:31.797 ****** 
2023-07-10 16:01:23,442 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.039)       0:02:31.837 ****** 
2023-07-10 16:01:23,471 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.028)       0:02:31.866 ****** 
2023-07-10 16:01:23,498 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.027)       0:02:31.893 ****** 
2023-07-10 16:01:23,527 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.028)       0:02:31.922 ****** 
2023-07-10 16:01:23,554 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.027)       0:02:31.949 ****** 
2023-07-10 16:01:23,594 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.040)       0:02:31.989 ****** 
2023-07-10 16:01:23,636 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.041)       0:02:32.031 ****** 
2023-07-10 16:01:23,668 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.031)       0:02:32.063 ****** 
2023-07-10 16:01:23,696 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.028)       0:02:32.091 ****** 
2023-07-10 16:01:23,822 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.126)       0:02:32.217 ****** 
2023-07-10 16:01:23,850 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.027)       0:02:32.245 ****** 
2023-07-10 16:01:23,880 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.029)       0:02:32.275 ****** 
2023-07-10 16:01:23,909 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.029)       0:02:32.304 ****** 
2023-07-10 16:01:23,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.029)       0:02:32.333 ****** 
2023-07-10 16:01:23,967 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.028)       0:02:32.362 ****** 
2023-07-10 16:01:23,997 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:23 +0300 (0:00:00.030)       0:02:32.392 ****** 
2023-07-10 16:01:24,033 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.036)       0:02:32.428 ****** 
2023-07-10 16:01:24,067 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.033)       0:02:32.462 ****** 
2023-07-10 16:01:24,095 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.027)       0:02:32.490 ****** 
2023-07-10 16:01:24,122 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.027)       0:02:32.518 ****** 
2023-07-10 16:01:24,184 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.061)       0:02:32.579 ****** 
2023-07-10 16:01:24,215 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.030)       0:02:32.610 ****** 
2023-07-10 16:01:24,263 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.048)       0:02:32.658 ****** 
2023-07-10 16:01:24,302 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.039)       0:02:32.697 ****** 
2023-07-10 16:01:24,335 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.032)       0:02:32.730 ****** 
2023-07-10 16:01:24,363 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.028)       0:02:32.758 ****** 
2023-07-10 16:01:24,397 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.034)       0:02:32.793 ****** 
2023-07-10 16:01:24,428 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.030)       0:02:32.823 ****** 
2023-07-10 16:01:24,457 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.029)       0:02:32.852 ****** 
2023-07-10 16:01:24,496 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.038)       0:02:32.891 ****** 
2023-07-10 16:01:24,539 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.042)       0:02:32.933 ****** 
2023-07-10 16:01:24,569 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.030)       0:02:32.964 ****** 
2023-07-10 16:01:24,600 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.031)       0:02:32.996 ****** 
2023-07-10 16:01:24,629 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.028)       0:02:33.024 ****** 
2023-07-10 16:01:24,647 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.018)       0:02:33.042 ****** 
2023-07-10 16:01:24,692 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.044)       0:02:33.087 ****** 
2023-07-10 16:01:24,721 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.029)       0:02:33.116 ****** 
2023-07-10 16:01:24,763 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.041)       0:02:33.158 ****** 
2023-07-10 16:01:24,900 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.137)       0:02:33.296 ****** 
2023-07-10 16:01:24,931 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.030)       0:02:33.326 ****** 
2023-07-10 16:01:24,977 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:01:24,978 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:01:24,990 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:24 +0300 (0:00:00.058)       0:02:33.385 ****** 
2023-07-10 16:01:25,029 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.038)       0:02:33.424 ****** 
2023-07-10 16:01:25,063 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.034)       0:02:33.458 ****** 
2023-07-10 16:01:25,099 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.035)       0:02:33.494 ****** 
2023-07-10 16:01:25,133 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.034)       0:02:33.528 ****** 
2023-07-10 16:01:25,657 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Register docker images info] ********************************************************************************************************************************
2023-07-10 16:01:25,658 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:25,668 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.535)       0:02:34.063 ****** 
2023-07-10 16:01:25,874 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Create staging directory on remote node] ********************************************************************************************************************
2023-07-10 16:01:25,874 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/images", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:25,888 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.220)       0:02:34.283 ****** 
2023-07-10 16:01:25,924 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.035)       0:02:34.319 ****** 
2023-07-10 16:01:25,949 p=24624 u=kubernetmachine n=ansible | TASK [download : download | Get kubeadm binary and list of required images] ******************************************************************************************************************
2023-07-10 16:01:25,967 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/prep_kubeadm_images.yml for node1
2023-07-10 16:01:25,981 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:25 +0300 (0:00:00.056)       0:02:34.376 ****** 
2023-07-10 16:01:26,802 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:26 +0300 (0:00:00.821)       0:02:35.197 ****** 
2023-07-10 16:01:27,611 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Download kubeadm binary] ******************************************************************************************************************************
2023-07-10 16:01:27,629 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1
2023-07-10 16:01:27,643 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:27 +0300 (0:00:00.841)       0:02:36.038 ****** 
2023-07-10 16:01:27,681 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:01:27,682 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:01:27,691 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:27 +0300 (0:00:00.047)       0:02:36.086 ****** 
2023-07-10 16:01:28,523 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:01:28,523 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"
}
2023-07-10 16:01:28,532 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:28 +0300 (0:00:00.841)       0:02:36.927 ****** 
2023-07-10 16:01:29,436 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:01:29,437 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.26.2-amd64"}, "changed": false}
2023-07-10 16:01:29,447 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:29 +0300 (0:00:00.914)       0:02:37.842 ****** 
2023-07-10 16:01:31,495 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:01:31,495 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:31,506 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:31 +0300 (0:00:02.059)       0:02:39.902 ****** 
2023-07-10 16:01:31,544 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:31 +0300 (0:00:00.037)       0:02:39.939 ****** 
2023-07-10 16:01:32,473 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:32 +0300 (0:00:00.929)       0:02:40.868 ****** 
2023-07-10 16:01:36,154 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:01:36,154 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:36,158 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:36,187 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:36 +0300 (0:00:03.713)       0:02:44.582 ****** 
2023-07-10 16:01:36,286 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:01:36,287 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"]}, "changed": false}
2023-07-10 16:01:36,316 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:36 +0300 (0:00:00.129)       0:02:44.711 ****** 
2023-07-10 16:01:45,389 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:01:45,389 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:45,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:45 +0300 (0:00:09.086)       0:02:53.798 ****** 
2023-07-10 16:01:45,447 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:45 +0300 (0:00:00.043)       0:02:53.842 ****** 
2023-07-10 16:01:45,491 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:45 +0300 (0:00:00.043)       0:02:53.886 ****** 
2023-07-10 16:01:45,536 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:45 +0300 (0:00:00.045)       0:02:53.931 ****** 
2023-07-10 16:01:45,563 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:01:45,580 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:01:45,605 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:45 +0300 (0:00:00.068)       0:02:54.000 ****** 
2023-07-10 16:01:47,038 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:47 +0300 (0:00:01.433)       0:02:55.433 ****** 
2023-07-10 16:01:47,681 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Create kubeadm config] ********************************************************************************************************************************
2023-07-10 16:01:47,681 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "04974339f81cf5a298237f58f7ea3d6b42d97c0a", "dest": "/etc/kubernetes/kubeadm-images.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/kubernetes/kubeadm-images.yaml", "size": 413, "state": "file", "uid": 0}
2023-07-10 16:01:47,699 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:47 +0300 (0:00:00.661)       0:02:56.094 ****** 
2023-07-10 16:01:49,362 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Copy kubeadm binary from download dir to system path] *************************************************************************************************
2023-07-10 16:01:49,363 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "d2ee756d8a8379a5ef7ee56c17ff844c183f5d1f", "dest": "/usr/local/bin/kubeadm", "gid": 0, "group": "root", "md5sum": "2f8d18d010cf71c80c20b368f676beb4", "mode": "0755", "owner": "root", "size": 46768128, "src": "/tmp/releases/kubeadm-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 16:01:49,372 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:49 +0300 (0:00:01.673)       0:02:57.767 ****** 
2023-07-10 16:01:49,580 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Set kubeadm binary permissions] ***********************************************************************************************************************
2023-07-10 16:01:49,581 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/kubeadm", "size": 46768128, "state": "file", "uid": 0}
2023-07-10 16:01:49,593 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:49 +0300 (0:00:00.221)       0:02:57.988 ****** 
2023-07-10 16:01:49,816 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Generate list of required images] *********************************************************************************************************************
2023-07-10 16:01:49,816 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/kubeadm config images list --config=/etc/kubernetes/kubeadm-images.yaml | grep -Ev 'coredns | pause'", "delta": "0:00:00.037285", "end": "2023-07-10 13:01:49.806341", "msg": "", "rc": 0, "start": "2023-07-10 13:01:49.769056", "stderr": "W0710 13:01:49.795885   58065 initconfiguration.go:305] error unmarshaling configuration schema.GroupVersionKind{Group:\"kubeadm.k8s.io\", Version:\"v1beta3\", Kind:\"ClusterConfiguration\"}: strict decoding error: unknown field \"dns.type\"", "stderr_lines": ["W0710 13:01:49.795885   58065 initconfiguration.go:305] error unmarshaling configuration schema.GroupVersionKind{Group:\"kubeadm.k8s.io\", Version:\"v1beta3\", Kind:\"ClusterConfiguration\"}: strict decoding error: unknown field \"dns.type\""], "stdout": "registry.k8s.io/kube-apiserver:v1.26.2\nregistry.k8s.io/kube-controller-manager:v1.26.2\nregistry.k8s.io/kube-scheduler:v1.26.2\nregistry.k8s.io/kube-proxy:v1.26.2\nregistry.k8s.io/pause:3.9\nregistry.k8s.io/coredns/coredns:v1.9.3", "stdout_lines": ["registry.k8s.io/kube-apiserver:v1.26.2", "registry.k8s.io/kube-controller-manager:v1.26.2", "registry.k8s.io/kube-scheduler:v1.26.2", "registry.k8s.io/kube-proxy:v1.26.2", "registry.k8s.io/pause:3.9", "registry.k8s.io/coredns/coredns:v1.9.3"]}
2023-07-10 16:01:49,826 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:49 +0300 (0:00:00.232)       0:02:58.221 ****** 
2023-07-10 16:01:49,888 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Parse list of images] *********************************************************************************************************************************
2023-07-10 16:01:49,888 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-apiserver:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-apiserver", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-apiserver", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-apiserver:v1.26.2"}
2023-07-10 16:01:49,919 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-controller-manager:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-controller-manager", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-controller-manager", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-controller-manager:v1.26.2"}
2023-07-10 16:01:49,952 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-scheduler:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-scheduler", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-scheduler", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-scheduler:v1.26.2"}
2023-07-10 16:01:49,984 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/kube-proxy:v1.26.2) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_kube-proxy", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-proxy", "tag": "v1.26.2"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/kube-proxy:v1.26.2"}
2023-07-10 16:01:50,015 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/pause:3.9) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_pause", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/pause", "tag": "3.9"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/pause:3.9"}
2023-07-10 16:01:50,046 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=registry.k8s.io/coredns/coredns:v1.9.3) => {"ansible_facts": {"kubeadm_image": {"key": "kubeadm_coredns", "value": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/coredns/coredns", "tag": "v1.9.3"}}}, "ansible_loop_var": "item", "changed": false, "item": "registry.k8s.io/coredns/coredns:v1.9.3"}
2023-07-10 16:01:50,058 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:50 +0300 (0:00:00.232)       0:02:58.453 ****** 
2023-07-10 16:01:50,120 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_kubeadm_images | Convert list of images to dict for later use] *********************************************************************************************************
2023-07-10 16:01:50,121 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_images": {"kubeadm_coredns": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/coredns/coredns", "tag": "v1.9.3"}, "kubeadm_kube-apiserver": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-apiserver", "tag": "v1.26.2"}, "kubeadm_kube-controller-manager": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-controller-manager", "tag": "v1.26.2"}, "kubeadm_kube-proxy": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-proxy", "tag": "v1.26.2"}, "kubeadm_kube-scheduler": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/kube-scheduler", "tag": "v1.26.2"}, "kubeadm_pause": {"container": true, "enabled": true, "groups": "k8s_cluster", "repo": "registry.k8s.io/pause", "tag": "3.9"}}}, "changed": false}
2023-07-10 16:01:50,130 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:50 +0300 (0:00:00.071)       0:02:58.525 ****** 
2023-07-10 16:01:52,965 p=24624 u=kubernetmachine n=ansible | TASK [download : download | Download files / images] *****************************************************************************************************************************************
2023-07-10 16:01:52,994 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'version': 'v3.5.6', 'dest': '/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.6', 'sha256': '4db32e3bc06dd0999e2171f76a87c1cffed8369475ec7aa7abee9023635670fb', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
2023-07-10 16:01:53,007 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v1.3.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz', 'sha256': '754a71ed60a4bd08726c3af705a7d55ee3df03122b12e389fdba4bea35d7dd7e', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,019 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubeadm-v1.26.2-amd64', 'sha256': '277d880dc6d79994fd333e49d42943b7c9183b1c4ffdbf9da59f806acec7fd82', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,033 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubelet-v1.26.2-amd64', 'sha256': 'e6dd2ee432a093492936ff8505f084b5ed41662f50231f1c11ae08ee8582a3f5', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,045 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.26.2', 'dest': '/tmp/releases/kubectl-v1.26.2-amd64', 'sha256': 'fcf86d21fb1a49b012bce7845cf00081d2dd7a59f424b28621799deceb5227b3', 'url': 'https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 16:01:53,058 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'version': 'v1.26.0', 'dest': '/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz', 'sha256': 'cda5e2143bf19f6b548110ffba0fe3565e03e8743fadd625fee3d62fc4134eed', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,071 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'version': 'v1.1.7', 'dest': '/tmp/releases/runc-v1.1.7.amd64', 'sha256': 'c3aadb419e5872af49504b6de894055251d2e685fddddb981a79703e7f895cbd', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,083 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'version': '1.7.2', 'dest': '/tmp/releases/containerd-1.7.2-linux-amd64.tar.gz', 'sha256': '2755c70152ab40856510b4549c2dd530e15f5355eb7bf82868e813c9380e22a7', 'url': 'https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,096 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'version': '1.4.0', 'dest': '/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz', 'sha256': 'd8dcd4e270ae76ab294be3a451a2d8299010e69dce6ae559bc3193535610e4cc', 'url': 'https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,108 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calicoctl-v3.25.1-amd64', 'sha256': '13565e5304209ffaa93df3ba722e6f623b66c76057ca8ff5c5864fa13176fe48', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,137 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,162 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,187 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_flexvol', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/pod2daemon-flexvol', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,213 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.25.1', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,228 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'version': 'v3.25.1', 'dest': '/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz', 'sha256': '4d6b6653499f24f80a85a0a7dac28d9571cabfa25356b08f3b438fd97e322e2d', 'url': 'https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 16:01:53,251 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,276 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/library/nginx', 'tag': '1.23.2-alpine', 'sha256': '', 'groups': ['kube_node']}})
2023-07-10 16:01:53,301 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,332 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.22.20', 'sha256': '', 'groups': ['k8s_cluster']}})
2023-07-10 16:01:53,364 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 16:01:53,382 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_file.yml for node1 => (item={'key': 'helm', 'value': {'enabled': True, 'file': True, 'version': 'v3.12.1', 'dest': '/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz', 'sha256': '1a7074f58ef7190f74ce6db5db0b70e355a655e2013c4d5db2317e63fa9e3dea', 'url': 'https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
2023-07-10 16:01:53,407 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/ingress-nginx/controller', 'tag': 'v1.8.0', 'sha256': '', 'groups': ['kube_node']}})
2023-07-10 16:01:53,434 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dashboard', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/kubernetesui/dashboard', 'tag': 'v2.7.0', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 16:01:53,461 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': True, 'container': True, 'repo': 'docker.io/kubernetesui/metrics-scraper', 'tag': 'v1.0.8', 'sha256': '', 'groups': ['kube_control_plane']}})
2023-07-10 16:01:53,486 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 16:01:53,511 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 16:01:53,536 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 16:01:53,561 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.26.2', 'groups': 'k8s_cluster'}})
2023-07-10 16:01:53,586 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_pause', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.9', 'groups': 'k8s_cluster'}})
2023-07-10 16:01:53,611 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/download_container.yml for node1 => (item={'key': 'kubeadm_coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.9.3', 'groups': 'k8s_cluster'}})
2023-07-10 16:01:53,631 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:53 +0300 (0:00:03.501)       0:03:02.026 ****** 
2023-07-10 16:01:53,670 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:01:53,670 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:01:53,681 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:53 +0300 (0:00:00.049)       0:03:02.076 ****** 
2023-07-10 16:01:53,722 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:01:53,723 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz"
}
2023-07-10 16:01:53,733 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:53 +0300 (0:00:00.052)       0:03:02.128 ****** 
2023-07-10 16:01:53,774 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:01:53,775 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/etcd-v3.5.6-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:01:53,785 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:53 +0300 (0:00:00.052)       0:03:02.180 ****** 
2023-07-10 16:01:54,008 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:01:54,009 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:54,024 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:54 +0300 (0:00:00.238)       0:03:02.419 ****** 
2023-07-10 16:01:54,071 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:54 +0300 (0:00:00.046)       0:03:02.466 ****** 
2023-07-10 16:01:54,129 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:54 +0300 (0:00:00.057)       0:03:02.524 ****** 
2023-07-10 16:01:55,349 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:01:55,350 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:55,352 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:55,432 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:55 +0300 (0:00:01.303)       0:03:03.827 ****** 
2023-07-10 16:01:55,493 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:01:55,493 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/etcd-io/etcd/releases/download/v3.5.6/etcd-v3.5.6-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:01:55,512 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:55 +0300 (0:00:00.080)       0:03:03.907 ****** 
2023-07-10 16:01:55,898 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:01:55,898 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:55,909 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:55 +0300 (0:00:00.397)       0:03:04.305 ****** 
2023-07-10 16:01:55,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:55 +0300 (0:00:00.028)       0:03:04.333 ****** 
2023-07-10 16:01:55,968 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:55 +0300 (0:00:00.030)       0:03:04.363 ****** 
2023-07-10 16:01:55,999 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:55 +0300 (0:00:00.031)       0:03:04.394 ****** 
2023-07-10 16:01:56,017 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:01:56,031 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:01:56,044 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:56 +0300 (0:00:00.044)       0:03:04.439 ****** 
2023-07-10 16:01:57,230 p=24624 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 16:01:57,230 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:01:57,240 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:01.196)       0:03:05.635 ****** 
2023-07-10 16:01:57,284 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:01:57,285 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:01:57,295 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:00.054)       0:03:05.690 ****** 
2023-07-10 16:01:57,338 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:01:57,339 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"
}
2023-07-10 16:01:57,350 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:00.055)       0:03:05.745 ****** 
2023-07-10 16:01:57,422 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:01:57,423 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/cni-plugins-linux-amd64-v1.3.0.tgz"}, "changed": false}
2023-07-10 16:01:57,442 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:00.091)       0:03:05.837 ****** 
2023-07-10 16:01:57,708 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:01:57,710 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:01:57,725 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:00.283)       0:03:06.120 ****** 
2023-07-10 16:01:57,774 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:00.048)       0:03:06.169 ****** 
2023-07-10 16:01:57,824 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:57 +0300 (0:00:00.050)       0:03:06.219 ****** 
2023-07-10 16:01:59,105 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:01:59,106 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:59,108 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:59,125 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:01.301)       0:03:07.521 ****** 
2023-07-10 16:01:59,189 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:01:59,189 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"]}, "changed": false}
2023-07-10 16:01:59,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.081)       0:03:07.602 ****** 
2023-07-10 16:01:59,738 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:01:59,738 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:01:59,747 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.539)       0:03:08.142 ****** 
2023-07-10 16:01:59,775 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.028)       0:03:08.170 ****** 
2023-07-10 16:01:59,807 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.031)       0:03:08.202 ****** 
2023-07-10 16:01:59,840 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.033)       0:03:08.235 ****** 
2023-07-10 16:01:59,861 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:01:59,876 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:01:59,892 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.051)       0:03:08.287 ****** 
2023-07-10 16:01:59,935 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.042)       0:03:08.330 ****** 
2023-07-10 16:01:59,983 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:01:59,983 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:01:59,992 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:01:59 +0300 (0:00:00.057)       0:03:08.387 ****** 
2023-07-10 16:02:00,037 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:00,038 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"
}
2023-07-10 16:02:00,048 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:00 +0300 (0:00:00.055)       0:03:08.443 ****** 
2023-07-10 16:02:00,091 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:00,092 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubeadm-v1.26.2-amd64"}, "changed": false}
2023-07-10 16:02:00,102 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:00 +0300 (0:00:00.053)       0:03:08.497 ****** 
2023-07-10 16:02:00,284 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:00,284 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:00,295 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:00 +0300 (0:00:00.193)       0:03:08.690 ****** 
2023-07-10 16:02:00,333 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:00 +0300 (0:00:00.037)       0:03:08.728 ****** 
2023-07-10 16:02:00,389 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:00 +0300 (0:00:00.055)       0:03:08.784 ****** 
2023-07-10 16:02:01,428 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:01,429 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:01,433 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:01,468 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:01 +0300 (0:00:01.079)       0:03:09.863 ****** 
2023-07-10 16:02:01,598 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:01,599 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubeadm"]}, "changed": false}
2023-07-10 16:02:01,637 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:01 +0300 (0:00:00.168)       0:03:10.032 ****** 
2023-07-10 16:02:02,388 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:02,388 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:02,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.765)       0:03:10.798 ****** 
2023-07-10 16:02:02,447 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.044)       0:03:10.842 ****** 
2023-07-10 16:02:02,492 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.044)       0:03:10.887 ****** 
2023-07-10 16:02:02,535 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.043)       0:03:10.930 ****** 
2023-07-10 16:02:02,563 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:02,585 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:02,606 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.070)       0:03:11.001 ****** 
2023-07-10 16:02:02,666 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.059)       0:03:11.061 ****** 
2023-07-10 16:02:02,736 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:02,737 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:02,756 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.089)       0:03:11.151 ****** 
2023-07-10 16:02:02,839 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:02,840 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet"
}
2023-07-10 16:02:02,856 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.099)       0:03:11.251 ****** 
2023-07-10 16:02:02,924 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:02,925 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubelet-v1.26.2-amd64"}, "changed": false}
2023-07-10 16:02:02,939 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:02 +0300 (0:00:00.084)       0:03:11.335 ****** 
2023-07-10 16:02:03,253 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:03,254 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:03,272 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:03 +0300 (0:00:00.332)       0:03:11.667 ****** 
2023-07-10 16:02:03,329 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:03 +0300 (0:00:00.056)       0:03:11.724 ****** 
2023-07-10 16:02:03,420 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:03 +0300 (0:00:00.091)       0:03:11.816 ****** 
2023-07-10 16:02:04,678 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:04,678 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:04,684 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:04,714 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:04 +0300 (0:00:01.293)       0:03:13.109 ****** 
2023-07-10 16:02:04,813 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:04,814 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubelet"]}, "changed": false}
2023-07-10 16:02:04,844 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:04 +0300 (0:00:00.129)       0:03:13.239 ****** 
2023-07-10 16:02:06,004 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:06,005 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:06,014 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:01.169)       0:03:14.409 ****** 
2023-07-10 16:02:06,043 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.029)       0:03:14.438 ****** 
2023-07-10 16:02:06,075 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.031)       0:03:14.470 ****** 
2023-07-10 16:02:06,112 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.037)       0:03:14.507 ****** 
2023-07-10 16:02:06,139 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:06,154 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:06,172 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.060)       0:03:14.567 ****** 
2023-07-10 16:02:06,210 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.037)       0:03:14.605 ****** 
2023-07-10 16:02:06,250 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:06,251 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:06,261 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.050)       0:03:14.656 ****** 
2023-07-10 16:02:06,301 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:06,301 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"
}
2023-07-10 16:02:06,311 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.050)       0:03:14.706 ****** 
2023-07-10 16:02:06,355 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:06,356 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/kubectl-v1.26.2-amd64"}, "changed": false}
2023-07-10 16:02:06,365 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.054)       0:03:14.760 ****** 
2023-07-10 16:02:06,545 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:06,546 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:06,557 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.191)       0:03:14.952 ****** 
2023-07-10 16:02:06,593 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.036)       0:03:14.988 ****** 
2023-07-10 16:02:06,639 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:06 +0300 (0:00:00.045)       0:03:15.034 ****** 
2023-07-10 16:02:07,592 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:07,594 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:07,597 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:07,619 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:07 +0300 (0:00:00.979)       0:03:16.014 ****** 
2023-07-10 16:02:07,691 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:07,691 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"]}, "changed": false}
2023-07-10 16:02:07,709 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:07 +0300 (0:00:00.090)       0:03:16.104 ****** 
2023-07-10 16:02:08,274 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:08,275 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:08,284 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.574)       0:03:16.679 ****** 
2023-07-10 16:02:08,315 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.030)       0:03:16.710 ****** 
2023-07-10 16:02:08,348 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.033)       0:03:16.743 ****** 
2023-07-10 16:02:08,377 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.028)       0:03:16.772 ****** 
2023-07-10 16:02:08,394 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:08,407 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:08,419 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.042)       0:03:16.815 ****** 
2023-07-10 16:02:08,462 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.042)       0:03:16.857 ****** 
2023-07-10 16:02:08,503 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:08,504 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:08,518 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.055)       0:03:16.913 ****** 
2023-07-10 16:02:08,559 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:08,560 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"
}
2023-07-10 16:02:08,569 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.051)       0:03:16.964 ****** 
2023-07-10 16:02:08,609 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:08,610 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/crictl-v1.26.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:02:08,619 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.050)       0:03:17.014 ****** 
2023-07-10 16:02:08,796 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:08,796 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:08,808 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.188)       0:03:17.203 ****** 
2023-07-10 16:02:08,843 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.035)       0:03:17.239 ****** 
2023-07-10 16:02:08,891 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:08 +0300 (0:00:00.047)       0:03:17.286 ****** 
2023-07-10 16:02:09,875 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:09,875 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:09,879 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:09,909 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:09 +0300 (0:00:01.017)       0:03:18.304 ****** 
2023-07-10 16:02:10,005 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:10,006 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.26.0/crictl-v1.26.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:02:10,042 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:10 +0300 (0:00:00.133)       0:03:18.437 ****** 
2023-07-10 16:02:10,731 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:10,732 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:10,756 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:10 +0300 (0:00:00.714)       0:03:19.151 ****** 
2023-07-10 16:02:10,802 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:10 +0300 (0:00:00.046)       0:03:19.197 ****** 
2023-07-10 16:02:10,847 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:10 +0300 (0:00:00.044)       0:03:19.242 ****** 
2023-07-10 16:02:10,892 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:10 +0300 (0:00:00.044)       0:03:19.287 ****** 
2023-07-10 16:02:10,918 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:10,940 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:10,962 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:10 +0300 (0:00:00.070)       0:03:19.357 ****** 
2023-07-10 16:02:12,690 p=24624 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 16:02:12,691 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/crictl-v1.26.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:02:12,706 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:12 +0300 (0:00:01.743)       0:03:21.100 ****** 
2023-07-10 16:02:12,780 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:12,781 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:12,796 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:12 +0300 (0:00:00.090)       0:03:21.191 ****** 
2023-07-10 16:02:12,885 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:12,887 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
}
2023-07-10 16:02:12,905 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:12 +0300 (0:00:00.109)       0:03:21.300 ****** 
2023-07-10 16:02:12,984 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:12,984 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/runc-v1.1.7.amd64"}, "changed": false}
2023-07-10 16:02:13,003 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:13 +0300 (0:00:00.097)       0:03:21.398 ****** 
2023-07-10 16:02:13,313 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:13,313 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:13,332 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:13 +0300 (0:00:00.328)       0:03:21.727 ****** 
2023-07-10 16:02:13,392 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:13 +0300 (0:00:00.059)       0:03:21.787 ****** 
2023-07-10 16:02:13,464 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:13 +0300 (0:00:00.071)       0:03:21.859 ****** 
2023-07-10 16:02:14,495 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:14,496 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:14,501 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:14,534 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:14 +0300 (0:00:01.070)       0:03:22.929 ****** 
2023-07-10 16:02:14,634 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:14,635 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"]}, "changed": false}
2023-07-10 16:02:14,669 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:14 +0300 (0:00:00.134)       0:03:23.064 ****** 
2023-07-10 16:02:15,239 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:15,239 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:15,254 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.585)       0:03:23.650 ****** 
2023-07-10 16:02:15,310 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.055)       0:03:23.705 ****** 
2023-07-10 16:02:15,368 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.057)       0:03:23.763 ****** 
2023-07-10 16:02:15,425 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.057)       0:03:23.820 ****** 
2023-07-10 16:02:15,452 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:15,473 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:15,495 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.070)       0:03:23.890 ****** 
2023-07-10 16:02:15,550 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.054)       0:03:23.945 ****** 
2023-07-10 16:02:15,612 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:15,612 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:15,629 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.079)       0:03:24.025 ****** 
2023-07-10 16:02:15,695 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:15,696 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
}
2023-07-10 16:02:15,711 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.081)       0:03:24.106 ****** 
2023-07-10 16:02:15,799 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:15,801 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/containerd-1.7.2-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:02:15,818 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:15 +0300 (0:00:00.107)       0:03:24.213 ****** 
2023-07-10 16:02:16,118 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:16,118 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:16,137 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:16 +0300 (0:00:00.318)       0:03:24.532 ****** 
2023-07-10 16:02:16,216 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:16 +0300 (0:00:00.078)       0:03:24.611 ****** 
2023-07-10 16:02:16,308 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:16 +0300 (0:00:00.092)       0:03:24.703 ****** 
2023-07-10 16:02:17,613 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:17,614 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:17,618 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:17,646 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:17 +0300 (0:00:01.338)       0:03:26.041 ****** 
2023-07-10 16:02:17,747 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:17,747 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:02:17,777 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:17 +0300 (0:00:00.130)       0:03:26.172 ****** 
2023-07-10 16:02:18,480 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:18,480 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:18,490 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.712)       0:03:26.885 ****** 
2023-07-10 16:02:18,520 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.030)       0:03:26.915 ****** 
2023-07-10 16:02:18,549 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.029)       0:03:26.944 ****** 
2023-07-10 16:02:18,579 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.030)       0:03:26.974 ****** 
2023-07-10 16:02:18,598 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:18,613 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:18,627 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.047)       0:03:27.022 ****** 
2023-07-10 16:02:18,664 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.037)       0:03:27.059 ****** 
2023-07-10 16:02:18,707 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:18,707 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:18,717 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.052)       0:03:27.112 ****** 
2023-07-10 16:02:18,759 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:18,760 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"
}
2023-07-10 16:02:18,769 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.051)       0:03:27.164 ****** 
2023-07-10 16:02:18,814 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:18,814 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/nerdctl-1.4.0-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:02:18,824 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:18 +0300 (0:00:00.054)       0:03:27.219 ****** 
2023-07-10 16:02:19,035 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:19,035 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:19,047 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:19 +0300 (0:00:00.223)       0:03:27.442 ****** 
2023-07-10 16:02:19,084 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:19 +0300 (0:00:00.036)       0:03:27.479 ****** 
2023-07-10 16:02:19,128 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:19 +0300 (0:00:00.043)       0:03:27.523 ****** 
2023-07-10 16:02:19,981 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:19,981 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:19,984 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:20,007 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.878)       0:03:28.402 ****** 
2023-07-10 16:02:20,072 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:20,073 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/containerd/nerdctl/releases/download/v1.4.0/nerdctl-1.4.0-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:02:20,090 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.083)       0:03:28.485 ****** 
2023-07-10 16:02:20,435 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:20,435 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:20,444 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.354)       0:03:28.839 ****** 
2023-07-10 16:02:20,474 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.029)       0:03:28.869 ****** 
2023-07-10 16:02:20,503 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.028)       0:03:28.898 ****** 
2023-07-10 16:02:20,531 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.028)       0:03:28.926 ****** 
2023-07-10 16:02:20,549 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:20,563 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:20,576 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:20 +0300 (0:00:00.045)       0:03:28.972 ****** 
2023-07-10 16:02:21,334 p=24624 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 16:02:21,335 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/nerdctl-1.4.0-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:02:21,345 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.768)       0:03:29.740 ****** 
2023-07-10 16:02:21,386 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:21,387 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:21,397 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.052)       0:03:29.792 ****** 
2023-07-10 16:02:21,437 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:21,437 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64"
}
2023-07-10 16:02:21,448 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.051)       0:03:29.843 ****** 
2023-07-10 16:02:21,488 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:21,489 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/calicoctl-v3.25.1-amd64"}, "changed": false}
2023-07-10 16:02:21,499 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.050)       0:03:29.894 ****** 
2023-07-10 16:02:21,683 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:21,683 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:21,695 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.196)       0:03:30.091 ****** 
2023-07-10 16:02:21,732 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.036)       0:03:30.127 ****** 
2023-07-10 16:02:21,775 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:21 +0300 (0:00:00.043)       0:03:30.170 ****** 
2023-07-10 16:02:22,692 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:22,693 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:22,696 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:22,724 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:22 +0300 (0:00:00.948)       0:03:31.119 ****** 
2023-07-10 16:02:22,823 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:22,824 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/projectcalico/calico/releases/download/v3.25.1/calicoctl-linux-amd64"]}, "changed": false}
2023-07-10 16:02:22,854 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:22 +0300 (0:00:00.129)       0:03:31.249 ****** 
2023-07-10 16:02:23,784 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:23,785 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:23,799 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:23 +0300 (0:00:00.944)       0:03:32.194 ****** 
2023-07-10 16:02:23,846 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:23 +0300 (0:00:00.047)       0:03:32.241 ****** 
2023-07-10 16:02:23,891 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:23 +0300 (0:00:00.044)       0:03:32.285 ****** 
2023-07-10 16:02:23,938 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:23 +0300 (0:00:00.047)       0:03:32.333 ****** 
2023-07-10 16:02:23,966 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:23,986 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:24,008 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.069)       0:03:32.403 ****** 
2023-07-10 16:02:24,068 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.059)       0:03:32.463 ****** 
2023-07-10 16:02:24,141 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:24,141 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:24,154 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.086)       0:03:32.549 ****** 
2023-07-10 16:02:24,228 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:24,229 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/node"
}
2023-07-10 16:02:24,245 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.091)       0:03:32.640 ****** 
2023-07-10 16:02:24,326 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:24,327 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:24,342 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.096)       0:03:32.737 ****** 
2023-07-10 16:02:24,417 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:24,418 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 16:02:24,435 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.092)       0:03:32.830 ****** 
2023-07-10 16:02:24,507 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:24,507 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_node_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:24,524 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.088)       0:03:32.919 ****** 
2023-07-10 16:02:24,598 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:24,599 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_node_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_node_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:24,615 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.091)       0:03:33.010 ****** 
2023-07-10 16:02:24,664 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.049)       0:03:33.059 ****** 
2023-07-10 16:02:24,736 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:24,737 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_node_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_node_v3.25.1.tar quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 16:02:24,752 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.087)       0:03:33.147 ****** 
2023-07-10 16:02:24,798 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.045)       0:03:33.193 ****** 
2023-07-10 16:02:24,848 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.050)       0:03:33.243 ****** 
2023-07-10 16:02:24,931 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:24,932 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_node_v3.25.1.tar quay.io/calico/node:v3.25.1"}, "changed": false}
2023-07-10 16:02:24,948 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.100)       0:03:33.343 ****** 
2023-07-10 16:02:24,997 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:24 +0300 (0:00:00.049)       0:03:33.392 ****** 
2023-07-10 16:02:25,031 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:25,062 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:25,102 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:25 +0300 (0:00:00.105)       0:03:33.497 ****** 
2023-07-10 16:02:25,959 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:25,960 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.515659", "end": "2023-07-10 13:02:25.937023", "msg": "", "rc": 0, "start": "2023-07-10 13:02:25.421364", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:25,976 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:25 +0300 (0:00:00.873)       0:03:34.371 ****** 
2023-07-10 16:02:26,049 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:26,050 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:26,065 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.089)       0:03:34.460 ****** 
2023-07-10 16:02:26,113 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.047)       0:03:34.508 ****** 
2023-07-10 16:02:26,176 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:26,176 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/node:v3.25.1 required is: False"
}
2023-07-10 16:02:26,195 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.081)       0:03:34.590 ****** 
2023-07-10 16:02:26,238 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.043)       0:03:34.633 ****** 
2023-07-10 16:02:26,288 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.049)       0:03:34.683 ****** 
2023-07-10 16:02:26,454 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.165)       0:03:34.848 ****** 
2023-07-10 16:02:26,550 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.096)       0:03:34.945 ****** 
2023-07-10 16:02:26,614 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.064)       0:03:35.009 ****** 
2023-07-10 16:02:26,659 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.044)       0:03:35.054 ****** 
2023-07-10 16:02:26,704 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.045)       0:03:35.099 ****** 
2023-07-10 16:02:26,747 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:26 +0300 (0:00:00.043)       0:03:35.142 ****** 
2023-07-10 16:02:27,008 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:27,009 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_node_v3.25.1.tar", "state": "absent"}
2023-07-10 16:02:27,019 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.272)       0:03:35.414 ****** 
2023-07-10 16:02:27,058 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:27,058 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:27,068 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.049)       0:03:35.463 ****** 
2023-07-10 16:02:27,110 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:27,111 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/cni"
}
2023-07-10 16:02:27,120 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.051)       0:03:35.515 ****** 
2023-07-10 16:02:27,167 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:27,167 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:27,177 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.056)       0:03:35.572 ****** 
2023-07-10 16:02:27,220 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:27,220 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 16:02:27,229 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.052)       0:03:35.625 ****** 
2023-07-10 16:02:27,271 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:27,271 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_cni_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:27,285 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.052)       0:03:35.677 ****** 
2023-07-10 16:02:27,326 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:27,327 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_cni_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_cni_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:27,336 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.054)       0:03:35.731 ****** 
2023-07-10 16:02:27,367 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.030)       0:03:35.762 ****** 
2023-07-10 16:02:27,408 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:27,409 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_cni_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_cni_v3.25.1.tar quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 16:02:27,420 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.053)       0:03:35.815 ****** 
2023-07-10 16:02:27,450 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.029)       0:03:35.845 ****** 
2023-07-10 16:02:27,479 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.029)       0:03:35.874 ****** 
2023-07-10 16:02:27,526 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:27,526 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_cni_v3.25.1.tar quay.io/calico/cni:v3.25.1"}, "changed": false}
2023-07-10 16:02:27,536 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.057)       0:03:35.931 ****** 
2023-07-10 16:02:27,565 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.028)       0:03:35.960 ****** 
2023-07-10 16:02:27,583 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:27,597 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:27,615 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:27 +0300 (0:00:00.050)       0:03:36.010 ****** 
2023-07-10 16:02:28,103 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:28,103 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.318587", "end": "2023-07-10 13:02:28.095923", "msg": "", "rc": 0, "start": "2023-07-10 13:02:27.777336", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:28,112 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.496)       0:03:36.507 ****** 
2023-07-10 16:02:28,154 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:28,154 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:28,164 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.052)       0:03:36.559 ****** 
2023-07-10 16:02:28,194 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.029)       0:03:36.589 ****** 
2023-07-10 16:02:28,232 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:28,233 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/cni:v3.25.1 required is: False"
}
2023-07-10 16:02:28,246 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.052)       0:03:36.641 ****** 
2023-07-10 16:02:28,272 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.026)       0:03:36.667 ****** 
2023-07-10 16:02:28,303 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.030)       0:03:36.698 ****** 
2023-07-10 16:02:28,341 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.038)       0:03:36.736 ****** 
2023-07-10 16:02:28,393 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.051)       0:03:36.788 ****** 
2023-07-10 16:02:28,434 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.040)       0:03:36.829 ****** 
2023-07-10 16:02:28,470 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.035)       0:03:36.865 ****** 
2023-07-10 16:02:28,507 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.037)       0:03:36.902 ****** 
2023-07-10 16:02:28,542 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.034)       0:03:36.937 ****** 
2023-07-10 16:02:28,724 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:28,724 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_cni_v3.25.1.tar", "state": "absent"}
2023-07-10 16:02:28,733 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.191)       0:03:37.128 ****** 
2023-07-10 16:02:28,773 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:28,774 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:28,785 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.052)       0:03:37.180 ****** 
2023-07-10 16:02:28,830 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:28,831 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/pod2daemon-flexvol"
}
2023-07-10 16:02:28,842 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.056)       0:03:37.237 ****** 
2023-07-10 16:02:28,894 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:28,895 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:28,906 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.064)       0:03:37.301 ****** 
2023-07-10 16:02:28,958 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:28,959 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 16:02:28,970 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:28 +0300 (0:00:00.064)       0:03:37.365 ****** 
2023-07-10 16:02:29,018 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:29,018 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_pod2daemon-flexvol_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:29,028 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.057)       0:03:37.423 ****** 
2023-07-10 16:02:29,071 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:29,071 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:29,081 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.053)       0:03:37.476 ****** 
2023-07-10 16:02:29,112 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.031)       0:03:37.507 ****** 
2023-07-10 16:02:29,155 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:29,155 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 16:02:29,164 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.052)       0:03:37.559 ****** 
2023-07-10 16:02:29,193 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.028)       0:03:37.588 ****** 
2023-07-10 16:02:29,223 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.030)       0:03:37.618 ****** 
2023-07-10 16:02:29,273 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:29,273 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar quay.io/calico/pod2daemon-flexvol:v3.25.1"}, "changed": false}
2023-07-10 16:02:29,283 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.060)       0:03:37.678 ****** 
2023-07-10 16:02:29,314 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.030)       0:03:37.709 ****** 
2023-07-10 16:02:29,333 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:29,346 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:29,364 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.050)       0:03:37.759 ****** 
2023-07-10 16:02:29,838 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:29,838 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.307544", "end": "2023-07-10 13:02:29.830333", "msg": "", "rc": 0, "start": "2023-07-10 13:02:29.522789", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:29,848 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.483)       0:03:38.243 ****** 
2023-07-10 16:02:29,889 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:29,890 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:29,900 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.052)       0:03:38.295 ****** 
2023-07-10 16:02:29,931 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.031)       0:03:38.326 ****** 
2023-07-10 16:02:29,970 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:29,971 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/pod2daemon-flexvol:v3.25.1 required is: False"
}
2023-07-10 16:02:29,983 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:29 +0300 (0:00:00.051)       0:03:38.378 ****** 
2023-07-10 16:02:30,011 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.028)       0:03:38.406 ****** 
2023-07-10 16:02:30,043 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.031)       0:03:38.438 ****** 
2023-07-10 16:02:30,081 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.038)       0:03:38.476 ****** 
2023-07-10 16:02:30,128 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.046)       0:03:38.523 ****** 
2023-07-10 16:02:30,166 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.038)       0:03:38.561 ****** 
2023-07-10 16:02:30,196 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.029)       0:03:38.591 ****** 
2023-07-10 16:02:30,225 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.028)       0:03:38.620 ****** 
2023-07-10 16:02:30,255 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.029)       0:03:38.650 ****** 
2023-07-10 16:02:30,435 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:30,435 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_pod2daemon-flexvol_v3.25.1.tar", "state": "absent"}
2023-07-10 16:02:30,444 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.188)       0:03:38.839 ****** 
2023-07-10 16:02:30,483 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:30,483 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:30,493 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.049)       0:03:38.889 ****** 
2023-07-10 16:02:30,537 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:30,537 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "quay.io/calico/kube-controllers"
}
2023-07-10 16:02:30,547 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.053)       0:03:38.942 ****** 
2023-07-10 16:02:30,603 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:30,603 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:30,615 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.068)       0:03:39.010 ****** 
2023-07-10 16:02:30,669 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:30,670 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 16:02:30,683 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.067)       0:03:39.078 ****** 
2023-07-10 16:02:30,734 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:30,734 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "quay.io_calico_kube-controllers_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:30,748 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.065)       0:03:39.143 ****** 
2023-07-10 16:02:30,798 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:30,799 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/quay.io_calico_kube-controllers_v3.25.1.tar", "image_path_final": "/tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar"}, "changed": false}
2023-07-10 16:02:30,813 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.064)       0:03:39.207 ****** 
2023-07-10 16:02:30,849 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.036)       0:03:39.244 ****** 
2023-07-10 16:02:30,902 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:30,903 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 16:02:30,915 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.066)       0:03:39.310 ****** 
2023-07-10 16:02:30,951 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.035)       0:03:39.346 ****** 
2023-07-10 16:02:30,993 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:30 +0300 (0:00:00.041)       0:03:39.388 ****** 
2023-07-10 16:02:31,050 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:31,051 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/quay.io_calico_kube-controllers_v3.25.1.tar quay.io/calico/kube-controllers:v3.25.1"}, "changed": false}
2023-07-10 16:02:31,063 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.070)       0:03:39.458 ****** 
2023-07-10 16:02:31,100 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.036)       0:03:39.495 ****** 
2023-07-10 16:02:31,121 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:31,136 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:31,154 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.053)       0:03:39.549 ****** 
2023-07-10 16:02:31,611 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:31,612 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.285843", "end": "2023-07-10 13:02:31.601930", "msg": "", "rc": 0, "start": "2023-07-10 13:02:31.316087", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:31,620 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.466)       0:03:40.015 ****** 
2023-07-10 16:02:31,664 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:31,665 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:31,674 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.054)       0:03:40.070 ****** 
2023-07-10 16:02:31,708 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.033)       0:03:40.103 ****** 
2023-07-10 16:02:31,750 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:31,751 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.25.1 required is: False"
}
2023-07-10 16:02:31,763 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.054)       0:03:40.158 ****** 
2023-07-10 16:02:31,796 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.033)       0:03:40.191 ****** 
2023-07-10 16:02:31,831 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.035)       0:03:40.226 ****** 
2023-07-10 16:02:31,875 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.044)       0:03:40.271 ****** 
2023-07-10 16:02:31,924 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.048)       0:03:40.319 ****** 
2023-07-10 16:02:31,970 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.045)       0:03:40.365 ****** 
2023-07-10 16:02:32,002 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:31 +0300 (0:00:00.032)       0:03:40.397 ****** 
2023-07-10 16:02:32,032 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.029)       0:03:40.427 ****** 
2023-07-10 16:02:32,059 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.027)       0:03:40.454 ****** 
2023-07-10 16:02:32,236 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:32,237 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/quay.io_calico_kube-controllers_v3.25.1.tar", "state": "absent"}
2023-07-10 16:02:32,247 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.187)       0:03:40.642 ****** 
2023-07-10 16:02:32,288 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:32,289 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:32,298 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.050)       0:03:40.693 ****** 
2023-07-10 16:02:32,340 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:32,341 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz"
}
2023-07-10 16:02:32,351 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.053)       0:03:40.746 ****** 
2023-07-10 16:02:32,403 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:32,403 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/v3.25.1.tar.gz"}, "changed": false}
2023-07-10 16:02:32,414 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.063)       0:03:40.809 ****** 
2023-07-10 16:02:32,605 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:32,606 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/calico-v3.25.1-kdd-crds", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:32,616 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.202)       0:03:41.011 ****** 
2023-07-10 16:02:32,652 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.035)       0:03:41.047 ****** 
2023-07-10 16:02:32,698 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:32 +0300 (0:00:00.045)       0:03:41.093 ****** 
2023-07-10 16:02:33,953 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:33,953 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:33,956 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:33,974 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:33 +0300 (0:00:01.276)       0:03:42.369 ****** 
2023-07-10 16:02:34,036 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:34,036 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://github.com/projectcalico/calico/archive/v3.25.1.tar.gz"]}, "changed": false}
2023-07-10 16:02:34,053 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:34 +0300 (0:00:00.079)       0:03:42.449 ****** 
2023-07-10 16:02:34,450 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:34,451 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:34,460 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:34 +0300 (0:00:00.406)       0:03:42.855 ****** 
2023-07-10 16:02:34,488 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:34 +0300 (0:00:00.028)       0:03:42.883 ****** 
2023-07-10 16:02:34,518 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:34 +0300 (0:00:00.029)       0:03:42.913 ****** 
2023-07-10 16:02:34,548 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:34 +0300 (0:00:00.029)       0:03:42.943 ****** 
2023-07-10 16:02:34,566 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:34,584 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:34,597 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:34 +0300 (0:00:00.049)       0:03:42.992 ****** 
2023-07-10 16:02:35,599 p=24624 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 16:02:35,600 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases/calico-v3.25.1-kdd-crds", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/calico-v3.25.1-kdd-crds/v3.25.1.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:02:35,608 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:01.011)       0:03:44.004 ****** 
2023-07-10 16:02:35,647 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:35,647 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:35,656 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.047)       0:03:44.051 ****** 
2023-07-10 16:02:35,698 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:35,699 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/pause"
}
2023-07-10 16:02:35,708 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.051)       0:03:44.103 ****** 
2023-07-10 16:02:35,755 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:35,755 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:35,768 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.059)       0:03:44.163 ****** 
2023-07-10 16:02:35,811 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:35,812 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 16:02:35,821 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.053)       0:03:44.216 ****** 
2023-07-10 16:02:35,863 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:35,863 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 16:02:35,873 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.051)       0:03:44.268 ****** 
2023-07-10 16:02:35,914 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:35,915 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 16:02:35,924 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.051)       0:03:44.319 ****** 
2023-07-10 16:02:35,953 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:35 +0300 (0:00:00.029)       0:03:44.348 ****** 
2023-07-10 16:02:35,996 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:35,996 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_pause_3.9.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 16:02:36,005 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.051)       0:03:44.400 ****** 
2023-07-10 16:02:36,035 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.029)       0:03:44.430 ****** 
2023-07-10 16:02:36,067 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.032)       0:03:44.462 ****** 
2023-07-10 16:02:36,117 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:36,118 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 16:02:36,129 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.061)       0:03:44.524 ****** 
2023-07-10 16:02:36,164 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.035)       0:03:44.560 ****** 
2023-07-10 16:02:36,184 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:36,198 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:36,217 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.052)       0:03:44.612 ****** 
2023-07-10 16:02:36,675 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:36,675 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.269602", "end": "2023-07-10 13:02:36.665092", "msg": "", "rc": 0, "start": "2023-07-10 13:02:36.395490", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:36,683 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.466)       0:03:45.078 ****** 
2023-07-10 16:02:36,725 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:36,725 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:36,736 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.052)       0:03:45.131 ****** 
2023-07-10 16:02:36,764 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.028)       0:03:45.159 ****** 
2023-07-10 16:02:36,803 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:36,803 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/pause:3.9 required is: False"
}
2023-07-10 16:02:36,815 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.050)       0:03:45.210 ****** 
2023-07-10 16:02:36,843 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.027)       0:03:45.238 ****** 
2023-07-10 16:02:36,872 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.028)       0:03:45.267 ****** 
2023-07-10 16:02:36,909 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:36 +0300 (0:00:00.037)       0:03:45.304 ****** 
2023-07-10 16:02:37,029 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.119)       0:03:45.424 ****** 
2023-07-10 16:02:37,071 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.042)       0:03:45.466 ****** 
2023-07-10 16:02:37,101 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.029)       0:03:45.496 ****** 
2023-07-10 16:02:37,128 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.027)       0:03:45.523 ****** 
2023-07-10 16:02:37,156 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.027)       0:03:45.551 ****** 
2023-07-10 16:02:37,331 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:37,332 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar", "state": "absent"}
2023-07-10 16:02:37,340 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.184)       0:03:45.735 ****** 
2023-07-10 16:02:37,380 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:37,380 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:37,390 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.049)       0:03:45.785 ****** 
2023-07-10 16:02:37,433 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:37,434 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/library/nginx"
}
2023-07-10 16:02:37,445 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.055)       0:03:45.840 ****** 
2023-07-10 16:02:37,494 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:37,494 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:37,504 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.059)       0:03:45.900 ****** 
2023-07-10 16:02:37,546 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:37,547 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 16:02:37,556 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.051)       0:03:45.951 ****** 
2023-07-10 16:02:37,598 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:37,598 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_library_nginx_1.23.2-alpine.tar"}, "changed": false}
2023-07-10 16:02:37,608 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.051)       0:03:46.003 ****** 
2023-07-10 16:02:37,649 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:37,649 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_library_nginx_1.23.2-alpine.tar", "image_path_final": "/tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar"}, "changed": false}
2023-07-10 16:02:37,660 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.052)       0:03:46.055 ****** 
2023-07-10 16:02:37,692 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.031)       0:03:46.087 ****** 
2023-07-10 16:02:37,738 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:37,739 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 16:02:37,751 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.059)       0:03:46.146 ****** 
2023-07-10 16:02:37,782 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.031)       0:03:46.177 ****** 
2023-07-10 16:02:37,812 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.029)       0:03:46.207 ****** 
2023-07-10 16:02:37,860 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:37,861 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_library_nginx_1.23.2-alpine.tar docker.io/library/nginx:1.23.2-alpine"}, "changed": false}
2023-07-10 16:02:37,872 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.060)       0:03:46.267 ****** 
2023-07-10 16:02:37,902 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.029)       0:03:46.297 ****** 
2023-07-10 16:02:37,921 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:37,934 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:37,953 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:37 +0300 (0:00:00.050)       0:03:46.348 ****** 
2023-07-10 16:02:38,399 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:38,399 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.269148", "end": "2023-07-10 13:02:38.389273", "msg": "", "rc": 0, "start": "2023-07-10 13:02:38.120125", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:38,408 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.455)       0:03:46.803 ****** 
2023-07-10 16:02:38,450 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:38,451 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": true}, "changed": false}
2023-07-10 16:02:38,461 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.052)       0:03:46.856 ****** 
2023-07-10 16:02:38,489 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.028)       0:03:46.884 ****** 
2023-07-10 16:02:38,526 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:38,527 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/library/nginx:1.23.2-alpine required is: True"
}
2023-07-10 16:02:38,540 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.050)       0:03:46.935 ****** 
2023-07-10 16:02:38,567 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.027)       0:03:46.962 ****** 
2023-07-10 16:02:38,595 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.027)       0:03:46.990 ****** 
2023-07-10 16:02:38,634 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:38 +0300 (0:00:00.038)       0:03:47.029 ****** 
2023-07-10 16:02:49,269 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Download image if required] ****************************************************************************************************************************
2023-07-10 16:02:49,270 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/nerdctl", "-n", "k8s.io", "pull", "--quiet", "docker.io/library/nginx:1.23.2-alpine"], "delta": "0:00:10.348380", "end": "2023-07-10 13:02:49.240399", "msg": "", "rc": 0, "start": "2023-07-10 13:02:38.892019", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:02:49,299 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:10.665)       0:03:57.695 ****** 
2023-07-10 16:02:49,369 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.069)       0:03:57.764 ****** 
2023-07-10 16:02:49,413 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.043)       0:03:57.808 ****** 
2023-07-10 16:02:49,458 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.045)       0:03:57.853 ****** 
2023-07-10 16:02:49,503 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.044)       0:03:57.898 ****** 
2023-07-10 16:02:49,807 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:49,808 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_library_nginx_1.23.2-alpine.tar", "state": "absent"}
2023-07-10 16:02:49,823 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.319)       0:03:58.218 ****** 
2023-07-10 16:02:49,889 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:49,890 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:49,906 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.082)       0:03:58.301 ****** 
2023-07-10 16:02:49,976 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:49,977 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
2023-07-10 16:02:49,992 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:49 +0300 (0:00:00.085)       0:03:58.387 ****** 
2023-07-10 16:02:50,071 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:50,072 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:50,087 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.095)       0:03:58.482 ****** 
2023-07-10 16:02:50,157 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:50,158 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 16:02:50,172 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.085)       0:03:58.567 ****** 
2023-07-10 16:02:50,241 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:50,242 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 16:02:50,256 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.083)       0:03:58.651 ****** 
2023-07-10 16:02:50,324 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:50,325 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 16:02:50,340 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.084)       0:03:58.735 ****** 
2023-07-10 16:02:50,387 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.046)       0:03:58.782 ****** 
2023-07-10 16:02:50,458 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:50,458 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 16:02:50,473 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.086)       0:03:58.868 ****** 
2023-07-10 16:02:50,520 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.046)       0:03:58.915 ****** 
2023-07-10 16:02:50,568 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.048)       0:03:58.963 ****** 
2023-07-10 16:02:50,649 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:50,650 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 16:02:50,665 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.096)       0:03:59.060 ****** 
2023-07-10 16:02:50,711 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.046)       0:03:59.107 ****** 
2023-07-10 16:02:50,741 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:50,764 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:50,795 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:50 +0300 (0:00:00.083)       0:03:59.190 ****** 
2023-07-10 16:02:51,623 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:51,623 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.553431", "end": "2023-07-10 13:02:51.606877", "msg": "", "rc": 0, "start": "2023-07-10 13:02:51.053446", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:51,638 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:51 +0300 (0:00:00.842)       0:04:00.033 ****** 
2023-07-10 16:02:51,705 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:51,706 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:51,721 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:51 +0300 (0:00:00.083)       0:04:00.116 ****** 
2023-07-10 16:02:51,768 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:51 +0300 (0:00:00.046)       0:04:00.163 ****** 
2023-07-10 16:02:51,833 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:51,833 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False"
}
2023-07-10 16:02:51,855 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:51 +0300 (0:00:00.087)       0:04:00.250 ****** 
2023-07-10 16:02:51,900 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:51 +0300 (0:00:00.044)       0:04:00.295 ****** 
2023-07-10 16:02:51,946 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:51 +0300 (0:00:00.045)       0:04:00.341 ****** 
2023-07-10 16:02:52,005 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.059)       0:04:00.400 ****** 
2023-07-10 16:02:52,092 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.086)       0:04:00.487 ****** 
2023-07-10 16:02:52,159 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.067)       0:04:00.554 ****** 
2023-07-10 16:02:52,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.047)       0:04:00.602 ****** 
2023-07-10 16:02:52,251 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.044)       0:04:00.646 ****** 
2023-07-10 16:02:52,296 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.044)       0:04:00.691 ****** 
2023-07-10 16:02:52,585 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:52,585 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "state": "absent"}
2023-07-10 16:02:52,599 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.303)       0:04:00.994 ****** 
2023-07-10 16:02:52,661 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:52,661 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:52,676 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.076)       0:04:01.071 ****** 
2023-07-10 16:02:52,751 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:52,752 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
2023-07-10 16:02:52,765 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.089)       0:04:01.160 ****** 
2023-07-10 16:02:52,840 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:52,841 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:52,851 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.085)       0:04:01.246 ****** 
2023-07-10 16:02:52,896 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:52,896 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 16:02:52,907 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.055)       0:04:01.302 ****** 
2023-07-10 16:02:52,948 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:52,948 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar"}, "changed": false}
2023-07-10 16:02:52,958 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:52 +0300 (0:00:00.051)       0:04:01.353 ****** 
2023-07-10 16:02:53,000 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:53,000 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar"}, "changed": false}
2023-07-10 16:02:53,009 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.050)       0:04:01.404 ****** 
2023-07-10 16:02:53,038 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.028)       0:04:01.433 ****** 
2023-07-10 16:02:53,080 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:53,080 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 16:02:53,089 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.051)       0:04:01.484 ****** 
2023-07-10 16:02:53,119 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.029)       0:04:01.514 ****** 
2023-07-10 16:02:53,150 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.031)       0:04:01.545 ****** 
2023-07-10 16:02:53,199 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:53,199 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar registry.k8s.io/dns/k8s-dns-node-cache:1.22.20"}, "changed": false}
2023-07-10 16:02:53,210 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.059)       0:04:01.605 ****** 
2023-07-10 16:02:53,240 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.030)       0:04:01.635 ****** 
2023-07-10 16:02:53,260 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:53,275 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:53,293 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.052)       0:04:01.688 ****** 
2023-07-10 16:02:53,736 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:53,737 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.278294", "end": "2023-07-10 13:02:53.729980", "msg": "", "rc": 0, "start": "2023-07-10 13:02:53.451686", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:53,746 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.453)       0:04:02.141 ****** 
2023-07-10 16:02:53,789 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:53,789 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:53,799 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.052)       0:04:02.194 ****** 
2023-07-10 16:02:53,828 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.029)       0:04:02.224 ****** 
2023-07-10 16:02:53,866 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:53,866 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.22.20 required is: False"
}
2023-07-10 16:02:53,879 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.050)       0:04:02.274 ****** 
2023-07-10 16:02:53,908 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.028)       0:04:02.303 ****** 
2023-07-10 16:02:53,935 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.027)       0:04:02.330 ****** 
2023-07-10 16:02:53,970 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:53 +0300 (0:00:00.035)       0:04:02.365 ****** 
2023-07-10 16:02:54,016 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.046)       0:04:02.411 ****** 
2023-07-10 16:02:54,057 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.040)       0:04:02.452 ****** 
2023-07-10 16:02:54,086 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.029)       0:04:02.481 ****** 
2023-07-10 16:02:54,114 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.027)       0:04:02.509 ****** 
2023-07-10 16:02:54,142 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.028)       0:04:02.537 ****** 
2023-07-10 16:02:54,316 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:54,317 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_dns_k8s-dns-node-cache_1.22.20.tar", "state": "absent"}
2023-07-10 16:02:54,326 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.183)       0:04:02.721 ****** 
2023-07-10 16:02:54,365 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:02:54,365 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:02:54,374 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.048)       0:04:02.769 ****** 
2023-07-10 16:02:54,416 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:02:54,417 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/cpa/cluster-proportional-autoscaler"
}
2023-07-10 16:02:54,427 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.052)       0:04:02.822 ****** 
2023-07-10 16:02:54,476 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:02:54,477 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:02:54,486 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.059)       0:04:02.881 ****** 
2023-07-10 16:02:54,530 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:02:54,531 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 16:02:54,541 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.054)       0:04:02.936 ****** 
2023-07-10 16:02:54,584 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:02:54,584 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar"}, "changed": false}
2023-07-10 16:02:54,593 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.052)       0:04:02.988 ****** 
2023-07-10 16:02:54,634 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:02:54,634 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar"}, "changed": false}
2023-07-10 16:02:54,645 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.051)       0:04:03.040 ****** 
2023-07-10 16:02:54,675 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.030)       0:04:03.070 ****** 
2023-07-10 16:02:54,719 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:02:54,719 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 16:02:54,730 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.054)       0:04:03.125 ****** 
2023-07-10 16:02:54,760 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.030)       0:04:03.155 ****** 
2023-07-10 16:02:54,790 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.030)       0:04:03.185 ****** 
2023-07-10 16:02:54,839 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:02:54,840 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8"}, "changed": false}
2023-07-10 16:02:54,849 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.059)       0:04:03.245 ****** 
2023-07-10 16:02:54,879 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.029)       0:04:03.274 ****** 
2023-07-10 16:02:54,898 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:02:54,913 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:02:54,932 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:54 +0300 (0:00:00.053)       0:04:03.327 ****** 
2023-07-10 16:02:55,396 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:02:55,397 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.295948", "end": "2023-07-10 13:02:55.388750", "msg": "", "rc": 0, "start": "2023-07-10 13:02:55.092802", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:02:55,406 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.473)       0:04:03.801 ****** 
2023-07-10 16:02:55,449 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:02:55,449 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:02:55,462 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.055)       0:04:03.857 ****** 
2023-07-10 16:02:55,492 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.030)       0:04:03.888 ****** 
2023-07-10 16:02:55,533 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:02:55,534 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8 required is: False"
}
2023-07-10 16:02:55,545 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.052)       0:04:03.940 ****** 
2023-07-10 16:02:55,572 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.026)       0:04:03.967 ****** 
2023-07-10 16:02:55,600 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.028)       0:04:03.995 ****** 
2023-07-10 16:02:55,636 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.036)       0:04:04.031 ****** 
2023-07-10 16:02:55,683 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.047)       0:04:04.079 ****** 
2023-07-10 16:02:55,722 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.038)       0:04:04.117 ****** 
2023-07-10 16:02:55,751 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.028)       0:04:04.146 ****** 
2023-07-10 16:02:55,778 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.027)       0:04:04.173 ****** 
2023-07-10 16:02:55,806 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.027)       0:04:04.201 ****** 
2023-07-10 16:02:55,983 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:02:55,984 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_cpa_cluster-proportional-autoscaler_v1.8.8.tar", "state": "absent"}
2023-07-10 16:02:55,992 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:55 +0300 (0:00:00.186)       0:04:04.387 ****** 
2023-07-10 16:02:56,036 p=24624 u=kubernetmachine n=ansible | TASK [download : prep_download | Set a few facts] ********************************************************************************************************************************************
2023-07-10 16:02:56,036 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:02:56,045 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:56 +0300 (0:00:00.052)       0:04:04.440 ****** 
2023-07-10 16:02:56,085 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Starting download of file] **********************************************************************************************************************************
2023-07-10 16:02:56,086 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"
}
2023-07-10 16:02:56,096 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:56 +0300 (0:00:00.050)       0:04:04.491 ****** 
2023-07-10 16:02:56,139 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Set pathname of cached file] ********************************************************************************************************************************
2023-07-10 16:02:56,139 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/helm-v3.12.1-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:02:56,149 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:56 +0300 (0:00:00.053)       0:04:04.544 ****** 
2023-07-10 16:02:56,335 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Create dest directory on node] ******************************************************************************************************************************
2023-07-10 16:02:56,335 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/helm-v3.12.1", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:02:56,347 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:56 +0300 (0:00:00.197)       0:04:04.742 ****** 
2023-07-10 16:02:56,383 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:56 +0300 (0:00:00.036)       0:04:04.778 ****** 
2023-07-10 16:02:56,428 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:56 +0300 (0:00:00.044)       0:04:04.823 ****** 
2023-07-10 16:02:57,743 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Validate mirrors] *******************************************************************************************************************************************
2023-07-10 16:02:57,744 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:57,747 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:57,776 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:57 +0300 (0:00:01.347)       0:04:06.171 ****** 
2023-07-10 16:02:57,872 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Get the list of working mirrors] ****************************************************************************************************************************
2023-07-10 16:02:57,873 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:02:57,909 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:57 +0300 (0:00:00.133)       0:04:06.304 ****** 
2023-07-10 16:02:58,490 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Download item] **********************************************************************************************************************************************
2023-07-10 16:02:58,490 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:02:58,505 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:58 +0300 (0:00:00.595)       0:04:06.900 ****** 
2023-07-10 16:02:58,550 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:58 +0300 (0:00:00.045)       0:04:06.945 ****** 
2023-07-10 16:02:58,597 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:58 +0300 (0:00:00.046)       0:04:06.992 ****** 
2023-07-10 16:02:58,648 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:58 +0300 (0:00:00.051)       0:04:07.043 ****** 
2023-07-10 16:02:58,681 p=24624 u=kubernetmachine n=ansible | TASK [download : download_file | Extract file archives] **************************************************************************************************************************************
2023-07-10 16:02:58,795 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:02:58,816 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:02:58 +0300 (0:00:00.168)       0:04:07.211 ****** 
2023-07-10 16:03:00,607 p=24624 u=kubernetmachine n=ansible | TASK [download : extract_file | Unpacking archive] *******************************************************************************************************************************************
2023-07-10 16:03:00,608 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases/helm-v3.12.1", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:03:00,630 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:00 +0300 (0:00:01.813)       0:04:09.025 ****** 
2023-07-10 16:03:00,722 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:00,724 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:00,746 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:00 +0300 (0:00:00.115)       0:04:09.141 ****** 
2023-07-10 16:03:00,827 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:00,828 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/ingress-nginx/controller"
}
2023-07-10 16:03:00,849 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:00 +0300 (0:00:00.103)       0:04:09.244 ****** 
2023-07-10 16:03:00,977 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:00,978 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:03:00,998 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:00 +0300 (0:00:00.148)       0:04:09.393 ****** 
2023-07-10 16:03:01,096 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:01,097 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 16:03:01,114 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.116)       0:04:09.509 ****** 
2023-07-10 16:03:01,189 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:01,190 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_ingress-nginx_controller_v1.8.0.tar"}, "changed": false}
2023-07-10 16:03:01,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.092)       0:04:09.602 ****** 
2023-07-10 16:03:01,281 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:01,282 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar"}, "changed": false}
2023-07-10 16:03:01,298 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.091)       0:04:09.693 ****** 
2023-07-10 16:03:01,349 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.050)       0:04:09.744 ****** 
2023-07-10 16:03:01,424 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:01,424 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 16:03:01,441 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.092)       0:04:09.836 ****** 
2023-07-10 16:03:01,477 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.035)       0:04:09.872 ****** 
2023-07-10 16:03:01,508 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.031)       0:04:09.904 ****** 
2023-07-10 16:03:01,559 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:01,559 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar registry.k8s.io/ingress-nginx/controller:v1.8.0"}, "changed": false}
2023-07-10 16:03:01,569 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.060)       0:04:09.964 ****** 
2023-07-10 16:03:01,602 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.032)       0:04:09.997 ****** 
2023-07-10 16:03:01,621 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:01,636 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:01,657 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:01 +0300 (0:00:00.054)       0:04:10.052 ****** 
2023-07-10 16:03:02,118 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:02,119 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.284246", "end": "2023-07-10 13:03:02.111001", "msg": "", "rc": 0, "start": "2023-07-10 13:03:01.826755", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:02,128 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.470)       0:04:10.523 ****** 
2023-07-10 16:03:02,173 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:02,174 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:02,185 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.056)       0:04:10.580 ****** 
2023-07-10 16:03:02,219 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.033)       0:04:10.614 ****** 
2023-07-10 16:03:02,258 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:02,259 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/ingress-nginx/controller:v1.8.0 required is: False"
}
2023-07-10 16:03:02,274 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.055)       0:04:10.669 ****** 
2023-07-10 16:03:02,304 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.030)       0:04:10.699 ****** 
2023-07-10 16:03:02,337 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.033)       0:04:10.733 ****** 
2023-07-10 16:03:02,381 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.043)       0:04:10.776 ****** 
2023-07-10 16:03:02,430 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.049)       0:04:10.825 ****** 
2023-07-10 16:03:02,470 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.040)       0:04:10.865 ****** 
2023-07-10 16:03:02,501 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.030)       0:04:10.896 ****** 
2023-07-10 16:03:02,534 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.032)       0:04:10.929 ****** 
2023-07-10 16:03:02,564 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.030)       0:04:10.960 ****** 
2023-07-10 16:03:02,740 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:02,741 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_ingress-nginx_controller_v1.8.0.tar", "state": "absent"}
2023-07-10 16:03:02,750 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.185)       0:04:11.145 ****** 
2023-07-10 16:03:02,789 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:02,790 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:02,800 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.050)       0:04:11.195 ****** 
2023-07-10 16:03:02,845 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:02,846 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/kubernetesui/dashboard"
}
2023-07-10 16:03:02,856 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.055)       0:04:11.251 ****** 
2023-07-10 16:03:02,907 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:02,907 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:03:02,918 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.061)       0:04:11.313 ****** 
2023-07-10 16:03:02,970 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:02,971 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 16:03:02,991 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:02 +0300 (0:00:00.072)       0:04:11.386 ****** 
2023-07-10 16:03:03,059 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:03,059 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_kubernetesui_dashboard_v2.7.0.tar"}, "changed": false}
2023-07-10 16:03:03,077 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.085)       0:04:11.472 ****** 
2023-07-10 16:03:03,132 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:03,133 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "image_path_final": "/tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar"}, "changed": false}
2023-07-10 16:03:03,150 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.072)       0:04:11.544 ****** 
2023-07-10 16:03:03,190 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.040)       0:04:11.585 ****** 
2023-07-10 16:03:03,238 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:03,238 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 16:03:03,249 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.058)       0:04:11.644 ****** 
2023-07-10 16:03:03,282 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.033)       0:04:11.677 ****** 
2023-07-10 16:03:03,315 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.032)       0:04:11.710 ****** 
2023-07-10 16:03:03,370 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:03,371 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_kubernetesui_dashboard_v2.7.0.tar docker.io/kubernetesui/dashboard:v2.7.0"}, "changed": false}
2023-07-10 16:03:03,382 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.066)       0:04:11.777 ****** 
2023-07-10 16:03:03,417 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.035)       0:04:11.812 ****** 
2023-07-10 16:03:03,438 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:03,452 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:03,471 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.053)       0:04:11.866 ****** 
2023-07-10 16:03:03,956 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:03,957 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.302944", "end": "2023-07-10 13:03:03.948263", "msg": "", "rc": 0, "start": "2023-07-10 13:03:03.645319", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:03,965 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:03 +0300 (0:00:00.494)       0:04:12.360 ****** 
2023-07-10 16:03:04,007 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:04,007 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:04,016 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.051)       0:04:12.412 ****** 
2023-07-10 16:03:04,047 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.030)       0:04:12.442 ****** 
2023-07-10 16:03:04,089 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:04,090 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/kubernetesui/dashboard:v2.7.0 required is: False"
}
2023-07-10 16:03:04,102 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.054)       0:04:12.497 ****** 
2023-07-10 16:03:04,129 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.027)       0:04:12.524 ****** 
2023-07-10 16:03:04,158 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.028)       0:04:12.553 ****** 
2023-07-10 16:03:04,197 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.038)       0:04:12.591 ****** 
2023-07-10 16:03:04,243 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.046)       0:04:12.638 ****** 
2023-07-10 16:03:04,282 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.038)       0:04:12.677 ****** 
2023-07-10 16:03:04,311 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.028)       0:04:12.706 ****** 
2023-07-10 16:03:04,339 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.027)       0:04:12.733 ****** 
2023-07-10 16:03:04,370 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.031)       0:04:12.765 ****** 
2023-07-10 16:03:04,551 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:04,551 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_kubernetesui_dashboard_v2.7.0.tar", "state": "absent"}
2023-07-10 16:03:04,560 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.190)       0:04:12.956 ****** 
2023-07-10 16:03:04,602 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:04,602 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:04,611 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.050)       0:04:13.006 ****** 
2023-07-10 16:03:04,655 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:04,655 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "docker.io/kubernetesui/metrics-scraper"
}
2023-07-10 16:03:04,665 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.054)       0:04:13.061 ****** 
2023-07-10 16:03:04,713 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:04,714 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": ""}, "changed": false}
2023-07-10 16:03:04,723 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.057)       0:04:13.118 ****** 
2023-07-10 16:03:04,769 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:04,769 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 16:03:04,779 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.055)       0:04:13.174 ****** 
2023-07-10 16:03:04,821 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:04,821 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "docker.io_kubernetesui_metrics-scraper_v1.0.8.tar"}, "changed": false}
2023-07-10 16:03:04,832 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.052)       0:04:13.227 ****** 
2023-07-10 16:03:04,877 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:04,877 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "image_path_final": "/tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar"}, "changed": false}
2023-07-10 16:03:04,887 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.054)       0:04:13.282 ****** 
2023-07-10 16:03:04,917 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.030)       0:04:13.313 ****** 
2023-07-10 16:03:04,962 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:04,962 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 16:03:04,972 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.054)       0:04:13.367 ****** 
2023-07-10 16:03:05,001 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:04 +0300 (0:00:00.029)       0:04:13.396 ****** 
2023-07-10 16:03:05,030 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.029)       0:04:13.426 ****** 
2023-07-10 16:03:05,082 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:05,082 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar docker.io/kubernetesui/metrics-scraper:v1.0.8"}, "changed": false}
2023-07-10 16:03:05,093 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.062)       0:04:13.488 ****** 
2023-07-10 16:03:05,125 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.032)       0:04:13.520 ****** 
2023-07-10 16:03:05,144 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:05,158 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:05,176 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.050)       0:04:13.571 ****** 
2023-07-10 16:03:05,624 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:05,625 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.278540", "end": "2023-07-10 13:03:05.616036", "msg": "", "rc": 0, "start": "2023-07-10 13:03:05.337496", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:05,634 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.458)       0:04:14.029 ****** 
2023-07-10 16:03:05,680 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:05,681 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:05,697 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.062)       0:04:14.092 ****** 
2023-07-10 16:03:05,727 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.029)       0:04:14.122 ****** 
2023-07-10 16:03:05,768 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:05,768 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull docker.io/kubernetesui/metrics-scraper:v1.0.8 required is: False"
}
2023-07-10 16:03:05,780 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.053)       0:04:14.175 ****** 
2023-07-10 16:03:05,807 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.027)       0:04:14.202 ****** 
2023-07-10 16:03:05,836 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.029)       0:04:14.232 ****** 
2023-07-10 16:03:05,878 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.041)       0:04:14.273 ****** 
2023-07-10 16:03:05,926 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.047)       0:04:14.321 ****** 
2023-07-10 16:03:05,966 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.040)       0:04:14.361 ****** 
2023-07-10 16:03:05,998 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:05 +0300 (0:00:00.031)       0:04:14.393 ****** 
2023-07-10 16:03:06,029 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.030)       0:04:14.424 ****** 
2023-07-10 16:03:06,059 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.029)       0:04:14.454 ****** 
2023-07-10 16:03:06,248 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:06,248 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/docker.io_kubernetesui_metrics-scraper_v1.0.8.tar", "state": "absent"}
2023-07-10 16:03:06,258 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.198)       0:04:14.653 ****** 
2023-07-10 16:03:06,299 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:06,299 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:06,309 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.051)       0:04:14.704 ****** 
2023-07-10 16:03:06,352 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:06,352 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
2023-07-10 16:03:06,363 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.053)       0:04:14.758 ****** 
2023-07-10 16:03:06,410 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:06,411 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 16:03:06,420 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.057)       0:04:14.815 ****** 
2023-07-10 16:03:06,463 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:06,463 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 16:03:06,476 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.055)       0:04:14.871 ****** 
2023-07-10 16:03:06,526 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:06,526 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-apiserver_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:06,542 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.066)       0:04:14.937 ****** 
2023-07-10 16:03:06,584 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:06,584 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:06,593 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.051)       0:04:14.988 ****** 
2023-07-10 16:03:06,621 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.027)       0:04:15.016 ****** 
2023-07-10 16:03:06,664 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:06,664 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 16:03:06,673 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.052)       0:04:15.068 ****** 
2023-07-10 16:03:06,704 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.030)       0:04:15.099 ****** 
2023-07-10 16:03:06,733 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.029)       0:04:15.128 ****** 
2023-07-10 16:03:06,785 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:06,785 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-apiserver_v1.26.2.tar registry.k8s.io/kube-apiserver:v1.26.2"}, "changed": false}
2023-07-10 16:03:06,796 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.062)       0:04:15.191 ****** 
2023-07-10 16:03:06,826 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.030)       0:04:15.221 ****** 
2023-07-10 16:03:06,845 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:06,858 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:06,880 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:06 +0300 (0:00:00.053)       0:04:15.275 ****** 
2023-07-10 16:03:07,344 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:07,345 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.282363", "end": "2023-07-10 13:03:07.335359", "msg": "", "rc": 0, "start": "2023-07-10 13:03:07.052996", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:07,354 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.473)       0:04:15.749 ****** 
2023-07-10 16:03:07,396 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:07,396 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:07,405 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.051)       0:04:15.800 ****** 
2023-07-10 16:03:07,437 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.031)       0:04:15.832 ****** 
2023-07-10 16:03:07,475 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:07,475 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.26.2 required is: False"
}
2023-07-10 16:03:07,488 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.051)       0:04:15.883 ****** 
2023-07-10 16:03:07,515 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.027)       0:04:15.910 ****** 
2023-07-10 16:03:07,544 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.029)       0:04:15.939 ****** 
2023-07-10 16:03:07,580 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.035)       0:04:15.975 ****** 
2023-07-10 16:03:07,631 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.050)       0:04:16.026 ****** 
2023-07-10 16:03:07,669 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.038)       0:04:16.064 ****** 
2023-07-10 16:03:07,699 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.029)       0:04:16.094 ****** 
2023-07-10 16:03:07,727 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.027)       0:04:16.122 ****** 
2023-07-10 16:03:07,755 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.028)       0:04:16.150 ****** 
2023-07-10 16:03:07,928 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:07,931 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-apiserver_v1.26.2.tar", "state": "absent"}
2023-07-10 16:03:07,939 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.183)       0:04:16.334 ****** 
2023-07-10 16:03:07,978 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:07,978 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:07,987 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:07 +0300 (0:00:00.048)       0:04:16.382 ****** 
2023-07-10 16:03:08,030 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:08,031 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
2023-07-10 16:03:08,041 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.053)       0:04:16.436 ****** 
2023-07-10 16:03:08,088 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:08,089 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 16:03:08,100 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.059)       0:04:16.495 ****** 
2023-07-10 16:03:08,145 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:08,146 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 16:03:08,156 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.055)       0:04:16.551 ****** 
2023-07-10 16:03:08,198 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:08,198 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-controller-manager_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:08,208 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.051)       0:04:16.603 ****** 
2023-07-10 16:03:08,249 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:08,249 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:08,260 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.051)       0:04:16.655 ****** 
2023-07-10 16:03:08,292 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.032)       0:04:16.687 ****** 
2023-07-10 16:03:08,335 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:08,336 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 16:03:08,345 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.053)       0:04:16.740 ****** 
2023-07-10 16:03:08,375 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.029)       0:04:16.770 ****** 
2023-07-10 16:03:08,406 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.031)       0:04:16.801 ****** 
2023-07-10 16:03:08,456 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:08,457 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar registry.k8s.io/kube-controller-manager:v1.26.2"}, "changed": false}
2023-07-10 16:03:08,466 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.059)       0:04:16.861 ****** 
2023-07-10 16:03:08,496 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.029)       0:04:16.891 ****** 
2023-07-10 16:03:08,515 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:08,531 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:08,549 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:08 +0300 (0:00:00.053)       0:04:16.944 ****** 
2023-07-10 16:03:09,037 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:09,038 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.316933", "end": "2023-07-10 13:03:09.026195", "msg": "", "rc": 0, "start": "2023-07-10 13:03:08.709262", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:09,047 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.497)       0:04:17.442 ****** 
2023-07-10 16:03:09,090 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:09,090 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:09,100 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.052)       0:04:17.495 ****** 
2023-07-10 16:03:09,129 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.029)       0:04:17.525 ****** 
2023-07-10 16:03:09,168 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:09,168 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.26.2 required is: False"
}
2023-07-10 16:03:09,180 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.050)       0:04:17.575 ****** 
2023-07-10 16:03:09,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.027)       0:04:17.602 ****** 
2023-07-10 16:03:09,235 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.028)       0:04:17.630 ****** 
2023-07-10 16:03:09,274 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.038)       0:04:17.669 ****** 
2023-07-10 16:03:09,321 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.046)       0:04:17.716 ****** 
2023-07-10 16:03:09,360 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.039)       0:04:17.755 ****** 
2023-07-10 16:03:09,393 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.032)       0:04:17.788 ****** 
2023-07-10 16:03:09,421 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.027)       0:04:17.816 ****** 
2023-07-10 16:03:09,450 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.029)       0:04:17.845 ****** 
2023-07-10 16:03:09,643 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:09,644 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-controller-manager_v1.26.2.tar", "state": "absent"}
2023-07-10 16:03:09,653 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.203)       0:04:18.048 ****** 
2023-07-10 16:03:09,691 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:09,692 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:09,702 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.049)       0:04:18.097 ****** 
2023-07-10 16:03:09,749 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:09,749 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
2023-07-10 16:03:09,829 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.127)       0:04:18.224 ****** 
2023-07-10 16:03:09,878 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:09,878 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 16:03:09,888 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.058)       0:04:18.283 ****** 
2023-07-10 16:03:09,935 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:09,935 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 16:03:09,945 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.057)       0:04:18.340 ****** 
2023-07-10 16:03:09,988 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:09,988 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-scheduler_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:09,998 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:09 +0300 (0:00:00.052)       0:04:18.393 ****** 
2023-07-10 16:03:10,039 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:10,040 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:10,049 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.051)       0:04:18.445 ****** 
2023-07-10 16:03:10,079 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.029)       0:04:18.474 ****** 
2023-07-10 16:03:10,123 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:10,124 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 16:03:10,132 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.053)       0:04:18.528 ****** 
2023-07-10 16:03:10,160 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.027)       0:04:18.555 ****** 
2023-07-10 16:03:10,190 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.030)       0:04:18.586 ****** 
2023-07-10 16:03:10,239 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:10,240 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-scheduler_v1.26.2.tar registry.k8s.io/kube-scheduler:v1.26.2"}, "changed": false}
2023-07-10 16:03:10,250 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.059)       0:04:18.645 ****** 
2023-07-10 16:03:10,279 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.029)       0:04:18.675 ****** 
2023-07-10 16:03:10,298 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:10,311 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:10,329 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.050)       0:04:18.725 ****** 
2023-07-10 16:03:10,807 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:10,808 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.307968", "end": "2023-07-10 13:03:10.797561", "msg": "", "rc": 0, "start": "2023-07-10 13:03:10.489593", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:10,818 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.488)       0:04:19.213 ****** 
2023-07-10 16:03:10,861 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:10,862 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:10,873 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.054)       0:04:19.268 ****** 
2023-07-10 16:03:10,907 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.033)       0:04:19.302 ****** 
2023-07-10 16:03:10,949 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:10,950 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.26.2 required is: False"
}
2023-07-10 16:03:10,962 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.055)       0:04:19.357 ****** 
2023-07-10 16:03:10,989 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:10 +0300 (0:00:00.027)       0:04:19.384 ****** 
2023-07-10 16:03:11,018 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.028)       0:04:19.413 ****** 
2023-07-10 16:03:11,055 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.037)       0:04:19.451 ****** 
2023-07-10 16:03:11,105 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.049)       0:04:19.500 ****** 
2023-07-10 16:03:11,142 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.037)       0:04:19.537 ****** 
2023-07-10 16:03:11,172 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.030)       0:04:19.568 ****** 
2023-07-10 16:03:11,201 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.028)       0:04:19.596 ****** 
2023-07-10 16:03:11,230 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.028)       0:04:19.625 ****** 
2023-07-10 16:03:11,408 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:11,409 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-scheduler_v1.26.2.tar", "state": "absent"}
2023-07-10 16:03:11,419 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.188)       0:04:19.814 ****** 
2023-07-10 16:03:11,457 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:11,457 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:11,466 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.047)       0:04:19.861 ****** 
2023-07-10 16:03:11,512 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:11,512 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/kube-proxy"
}
2023-07-10 16:03:11,521 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.054)       0:04:19.916 ****** 
2023-07-10 16:03:11,568 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:11,568 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 16:03:11,579 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.058)       0:04:19.974 ****** 
2023-07-10 16:03:11,622 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:11,623 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/kube-proxy:v1.26.2"}, "changed": false}
2023-07-10 16:03:11,632 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.052)       0:04:20.027 ****** 
2023-07-10 16:03:11,673 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:11,673 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_kube-proxy_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:11,687 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.055)       0:04:20.082 ****** 
2023-07-10 16:03:11,743 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:11,744 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_kube-proxy_v1.26.2.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar"}, "changed": false}
2023-07-10 16:03:11,753 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.065)       0:04:20.148 ****** 
2023-07-10 16:03:11,782 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.028)       0:04:20.177 ****** 
2023-07-10 16:03:11,829 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:11,830 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar registry.k8s.io/kube-proxy:v1.26.2"}, "changed": false}
2023-07-10 16:03:11,840 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.058)       0:04:20.236 ****** 
2023-07-10 16:03:11,872 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.031)       0:04:20.267 ****** 
2023-07-10 16:03:11,902 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.030)       0:04:20.297 ****** 
2023-07-10 16:03:11,952 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:11,953 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_kube-proxy_v1.26.2.tar registry.k8s.io/kube-proxy:v1.26.2"}, "changed": false}
2023-07-10 16:03:11,963 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.060)       0:04:20.358 ****** 
2023-07-10 16:03:11,992 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:11 +0300 (0:00:00.029)       0:04:20.387 ****** 
2023-07-10 16:03:12,010 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:12,025 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:12,043 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.051)       0:04:20.438 ****** 
2023-07-10 16:03:12,513 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:12,514 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.286250", "end": "2023-07-10 13:03:12.505275", "msg": "", "rc": 0, "start": "2023-07-10 13:03:12.219025", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:12,522 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.478)       0:04:20.917 ****** 
2023-07-10 16:03:12,565 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:12,565 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:12,575 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.052)       0:04:20.970 ****** 
2023-07-10 16:03:12,607 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.032)       0:04:21.003 ****** 
2023-07-10 16:03:12,646 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:12,647 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/kube-proxy:v1.26.2 required is: False"
}
2023-07-10 16:03:12,660 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.052)       0:04:21.055 ****** 
2023-07-10 16:03:12,689 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.029)       0:04:21.084 ****** 
2023-07-10 16:03:12,716 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.027)       0:04:21.112 ****** 
2023-07-10 16:03:12,753 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.036)       0:04:21.148 ****** 
2023-07-10 16:03:12,802 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.049)       0:04:21.198 ****** 
2023-07-10 16:03:12,844 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.041)       0:04:21.239 ****** 
2023-07-10 16:03:12,873 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.028)       0:04:21.268 ****** 
2023-07-10 16:03:12,901 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.028)       0:04:21.296 ****** 
2023-07-10 16:03:12,928 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:12 +0300 (0:00:00.027)       0:04:21.323 ****** 
2023-07-10 16:03:13,097 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:13,097 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_kube-proxy_v1.26.2.tar", "state": "absent"}
2023-07-10 16:03:13,106 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.177)       0:04:21.501 ****** 
2023-07-10 16:03:13,147 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:13,147 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:13,159 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.052)       0:04:21.554 ****** 
2023-07-10 16:03:13,205 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:13,206 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/pause"
}
2023-07-10 16:03:13,216 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.057)       0:04:21.612 ****** 
2023-07-10 16:03:13,267 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:13,268 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 16:03:13,279 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.062)       0:04:21.674 ****** 
2023-07-10 16:03:13,328 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:13,329 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 16:03:13,339 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.059)       0:04:21.734 ****** 
2023-07-10 16:03:13,383 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:13,383 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 16:03:13,394 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.054)       0:04:21.789 ****** 
2023-07-10 16:03:13,437 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:13,437 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar"}, "changed": false}
2023-07-10 16:03:13,447 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.053)       0:04:21.842 ****** 
2023-07-10 16:03:13,479 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.031)       0:04:21.874 ****** 
2023-07-10 16:03:13,525 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:13,526 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_pause_3.9.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 16:03:13,536 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.056)       0:04:21.931 ****** 
2023-07-10 16:03:13,567 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.031)       0:04:21.962 ****** 
2023-07-10 16:03:13,598 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.031)       0:04:21.994 ****** 
2023-07-10 16:03:13,650 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:13,650 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_pause_3.9.tar registry.k8s.io/pause:3.9"}, "changed": false}
2023-07-10 16:03:13,661 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.062)       0:04:22.056 ****** 
2023-07-10 16:03:13,695 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.033)       0:04:22.090 ****** 
2023-07-10 16:03:13,714 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:13,730 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:13,748 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:13 +0300 (0:00:00.053)       0:04:22.143 ****** 
2023-07-10 16:03:14,202 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:14,202 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.279518", "end": "2023-07-10 13:03:14.193265", "msg": "", "rc": 0, "start": "2023-07-10 13:03:13.913747", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:14,212 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.463)       0:04:22.607 ****** 
2023-07-10 16:03:14,255 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:14,256 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:14,266 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.054)       0:04:22.661 ****** 
2023-07-10 16:03:14,297 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.031)       0:04:22.693 ****** 
2023-07-10 16:03:14,336 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:14,337 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/pause:3.9 required is: False"
}
2023-07-10 16:03:14,351 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.053)       0:04:22.746 ****** 
2023-07-10 16:03:14,379 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.028)       0:04:22.774 ****** 
2023-07-10 16:03:14,408 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.028)       0:04:22.803 ****** 
2023-07-10 16:03:14,446 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.038)       0:04:22.841 ****** 
2023-07-10 16:03:14,493 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.047)       0:04:22.888 ****** 
2023-07-10 16:03:14,537 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.043)       0:04:22.932 ****** 
2023-07-10 16:03:14,565 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.028)       0:04:22.960 ****** 
2023-07-10 16:03:14,595 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.029)       0:04:22.990 ****** 
2023-07-10 16:03:14,625 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.030)       0:04:23.020 ****** 
2023-07-10 16:03:14,843 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:14,843 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_pause_3.9.tar", "state": "absent"}
2023-07-10 16:03:14,855 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.229)       0:04:23.250 ****** 
2023-07-10 16:03:14,905 p=24624 u=kubernetmachine n=ansible | TASK [download : set default values for flag variables] **************************************************************************************************************************************
2023-07-10 16:03:14,905 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_changed": false, "image_is_cached": false, "pull_required": false}, "changed": false}
2023-07-10 16:03:14,917 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.062)       0:04:23.312 ****** 
2023-07-10 16:03:14,975 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Display the name of the image being processed] ********************************************************************************************************
2023-07-10 16:03:14,975 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
2023-07-10 16:03:14,988 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:14 +0300 (0:00:00.070)       0:04:23.383 ****** 
2023-07-10 16:03:15,051 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Set if containers should be pulled by digest] *********************************************************************************************************
2023-07-10 16:03:15,052 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_by_digest": false}, "changed": false}
2023-07-10 16:03:15,065 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.077)       0:04:23.460 ****** 
2023-07-10 16:03:15,125 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define by what name to pull the image] ****************************************************************************************************************
2023-07-10 16:03:15,126 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_reponame": "registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 16:03:15,139 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.073)       0:04:23.534 ****** 
2023-07-10 16:03:15,194 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define file name of image] ****************************************************************************************************************************
2023-07-10 16:03:15,195 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_filename": "registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 16:03:15,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.068)       0:04:23.602 ****** 
2023-07-10 16:03:15,249 p=24624 u=kubernetmachine n=ansible | TASK [download : set_container_facts | Define path of image] *********************************************************************************************************************************
2023-07-10 16:03:15,250 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_path_cached": "/tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_path_final": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar"}, "changed": false}
2023-07-10 16:03:15,260 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.052)       0:04:23.655 ****** 
2023-07-10 16:03:15,292 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.031)       0:04:23.687 ****** 
2023-07-10 16:03:15,349 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd] *********************************************************************************************************************************
2023-07-10 16:03:15,349 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_load_command": "/usr/local/bin/nerdctl -n k8s.io image load < /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "image_save_command": "/usr/local/bin/nerdctl -n k8s.io image save -o /tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 16:03:15,362 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.069)       0:04:23.757 ****** 
2023-07-10 16:03:15,400 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.038)       0:04:23.795 ****** 
2023-07-10 16:03:15,445 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.044)       0:04:23.840 ****** 
2023-07-10 16:03:15,510 p=24624 u=kubernetmachine n=ansible | TASK [download : Set image save/load command for containerd on localhost] ********************************************************************************************************************
2023-07-10 16:03:15,510 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"image_save_command_on_localhost": "/usr/local/bin/ctr -n k8s.io image export --platform linux/amd64 /tmp/kubespray_cache/images/registry.k8s.io_coredns_coredns_v1.9.3.tar registry.k8s.io/coredns/coredns:v1.9.3"}, "changed": false}
2023-07-10 16:03:15,523 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.077)       0:04:23.918 ****** 
2023-07-10 16:03:15,558 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.035)       0:04:23.953 ****** 
2023-07-10 16:03:15,582 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Prepare container download] ****************************************************************************************************************************
2023-07-10 16:03:15,599 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/check_pull_required.yml for node1
2023-07-10 16:03:15,623 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:15 +0300 (0:00:00.065)       0:04:24.019 ****** 
2023-07-10 16:03:16,101 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required |  Generate a list of information about the images on a node] *******************************************************************************************
2023-07-10 16:03:16,102 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/nerdctl -n k8s.io images --format '{{ .Repository }}:{{ .Tag }}' 2>/dev/null | grep -v ^:$ | tr '\n' ','", "delta": "0:00:00.270176", "end": "2023-07-10 13:03:16.092780", "msg": "", "rc": 0, "start": "2023-07-10 13:03:15.822604", "stderr": "", "stderr_lines": [], "stdout": "kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,", "stdout_lines": ["kubernetesui/dashboard:v2.7.0,kubernetesui/metrics-scraper:v1.0.8,nginx:1.23.2-alpine,quay.io/calico/cni:v3.25.1,quay.io/calico/kube-controllers:v3.25.1,quay.io/calico/node:v3.25.1,quay.io/calico/pod2daemon-flexvol:v3.25.1,registry.k8s.io/coredns/coredns:v1.9.3,registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8,registry.k8s.io/dns/k8s-dns-node-cache:1.22.20,registry.k8s.io/ingress-nginx/controller:v1.8.0,registry.k8s.io/kube-apiserver:v1.26.2,registry.k8s.io/kube-controller-manager:v1.26.2,registry.k8s.io/kube-proxy:v1.26.2,registry.k8s.io/kube-scheduler:v1.26.2,registry.k8s.io/pause:3.9,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,<none>:<none>,"]}
2023-07-10 16:03:16,111 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.487)       0:04:24.506 ****** 
2023-07-10 16:03:16,154 p=24624 u=kubernetmachine n=ansible | TASK [download : check_pull_required | Set pull_required if the desired image is not yet loaded] *********************************************************************************************
2023-07-10 16:03:16,155 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"pull_required": false}, "changed": false}
2023-07-10 16:03:16,164 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.053)       0:04:24.560 ****** 
2023-07-10 16:03:16,195 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.030)       0:04:24.590 ****** 
2023-07-10 16:03:16,234 p=24624 u=kubernetmachine n=ansible | TASK [download : debug] **********************************************************************************************************************************************************************
2023-07-10 16:03:16,234 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.9.3 required is: False"
}
2023-07-10 16:03:16,246 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.051)       0:04:24.641 ****** 
2023-07-10 16:03:16,274 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.028)       0:04:24.669 ****** 
2023-07-10 16:03:16,304 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.030)       0:04:24.699 ****** 
2023-07-10 16:03:16,346 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.041)       0:04:24.741 ****** 
2023-07-10 16:03:16,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.056)       0:04:24.798 ****** 
2023-07-10 16:03:16,447 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.044)       0:04:24.842 ****** 
2023-07-10 16:03:16,479 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.031)       0:04:24.874 ****** 
2023-07-10 16:03:16,508 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.029)       0:04:24.903 ****** 
2023-07-10 16:03:16,538 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.029)       0:04:24.933 ****** 
2023-07-10 16:03:16,721 p=24624 u=kubernetmachine n=ansible | TASK [download : download_container | Remove container image from cache] *********************************************************************************************************************
2023-07-10 16:03:16,721 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "path": "/tmp/releases/images/registry.k8s.io_coredns_coredns_v1.9.3.tar", "state": "absent"}
2023-07-10 16:03:16,768 p=24624 u=kubernetmachine n=ansible | PLAY [etcd:kube_control_plane] ***************************************************************************************************************************************************************
2023-07-10 16:03:16,807 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.269)       0:04:25.202 ****** 
2023-07-10 16:03:16,845 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.037)       0:04:25.240 ****** 
2023-07-10 16:03:16,897 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.052)       0:04:25.292 ****** 
2023-07-10 16:03:16,931 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.034)       0:04:25.327 ****** 
2023-07-10 16:03:16,966 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.034)       0:04:25.361 ****** 
2023-07-10 16:03:16,999 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:16 +0300 (0:00:00.033)       0:04:25.394 ****** 
2023-07-10 16:03:17,035 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:17 +0300 (0:00:00.035)       0:04:25.430 ****** 
2023-07-10 16:03:17,073 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:17 +0300 (0:00:00.037)       0:04:25.468 ****** 
2023-07-10 16:03:17,109 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:17 +0300 (0:00:00.035)       0:04:25.504 ****** 
2023-07-10 16:03:17,145 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:17 +0300 (0:00:00.035)       0:04:25.540 ****** 
2023-07-10 16:03:19,138 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:01.993)       0:04:27.533 ****** 
2023-07-10 16:03:19,175 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:03:19,176 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:03:19,215 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.076)       0:04:27.610 ****** 
2023-07-10 16:03:19,257 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.041)       0:04:27.652 ****** 
2023-07-10 16:03:19,290 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.032)       0:04:27.685 ****** 
2023-07-10 16:03:19,326 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.035)       0:04:27.721 ****** 
2023-07-10 16:03:19,362 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.035)       0:04:27.757 ****** 
2023-07-10 16:03:19,396 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.034)       0:04:27.791 ****** 
2023-07-10 16:03:19,439 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.042)       0:04:27.834 ****** 
2023-07-10 16:03:19,671 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 16:03:19,671 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 998, "name": "etcd", "state": "present", "system": true}
2023-07-10 16:03:19,681 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:19 +0300 (0:00:00.241)       0:04:28.076 ****** 
2023-07-10 16:03:20,079 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 16:03:20,080 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Etcd user", "group": 998, "home": "/home/etcd", "move_home": false, "name": "etcd", "shell": "/sbin/nologin", "state": "present", "uid": 997}
2023-07-10 16:03:20,102 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:20 +0300 (0:00:00.421)       0:04:28.497 ****** 
2023-07-10 16:03:20,332 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 16:03:20,332 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 16:03:20,345 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:20 +0300 (0:00:00.243)       0:04:28.740 ****** 
2023-07-10 16:03:20,649 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 16:03:20,650 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 16:03:20,669 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:20 +0300 (0:00:00.323)       0:04:29.064 ****** 
2023-07-10 16:03:20,690 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:20,711 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/check_certs.yml for node1
2023-07-10 16:03:20,739 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:20 +0300 (0:00:00.069)       0:04:29.134 ****** 
2023-07-10 16:03:20,956 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***********************************************************************************************
2023-07-10 16:03:20,957 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "examined": 8, "files": [{"atime": 1688991172.7442899, "checksum": "888ce867c2e191e3559d2a6286621320edfc2809", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393310, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991170.7802885, "nlink": 1, "path": "/etc/ssl/etcd/ssl/ca.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1111, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}, {"atime": 1688991183.2322967, "checksum": "bd23d664c6e9bf8bcc3709e7669858f0d5312c82", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393313, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991170.8802886, "nlink": 1, "path": "/etc/ssl/etcd/ssl/member-node1.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1387, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}, {"atime": 1688991228.1123247, "checksum": "fd5b27b23e7a987419cd18f28cd2aa652789914f", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393317, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991171.2882888, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-node1-key.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1704, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}, {"atime": 1688991183.2322967, "checksum": "6009e125aacb31a44d215ea4c62328b1a048f604", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393311, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991170.8682885, "nlink": 1, "path": "/etc/ssl/etcd/ssl/member-node1-key.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1704, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}, {"atime": 1688991176.140292, "checksum": "1a341abf0c8e29997761fc455f5a929a83e6e3f4", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393316, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991171.1162887, "nlink": 1, "path": "/etc/ssl/etcd/ssl/admin-node1.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1387, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}, {"atime": 1688991228.1123247, "checksum": "f1418e84787cc00d9e32d530c8569d798a82bc78", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393319, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991171.300289, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-node1.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1387, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}, {"atime": 1688991176.140292, "checksum": "68d38f55627f3aa79fe92e5eb6a51373c62bf108", "ctime": 1688991172.2442894, "dev": 64768, "gid": 0, "gr_name": "root", "inode": 393314, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991171.1042886, "nlink": 1, "path": "/etc/ssl/etcd/ssl/admin-node1-key.pem", "pw_name": "etcd", "rgrp": false, "roth": false, "rusr": true, "size": 1704, "uid": 997, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}], "matched": 7, "msg": "All paths examined", "skipped_paths": {}}
2023-07-10 16:03:21,072 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:21 +0300 (0:00:00.333)       0:04:29.467 ****** 
2023-07-10 16:03:21,118 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] *******************************************************************************
2023-07-10 16:03:21,119 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"etcd_secret_changed": false, "gen_certs": false, "sync_certs": false}, "changed": false}
2023-07-10 16:03:21,128 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:21 +0300 (0:00:00.056)       0:04:29.523 ****** 
2023-07-10 16:03:21,356 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ************************************************************************************************************
2023-07-10 16:03:21,356 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ca.pem) => {"ansible_loop_var": "item", "changed": false, "item": "ca.pem", "stat": {"atime": 1688991172.7442899, "block_size": 4096, "blocks": 8, "checksum": "888ce867c2e191e3559d2a6286621320edfc2809", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393310, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991170.7802885, "nlink": 1, "path": "/etc/ssl/etcd/ssl/ca.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1111, "uid": 997, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:21,547 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=member-node1.pem) => {"ansible_loop_var": "item", "changed": false, "item": "member-node1.pem", "stat": {"atime": 1688991183.2322967, "block_size": 4096, "blocks": 8, "checksum": "bd23d664c6e9bf8bcc3709e7669858f0d5312c82", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393313, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991170.8802886, "nlink": 1, "path": "/etc/ssl/etcd/ssl/member-node1.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1387, "uid": 997, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:21,738 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=member-node1-key.pem) => {"ansible_loop_var": "item", "changed": false, "item": "member-node1-key.pem", "stat": {"atime": 1688991183.2322967, "block_size": 4096, "blocks": 8, "checksum": "6009e125aacb31a44d215ea4c62328b1a048f604", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393311, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991170.8682885, "nlink": 1, "path": "/etc/ssl/etcd/ssl/member-node1-key.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1704, "uid": 997, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:21,942 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=admin-node1.pem) => {"ansible_loop_var": "item", "changed": false, "item": "admin-node1.pem", "stat": {"atime": 1688991176.140292, "block_size": 4096, "blocks": 8, "checksum": "1a341abf0c8e29997761fc455f5a929a83e6e3f4", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393316, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991171.1162887, "nlink": 1, "path": "/etc/ssl/etcd/ssl/admin-node1.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1387, "uid": 997, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:22,142 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=admin-node1-key.pem) => {"ansible_loop_var": "item", "changed": false, "item": "admin-node1-key.pem", "stat": {"atime": 1688991176.140292, "block_size": 4096, "blocks": 8, "checksum": "68d38f55627f3aa79fe92e5eb6a51373c62bf108", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393314, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0700", "mtime": 1688991171.1042886, "nlink": 1, "path": "/etc/ssl/etcd/ssl/admin-node1-key.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1704, "uid": 997, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:22,156 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:22 +0300 (0:00:01.027)       0:04:30.551 ****** 
2023-07-10 16:03:22,394 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] **************************************************************************************************************
2023-07-10 16:03:22,395 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ca.pem) => {"ansible_loop_var": "item", "changed": false, "item": "ca.pem", "stat": {"atime": 1688991172.7442899, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "888ce867c2e191e3559d2a6286621320edfc2809", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393310, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0700", "mtime": 1688991170.7802885, "nlink": 1, "path": "/etc/ssl/etcd/ssl/ca.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1111, "uid": 997, "version": "56593639", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:22,576 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=node-node1.pem) => {"ansible_loop_var": "item", "changed": false, "item": "node-node1.pem", "stat": {"atime": 1688991228.1123247, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "f1418e84787cc00d9e32d530c8569d798a82bc78", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393319, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0700", "mtime": 1688991171.300289, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-node1.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1387, "uid": 997, "version": "48717819", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:22,731 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=node-node1-key.pem) => {"ansible_loop_var": "item", "changed": false, "item": "node-node1-key.pem", "stat": {"atime": 1688991228.1123247, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "fd5b27b23e7a987419cd18f28cd2aa652789914f", "ctime": 1688991172.2442894, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393317, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0700", "mtime": 1688991171.2882888, "nlink": 1, "path": "/etc/ssl/etcd/ssl/node-node1-key.pem", "pw_name": "etcd", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1704, "uid": 997, "version": "2031622773", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": true}}
2023-07-10 16:03:22,741 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:22 +0300 (0:00:00.585)       0:04:31.136 ****** 
2023-07-10 16:03:22,811 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node(1/2)] *****************************************************************************
2023-07-10 16:03:22,811 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/ca.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/ca.pem"}
2023-07-10 16:03:22,850 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/admin-node1.pem"}
2023-07-10 16:03:22,890 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/admin-node1-key.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/admin-node1-key.pem"}
2023-07-10 16:03:22,931 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/member-node1.pem"}
2023-07-10 16:03:22,970 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/member-node1-key.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/member-node1-key.pem"}
2023-07-10 16:03:23,010 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/node-node1.pem"}
2023-07-10 16:03:23,046 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/etc/ssl/etcd/ssl/node-node1-key.pem) => {"ansible_facts": {"gen_certs": true}, "ansible_loop_var": "item", "changed": false, "item": "/etc/ssl/etcd/ssl/node-node1-key.pem"}
2023-07-10 16:03:23,057 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.315)       0:04:31.452 ****** 
2023-07-10 16:03:23,204 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.146)       0:04:31.599 ****** 
2023-07-10 16:03:23,274 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'gen_master_certs' object to track whether member and admin certs exist on first etcd node] *******************************************************************
2023-07-10 16:03:23,275 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"gen_master_certs": {"node1": true}}, "changed": false}
2023-07-10 16:03:23,284 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.080)       0:04:31.679 ****** 
2023-07-10 16:03:23,350 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'gen_node_certs' object to track whether node certs exist on first etcd node] *********************************************************************************
2023-07-10 16:03:23,350 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"gen_node_certs": {"node1": true}}, "changed": false}
2023-07-10 16:03:23,360 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.075)       0:04:31.755 ****** 
2023-07-10 16:03:23,877 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.517)       0:04:32.272 ****** 
2023-07-10 16:03:23,904 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.026)       0:04:32.299 ****** 
2023-07-10 16:03:23,960 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Check_certs | Set 'sync_certs' to true] *****************************************************************************************************************************************
2023-07-10 16:03:23,961 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"sync_certs": true}, "changed": false}
2023-07-10 16:03:23,969 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:23 +0300 (0:00:00.065)       0:04:32.364 ****** 
2023-07-10 16:03:23,993 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:24,016 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/gen_certs_script.yml for node1
2023-07-10 16:03:24,031 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:24 +0300 (0:00:00.061)       0:04:32.426 ****** 
2023-07-10 16:03:24,207 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | create etcd cert dir] ***********************************************************************************************************************************************
2023-07-10 16:03:24,208 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "etcd", "path": "/etc/ssl/etcd/ssl", "size": 4096, "state": "directory", "uid": 997}
2023-07-10 16:03:24,217 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:24 +0300 (0:00:00.185)       0:04:32.612 ****** 
2023-07-10 16:03:24,388 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | create etcd script dir (on node1)] **********************************************************************************************************************************
2023-07-10 16:03:24,389 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/usr/local/bin/etcd-scripts", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:03:24,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:24 +0300 (0:00:00.186)       0:04:32.799 ****** 
2023-07-10 16:03:24,811 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | write openssl config] ***********************************************************************************************************************************************
2023-07-10 16:03:24,811 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "4381cb8c3e050271396f1f6e828a5e8c9a819c2a", "dest": "/etc/ssl/etcd/openssl.conf", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/ssl/etcd/openssl.conf", "size": 832, "state": "file", "uid": 0}
2023-07-10 16:03:24,820 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:24 +0300 (0:00:00.416)       0:04:33.215 ****** 
2023-07-10 16:03:25,261 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | copy certs generation script] ***************************************************************************************************************************************
2023-07-10 16:03:25,262 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "5cc9031b5c0e0c69783d3d5b93d5f5a36152936c", "dest": "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "size": 3451, "state": "file", "uid": 0}
2023-07-10 16:03:25,281 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:25 +0300 (0:00:00.461)       0:04:33.676 ****** 
2023-07-10 16:03:26,392 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | run cert generation script for etcd and kube control plane nodes] ***************************************************************************************************
2023-07-10 16:03:26,393 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["bash", "-x", "/usr/local/bin/etcd-scripts/make-ssl-etcd.sh", "-f", "/etc/ssl/etcd/openssl.conf", "-d", "/etc/ssl/etcd/ssl"], "delta": "0:00:00.893253", "end": "2023-07-10 13:03:26.383301", "msg": "", "rc": 0, "start": "2023-07-10 13:03:25.490048", "stderr": "+ set -o errexit\n+ set -o pipefail\n+ (( 4 ))\n+ case \"$1\" in\n+ CONFIG=/etc/ssl/etcd/openssl.conf\n+ shift 2\n+ (( 2 ))\n+ case \"$1\" in\n+ SSLDIR=/etc/ssl/etcd/ssl\n+ shift 2\n+ (( 0 ))\n+ '[' -z /etc/ssl/etcd/openssl.conf ']'\n+ '[' -z /etc/ssl/etcd/ssl ']'\n++ mktemp -d /tmp/etcd_cacert.XXXXXX\n+ tmpdir=/tmp/etcd_cacert.TeuHPr\n+ trap 'rm -rf \"${tmpdir}\"' EXIT\n+ cd /tmp/etcd_cacert.TeuHPr\n+ mkdir -p /etc/ssl/etcd/ssl\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ cp /etc/ssl/etcd/ssl/ca.pem /etc/ssl/etcd/ssl/ca-key.pem .\n+ '[' -n '      node1\n  ' ']'\n+ for host in $MASTERS\n+ cn=node1\n+ openssl genrsa -out member-node1-key.pem 2048\n+ openssl req -new -key member-node1-key.pem -out member-node1.csr -subj /CN=etcd-member-node1 -config /etc/ssl/etcd/openssl.conf\n+ openssl x509 -req -in member-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ openssl genrsa -out admin-node1-key.pem 2048\n+ openssl req -new -key admin-node1-key.pem -out admin-node1.csr -subj /CN=etcd-admin-node1\n+ openssl x509 -req -in admin-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -n '      node1\n  ' ']'\n+ for host in $HOSTS\n+ cn=node1\n+ openssl genrsa -out node-node1-key.pem 2048\n+ openssl req -new -key node-node1-key.pem -out node-node1.csr -subj /CN=etcd-node-node1\n+ openssl x509 -req -in node-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf\n+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'\n+ rm -f ca.pem ca-key.pem\n++ ls -A admin-node1-key.pem admin-node1.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem\n+ '[' -n 'admin-node1-key.pem\nadmin-node1.pem\nmember-node1-key.pem\nmember-node1.pem\nnode-node1-key.pem\nnode-node1.pem' ']'\n+ mv admin-node1-key.pem admin-node1.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem /etc/ssl/etcd/ssl/\n+ rm -rf /tmp/etcd_cacert.TeuHPr", "stderr_lines": ["+ set -o errexit", "+ set -o pipefail", "+ (( 4 ))", "+ case \"$1\" in", "+ CONFIG=/etc/ssl/etcd/openssl.conf", "+ shift 2", "+ (( 2 ))", "+ case \"$1\" in", "+ SSLDIR=/etc/ssl/etcd/ssl", "+ shift 2", "+ (( 0 ))", "+ '[' -z /etc/ssl/etcd/openssl.conf ']'", "+ '[' -z /etc/ssl/etcd/ssl ']'", "++ mktemp -d /tmp/etcd_cacert.XXXXXX", "+ tmpdir=/tmp/etcd_cacert.TeuHPr", "+ trap 'rm -rf \"${tmpdir}\"' EXIT", "+ cd /tmp/etcd_cacert.TeuHPr", "+ mkdir -p /etc/ssl/etcd/ssl", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ cp /etc/ssl/etcd/ssl/ca.pem /etc/ssl/etcd/ssl/ca-key.pem .", "+ '[' -n '      node1", "  ' ']'", "+ for host in $MASTERS", "+ cn=node1", "+ openssl genrsa -out member-node1-key.pem 2048", "+ openssl req -new -key member-node1-key.pem -out member-node1.csr -subj /CN=etcd-member-node1 -config /etc/ssl/etcd/openssl.conf", "+ openssl x509 -req -in member-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out member-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ openssl genrsa -out admin-node1-key.pem 2048", "+ openssl req -new -key admin-node1-key.pem -out admin-node1.csr -subj /CN=etcd-admin-node1", "+ openssl x509 -req -in admin-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -n '      node1", "  ' ']'", "+ for host in $HOSTS", "+ cn=node1", "+ openssl genrsa -out node-node1-key.pem 2048", "+ openssl req -new -key node-node1-key.pem -out node-node1.csr -subj /CN=etcd-node-node1", "+ openssl x509 -req -in node-node1.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out node-node1.pem -days 36500 -extensions ssl_client -extfile /etc/ssl/etcd/openssl.conf", "+ '[' -e /etc/ssl/etcd/ssl/ca-key.pem ']'", "+ rm -f ca.pem ca-key.pem", "++ ls -A admin-node1-key.pem admin-node1.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem", "+ '[' -n 'admin-node1-key.pem", "admin-node1.pem", "member-node1-key.pem", "member-node1.pem", "node-node1-key.pem", "node-node1.pem' ']'", "+ mv admin-node1-key.pem admin-node1.pem member-node1-key.pem member-node1.pem node-node1-key.pem node-node1.pem /etc/ssl/etcd/ssl/", "+ rm -rf /tmp/etcd_cacert.TeuHPr"], "stdout": "", "stdout_lines": []}
2023-07-10 16:03:26,408 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:01.126)       0:04:34.803 ****** 
2023-07-10 16:03:26,465 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.056)       0:04:34.860 ****** 
2023-07-10 16:03:26,586 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.121)       0:04:34.981 ****** 
2023-07-10 16:03:26,734 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.148)       0:04:35.130 ****** 
2023-07-10 16:03:26,773 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.038)       0:04:35.168 ****** 
2023-07-10 16:03:26,812 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.039)       0:04:35.207 ****** 
2023-07-10 16:03:26,847 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.034)       0:04:35.242 ****** 
2023-07-10 16:03:26,884 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:26 +0300 (0:00:00.037)       0:04:35.280 ****** 
2023-07-10 16:03:27,060 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | check certificate permissions] **************************************************************************************************************************************
2023-07-10 16:03:27,060 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "etcd", "path": "/etc/ssl/etcd/ssl", "size": 4096, "state": "directory", "uid": 997}
2023-07-10 16:03:27,068 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.183)       0:04:35.463 ****** 
2023-07-10 16:03:27,095 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:27,109 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/upd_ca_trust.yml for node1
2023-07-10 16:03:27,126 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.058)       0:04:35.521 ****** 
2023-07-10 16:03:27,164 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | target ca-certificate store file] ***********************************************************************************************************************************
2023-07-10 16:03:27,165 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ca_cert_path": "/usr/local/share/ca-certificates/etcd-ca.crt"}, "changed": false}
2023-07-10 16:03:27,173 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.047)       0:04:35.568 ****** 
2023-07-10 16:03:27,458 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Gen_certs | add CA to trusted CA dir] *******************************************************************************************************************************************
2023-07-10 16:03:27,459 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "888ce867c2e191e3559d2a6286621320edfc2809", "dest": "/usr/local/share/ca-certificates/etcd-ca.crt", "gid": 0, "group": "root", "md5sum": "ad13c0d6cecb0101de7b023b4738e988", "mode": "0640", "owner": "root", "size": 1111, "src": "/etc/ssl/etcd/ssl/ca.pem", "state": "file", "uid": 0}
2023-07-10 16:03:27,473 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.299)       0:04:35.868 ****** 
2023-07-10 16:03:27,523 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.049)       0:04:35.918 ****** 
2023-07-10 16:03:27,567 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.044)       0:04:35.962 ****** 
2023-07-10 16:03:27,610 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.042)       0:04:36.005 ****** 
2023-07-10 16:03:27,669 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.059)       0:04:36.064 ****** 
2023-07-10 16:03:27,732 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.063)       0:04:36.127 ****** 
2023-07-10 16:03:27,792 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.059)       0:04:36.187 ****** 
2023-07-10 16:03:27,822 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:27,845 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/install_host.yml for node1
2023-07-10 16:03:27,876 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:27 +0300 (0:00:00.084)       0:04:36.271 ****** 
2023-07-10 16:03:28,171 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Get currently-deployed etcd version] ********************************************************************************************************************************************
2023-07-10 16:03:28,172 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/etcd", "--version"], "delta": "0:00:00.026639", "end": "2023-07-10 13:03:28.153266", "msg": "", "rc": 0, "start": "2023-07-10 13:03:28.126627", "stderr": "", "stderr_lines": [], "stdout": "etcd Version: 3.5.6\nGit SHA: cecbe35ce\nGo Version: go1.16.15\nGo OS/Arch: linux/amd64", "stdout_lines": ["etcd Version: 3.5.6", "Git SHA: cecbe35ce", "Go Version: go1.16.15", "Go OS/Arch: linux/amd64"]}
2023-07-10 16:03:28,184 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:28 +0300 (0:00:00.308)       0:04:36.579 ****** 
2023-07-10 16:03:28,244 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:28 +0300 (0:00:00.059)       0:04:36.639 ****** 
2023-07-10 16:03:28,286 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:28 +0300 (0:00:00.041)       0:04:36.681 ****** 
2023-07-10 16:03:28,780 p=24624 u=kubernetmachine n=ansible | TASK [etcd : install | Copy etcd and etcdctl binary from download dir] ***********************************************************************************************************************
2023-07-10 16:03:28,781 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=etcd) => {"ansible_loop_var": "item", "changed": false, "checksum": "e45541850ab48d1a671ed0777069192363200848", "dest": "/usr/local/bin/etcd", "gid": 0, "group": "root", "item": "etcd", "md5sum": "3c560415fad20c544e0c7a582f2ed803", "mode": "0755", "owner": "root", "size": 23691264, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64/etcd", "state": "file", "uid": 0}
2023-07-10 16:03:29,241 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=etcdctl) => {"ansible_loop_var": "item", "changed": false, "checksum": "7567314d685f42882defece640d19b4ebf537723", "dest": "/usr/local/bin/etcdctl", "gid": 0, "group": "root", "item": "etcdctl", "md5sum": "f8005b54ef9149377112661d00cba672", "mode": "0755", "owner": "root", "size": 17891328, "src": "/tmp/releases/etcd-v3.5.6-linux-amd64/etcdctl", "state": "file", "uid": 0}
2023-07-10 16:03:29,257 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:29 +0300 (0:00:00.970)       0:04:37.652 ****** 
2023-07-10 16:03:29,286 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:29,319 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/configure.yml for node1
2023-07-10 16:03:29,353 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:29 +0300 (0:00:00.096)       0:04:37.748 ****** 
2023-07-10 16:03:29,803 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Configure | Check if etcd cluster is healthy] ***********************************************************************************************************************************
2023-07-10 16:03:29,804 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/etcdctl endpoint --cluster status && /usr/local/bin/etcdctl endpoint --cluster health  2>&1 | grep -v 'Error: unhealthy cluster' >/dev/null", "delta": "0:00:00.097070", "end": "2023-07-10 13:03:29.784182", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 13:03:29.687112", "stderr": "", "stderr_lines": [], "stdout": "https://192.168.122.29:2379, e2e351e0d54a79ed, 3.5.6, 5.4 MB, true, false, 3, 5544, 5544, ", "stdout_lines": ["https://192.168.122.29:2379, e2e351e0d54a79ed, 3.5.6, 5.4 MB, true, false, 3, 5544, 5544, "]}
2023-07-10 16:03:29,818 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:29 +0300 (0:00:00.464)       0:04:38.213 ****** 
2023-07-10 16:03:29,865 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:29 +0300 (0:00:00.047)       0:04:38.260 ****** 
2023-07-10 16:03:29,895 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:29,913 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/refresh_config.yml for node1
2023-07-10 16:03:29,934 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:29 +0300 (0:00:00.069)       0:04:38.329 ****** 
2023-07-10 16:03:30,708 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Refresh config | Create etcd config file] ***************************************************************************************************************************************
2023-07-10 16:03:30,709 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c0025bf4c668eefe9d090a7923de766e11bda06a", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/etcd.env", "size": 1406, "state": "file", "uid": 0}
2023-07-10 16:03:30,722 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:30 +0300 (0:00:00.787)       0:04:39.117 ****** 
2023-07-10 16:03:30,768 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:30 +0300 (0:00:00.046)       0:04:39.163 ****** 
2023-07-10 16:03:31,358 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Configure | Copy etcd.service systemd file] *************************************************************************************************************************************
2023-07-10 16:03:31,359 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "78add367e36c0813fb5975903c6cd7e211e369cc", "dest": "/etc/systemd/system/etcd.service", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/system/etcd.service", "size": 241, "state": "file", "uid": 0}
2023-07-10 16:03:31,372 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:31 +0300 (0:00:00.603)       0:04:39.767 ****** 
2023-07-10 16:03:31,418 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:31 +0300 (0:00:00.046)       0:04:39.813 ****** 
2023-07-10 16:03:32,081 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Configure | reload systemd] *****************************************************************************************************************************************************
2023-07-10 16:03:32,081 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": null, "status": {}}
2023-07-10 16:03:32,089 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:32 +0300 (0:00:00.671)       0:04:40.484 ****** 
2023-07-10 16:03:32,364 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Configure | Ensure etcd is running] *********************************************************************************************************************************************
2023-07-10 16:03:32,365 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "enabled": true, "name": "etcd", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:13:20 UTC", "ActiveEnterTimestampMonotonic": "15751650153", "ActiveExitTimestamp": "Mon 2023-07-10 12:13:12 UTC", "ActiveExitTimestampMonotonic": "15742832911", "ActiveState": "active", "After": "sysinit.target basic.target systemd-journald.socket system.slice network.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:13:12 UTC", "AssertTimestampMonotonic": "15742848053", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "34648845000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:13:12 UTC", "ConditionTimestampMonotonic": "15742848051", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/etcd.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "etcd", "DevicePolicy": "auto", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "EnvironmentFiles": "/etc/etcd.env (ignore_errors=no)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "13055", "ExecMainStartTimestamp": "Mon 2023-07-10 12:13:12 UTC", "ExecMainStartTimestampMonotonic": "15742866684", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/etcd ; argv[]=/usr/local/bin/etcd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/etcd.service", "FreezerState": "running", "GID": "0", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "etcd.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Mon 2023-07-10 12:13:12 UTC", "InactiveEnterTimestampMonotonic": "15742847543", "InactiveExitTimestamp": "Mon 2023-07-10 12:13:12 UTC", "InactiveExitTimestampMonotonic": "15742867094", "InvocationID": "a4e42fe9ce6b451ca9d515ec87a03661", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "40000", "LimitNOFILESoft": "40000", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "13055", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "55390208", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "etcd.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "all", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:13:20 UTC", "StateChangeTimestampMonotonic": "15751650153", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "10", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "0", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "User": "root", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 16:03:32,374 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:32 +0300 (0:00:00.284)       0:04:40.769 ****** 
2023-07-10 16:03:32,400 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:32 +0300 (0:00:00.026)       0:04:40.795 ****** 
2023-07-10 16:03:32,660 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Configure | Wait for etcd cluster to be healthy] ********************************************************************************************************************************
2023-07-10 16:03:32,660 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": "set -o pipefail && /usr/local/bin/etcdctl endpoint --cluster status && /usr/local/bin/etcdctl endpoint --cluster health 2>&1 | grep -v 'Error: unhealthy cluster' >/dev/null", "delta": "0:00:00.057053", "end": "2023-07-10 13:03:32.651022", "msg": "", "rc": 0, "start": "2023-07-10 13:03:32.593969", "stderr": "", "stderr_lines": [], "stdout": "https://192.168.122.29:2379, e2e351e0d54a79ed, 3.5.6, 5.4 MB, true, false, 3, 5548, 5548, ", "stdout_lines": ["https://192.168.122.29:2379, e2e351e0d54a79ed, 3.5.6, 5.4 MB, true, false, 3, 5548, 5548, "]}
2023-07-10 16:03:32,668 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:32 +0300 (0:00:00.267)       0:04:41.063 ****** 
2023-07-10 16:03:32,696 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:32 +0300 (0:00:00.028)       0:04:41.091 ****** 
2023-07-10 16:03:32,958 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Configure | Check if member is in etcd cluster] *********************************************************************************************************************************
2023-07-10 16:03:32,959 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "/usr/local/bin/etcdctl member list | grep -q 192.168.122.29", "delta": "0:00:00.022647", "end": "2023-07-10 13:03:32.942553", "msg": "", "rc": 0, "start": "2023-07-10 13:03:32.919906", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:03:32,970 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:32 +0300 (0:00:00.273)       0:04:41.365 ****** 
2023-07-10 16:03:33,006 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.036)       0:04:41.401 ****** 
2023-07-10 16:03:33,060 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.054)       0:04:41.456 ****** 
2023-07-10 16:03:33,113 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.052)       0:04:41.508 ****** 
2023-07-10 16:03:33,136 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:33,150 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/refresh_config.yml for node1
2023-07-10 16:03:33,187 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.074)       0:04:41.582 ****** 
2023-07-10 16:03:33,693 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Refresh config | Create etcd config file] ***************************************************************************************************************************************
2023-07-10 16:03:33,694 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c0025bf4c668eefe9d090a7923de766e11bda06a", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/etcd.env", "size": 1406, "state": "file", "uid": 0}
2023-07-10 16:03:33,702 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.515)       0:04:42.097 ****** 
2023-07-10 16:03:33,731 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.029)       0:04:42.126 ****** 
2023-07-10 16:03:33,766 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.034)       0:04:42.161 ****** 
2023-07-10 16:03:33,802 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.036)       0:04:42.197 ****** 
2023-07-10 16:03:33,821 p=24624 u=kubernetmachine n=ansible | TASK [etcd : include_tasks] ******************************************************************************************************************************************************************
2023-07-10 16:03:33,832 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/etcd/tasks/refresh_config.yml for node1
2023-07-10 16:03:33,858 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:33 +0300 (0:00:00.056)       0:04:42.253 ****** 
2023-07-10 16:03:34,336 p=24624 u=kubernetmachine n=ansible | TASK [etcd : Refresh config | Create etcd config file] ***************************************************************************************************************************************
2023-07-10 16:03:34,337 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c0025bf4c668eefe9d090a7923de766e11bda06a", "dest": "/etc/etcd.env", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/etcd.env", "size": 1406, "state": "file", "uid": 0}
2023-07-10 16:03:34,346 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.488)       0:04:42.741 ****** 
2023-07-10 16:03:34,403 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.056)       0:04:42.798 ****** 
2023-07-10 16:03:34,448 p=24624 u=kubernetmachine n=ansible | RUNNING HANDLER [etcd : set etcd_secret_changed] *********************************************************************************************************************************************
2023-07-10 16:03:34,449 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"etcd_secret_changed": true}, "changed": false}
2023-07-10 16:03:34,474 p=24624 u=kubernetmachine n=ansible | PLAY [k8s_cluster] ***************************************************************************************************************************************************************************
2023-07-10 16:03:34,514 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.110)       0:04:42.909 ****** 
2023-07-10 16:03:34,559 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.044)       0:04:42.954 ****** 
2023-07-10 16:03:34,597 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.038)       0:04:42.992 ****** 
2023-07-10 16:03:34,633 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.036)       0:04:43.028 ****** 
2023-07-10 16:03:34,670 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.036)       0:04:43.065 ****** 
2023-07-10 16:03:34,706 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.035)       0:04:43.101 ****** 
2023-07-10 16:03:34,742 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.036)       0:04:43.137 ****** 
2023-07-10 16:03:34,782 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.039)       0:04:43.177 ****** 
2023-07-10 16:03:34,816 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.034)       0:04:43.211 ****** 
2023-07-10 16:03:34,852 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:34 +0300 (0:00:00.036)       0:04:43.247 ****** 
2023-07-10 16:03:37,481 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:37 +0300 (0:00:02.628)       0:04:45.876 ****** 
2023-07-10 16:03:37,558 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:03:37,560 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:03:37,793 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:37 +0300 (0:00:00.312)       0:04:46.188 ****** 
2023-07-10 16:03:37,871 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:37 +0300 (0:00:00.077)       0:04:46.266 ****** 
2023-07-10 16:03:37,946 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:37 +0300 (0:00:00.074)       0:04:46.341 ****** 
2023-07-10 16:03:38,019 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.072)       0:04:46.414 ****** 
2023-07-10 16:03:38,084 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.064)       0:04:46.479 ****** 
2023-07-10 16:03:38,146 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.062)       0:04:46.541 ****** 
2023-07-10 16:03:38,206 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.060)       0:04:46.601 ****** 
2023-07-10 16:03:38,268 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.062)       0:04:46.663 ****** 
2023-07-10 16:03:38,343 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.074)       0:04:46.738 ****** 
2023-07-10 16:03:38,406 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.062)       0:04:46.801 ****** 
2023-07-10 16:03:38,477 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.070)       0:04:46.872 ****** 
2023-07-10 16:03:38,538 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.061)       0:04:46.934 ****** 
2023-07-10 16:03:38,600 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.061)       0:04:46.995 ****** 
2023-07-10 16:03:38,662 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.061)       0:04:47.057 ****** 
2023-07-10 16:03:38,721 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.059)       0:04:47.116 ****** 
2023-07-10 16:03:38,781 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.059)       0:04:47.176 ****** 
2023-07-10 16:03:38,842 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.060)       0:04:47.237 ****** 
2023-07-10 16:03:38,905 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.063)       0:04:47.300 ****** 
2023-07-10 16:03:38,978 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:38 +0300 (0:00:00.072)       0:04:47.373 ****** 
2023-07-10 16:03:39,045 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.066)       0:04:47.440 ****** 
2023-07-10 16:03:39,106 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.061)       0:04:47.501 ****** 
2023-07-10 16:03:39,168 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.061)       0:04:47.562 ****** 
2023-07-10 16:03:39,276 p=24624 u=kubernetmachine n=ansible | PLAY [k8s_cluster] ***************************************************************************************************************************************************************************
2023-07-10 16:03:39,365 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.197)       0:04:47.760 ****** 
2023-07-10 16:03:39,424 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.059)       0:04:47.819 ****** 
2023-07-10 16:03:39,480 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.056)       0:04:47.875 ****** 
2023-07-10 16:03:39,534 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.053)       0:04:47.929 ****** 
2023-07-10 16:03:39,592 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.057)       0:04:47.987 ****** 
2023-07-10 16:03:39,646 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.054)       0:04:48.041 ****** 
2023-07-10 16:03:39,701 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.055)       0:04:48.096 ****** 
2023-07-10 16:03:39,759 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.057)       0:04:48.153 ****** 
2023-07-10 16:03:39,814 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.054)       0:04:48.208 ****** 
2023-07-10 16:03:39,865 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:39 +0300 (0:00:00.051)       0:04:48.260 ****** 
2023-07-10 16:03:41,915 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:41 +0300 (0:00:02.050)       0:04:50.310 ****** 
2023-07-10 16:03:41,952 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:03:41,953 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:03:41,994 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:41 +0300 (0:00:00.079)       0:04:50.390 ****** 
2023-07-10 16:03:42,034 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.039)       0:04:50.429 ****** 
2023-07-10 16:03:42,066 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.032)       0:04:50.461 ****** 
2023-07-10 16:03:42,102 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.036)       0:04:50.497 ****** 
2023-07-10 16:03:42,144 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.042)       0:04:50.540 ****** 
2023-07-10 16:03:42,178 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.033)       0:04:50.573 ****** 
2023-07-10 16:03:42,215 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.037)       0:04:50.610 ****** 
2023-07-10 16:03:42,242 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.026)       0:04:50.637 ****** 
2023-07-10 16:03:42,284 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.041)       0:04:50.679 ****** 
2023-07-10 16:03:42,321 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.037)       0:04:50.716 ****** 
2023-07-10 16:03:42,349 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.027)       0:04:50.744 ****** 
2023-07-10 16:03:42,388 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : set kubelet_cgroup_driver_detected fact for containerd] **************************************************************************************************************
2023-07-10 16:03:42,389 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubelet_cgroup_driver_detected": "systemd"}, "changed": false}
2023-07-10 16:03:42,399 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.050)       0:04:50.794 ****** 
2023-07-10 16:03:42,441 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : set kubelet_cgroup_driver] *******************************************************************************************************************************************
2023-07-10 16:03:42,442 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubelet_cgroup_driver": "systemd"}, "changed": false}
2023-07-10 16:03:42,452 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.053)       0:04:50.847 ****** 
2023-07-10 16:03:42,495 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.042)       0:04:50.890 ****** 
2023-07-10 16:03:42,534 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.039)       0:04:50.929 ****** 
2023-07-10 16:03:42,625 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : os specific vars] ****************************************************************************************************************************************************
2023-07-10 16:03:42,625 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml) => {"ansible_facts": {"kube_resolv_conf": "/run/systemd/resolve/resolv.conf"}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml"}
2023-07-10 16:03:42,636 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.101)       0:04:51.031 ****** 
2023-07-10 16:03:42,843 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Pre-upgrade | check if kubelet container exists] *********************************************************************************************************************
2023-07-10 16:03:42,843 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail &&  /usr/local/bin/crictl ps --all --name kubelet | grep kubelet ", "delta": "0:00:00.025683", "end": "2023-07-10 13:03:42.833344", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 13:03:42.807661", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:03:42,851 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.215)       0:04:51.246 ****** 
2023-07-10 16:03:42,878 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.026)       0:04:51.273 ****** 
2023-07-10 16:03:42,904 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.026)       0:04:51.300 ****** 
2023-07-10 16:03:42,931 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:42 +0300 (0:00:00.026)       0:04:51.326 ****** 
2023-07-10 16:03:43,099 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Ensure /var/lib/cni exists] ******************************************************************************************************************************************
2023-07-10 16:03:43,100 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/var/lib/cni", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:03:43,107 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:43 +0300 (0:00:00.176)       0:04:51.503 ****** 
2023-07-10 16:03:43,135 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:43 +0300 (0:00:00.027)       0:04:51.530 ****** 
2023-07-10 16:03:44,995 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : install | Copy kubelet binary from download dir] *********************************************************************************************************************
2023-07-10 16:03:44,996 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "8aaadf0a0539ab605dd9a4e7f32645c84e34c37e", "dest": "/usr/local/bin/kubelet", "gid": 0, "group": "root", "md5sum": "663d7a867d65816dce3edf08301338a5", "mode": "0755", "owner": "root", "size": 121268472, "src": "/tmp/releases/kubelet-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 16:03:45,006 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:01.870)       0:04:53.401 ****** 
2023-07-10 16:03:45,040 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.034)       0:04:53.435 ****** 
2023-07-10 16:03:45,074 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.033)       0:04:53.469 ****** 
2023-07-10 16:03:45,108 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.033)       0:04:53.503 ****** 
2023-07-10 16:03:45,139 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.031)       0:04:53.534 ****** 
2023-07-10 16:03:45,169 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.029)       0:04:53.564 ****** 
2023-07-10 16:03:45,198 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.029)       0:04:53.593 ****** 
2023-07-10 16:03:45,230 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.032)       0:04:53.625 ****** 
2023-07-10 16:03:45,259 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.028)       0:04:53.654 ****** 
2023-07-10 16:03:45,287 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.027)       0:04:53.682 ****** 
2023-07-10 16:03:45,316 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.029)       0:04:53.711 ****** 
2023-07-10 16:03:45,347 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.030)       0:04:53.742 ****** 
2023-07-10 16:03:45,374 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.027)       0:04:53.769 ****** 
2023-07-10 16:03:45,548 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Ensure nodePort range is reserved] ***********************************************************************************************************************************
2023-07-10 16:03:45,549 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false}
2023-07-10 16:03:45,558 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.183)       0:04:53.953 ****** 
2023-07-10 16:03:45,722 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Verify if br_netfilter module exists] ********************************************************************************************************************************
2023-07-10 16:03:45,723 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["modinfo", "br_netfilter"], "delta": "0:00:00.002846", "end": "2023-07-10 13:03:45.712909", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 13:03:45.710063", "stderr": "", "stderr_lines": [], "stdout": "filename:       /lib/modules/5.15.0-76-generic/kernel/net/bridge/br_netfilter.ko\ndescription:    Linux ethernet netfilter firewall bridge\nauthor:         Bart De Schuymer <bdschuym@pandora.be>\nauthor:         Lennert Buytenhek <buytenh@gnu.org>\nlicense:        GPL\nsrcversion:     2021116F1E4798AA9BB346F\ndepends:        bridge\nretpoline:      Y\nintree:         Y\nname:           br_netfilter\nvermagic:       5.15.0-76-generic SMP mod_unload modversions \nsig_id:         PKCS#7\nsigner:         Build time autogenerated kernel key\nsig_key:        34:18:5F:0B:C9:D8:70:BD:91:78:CF:85:0F:BC:DA:EF:0F:4E:60:FB\nsig_hashalgo:   sha512\nsignature:      67:07:D0:AF:69:6A:11:EA:70:42:D6:40:BB:FE:04:82:22:6B:79:B6:\n\t\tDE:7A:0A:01:B4:6B:2B:A4:D5:E2:14:BD:AE:DC:65:26:A2:A9:1B:DF:\n\t\t49:93:60:EF:62:F7:5F:20:27:2B:3E:55:9C:89:14:04:0A:31:22:45:\n\t\tA9:7D:0B:6B:BB:49:A5:60:17:EF:9F:8C:6F:EE:DF:5A:6C:B1:49:5B:\n\t\t4F:2E:43:12:54:D6:61:F4:E9:BA:AE:4E:E9:89:6F:9D:02:38:1F:00:\n\t\t37:2E:02:51:E1:8F:D0:6B:B7:0D:29:BF:A6:95:E7:59:1D:6E:C9:CE:\n\t\t8F:8F:CC:31:28:D4:D0:E5:68:FE:A1:11:2F:84:07:61:C3:5E:11:57:\n\t\tA9:20:42:1C:C6:11:0B:A1:03:9D:96:DE:16:37:4B:B5:38:02:3C:43:\n\t\t47:7D:C2:F4:F1:2F:95:B7:6B:F8:97:F0:72:78:5B:80:29:0E:6E:61:\n\t\tEE:25:E4:17:6A:E6:61:9C:99:34:EA:D1:EA:6E:FA:AB:20:E6:15:0B:\n\t\t72:E0:72:62:2F:75:64:F4:82:D5:BA:33:04:98:05:5A:E7:8B:1E:95:\n\t\t5B:A0:AC:CA:C5:FA:59:AF:6B:7E:EE:D5:9D:86:CE:CE:5D:50:0D:C4:\n\t\tF6:90:B7:D8:EB:53:26:12:6C:6E:C2:92:7C:A4:3E:CB:E4:8C:7D:1E:\n\t\t07:05:9C:BA:60:CD:43:0E:FB:BA:9D:EB:05:03:16:A3:39:E4:4F:83:\n\t\t1C:26:D1:5D:67:7D:44:47:11:3E:19:20:80:E2:E6:B7:C2:8C:65:0C:\n\t\t0A:11:28:84:48:14:6C:09:1B:EA:89:2E:F8:23:2F:91:66:7B:8A:BA:\n\t\tA3:CD:A0:8C:D8:50:B0:C4:86:14:4F:F4:92:01:C8:0E:E5:46:41:2A:\n\t\t71:25:5D:F4:4C:A2:8A:60:4E:5C:9C:76:F0:D1:AC:6D:BD:F9:17:F0:\n\t\tF1:41:A4:80:D3:75:1F:BA:55:B8:29:89:90:F8:D9:36:69:20:A4:87:\n\t\t6F:7A:0E:B4:19:09:61:B2:D9:A2:56:5B:93:E5:81:93:41:BA:8F:2B:\n\t\tBC:32:E6:A9:F2:BB:4B:09:45:8C:30:8D:A7:C9:02:2A:69:39:44:7F:\n\t\t9D:CC:A5:0C:BD:F7:25:C6:CA:F7:B7:3F:FC:98:32:4A:DF:D6:EF:A2:\n\t\t9F:80:F4:CC:D4:F8:1D:7E:D9:CF:2D:74:D2:DB:E2:66:11:43:C3:7B:\n\t\tB1:F4:A8:C3:DB:EF:3B:72:CD:4F:E6:27:53:FE:66:D5:D8:2A:97:8D:\n\t\tE3:CF:BD:86:3E:DD:FC:0C:03:00:68:06:A2:7F:99:F1:19:0F:45:5E:\n\t\tFA:48:2D:AC:F8:0F:21:BC:4D:AC:4C:D5", "stdout_lines": ["filename:       /lib/modules/5.15.0-76-generic/kernel/net/bridge/br_netfilter.ko", "description:    Linux ethernet netfilter firewall bridge", "author:         Bart De Schuymer <bdschuym@pandora.be>", "author:         Lennert Buytenhek <buytenh@gnu.org>", "license:        GPL", "srcversion:     2021116F1E4798AA9BB346F", "depends:        bridge", "retpoline:      Y", "intree:         Y", "name:           br_netfilter", "vermagic:       5.15.0-76-generic SMP mod_unload modversions ", "sig_id:         PKCS#7", "signer:         Build time autogenerated kernel key", "sig_key:        34:18:5F:0B:C9:D8:70:BD:91:78:CF:85:0F:BC:DA:EF:0F:4E:60:FB", "sig_hashalgo:   sha512", "signature:      67:07:D0:AF:69:6A:11:EA:70:42:D6:40:BB:FE:04:82:22:6B:79:B6:", "\t\tDE:7A:0A:01:B4:6B:2B:A4:D5:E2:14:BD:AE:DC:65:26:A2:A9:1B:DF:", "\t\t49:93:60:EF:62:F7:5F:20:27:2B:3E:55:9C:89:14:04:0A:31:22:45:", "\t\tA9:7D:0B:6B:BB:49:A5:60:17:EF:9F:8C:6F:EE:DF:5A:6C:B1:49:5B:", "\t\t4F:2E:43:12:54:D6:61:F4:E9:BA:AE:4E:E9:89:6F:9D:02:38:1F:00:", "\t\t37:2E:02:51:E1:8F:D0:6B:B7:0D:29:BF:A6:95:E7:59:1D:6E:C9:CE:", "\t\t8F:8F:CC:31:28:D4:D0:E5:68:FE:A1:11:2F:84:07:61:C3:5E:11:57:", "\t\tA9:20:42:1C:C6:11:0B:A1:03:9D:96:DE:16:37:4B:B5:38:02:3C:43:", "\t\t47:7D:C2:F4:F1:2F:95:B7:6B:F8:97:F0:72:78:5B:80:29:0E:6E:61:", "\t\tEE:25:E4:17:6A:E6:61:9C:99:34:EA:D1:EA:6E:FA:AB:20:E6:15:0B:", "\t\t72:E0:72:62:2F:75:64:F4:82:D5:BA:33:04:98:05:5A:E7:8B:1E:95:", "\t\t5B:A0:AC:CA:C5:FA:59:AF:6B:7E:EE:D5:9D:86:CE:CE:5D:50:0D:C4:", "\t\tF6:90:B7:D8:EB:53:26:12:6C:6E:C2:92:7C:A4:3E:CB:E4:8C:7D:1E:", "\t\t07:05:9C:BA:60:CD:43:0E:FB:BA:9D:EB:05:03:16:A3:39:E4:4F:83:", "\t\t1C:26:D1:5D:67:7D:44:47:11:3E:19:20:80:E2:E6:B7:C2:8C:65:0C:", "\t\t0A:11:28:84:48:14:6C:09:1B:EA:89:2E:F8:23:2F:91:66:7B:8A:BA:", "\t\tA3:CD:A0:8C:D8:50:B0:C4:86:14:4F:F4:92:01:C8:0E:E5:46:41:2A:", "\t\t71:25:5D:F4:4C:A2:8A:60:4E:5C:9C:76:F0:D1:AC:6D:BD:F9:17:F0:", "\t\tF1:41:A4:80:D3:75:1F:BA:55:B8:29:89:90:F8:D9:36:69:20:A4:87:", "\t\t6F:7A:0E:B4:19:09:61:B2:D9:A2:56:5B:93:E5:81:93:41:BA:8F:2B:", "\t\tBC:32:E6:A9:F2:BB:4B:09:45:8C:30:8D:A7:C9:02:2A:69:39:44:7F:", "\t\t9D:CC:A5:0C:BD:F7:25:C6:CA:F7:B7:3F:FC:98:32:4A:DF:D6:EF:A2:", "\t\t9F:80:F4:CC:D4:F8:1D:7E:D9:CF:2D:74:D2:DB:E2:66:11:43:C3:7B:", "\t\tB1:F4:A8:C3:DB:EF:3B:72:CD:4F:E6:27:53:FE:66:D5:D8:2A:97:8D:", "\t\tE3:CF:BD:86:3E:DD:FC:0C:03:00:68:06:A2:7F:99:F1:19:0F:45:5E:", "\t\tFA:48:2D:AC:F8:0F:21:BC:4D:AC:4C:D5"]}
2023-07-10 16:03:45,733 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.175)       0:04:54.128 ****** 
2023-07-10 16:03:45,894 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Verify br_netfilter module path exists] ******************************************************************************************************************************
2023-07-10 16:03:45,895 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/modules-load.d", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:03:45,904 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:45 +0300 (0:00:00.170)       0:04:54.299 ****** 
2023-07-10 16:03:46,080 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Enable br_netfilter module] ******************************************************************************************************************************************
2023-07-10 16:03:46,081 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "name": "br_netfilter", "params": "", "state": "present"}
2023-07-10 16:03:46,091 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:46 +0300 (0:00:00.186)       0:04:54.486 ****** 
2023-07-10 16:03:46,512 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Persist br_netfilter module] *****************************************************************************************************************************************
2023-07-10 16:03:46,513 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "c3394aff3e3a3e3920e68205b8e839b3d725648e", "dest": "/etc/modules-load.d/kubespray-br_netfilter.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/modules-load.d/kubespray-br_netfilter.conf", "size": 12, "state": "file", "uid": 0}
2023-07-10 16:03:46,523 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:46 +0300 (0:00:00.431)       0:04:54.918 ****** 
2023-07-10 16:03:46,718 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] *************************************************************************************************************************
2023-07-10 16:03:46,719 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["sysctl", "net.bridge.bridge-nf-call-iptables"], "delta": "0:00:00.003594", "end": "2023-07-10 13:03:46.703747", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 13:03:46.700153", "stderr": "", "stderr_lines": [], "stdout": "net.bridge.bridge-nf-call-iptables = 1", "stdout_lines": ["net.bridge.bridge-nf-call-iptables = 1"]}
2023-07-10 16:03:46,730 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:46 +0300 (0:00:00.207)       0:04:55.125 ****** 
2023-07-10 16:03:46,971 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Enable bridge-nf-call tables] ****************************************************************************************************************************************
2023-07-10 16:03:46,972 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=net.bridge.bridge-nf-call-iptables) => {"ansible_loop_var": "item", "changed": false, "item": "net.bridge.bridge-nf-call-iptables"}
2023-07-10 16:03:47,180 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=net.bridge.bridge-nf-call-arptables) => {"ansible_loop_var": "item", "changed": false, "item": "net.bridge.bridge-nf-call-arptables"}
2023-07-10 16:03:47,386 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=net.bridge.bridge-nf-call-ip6tables) => {"ansible_loop_var": "item", "changed": false, "item": "net.bridge.bridge-nf-call-ip6tables"}
2023-07-10 16:03:47,398 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:47 +0300 (0:00:00.667)       0:04:55.793 ****** 
2023-07-10 16:03:47,620 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Modprobe Kernel Module for IPVS] *************************************************************************************************************************************
2023-07-10 16:03:47,620 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ip_vs) => {"ansible_loop_var": "item", "changed": false, "item": "ip_vs", "name": "ip_vs", "params": "", "state": "present"}
2023-07-10 16:03:47,775 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ip_vs_rr) => {"ansible_loop_var": "item", "changed": false, "item": "ip_vs_rr", "name": "ip_vs_rr", "params": "", "state": "present"}
2023-07-10 16:03:47,923 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ip_vs_wrr) => {"ansible_loop_var": "item", "changed": false, "item": "ip_vs_wrr", "name": "ip_vs_wrr", "params": "", "state": "present"}
2023-07-10 16:03:48,096 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=ip_vs_sh) => {"ansible_loop_var": "item", "changed": false, "item": "ip_vs_sh", "name": "ip_vs_sh", "params": "", "state": "present"}
2023-07-10 16:03:48,108 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.710)       0:04:56.503 ****** 
2023-07-10 16:03:48,321 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Modprobe nf_conntrack_ipv4] ******************************************************************************************************************************************
2023-07-10 16:03:48,322 p=24624 u=kubernetmachine n=ansible | fatal: [node1]: FAILED! => {"changed": false, "msg": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-76-generic\n", "name": "nf_conntrack_ipv4", "params": "", "rc": 1, "state": "present", "stderr": "modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-76-generic\n", "stderr_lines": ["modprobe: FATAL: Module nf_conntrack_ipv4 not found in directory /lib/modules/5.15.0-76-generic"], "stdout": "", "stdout_lines": []}
2023-07-10 16:03:48,322 p=24624 u=kubernetmachine n=ansible | ...ignoring
2023-07-10 16:03:48,331 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.223)       0:04:56.726 ****** 
2023-07-10 16:03:48,740 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Persist ip_vs modules] ***********************************************************************************************************************************************
2023-07-10 16:03:48,740 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "963dae5d0f149158bd6b9a750827856f6f2382fd", "dest": "/etc/modules-load.d/kube_proxy-ipvs.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/modules-load.d/kube_proxy-ipvs.conf", "size": 34, "state": "file", "uid": 0}
2023-07-10 16:03:48,750 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.419)       0:04:57.145 ****** 
2023-07-10 16:03:48,785 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.034)       0:04:57.180 ****** 
2023-07-10 16:03:48,819 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.034)       0:04:57.214 ****** 
2023-07-10 16:03:48,855 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.035)       0:04:57.250 ****** 
2023-07-10 16:03:48,889 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.034)       0:04:57.284 ****** 
2023-07-10 16:03:48,934 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Set kubelet api version to v1beta1] **********************************************************************************************************************************
2023-07-10 16:03:48,935 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeletConfig_api_version": "v1beta1"}, "changed": false}
2023-07-10 16:03:48,948 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:48 +0300 (0:00:00.059)       0:04:57.343 ****** 
2023-07-10 16:03:49,435 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] *********************************************************************************************************************
2023-07-10 16:03:49,435 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "23e16fc546f98f0e991c3021101dd21b992e0681", "dest": "/etc/kubernetes/kubelet.env", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/kubernetes/kubelet.env", "size": 521, "state": "file", "uid": 0}
2023-07-10 16:03:49,444 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:49 +0300 (0:00:00.495)       0:04:57.839 ****** 
2023-07-10 16:03:50,003 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Write kubelet config file] *******************************************************************************************************************************************
2023-07-10 16:03:50,003 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "fe3362583ee795e5fca2b318a1af36c9eb9f3a37", "dest": "/etc/kubernetes/kubelet-config.yaml", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/kubernetes/kubelet-config.yaml", "size": 798, "state": "file", "uid": 0}
2023-07-10 16:03:50,014 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:50 +0300 (0:00:00.569)       0:04:58.409 ****** 
2023-07-10 16:03:50,544 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Write kubelet systemd init file] *************************************************************************************************************************************
2023-07-10 16:03:50,544 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "7c6e996e6a33a8e05266c72a072d76f9aeff796d", "dest": "/etc/systemd/system/kubelet.service", "gid": 0, "group": "root", "mode": "0600", "owner": "root", "path": "/etc/systemd/system/kubelet.service", "size": 562, "state": "file", "uid": 0}
2023-07-10 16:03:50,554 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:50 +0300 (0:00:00.540)       0:04:58.949 ****** 
2023-07-10 16:03:50,571 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:50 +0300 (0:00:00.016)       0:04:58.966 ****** 
2023-07-10 16:03:50,910 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node : Enable kubelet] ******************************************************************************************************************************************************
2023-07-10 16:03:50,911 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "enabled": true, "name": "kubelet", "state": "started", "status": {"ActiveEnterTimestamp": "Mon 2023-07-10 12:16:04 UTC", "ActiveEnterTimestampMonotonic": "15915346548", "ActiveExitTimestamp": "Mon 2023-07-10 12:16:04 UTC", "ActiveExitTimestampMonotonic": "15915296623", "ActiveState": "active", "After": "system.slice sysinit.target systemd-journald.socket basic.target containerd.service", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Mon 2023-07-10 12:16:04 UTC", "AssertTimestampMonotonic": "15915330660", "Before": "shutdown.target multi-user.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "48212617000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Mon 2023-07-10 12:16:04 UTC", "ConditionTimestampMonotonic": "15915330659", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/kubelet.service", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Kubernetes Kubelet Server", "DevicePolicy": "auto", "Documentation": "https://github.com/GoogleCloudPlatform/kubernetes", "DynamicUser": "no", "EffectiveCPUs": "0-1", "EffectiveMemoryNodes": "0", "EnvironmentFiles": "/etc/kubernetes/kubelet.env (ignore_errors=yes)", "ExecMainCode": "0", "ExecMainExitTimestamp": "n/a", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "19921", "ExecMainStartTimestamp": "Mon 2023-07-10 12:16:04 UTC", "ExecMainStartTimestampMonotonic": "15915346356", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/local/bin/kubelet ; argv[]=/usr/local/bin/kubelet $KUBE_LOGTOSTDERR $KUBE_LOG_LEVEL $KUBELET_API_SERVER $KUBELET_ADDRESS $KUBELET_PORT $KUBELET_HOSTNAME $KUBELET_ARGS $DOCKER_SOCKET $KUBELET_NETWORK_PLUGIN $KUBELET_VOLUME_PLUGIN $KUBELET_CLOUDPROVIDER ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/kubelet.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "kubelet.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Mon 2023-07-10 12:16:04 UTC", "InactiveEnterTimestampMonotonic": "15915330339", "InactiveExitTimestamp": "Mon 2023-07-10 12:16:04 UTC", "InactiveExitTimestampMonotonic": "15915346548", "InvocationID": "8bc487c68d01497a86cb344794018426", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "65536", "LimitMEMLOCKSoft": "65536", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "15191", "LimitNPROCSoft": "15191", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "15191", "LimitSIGPENDINGSoft": "15191", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "19921", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "50536448", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "kubelet.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "always", "RestartKillSignal": "15", "RestartUSec": "10s", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Mon 2023-07-10 12:16:04 UTC", "StateChangeTimestampMonotonic": "15915346548", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "11", "TasksMax": "4557", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "enabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "containerd.service", "WatchdogSignal": "6", "WatchdogTimestamp": "n/a", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}
2023-07-10 16:03:50,956 p=24624 u=kubernetmachine n=ansible | PLAY [kube_control_plane] ********************************************************************************************************************************************************************
2023-07-10 16:03:51,052 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.480)       0:04:59.447 ****** 
2023-07-10 16:03:51,095 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.042)       0:04:59.490 ****** 
2023-07-10 16:03:51,137 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.042)       0:04:59.532 ****** 
2023-07-10 16:03:51,178 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.040)       0:04:59.573 ****** 
2023-07-10 16:03:51,219 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.040)       0:04:59.614 ****** 
2023-07-10 16:03:51,261 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.042)       0:04:59.656 ****** 
2023-07-10 16:03:51,302 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.040)       0:04:59.697 ****** 
2023-07-10 16:03:51,343 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.041)       0:04:59.738 ****** 
2023-07-10 16:03:51,383 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.039)       0:04:59.778 ****** 
2023-07-10 16:03:51,422 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:51 +0300 (0:00:00.039)       0:04:59.817 ****** 
2023-07-10 16:03:53,548 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:02.125)       0:05:01.943 ****** 
2023-07-10 16:03:53,588 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:03:53,589 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:03:53,701 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.153)       0:05:02.096 ****** 
2023-07-10 16:03:53,744 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.043)       0:05:02.139 ****** 
2023-07-10 16:03:53,779 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.034)       0:05:02.174 ****** 
2023-07-10 16:03:53,819 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.039)       0:05:02.213 ****** 
2023-07-10 16:03:53,856 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.037)       0:05:02.251 ****** 
2023-07-10 16:03:53,894 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.037)       0:05:02.289 ****** 
2023-07-10 16:03:53,943 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.049)       0:05:02.338 ****** 
2023-07-10 16:03:53,972 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.028)       0:05:02.367 ****** 
2023-07-10 16:03:54,001 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:53 +0300 (0:00:00.028)       0:05:02.396 ****** 
2023-07-10 16:03:54,030 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.029)       0:05:02.425 ****** 
2023-07-10 16:03:54,062 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.031)       0:05:02.457 ****** 
2023-07-10 16:03:54,092 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.029)       0:05:02.487 ****** 
2023-07-10 16:03:54,127 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.035)       0:05:02.522 ****** 
2023-07-10 16:03:54,166 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.038)       0:05:02.561 ****** 
2023-07-10 16:03:54,214 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.047)       0:05:02.609 ****** 
2023-07-10 16:03:54,255 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.041)       0:05:02.650 ****** 
2023-07-10 16:03:54,293 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.037)       0:05:02.688 ****** 
2023-07-10 16:03:54,323 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.029)       0:05:02.717 ****** 
2023-07-10 16:03:54,361 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.038)       0:05:02.756 ****** 
2023-07-10 16:03:54,389 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.028)       0:05:02.785 ****** 
2023-07-10 16:03:54,424 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.034)       0:05:02.819 ****** 
2023-07-10 16:03:54,624 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Pre-upgrade | Delete master manifests if etcd secrets changed] **********************************************************************************************
2023-07-10 16:03:54,625 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kube-apiserver) => {"ansible_loop_var": "item", "changed": false, "item": "kube-apiserver", "path": "/etc/kubernetes/manifests/kube-apiserver.manifest", "state": "absent"}
2023-07-10 16:03:54,797 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kube-controller-manager) => {"ansible_loop_var": "item", "changed": false, "item": "kube-controller-manager", "path": "/etc/kubernetes/manifests/kube-controller-manager.manifest", "state": "absent"}
2023-07-10 16:03:54,972 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kube-scheduler) => {"ansible_loop_var": "item", "changed": false, "item": "kube-scheduler", "path": "/etc/kubernetes/manifests/kube-scheduler.manifest", "state": "absent"}
2023-07-10 16:03:54,982 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:54 +0300 (0:00:00.558)       0:05:03.378 ****** 
2023-07-10 16:03:55,029 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.046)       0:05:03.424 ****** 
2023-07-10 16:03:55,062 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.033)       0:05:03.457 ****** 
2023-07-10 16:03:55,095 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.033)       0:05:03.491 ****** 
2023-07-10 16:03:55,553 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Create kube-scheduler config] *******************************************************************************************************************************
2023-07-10 16:03:55,553 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "a365de8614a2515ae912e878d2bf0221eb8a99a6", "dest": "/etc/kubernetes/kubescheduler-config.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/kubernetes/kubescheduler-config.yaml", "size": 204, "state": "file", "uid": 0}
2023-07-10 16:03:55,562 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.466)       0:05:03.957 ****** 
2023-07-10 16:03:55,590 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.028)       0:05:03.986 ****** 
2023-07-10 16:03:55,617 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.026)       0:05:04.012 ****** 
2023-07-10 16:03:55,644 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.027)       0:05:04.040 ****** 
2023-07-10 16:03:55,684 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.039)       0:05:04.080 ****** 
2023-07-10 16:03:55,719 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.034)       0:05:04.114 ****** 
2023-07-10 16:03:55,746 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:55 +0300 (0:00:00.026)       0:05:04.141 ****** 
2023-07-10 16:03:56,970 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ************************************************************************************************************
2023-07-10 16:03:56,970 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "ff59da6d3c7647ffabc84c838258373bbab68764", "dest": "/usr/local/bin/kubectl", "gid": 0, "group": "root", "md5sum": "ed18bdf2d84364e928a97eedebebaba6", "mode": "0755", "owner": "root", "size": 48029696, "src": "/tmp/releases/kubectl-v1.26.2-amd64", "state": "file", "uid": 0}
2023-07-10 16:03:56,979 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:56 +0300 (0:00:01.233)       0:05:05.374 ****** 
2023-07-10 16:03:57,192 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Install kubectl bash completion] ****************************************************************************************************************************
2023-07-10 16:03:57,192 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": "/usr/local/bin/kubectl completion bash >/etc/bash_completion.d/kubectl.sh", "delta": "0:00:00.042277", "end": "2023-07-10 13:03:57.183538", "msg": "", "rc": 0, "start": "2023-07-10 13:03:57.141261", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:03:57,201 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.222)       0:05:05.596 ****** 
2023-07-10 16:03:57,420 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] ***************************************************************************************************************
2023-07-10 16:03:57,420 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/kubectl.sh", "size": 11832, "state": "file", "uid": 0}
2023-07-10 16:03:57,429 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.227)       0:05:05.824 ****** 
2023-07-10 16:03:57,458 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.028)       0:05:05.853 ****** 
2023-07-10 16:03:57,682 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ******************************************************************************************
2023-07-10 16:03:57,684 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "get", "nodes", "--selector=node-role.kubernetes.io/control-plane", "-o", "json"], "delta": "0:00:00.058824", "end": "2023-07-10 13:03:57.671091", "msg": "", "rc": 0, "start": "2023-07-10 13:03:57.612267", "stderr": "", "stderr_lines": [], "stdout": "{\n    \"apiVersion\": \"v1\",\n    \"items\": [\n        {\n            \"apiVersion\": \"v1\",\n            \"kind\": \"Node\",\n            \"metadata\": {\n                \"annotations\": {\n                    \"kubeadm.alpha.kubernetes.io/cri-socket\": \"unix:///var/run/containerd/containerd.sock\",\n                    \"node.alpha.kubernetes.io/ttl\": \"0\",\n                    \"projectcalico.org/IPv4Address\": \"192.168.122.29/24\",\n                    \"projectcalico.org/IPv4VXLANTunnelAddr\": \"10.233.102.128\",\n                    \"volumes.kubernetes.io/controller-managed-attach-detach\": \"true\"\n                },\n                \"creationTimestamp\": \"2023-07-10T12:13:52Z\",\n                \"labels\": {\n                    \"beta.kubernetes.io/arch\": \"amd64\",\n                    \"beta.kubernetes.io/os\": \"linux\",\n                    \"kubernetes.io/arch\": \"amd64\",\n                    \"kubernetes.io/hostname\": \"node1\",\n                    \"kubernetes.io/os\": \"linux\",\n                    \"node-role.kubernetes.io/control-plane\": \"\",\n                    \"node.kubernetes.io/exclude-from-external-load-balancers\": \"\"\n                },\n                \"name\": \"node1\",\n                \"resourceVersion\": \"4944\",\n                \"uid\": \"7e3c9e3e-4478-4709-b457-4b968f09cdcf\"\n            },\n            \"spec\": {\n                \"podCIDR\": \"10.233.64.0/24\",\n                \"podCIDRs\": [\n                    \"10.233.64.0/24\"\n                ]\n            },\n            \"status\": {\n                \"addresses\": [\n                    {\n                        \"address\": \"192.168.122.29\",\n                        \"type\": \"InternalIP\"\n                    },\n                    {\n                        \"address\": \"node1\",\n                        \"type\": \"Hostname\"\n                    }\n                ],\n                \"allocatable\": {\n                    \"cpu\": \"2\",\n                    \"ephemeral-storage\": \"10836873199\",\n                    \"hugepages-1Gi\": \"0\",\n                    \"hugepages-2Mi\": \"0\",\n                    \"memory\": \"3903436Ki\",\n                    \"pods\": \"110\"\n                },\n                \"capacity\": {\n                    \"cpu\": \"2\",\n                    \"ephemeral-storage\": \"11758760Ki\",\n                    \"hugepages-1Gi\": \"0\",\n                    \"hugepages-2Mi\": \"0\",\n                    \"memory\": \"4005836Ki\",\n                    \"pods\": \"110\"\n                },\n                \"conditions\": [\n                    {\n                        \"lastHeartbeatTime\": \"2023-07-10T12:14:45Z\",\n                        \"lastTransitionTime\": \"2023-07-10T12:14:45Z\",\n                        \"message\": \"Calico is running on this node\",\n                        \"reason\": \"CalicoIsUp\",\n                        \"status\": \"False\",\n                        \"type\": \"NetworkUnavailable\"\n                    },\n                    {\n                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",\n                        \"lastTransitionTime\": \"2023-07-10T12:13:51Z\",\n                        \"message\": \"kubelet has sufficient memory available\",\n                        \"reason\": \"KubeletHasSufficientMemory\",\n                        \"status\": \"False\",\n                        \"type\": \"MemoryPressure\"\n                    },\n                    {\n                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",\n                        \"lastTransitionTime\": \"2023-07-10T12:13:51Z\",\n                        \"message\": \"kubelet has no disk pressure\",\n                        \"reason\": \"KubeletHasNoDiskPressure\",\n                        \"status\": \"False\",\n                        \"type\": \"DiskPressure\"\n                    },\n                    {\n                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",\n                        \"lastTransitionTime\": \"2023-07-10T12:13:51Z\",\n                        \"message\": \"kubelet has sufficient PID available\",\n                        \"reason\": \"KubeletHasSufficientPID\",\n                        \"status\": \"False\",\n                        \"type\": \"PIDPressure\"\n                    },\n                    {\n                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",\n                        \"lastTransitionTime\": \"2023-07-10T12:16:05Z\",\n                        \"message\": \"kubelet is posting ready status. AppArmor enabled\",\n                        \"reason\": \"KubeletReady\",\n                        \"status\": \"True\",\n                        \"type\": \"Ready\"\n                    }\n                ],\n                \"daemonEndpoints\": {\n                    \"kubeletEndpoint\": {\n                        \"Port\": 10250\n                    }\n                },\n                \"images\": [\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/ingress-nginx/controller:v1.8.0\"\n                        ],\n                        \"sizeBytes\": 111174024\n                    },\n                    {\n                        \"names\": [\n                            \"quay.io/calico/cni:v3.25.1\"\n                        ],\n                        \"sizeBytes\": 89884044\n                    },\n                    {\n                        \"names\": [\n                            \"quay.io/calico/node:v3.25.1\"\n                        ],\n                        \"sizeBytes\": 88335791\n                    },\n                    {\n                        \"names\": [\n                            \"docker.io/kubernetesui/dashboard:v2.7.0\"\n                        ],\n                        \"sizeBytes\": 75788960\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/kube-apiserver:v1.26.2\"\n                        ],\n                        \"sizeBytes\": 35329425\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/kube-controller-manager:v1.26.2\"\n                        ],\n                        \"sizeBytes\": 32180749\n                    },\n                    {\n                        \"names\": [\n                            \"quay.io/calico/kube-controllers:v3.25.1\"\n                        ],\n                        \"sizeBytes\": 31908610\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/dns/k8s-dns-node-cache:1.22.20\"\n                        ],\n                        \"sizeBytes\": 30467856\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/kube-proxy:v1.26.2\"\n                        ],\n                        \"sizeBytes\": 21541935\n                    },\n                    {\n                        \"names\": [\n                            \"docker.io/kubernetesui/metrics-scraper:v1.0.8\"\n                        ],\n                        \"sizeBytes\": 19746404\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/kube-scheduler:v1.26.2\"\n                        ],\n                        \"sizeBytes\": 17489559\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/coredns/coredns:v1.9.3\"\n                        ],\n                        \"sizeBytes\": 14837849\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8\"\n                        ],\n                        \"sizeBytes\": 11598689\n                    },\n                    {\n                        \"names\": [\n                            \"docker.io/library/nginx:1.23.2-alpine\"\n                        ],\n                        \"sizeBytes\": 10232983\n                    },\n                    {\n                        \"names\": [\n                            \"quay.io/calico/pod2daemon-flexvol:v3.25.1\"\n                        ],\n                        \"sizeBytes\": 7167792\n                    },\n                    {\n                        \"names\": [\n                            \"registry.k8s.io/pause:3.9\"\n                        ],\n                        \"sizeBytes\": 321520\n                    }\n                ],\n                \"nodeInfo\": {\n                    \"architecture\": \"amd64\",\n                    \"bootID\": \"da67cc34-cbd7-4644-a48b-af6d73008413\",\n                    \"containerRuntimeVersion\": \"containerd://1.7.2\",\n                    \"kernelVersion\": \"5.15.0-76-generic\",\n                    \"kubeProxyVersion\": \"v1.26.2\",\n                    \"kubeletVersion\": \"v1.26.2\",\n                    \"machineID\": \"182e738fb4524ee5aae1c9f55a66e2e0\",\n                    \"operatingSystem\": \"linux\",\n                    \"osImage\": \"Ubuntu 22.04.2 LTS\",\n                    \"systemUUID\": \"182e738f-b452-4ee5-aae1-c9f55a66e2e0\"\n                }\n            }\n        }\n    ],\n    \"kind\": \"List\",\n    \"metadata\": {\n        \"resourceVersion\": \"\"\n    }\n}", "stdout_lines": ["{", "    \"apiVersion\": \"v1\",", "    \"items\": [", "        {", "            \"apiVersion\": \"v1\",", "            \"kind\": \"Node\",", "            \"metadata\": {", "                \"annotations\": {", "                    \"kubeadm.alpha.kubernetes.io/cri-socket\": \"unix:///var/run/containerd/containerd.sock\",", "                    \"node.alpha.kubernetes.io/ttl\": \"0\",", "                    \"projectcalico.org/IPv4Address\": \"192.168.122.29/24\",", "                    \"projectcalico.org/IPv4VXLANTunnelAddr\": \"10.233.102.128\",", "                    \"volumes.kubernetes.io/controller-managed-attach-detach\": \"true\"", "                },", "                \"creationTimestamp\": \"2023-07-10T12:13:52Z\",", "                \"labels\": {", "                    \"beta.kubernetes.io/arch\": \"amd64\",", "                    \"beta.kubernetes.io/os\": \"linux\",", "                    \"kubernetes.io/arch\": \"amd64\",", "                    \"kubernetes.io/hostname\": \"node1\",", "                    \"kubernetes.io/os\": \"linux\",", "                    \"node-role.kubernetes.io/control-plane\": \"\",", "                    \"node.kubernetes.io/exclude-from-external-load-balancers\": \"\"", "                },", "                \"name\": \"node1\",", "                \"resourceVersion\": \"4944\",", "                \"uid\": \"7e3c9e3e-4478-4709-b457-4b968f09cdcf\"", "            },", "            \"spec\": {", "                \"podCIDR\": \"10.233.64.0/24\",", "                \"podCIDRs\": [", "                    \"10.233.64.0/24\"", "                ]", "            },", "            \"status\": {", "                \"addresses\": [", "                    {", "                        \"address\": \"192.168.122.29\",", "                        \"type\": \"InternalIP\"", "                    },", "                    {", "                        \"address\": \"node1\",", "                        \"type\": \"Hostname\"", "                    }", "                ],", "                \"allocatable\": {", "                    \"cpu\": \"2\",", "                    \"ephemeral-storage\": \"10836873199\",", "                    \"hugepages-1Gi\": \"0\",", "                    \"hugepages-2Mi\": \"0\",", "                    \"memory\": \"3903436Ki\",", "                    \"pods\": \"110\"", "                },", "                \"capacity\": {", "                    \"cpu\": \"2\",", "                    \"ephemeral-storage\": \"11758760Ki\",", "                    \"hugepages-1Gi\": \"0\",", "                    \"hugepages-2Mi\": \"0\",", "                    \"memory\": \"4005836Ki\",", "                    \"pods\": \"110\"", "                },", "                \"conditions\": [", "                    {", "                        \"lastHeartbeatTime\": \"2023-07-10T12:14:45Z\",", "                        \"lastTransitionTime\": \"2023-07-10T12:14:45Z\",", "                        \"message\": \"Calico is running on this node\",", "                        \"reason\": \"CalicoIsUp\",", "                        \"status\": \"False\",", "                        \"type\": \"NetworkUnavailable\"", "                    },", "                    {", "                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",", "                        \"lastTransitionTime\": \"2023-07-10T12:13:51Z\",", "                        \"message\": \"kubelet has sufficient memory available\",", "                        \"reason\": \"KubeletHasSufficientMemory\",", "                        \"status\": \"False\",", "                        \"type\": \"MemoryPressure\"", "                    },", "                    {", "                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",", "                        \"lastTransitionTime\": \"2023-07-10T12:13:51Z\",", "                        \"message\": \"kubelet has no disk pressure\",", "                        \"reason\": \"KubeletHasNoDiskPressure\",", "                        \"status\": \"False\",", "                        \"type\": \"DiskPressure\"", "                    },", "                    {", "                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",", "                        \"lastTransitionTime\": \"2023-07-10T12:13:51Z\",", "                        \"message\": \"kubelet has sufficient PID available\",", "                        \"reason\": \"KubeletHasSufficientPID\",", "                        \"status\": \"False\",", "                        \"type\": \"PIDPressure\"", "                    },", "                    {", "                        \"lastHeartbeatTime\": \"2023-07-10T13:03:57Z\",", "                        \"lastTransitionTime\": \"2023-07-10T12:16:05Z\",", "                        \"message\": \"kubelet is posting ready status. AppArmor enabled\",", "                        \"reason\": \"KubeletReady\",", "                        \"status\": \"True\",", "                        \"type\": \"Ready\"", "                    }", "                ],", "                \"daemonEndpoints\": {", "                    \"kubeletEndpoint\": {", "                        \"Port\": 10250", "                    }", "                },", "                \"images\": [", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/ingress-nginx/controller:v1.8.0\"", "                        ],", "                        \"sizeBytes\": 111174024", "                    },", "                    {", "                        \"names\": [", "                            \"quay.io/calico/cni:v3.25.1\"", "                        ],", "                        \"sizeBytes\": 89884044", "                    },", "                    {", "                        \"names\": [", "                            \"quay.io/calico/node:v3.25.1\"", "                        ],", "                        \"sizeBytes\": 88335791", "                    },", "                    {", "                        \"names\": [", "                            \"docker.io/kubernetesui/dashboard:v2.7.0\"", "                        ],", "                        \"sizeBytes\": 75788960", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/kube-apiserver:v1.26.2\"", "                        ],", "                        \"sizeBytes\": 35329425", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/kube-controller-manager:v1.26.2\"", "                        ],", "                        \"sizeBytes\": 32180749", "                    },", "                    {", "                        \"names\": [", "                            \"quay.io/calico/kube-controllers:v3.25.1\"", "                        ],", "                        \"sizeBytes\": 31908610", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/dns/k8s-dns-node-cache:1.22.20\"", "                        ],", "                        \"sizeBytes\": 30467856", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/kube-proxy:v1.26.2\"", "                        ],", "                        \"sizeBytes\": 21541935", "                    },", "                    {", "                        \"names\": [", "                            \"docker.io/kubernetesui/metrics-scraper:v1.0.8\"", "                        ],", "                        \"sizeBytes\": 19746404", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/kube-scheduler:v1.26.2\"", "                        ],", "                        \"sizeBytes\": 17489559", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/coredns/coredns:v1.9.3\"", "                        ],", "                        \"sizeBytes\": 14837849", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8\"", "                        ],", "                        \"sizeBytes\": 11598689", "                    },", "                    {", "                        \"names\": [", "                            \"docker.io/library/nginx:1.23.2-alpine\"", "                        ],", "                        \"sizeBytes\": 10232983", "                    },", "                    {", "                        \"names\": [", "                            \"quay.io/calico/pod2daemon-flexvol:v3.25.1\"", "                        ],", "                        \"sizeBytes\": 7167792", "                    },", "                    {", "                        \"names\": [", "                            \"registry.k8s.io/pause:3.9\"", "                        ],", "                        \"sizeBytes\": 321520", "                    }", "                ],", "                \"nodeInfo\": {", "                    \"architecture\": \"amd64\",", "                    \"bootID\": \"da67cc34-cbd7-4644-a48b-af6d73008413\",", "                    \"containerRuntimeVersion\": \"containerd://1.7.2\",", "                    \"kernelVersion\": \"5.15.0-76-generic\",", "                    \"kubeProxyVersion\": \"v1.26.2\",", "                    \"kubeletVersion\": \"v1.26.2\",", "                    \"machineID\": \"182e738fb4524ee5aae1c9f55a66e2e0\",", "                    \"operatingSystem\": \"linux\",", "                    \"osImage\": \"Ubuntu 22.04.2 LTS\",", "                    \"systemUUID\": \"182e738f-b452-4ee5-aae1-c9f55a66e2e0\"", "                }", "            }", "        }", "    ],", "    \"kind\": \"List\",", "    \"metadata\": {", "        \"resourceVersion\": \"\"", "    }", "}"]}
2023-07-10 16:03:57,696 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.238)       0:05:06.091 ****** 
2023-07-10 16:03:57,764 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set fact joined_control_panes] ******************************************************************************************************************************
2023-07-10 16:03:57,765 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> item] => (item=node1) => {"ansible_facts": {"joined_control_planes": ["node1"]}, "ansible_loop_var": "item", "changed": false, "item": "node1"}
2023-07-10 16:03:57,775 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.078)       0:05:06.170 ****** 
2023-07-10 16:03:57,836 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set fact first_kube_control_plane] **************************************************************************************************************************
2023-07-10 16:03:57,836 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"first_kube_control_plane": "node1"}, "changed": false}
2023-07-10 16:03:57,845 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.070)       0:05:06.240 ****** 
2023-07-10 16:03:57,871 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:57 +0300 (0:00:00.026)       0:05:06.266 ****** 
2023-07-10 16:03:58,038 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Check if kubeadm has already run] *****************************************************************************************************************
2023-07-10 16:03:58,039 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991229.5883257, "block_size": 4096, "blocks": 8, "ctime": 1688991229.5883257, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 1891, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688991229.5883257, "nlink": 1, "path": "/var/lib/kubelet/config.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1021, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 16:03:58,048 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:58 +0300 (0:00:00.176)       0:05:06.443 ****** 
2023-07-10 16:03:58,259 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Backup old certs and keys] **********************************************************************************************************************************
2023-07-10 16:03:58,260 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=apiserver.crt) => {"ansible_loop_var": "item", "changed": true, "checksum": "8f8b36663906c19c918f49a0ddbfc197f342536a", "dest": "/etc/kubernetes/ssl/apiserver.crt.old", "gid": 0, "group": "root", "item": "apiserver.crt", "md5sum": "b81a6b23ee6df1de11c05b7f84ed9f87", "mode": "0644", "owner": "root", "size": 1387, "src": "/etc/kubernetes/ssl/apiserver.crt", "state": "file", "uid": 0}
2023-07-10 16:03:58,457 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=apiserver.key) => {"ansible_loop_var": "item", "changed": true, "checksum": "5e2644da8e7eb0d49d13649b17ca2fce3d179374", "dest": "/etc/kubernetes/ssl/apiserver.key.old", "gid": 0, "group": "root", "item": "apiserver.key", "md5sum": "0af9cc972862714bcd56e825131b068a", "mode": "0600", "owner": "root", "size": 1679, "src": "/etc/kubernetes/ssl/apiserver.key", "state": "file", "uid": 0}
2023-07-10 16:03:58,636 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=apiserver-kubelet-client.crt) => {"ansible_loop_var": "item", "changed": true, "checksum": "438ec2ba60979ffadae822a56f80ac233887d5d2", "dest": "/etc/kubernetes/ssl/apiserver-kubelet-client.crt.old", "gid": 0, "group": "root", "item": "apiserver-kubelet-client.crt", "md5sum": "d562bfe44f255a1916c95ebeb48d2704", "mode": "0644", "owner": "root", "size": 1164, "src": "/etc/kubernetes/ssl/apiserver-kubelet-client.crt", "state": "file", "uid": 0}
2023-07-10 16:03:58,818 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=apiserver-kubelet-client.key) => {"ansible_loop_var": "item", "changed": true, "checksum": "fcc4955de69bb777b232966fb90961eca2df1fa4", "dest": "/etc/kubernetes/ssl/apiserver-kubelet-client.key.old", "gid": 0, "group": "root", "item": "apiserver-kubelet-client.key", "md5sum": "ab1a6ca263878b5b2828245ad635ebdb", "mode": "0600", "owner": "root", "size": 1679, "src": "/etc/kubernetes/ssl/apiserver-kubelet-client.key", "state": "file", "uid": 0}
2023-07-10 16:03:59,034 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=front-proxy-client.crt) => {"ansible_loop_var": "item", "changed": true, "checksum": "fe05ba52d1680260fa8b8a992c452e1134449b9a", "dest": "/etc/kubernetes/ssl/front-proxy-client.crt.old", "gid": 0, "group": "root", "item": "front-proxy-client.crt", "md5sum": "83e635914f43cc86c2f5fa7bbb2a5283", "mode": "0644", "owner": "root", "size": 1119, "src": "/etc/kubernetes/ssl/front-proxy-client.crt", "state": "file", "uid": 0}
2023-07-10 16:03:59,212 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=front-proxy-client.key) => {"ansible_loop_var": "item", "changed": true, "checksum": "02929daeca93c890968214e7f329c4f4488c9044", "dest": "/etc/kubernetes/ssl/front-proxy-client.key.old", "gid": 0, "group": "root", "item": "front-proxy-client.key", "md5sum": "fa025cf4cfbe7fa89b920e8a427532a4", "mode": "0600", "owner": "root", "size": 1675, "src": "/etc/kubernetes/ssl/front-proxy-client.key", "state": "file", "uid": 0}
2023-07-10 16:03:59,223 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:03:59 +0300 (0:00:01.174)       0:05:07.618 ****** 
2023-07-10 16:03:59,450 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Backup old confs] *******************************************************************************************************************************************
2023-07-10 16:03:59,451 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=admin.conf) => {"ansible_loop_var": "item", "changed": true, "checksum": "3eb86b4da6443e6007f17a9238f7342b76e6cbfa", "dest": "/etc/kubernetes/admin.conf.old", "gid": 0, "group": "root", "item": "admin.conf", "md5sum": "bb18dd836225bb61dea7e5e605271b08", "mode": "0600", "owner": "root", "size": 5661, "src": "/etc/kubernetes/admin.conf", "state": "file", "uid": 0}
2023-07-10 16:03:59,665 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=controller-manager.conf) => {"ansible_loop_var": "item", "changed": true, "checksum": "417bb78f698800dcbfffcd6259fb70e59c03d775", "dest": "/etc/kubernetes/controller-manager.conf.old", "gid": 0, "group": "root", "item": "controller-manager.conf", "md5sum": "7c568e9805f25fb89fb16a124a046baf", "mode": "0600", "owner": "root", "size": 5693, "src": "/etc/kubernetes/controller-manager.conf", "state": "file", "uid": 0}
2023-07-10 16:03:59,853 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=kubelet.conf) => {"ansible_loop_var": "item", "changed": true, "checksum": "016007465adf05a309c1d9bbf329fcd8894f8bba", "dest": "/etc/kubernetes/kubelet.conf.old", "gid": 0, "group": "root", "item": "kubelet.conf", "md5sum": "fd15219650c0aae71f18b92b27f673d6", "mode": "0600", "owner": "root", "size": 1977, "src": "/etc/kubernetes/kubelet.conf", "state": "file", "uid": 0}
2023-07-10 16:04:00,035 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=scheduler.conf) => {"ansible_loop_var": "item", "changed": true, "checksum": "b176d1613f3cc9426c5e82302ccab76c576703a2", "dest": "/etc/kubernetes/scheduler.conf.old", "gid": 0, "group": "root", "item": "scheduler.conf", "md5sum": "69506273379624282f4d28a7e0826bca", "mode": "0600", "owner": "root", "size": 5629, "src": "/etc/kubernetes/scheduler.conf", "state": "file", "uid": 0}
2023-07-10 16:04:00,045 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.822)       0:05:08.440 ****** 
2023-07-10 16:04:00,327 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | aggregate all SANs] *******************************************************************************************************************************
2023-07-10 16:04:00,327 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"apiserver_sans": ["kubernetes", "kubernetes.default", "kubernetes.default.svc", "kubernetes.default.svc.linuxtechi.local", "10.233.0.1", "localhost", "127.0.0.1", "node1", "lb-apiserver.kubernetes.local", "192.168.122.29", "node1.linuxtechi.local"]}, "changed": false}
2023-07-10 16:04:00,335 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.290)       0:05:08.731 ****** 
2023-07-10 16:04:00,372 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.036)       0:05:08.767 ****** 
2023-07-10 16:04:00,408 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.035)       0:05:08.803 ****** 
2023-07-10 16:04:00,439 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.030)       0:05:08.834 ****** 
2023-07-10 16:04:00,471 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.031)       0:05:08.866 ****** 
2023-07-10 16:04:00,508 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubeadm api version to v1beta3] *************************************************************************************************************************
2023-07-10 16:04:00,508 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta3"}, "changed": false}
2023-07-10 16:04:00,517 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:00 +0300 (0:00:00.046)       0:05:08.912 ****** 
2023-07-10 16:04:01,459 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Create kubeadm config] ****************************************************************************************************************************
2023-07-10 16:04:01,459 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "e7b5019752a931796c494de9c718585a01578f82", "dest": "/etc/kubernetes/kubeadm-config.yaml", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/kubernetes/kubeadm-config.yaml", "size": 3647, "state": "file", "uid": 0}
2023-07-10 16:04:01,470 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:01 +0300 (0:00:00.952)       0:05:09.865 ****** 
2023-07-10 16:04:01,501 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:01 +0300 (0:00:00.030)       0:05:09.895 ****** 
2023-07-10 16:04:01,533 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:01 +0300 (0:00:00.032)       0:05:09.928 ****** 
2023-07-10 16:04:01,562 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:01 +0300 (0:00:00.029)       0:05:09.957 ****** 
2023-07-10 16:04:01,824 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Check apiserver.crt SAN IPs] **********************************************************************************************************************
2023-07-10 16:04:01,825 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=10.233.0.1) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkip", "10.233.0.1"], "delta": "0:00:00.004630", "end": "2023-07-10 13:04:01.807553", "item": "10.233.0.1", "msg": "", "rc": 0, "start": "2023-07-10 13:04:01.802923", "stderr": "", "stderr_lines": [], "stdout": "IP 10.233.0.1 does match certificate", "stdout_lines": ["IP 10.233.0.1 does match certificate"]}
2023-07-10 16:04:01,980 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkip", "127.0.0.1"], "delta": "0:00:00.004260", "end": "2023-07-10 13:04:01.965455", "item": "127.0.0.1", "msg": "", "rc": 0, "start": "2023-07-10 13:04:01.961195", "stderr": "", "stderr_lines": [], "stdout": "IP 127.0.0.1 does match certificate", "stdout_lines": ["IP 127.0.0.1 does match certificate"]}
2023-07-10 16:04:02,136 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=192.168.122.29) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkip", "192.168.122.29"], "delta": "0:00:00.004558", "end": "2023-07-10 13:04:02.127182", "item": "192.168.122.29", "msg": "", "rc": 0, "start": "2023-07-10 13:04:02.122624", "stderr": "", "stderr_lines": [], "stdout": "IP 192.168.122.29 does match certificate", "stdout_lines": ["IP 192.168.122.29 does match certificate"]}
2023-07-10 16:04:02,146 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:02 +0300 (0:00:00.583)       0:05:10.541 ****** 
2023-07-10 16:04:02,392 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Check apiserver.crt SAN hosts] ********************************************************************************************************************
2023-07-10 16:04:02,393 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kubernetes) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "kubernetes"], "delta": "0:00:00.004270", "end": "2023-07-10 13:04:02.377724", "item": "kubernetes", "msg": "", "rc": 0, "start": "2023-07-10 13:04:02.373454", "stderr": "", "stderr_lines": [], "stdout": "Hostname kubernetes does match certificate", "stdout_lines": ["Hostname kubernetes does match certificate"]}
2023-07-10 16:04:02,547 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kubernetes.default) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "kubernetes.default"], "delta": "0:00:00.004284", "end": "2023-07-10 13:04:02.532963", "item": "kubernetes.default", "msg": "", "rc": 0, "start": "2023-07-10 13:04:02.528679", "stderr": "", "stderr_lines": [], "stdout": "Hostname kubernetes.default does match certificate", "stdout_lines": ["Hostname kubernetes.default does match certificate"]}
2023-07-10 16:04:02,702 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kubernetes.default.svc) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "kubernetes.default.svc"], "delta": "0:00:00.004335", "end": "2023-07-10 13:04:02.688917", "item": "kubernetes.default.svc", "msg": "", "rc": 0, "start": "2023-07-10 13:04:02.684582", "stderr": "", "stderr_lines": [], "stdout": "Hostname kubernetes.default.svc does match certificate", "stdout_lines": ["Hostname kubernetes.default.svc does match certificate"]}
2023-07-10 16:04:02,858 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kubernetes.default.svc.linuxtechi.local) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "kubernetes.default.svc.linuxtechi.local"], "delta": "0:00:00.004387", "end": "2023-07-10 13:04:02.844799", "item": "kubernetes.default.svc.linuxtechi.local", "msg": "", "rc": 0, "start": "2023-07-10 13:04:02.840412", "stderr": "", "stderr_lines": [], "stdout": "Hostname kubernetes.default.svc.linuxtechi.local does match certificate", "stdout_lines": ["Hostname kubernetes.default.svc.linuxtechi.local does match certificate"]}
2023-07-10 16:04:03,015 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=localhost) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "localhost"], "delta": "0:00:00.004361", "end": "2023-07-10 13:04:03.001401", "item": "localhost", "msg": "", "rc": 0, "start": "2023-07-10 13:04:02.997040", "stderr": "", "stderr_lines": [], "stdout": "Hostname localhost does match certificate", "stdout_lines": ["Hostname localhost does match certificate"]}
2023-07-10 16:04:03,168 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=node1) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "node1"], "delta": "0:00:00.004142", "end": "2023-07-10 13:04:03.154397", "item": "node1", "msg": "", "rc": 0, "start": "2023-07-10 13:04:03.150255", "stderr": "", "stderr_lines": [], "stdout": "Hostname node1 does match certificate", "stdout_lines": ["Hostname node1 does match certificate"]}
2023-07-10 16:04:03,320 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=lb-apiserver.kubernetes.local) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "lb-apiserver.kubernetes.local"], "delta": "0:00:00.004029", "end": "2023-07-10 13:04:03.306537", "item": "lb-apiserver.kubernetes.local", "msg": "", "rc": 0, "start": "2023-07-10 13:04:03.302508", "stderr": "", "stderr_lines": [], "stdout": "Hostname lb-apiserver.kubernetes.local does match certificate", "stdout_lines": ["Hostname lb-apiserver.kubernetes.local does match certificate"]}
2023-07-10 16:04:03,469 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=node1.linuxtechi.local) => {"ansible_loop_var": "item", "changed": false, "cmd": ["openssl", "x509", "-noout", "-in", "/etc/kubernetes/ssl/apiserver.crt", "-checkhost", "node1.linuxtechi.local"], "delta": "0:00:00.004317", "end": "2023-07-10 13:04:03.459896", "item": "node1.linuxtechi.local", "msg": "", "rc": 0, "start": "2023-07-10 13:04:03.455579", "stderr": "", "stderr_lines": [], "stdout": "Hostname node1.linuxtechi.local does match certificate", "stdout_lines": ["Hostname node1.linuxtechi.local does match certificate"]}
2023-07-10 16:04:03,480 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:01.334)       0:05:11.876 ****** 
2023-07-10 16:04:03,519 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.038)       0:05:11.915 ****** 
2023-07-10 16:04:03,549 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.029)       0:05:11.944 ****** 
2023-07-10 16:04:03,581 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.032)       0:05:11.977 ****** 
2023-07-10 16:04:03,613 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.031)       0:05:12.009 ****** 
2023-07-10 16:04:03,640 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.026)       0:05:12.036 ****** 
2023-07-10 16:04:03,680 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.039)       0:05:12.076 ****** 
2023-07-10 16:04:03,719 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.038)       0:05:12.114 ****** 
2023-07-10 16:04:03,933 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Create kubeadm token for joining nodes with 24h expiration (default)] ***************************************************************************************
2023-07-10 16:04:03,934 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": ["/usr/local/bin/kubeadm", "--kubeconfig", "/etc/kubernetes/admin.conf", "token", "create"], "delta": "0:00:00.041750", "end": "2023-07-10 13:04:03.918628", "msg": "", "rc": 0, "start": "2023-07-10 13:04:03.876878", "stderr": "", "stderr_lines": [], "stdout": "ux1rf5.yute4hmxbp1uaxsz", "stdout_lines": ["ux1rf5.yute4hmxbp1uaxsz"]}
2023-07-10 16:04:03,943 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.224)       0:05:12.338 ****** 
2023-07-10 16:04:03,988 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubeadm_token] ******************************************************************************************************************************************
2023-07-10 16:04:03,988 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_token": "ux1rf5.yute4hmxbp1uaxsz"}, "changed": false}
2023-07-10 16:04:03,997 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:03 +0300 (0:00:00.053)       0:05:12.392 ****** 
2023-07-10 16:04:04,026 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.029)       0:05:12.422 ****** 
2023-07-10 16:04:04,041 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Join other masters] *******************************************************************************************************************************
2023-07-10 16:04:04,056 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-secondary.yml for node1
2023-07-10 16:04:04,071 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.044)       0:05:12.466 ****** 
2023-07-10 16:04:04,175 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Set kubeadm_discovery_address] ******************************************************************************************************************************
2023-07-10 16:04:04,175 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_discovery_address": "192.168.122.29:6443"}, "changed": false}
2023-07-10 16:04:04,184 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.113)       0:05:12.580 ****** 
2023-07-10 16:04:04,427 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Upload certificates so they are fresh and not expired] ******************************************************************************************************
2023-07-10 16:04:04,428 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/kubeadm", "init", "phase", "--config", "/etc/kubernetes/kubeadm-config.yaml", "upload-certs", "--upload-certs"], "delta": "0:00:00.077313", "end": "2023-07-10 13:04:04.419118", "msg": "", "rc": 0, "start": "2023-07-10 13:04:04.341805", "stderr": "W0710 13:04:04.372102   61468 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "stderr_lines": ["W0710 13:04:04.372102   61468 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]"], "stdout": "[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace\n[upload-certs] Using certificate key:\nf3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b", "stdout_lines": ["[upload-certs] Storing the certificates in Secret \"kubeadm-certs\" in the \"kube-system\" Namespace", "[upload-certs] Using certificate key:", "f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b"]}
2023-07-10 16:04:04,436 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.251)       0:05:12.831 ****** 
2023-07-10 16:04:04,514 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Parse certificate key if not set] ***************************************************************************************************************************
2023-07-10 16:04:04,515 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_certificate_key": "f3770cee7ee5b0be12567d1f3cbc072c3dfa8119a3d1cfafcf4e9eda06ba440b"}, "changed": false}
2023-07-10 16:04:04,524 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.088)       0:05:12.919 ****** 
2023-07-10 16:04:04,552 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.027)       0:05:12.947 ****** 
2023-07-10 16:04:04,930 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Wait for k8s apiserver] *************************************************************************************************************************************
2023-07-10 16:04:04,932 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "elapsed": 0, "match_groupdict": {}, "match_groups": [], "path": null, "port": 6443, "search_regex": null, "state": "started"}
2023-07-10 16:04:04,948 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:04 +0300 (0:00:00.396)       0:05:13.343 ****** 
2023-07-10 16:04:05,005 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : check already run] ******************************************************************************************************************************************
2023-07-10 16:04:05,006 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": true
}
2023-07-10 16:04:05,021 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.073)       0:05:13.416 ****** 
2023-07-10 16:04:05,064 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.043)       0:05:13.459 ****** 
2023-07-10 16:04:05,110 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.046)       0:05:13.505 ****** 
2023-07-10 16:04:05,155 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.045)       0:05:13.550 ****** 
2023-07-10 16:04:05,420 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : kubeadm | Remove taint for master with node role] ***********************************************************************************************************
2023-07-10 16:04:05,421 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=node-role.kubernetes.io/master:NoSchedule-) => {"ansible_loop_var": "item", "changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "taint", "node", "node1", "node-role.kubernetes.io/master:NoSchedule-"], "delta": "0:00:00.058815", "end": "2023-07-10 13:04:05.401756", "failed_when_result": false, "item": "node-role.kubernetes.io/master:NoSchedule-", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 13:04:05.342941", "stderr": "error: taint \"node-role.kubernetes.io/master:NoSchedule\" not found", "stderr_lines": ["error: taint \"node-role.kubernetes.io/master:NoSchedule\" not found"], "stdout": "", "stdout_lines": []}
2023-07-10 16:04:05,626 p=24624 u=kubernetmachine n=ansible | changed: [node1] => (item=node-role.kubernetes.io/control-plane:NoSchedule-) => {"ansible_loop_var": "item", "changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "taint", "node", "node1", "node-role.kubernetes.io/control-plane:NoSchedule-"], "delta": "0:00:00.052097", "end": "2023-07-10 13:04:05.617573", "failed_when_result": false, "item": "node-role.kubernetes.io/control-plane:NoSchedule-", "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 13:04:05.565476", "stderr": "error: taint \"node-role.kubernetes.io/control-plane:NoSchedule\" not found", "stderr_lines": ["error: taint \"node-role.kubernetes.io/control-plane:NoSchedule\" not found"], "stdout": "", "stdout_lines": []}
2023-07-10 16:04:05,636 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.480)       0:05:14.031 ****** 
2023-07-10 16:04:05,670 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.033)       0:05:14.065 ****** 
2023-07-10 16:04:05,685 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Include kubeadm secondary server apiserver fixes] ***********************************************************************************************************
2023-07-10 16:04:05,697 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes/control-plane/tasks/kubeadm-fix-apiserver.yml for node1
2023-07-10 16:04:05,722 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:05 +0300 (0:00:00.052)       0:05:14.117 ****** 
2023-07-10 16:04:05,961 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Update server field in component kubeconfigs] ***************************************************************************************************************
2023-07-10 16:04:05,961 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=admin.conf) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": "admin.conf", "msg": ""}
2023-07-10 16:04:06,176 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=controller-manager.conf) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": "controller-manager.conf", "msg": ""}
2023-07-10 16:04:06,414 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kubelet.conf) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": "kubelet.conf", "msg": ""}
2023-07-10 16:04:06,653 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=scheduler.conf) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": "scheduler.conf", "msg": ""}
2023-07-10 16:04:06,666 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:06 +0300 (0:00:00.943)       0:05:15.061 ****** 
2023-07-10 16:04:06,905 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Update etcd-servers for apiserver] **************************************************************************************************************************
2023-07-10 16:04:06,905 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": ""}
2023-07-10 16:04:06,915 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:06 +0300 (0:00:00.249)       0:05:15.310 ****** 
2023-07-10 16:04:06,934 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Include kubelet client cert rotation fixes] *****************************************************************************************************************
2023-07-10 16:04:06,946 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes/control-plane/tasks/kubelet-fix-client-cert-rotation.yml for node1
2023-07-10 16:04:06,976 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:06 +0300 (0:00:00.060)       0:05:15.371 ****** 
2023-07-10 16:04:07,171 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 1/2] *********************************************************************************************************************
2023-07-10 16:04:07,171 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": ""}
2023-07-10 16:04:07,181 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:07 +0300 (0:00:00.205)       0:05:15.576 ****** 
2023-07-10 16:04:07,448 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Fixup kubelet client cert rotation 2/2] *********************************************************************************************************************
2023-07-10 16:04:07,448 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": ""}
2023-07-10 16:04:07,463 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:07 +0300 (0:00:00.282)       0:05:15.858 ****** 
2023-07-10 16:04:08,010 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/control-plane : Install script to renew K8S control plane certificates] *****************************************************************************************************
2023-07-10 16:04:08,011 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "a63e2b3ee9bbe6a1247d1973e973dfa05f85e91a", "dest": "/usr/local/bin/k8s-certs-renew.sh", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/k8s-certs-renew.sh", "size": 731, "state": "file", "uid": 0}
2023-07-10 16:04:08,022 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.558)       0:05:16.417 ****** 
2023-07-10 16:04:08,068 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.046)       0:05:16.463 ****** 
2023-07-10 16:04:08,197 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.128)       0:05:16.592 ****** 
2023-07-10 16:04:08,298 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/client : Set external kube-apiserver endpoint] ******************************************************************************************************************************
2023-07-10 16:04:08,298 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"external_apiserver_address": "192.168.122.29", "external_apiserver_port": "6443"}, "changed": false}
2023-07-10 16:04:08,310 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.113)       0:05:16.706 ****** 
2023-07-10 16:04:08,526 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/client : Create kube config dir for current/ansible become user] ************************************************************************************************************
2023-07-10 16:04:08,527 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/root/.kube", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:04:08,536 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.225)       0:05:16.931 ****** 
2023-07-10 16:04:08,752 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/client : Copy admin kubeconfig to current/ansible become user home] *********************************************************************************************************
2023-07-10 16:04:08,753 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "3eb86b4da6443e6007f17a9238f7342b76e6cbfa", "dest": "/root/.kube/config", "gid": 0, "group": "root", "md5sum": "bb18dd836225bb61dea7e5e605271b08", "mode": "0600", "owner": "root", "size": 5661, "src": "/etc/kubernetes/admin.conf", "state": "file", "uid": 0}
2023-07-10 16:04:08,763 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.227)       0:05:17.158 ****** 
2023-07-10 16:04:08,789 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:08 +0300 (0:00:00.025)       0:05:17.184 ****** 
2023-07-10 16:04:09,019 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/client : Wait for k8s apiserver] ********************************************************************************************************************************************
2023-07-10 16:04:09,020 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "elapsed": 0, "match_groupdict": {}, "match_groups": [], "path": null, "port": 6443, "search_regex": null, "state": "started"}
2023-07-10 16:04:09,029 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.239)       0:05:17.424 ****** 
2023-07-10 16:04:09,058 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.029)       0:05:17.453 ****** 
2023-07-10 16:04:09,085 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.027)       0:05:17.481 ****** 
2023-07-10 16:04:09,114 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.028)       0:05:17.509 ****** 
2023-07-10 16:04:09,139 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.025)       0:05:17.534 ****** 
2023-07-10 16:04:09,167 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.027)       0:05:17.562 ****** 
2023-07-10 16:04:09,199 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.031)       0:05:17.594 ****** 
2023-07-10 16:04:09,591 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Wait for kube-apiserver] *************************************************************************************************************
2023-07-10 16:04:09,591 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "4b77dbc8-fbd7-4e2d-9ab2-1a4cc862a3ab", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 13:04:09 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 16:04:09,602 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:09 +0300 (0:00:00.403)       0:05:17.997 ****** 
2023-07-10 16:04:10,038 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Add ClusterRoleBinding to admit nodes] ***********************************************************************************************
2023-07-10 16:04:10,042 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "7a5d333673421310e034bd1931c65d490d541632", "dest": "/etc/kubernetes/node-crb.yml", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/kubernetes/node-crb.yml", "size": 408, "state": "file", "uid": 0}
2023-07-10 16:04:10,050 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:10 +0300 (0:00:00.447)       0:05:18.445 ****** 
2023-07-10 16:04:10,080 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:10 +0300 (0:00:00.029)       0:05:18.475 ****** 
2023-07-10 16:04:10,460 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Remove old webhook ClusterRole] ******************************************************************************************************
2023-07-10 16:04:10,460 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: "}
2023-07-10 16:04:10,468 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:10 +0300 (0:00:00.388)       0:05:18.863 ****** 
2023-07-10 16:04:10,680 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : Kubernetes Apps | Remove old webhook ClusterRoleBinding] ***********************************************************************************************
2023-07-10 16:04:10,680 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: "}
2023-07-10 16:04:10,688 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:10 +0300 (0:00:00.220)       0:05:19.083 ****** 
2023-07-10 16:04:10,718 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:10 +0300 (0:00:00.029)       0:05:19.113 ****** 
2023-07-10 16:04:11,082 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : PriorityClass | Copy k8s-cluster-critical-pc.yml file] *************************************************************************************************
2023-07-10 16:04:11,083 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "7257562957d22ed747cbeca924c2dba4a0da01d0", "dest": "/etc/kubernetes/k8s-cluster-critical-pc.yml", "gid": 0, "group": "root", "mode": "0640", "owner": "root", "path": "/etc/kubernetes/k8s-cluster-critical-pc.yml", "size": 229, "state": "file", "uid": 0}
2023-07-10 16:04:11,092 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:11 +0300 (0:00:00.374)       0:05:19.487 ****** 
2023-07-10 16:04:11,931 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/cluster_roles : PriorityClass | Create k8s-cluster-critical] ***********************************************************************************************************
2023-07-10 16:04:11,931 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": "success: priorityclass.scheduling.k8s.io/k8s-cluster-critical configured"}
2023-07-10 16:04:11,969 p=24624 u=kubernetmachine n=ansible | PLAY [k8s_cluster] ***************************************************************************************************************************************************************************
2023-07-10 16:04:12,042 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.950)       0:05:20.437 ****** 
2023-07-10 16:04:12,079 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.036)       0:05:20.474 ****** 
2023-07-10 16:04:12,115 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.036)       0:05:20.511 ****** 
2023-07-10 16:04:12,149 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.033)       0:05:20.544 ****** 
2023-07-10 16:04:12,185 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.035)       0:05:20.580 ****** 
2023-07-10 16:04:12,219 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.034)       0:05:20.614 ****** 
2023-07-10 16:04:12,255 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.035)       0:05:20.650 ****** 
2023-07-10 16:04:12,297 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.041)       0:05:20.692 ****** 
2023-07-10 16:04:12,336 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.039)       0:05:20.731 ****** 
2023-07-10 16:04:12,370 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:12 +0300 (0:00:00.033)       0:05:20.765 ****** 
2023-07-10 16:04:13,980 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:13 +0300 (0:00:01.610)       0:05:22.375 ****** 
2023-07-10 16:04:14,016 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:04:14,017 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:04:14,060 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.079)       0:05:22.455 ****** 
2023-07-10 16:04:14,102 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.042)       0:05:22.497 ****** 
2023-07-10 16:04:14,136 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.034)       0:05:22.531 ****** 
2023-07-10 16:04:14,172 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.035)       0:05:22.567 ****** 
2023-07-10 16:04:14,207 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.034)       0:05:22.602 ****** 
2023-07-10 16:04:14,243 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.036)       0:05:22.638 ****** 
2023-07-10 16:04:14,285 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.042)       0:05:22.681 ****** 
2023-07-10 16:04:14,396 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Set kubeadm_discovery_address] ************************************************************************************************************************************
2023-07-10 16:04:14,396 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadm_discovery_address": "192.168.122.29:6443"}, "changed": false}
2023-07-10 16:04:14,404 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.119)       0:05:22.800 ****** 
2023-07-10 16:04:14,581 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Check if kubelet.conf exists] *************************************************************************************************************************************
2023-07-10 16:04:14,582 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991240.4403322, "block_size": 4096, "blocks": 8, "ctime": 1688991239.8003318, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 287033, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0600", "mtime": 1688991239.8003318, "nlink": 1, "path": "/etc/kubernetes/kubelet.conf", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1977, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 16:04:14,609 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.204)       0:05:23.004 ****** 
2023-07-10 16:04:14,900 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Check if kubeadm CA cert is accessible] ***************************************************************************************************************************
2023-07-10 16:04:14,901 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991228.532325, "block_size": 4096, "blocks": 8, "ctime": 1688991228.4883249, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286899, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688991228.4883249, "nlink": 1, "path": "/etc/kubernetes/ssl/ca.crt", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1099, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 16:04:14,927 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:14 +0300 (0:00:00.317)       0:05:23.322 ****** 
2023-07-10 16:04:15,238 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Calculate kubeadm CA cert hash] ***********************************************************************************************************************************
2023-07-10 16:04:15,238 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && openssl x509 -pubkey -in /etc/kubernetes/ssl/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'", "delta": "0:00:00.014523", "end": "2023-07-10 13:04:15.217835", "msg": "", "rc": 0, "start": "2023-07-10 13:04:15.203312", "stderr": "", "stderr_lines": [], "stdout": "d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79", "stdout_lines": ["d45e185936faf1835f00d418036ec8946af09dd7c5d5e81ed54cf68ebcf5fa79"]}
2023-07-10 16:04:15,267 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.340)       0:05:23.662 ****** 
2023-07-10 16:04:15,321 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.053)       0:05:23.716 ****** 
2023-07-10 16:04:15,375 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.054)       0:05:23.770 ****** 
2023-07-10 16:04:15,441 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Set kubeadm api version to v1beta3] *******************************************************************************************************************************
2023-07-10 16:04:15,442 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"kubeadmConfig_api_version": "v1beta3"}, "changed": false}
2023-07-10 16:04:15,457 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.081)       0:05:23.852 ****** 
2023-07-10 16:04:15,501 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.044)       0:05:23.896 ****** 
2023-07-10 16:04:15,556 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.055)       0:05:23.951 ****** 
2023-07-10 16:04:15,607 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.050)       0:05:24.002 ****** 
2023-07-10 16:04:15,651 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.043)       0:05:24.046 ****** 
2023-07-10 16:04:15,696 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.044)       0:05:24.091 ****** 
2023-07-10 16:04:15,777 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:15 +0300 (0:00:00.080)       0:05:24.172 ****** 
2023-07-10 16:04:16,488 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Update server field in kube-proxy kubeconfig] *********************************************************************************************************************
2023-07-10 16:04:16,488 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": "set -o pipefail && /usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf get configmap kube-proxy -n kube-system -o yaml | sed 's#server:.*#server: https://127.0.0.1:6443#g' | /usr/local/bin/kubectl --kubeconfig /etc/kubernetes/admin.conf replace -f -", "delta": "0:00:00.259983", "end": "2023-07-10 13:04:16.466861", "msg": "", "rc": 0, "start": "2023-07-10 13:04:16.206878", "stderr": "", "stderr_lines": [], "stdout": "configmap/kube-proxy replaced", "stdout_lines": ["configmap/kube-proxy replaced"]}
2023-07-10 16:04:16,503 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:16 +0300 (0:00:00.726)       0:05:24.898 ****** 
2023-07-10 16:04:16,783 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Set ca.crt file permission] ***************************************************************************************************************************************
2023-07-10 16:04:16,784 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/kubernetes/ssl/ca.crt", "size": 1099, "state": "file", "uid": 0}
2023-07-10 16:04:16,819 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:16 +0300 (0:00:00.315)       0:05:25.214 ****** 
2023-07-10 16:04:17,377 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/kubeadm : Restart all kube-proxy pods to ensure that they load the new configmap] *******************************************************************************************
2023-07-10 16:04:17,377 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "delete", "pod", "-n", "kube-system", "-l", "k8s-app=kube-proxy", "--force", "--grace-period=0"], "delta": "0:00:00.129817", "end": "2023-07-10 13:04:17.356834", "msg": "", "rc": 0, "start": "2023-07-10 13:04:17.227017", "stderr": "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.", "stderr_lines": ["Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely."], "stdout": "pod \"kube-proxy-nt9s8\" force deleted", "stdout_lines": ["pod \"kube-proxy-nt9s8\" force deleted"]}
2023-07-10 16:04:17,393 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:17 +0300 (0:00:00.573)       0:05:25.788 ****** 
2023-07-10 16:04:17,452 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:17 +0300 (0:00:00.059)       0:05:25.847 ****** 
2023-07-10 16:04:18,092 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : Kubernetes Apps | Wait for kube-apiserver] *********************************************************************************************************************
2023-07-10 16:04:18,093 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "4d5fee14-1830-4b75-b678-73be28f5d488", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 13:04:18 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 16:04:18,115 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.662)       0:05:26.510 ****** 
2023-07-10 16:04:18,182 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : Set role node label to empty list] *****************************************************************************************************************************
2023-07-10 16:04:18,182 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"role_node_labels": []}, "changed": false}
2023-07-10 16:04:18,200 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.085)       0:05:26.595 ****** 
2023-07-10 16:04:18,263 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.063)       0:05:26.658 ****** 
2023-07-10 16:04:18,330 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : Set inventory node label to empty list] ************************************************************************************************************************
2023-07-10 16:04:18,331 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"inventory_node_labels": []}, "changed": false}
2023-07-10 16:04:18,353 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.089)       0:05:26.748 ****** 
2023-07-10 16:04:18,413 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.059)       0:05:26.808 ****** 
2023-07-10 16:04:18,474 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : debug] *********************************************************************************************************************************************************
2023-07-10 16:04:18,474 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "role_node_labels": []
}
2023-07-10 16:04:18,490 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.077)       0:05:26.885 ****** 
2023-07-10 16:04:18,566 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/node-label : debug] *********************************************************************************************************************************************************
2023-07-10 16:04:18,567 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "inventory_node_labels": []
}
2023-07-10 16:04:18,583 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.092)       0:05:26.978 ****** 
2023-07-10 16:04:18,633 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.049)       0:05:27.028 ****** 
2023-07-10 16:04:18,918 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/cni : CNI | make sure /opt/cni/bin exists] ******************************************************************************************************************************
2023-07-10 16:04:18,919 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "kube", "path": "/opt/cni/bin", "size": 4096, "state": "directory", "uid": 998}
2023-07-10 16:04:18,927 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:18 +0300 (0:00:00.294)       0:05:27.323 ****** 
2023-07-10 16:04:21,648 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/cni : CNI | Copy cni plugins] *******************************************************************************************************************************************
2023-07-10 16:04:21,648 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "dest": "/opt/cni/bin", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/opt/cni/bin", "-z", "-f", "/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/cni-plugins-linux-amd64-v1.3.0.tgz", "state": "directory", "uid": 0}
2023-07-10 16:04:21,664 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:02.736)       0:05:30.059 ****** 
2023-07-10 16:04:21,701 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.037)       0:05:30.096 ****** 
2023-07-10 16:04:21,739 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.038)       0:05:30.134 ****** 
2023-07-10 16:04:21,777 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.038)       0:05:30.172 ****** 
2023-07-10 16:04:21,816 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.038)       0:05:30.211 ****** 
2023-07-10 16:04:21,856 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.039)       0:05:30.251 ****** 
2023-07-10 16:04:21,894 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.038)       0:05:30.289 ****** 
2023-07-10 16:04:21,933 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.038)       0:05:30.328 ****** 
2023-07-10 16:04:21,975 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:21 +0300 (0:00:00.041)       0:05:30.370 ****** 
2023-07-10 16:04:22,013 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.038)       0:05:30.409 ****** 
2023-07-10 16:04:22,060 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.046)       0:05:30.455 ****** 
2023-07-10 16:04:22,249 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Slurp CNI config] **********************************************************************************************************************************************
2023-07-10 16:04:22,250 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "ewogICJuYW1lIjogIms4cy1wb2QtbmV0d29yayIsCiAgImNuaVZlcnNpb24iOiIwLjMuMSIsCiAgInBsdWdpbnMiOlsKICAgIHsKICAgICAgICAgICAgICAgICAgImRhdGFzdG9yZV90eXBlIjogImt1YmVybmV0ZXMiLAogICAgICAgICJub2RlbmFtZSI6ICJub2RlMSIsCiAgICAgICAgICAgICAgICAgICJ0eXBlIjogImNhbGljbyIsCiAgICAgICAgImxvZ19sZXZlbCI6ICJpbmZvIiwKICAgICAgICAgICAgICAgICAgImxvZ19maWxlX3BhdGgiOiAiL3Zhci9sb2cvY2FsaWNvL2NuaS9jbmkubG9nIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaXBhbSI6IHsKICAgICAgICAgICJ0eXBlIjogImNhbGljby1pcGFtIiwKICAgICAgICAgICAgICAgICAgICAgICAgImFzc2lnbl9pcHY0IjogInRydWUiCiAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvbGljeSI6IHsKICAgICAgICAgICJ0eXBlIjogIms4cyIKICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImt1YmVybmV0ZXMiOiB7CiAgICAgICAgICAia3ViZWNvbmZpZyI6ICIvZXRjL2NuaS9uZXQuZC9jYWxpY28ta3ViZWNvbmZpZyIKICAgICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6InBvcnRtYXAiLAogICAgICAiY2FwYWJpbGl0aWVzIjogewogICAgICAgICJwb3J0TWFwcGluZ3MiOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjoiYmFuZHdpZHRoIiwKICAgICAgImNhcGFiaWxpdGllcyI6IHsKICAgICAgICAiYmFuZHdpZHRoIjogdHJ1ZQogICAgICB9CiAgICB9CiAgXQp9", "encoding": "base64", "failed_when_result": false, "source": "/etc/cni/net.d/10-calico.conflist"}
2023-07-10 16:04:22,260 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.199)       0:05:30.655 ****** 
2023-07-10 16:04:22,305 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Set fact calico_cni_config from slurped CNI config] ************************************************************************************************************
2023-07-10 16:04:22,305 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"calico_cni_config": {"cniVersion": "0.3.1", "name": "k8s-pod-network", "plugins": [{"datastore_type": "kubernetes", "ipam": {"assign_ipv4": "true", "type": "calico-ipam"}, "kubernetes": {"kubeconfig": "/etc/cni/net.d/calico-kubeconfig"}, "log_file_path": "/var/log/calico/cni/cni.log", "log_level": "info", "nodename": "node1", "policy": {"type": "k8s"}, "type": "calico"}, {"capabilities": {"portMappings": true}, "type": "portmap"}, {"capabilities": {"bandwidth": true}, "type": "bandwidth"}]}}, "changed": false}
2023-07-10 16:04:22,314 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.054)       0:05:30.709 ****** 
2023-07-10 16:04:22,361 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.047)       0:05:30.757 ****** 
2023-07-10 16:04:22,395 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.033)       0:05:30.790 ****** 
2023-07-10 16:04:22,493 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Gather os specific variables] *************************************************************************************************************************
2023-07-10 16:04:22,494 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml) => {"ansible_facts": {"calico_wireguard_packages": ["wireguard"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/network_plugin/calico/vars/debian.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/network_plugin/calico/vars/../vars/debian.yml"}
2023-07-10 16:04:22,505 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.110)       0:05:30.900 ****** 
2023-07-10 16:04:22,534 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.029)       0:05:30.929 ****** 
2023-07-10 16:04:22,552 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : include_tasks] *************************************************************************************************************************************************
2023-07-10 16:04:22,594 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/network_plugin/calico/tasks/install.yml for node1
2023-07-10 16:04:22,617 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.083)       0:05:31.012 ****** 
2023-07-10 16:04:22,649 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:22 +0300 (0:00:00.031)       0:05:31.044 ****** 
2023-07-10 16:04:24,898 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Copy calicoctl binary from download dir] **************************************************************************************************************
2023-07-10 16:04:24,898 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "bc3f20a899aca3f62451bb7d9b015b9805305216", "dest": "/usr/local/bin/calicoctl", "gid": 0, "group": "root", "md5sum": "9ee5af5751d88e8e52144780db1bc85c", "mode": "0755", "owner": "root", "size": 63789280, "src": "/tmp/releases/calicoctl-v3.25.1-amd64", "state": "file", "uid": 0}
2023-07-10 16:04:24,911 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:24 +0300 (0:00:02.262)       0:05:33.306 ****** 
2023-07-10 16:04:24,957 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:24 +0300 (0:00:00.045)       0:05:33.352 ****** 
2023-07-10 16:04:25,056 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:25 +0300 (0:00:00.098)       0:05:33.451 ****** 
2023-07-10 16:04:25,103 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:25 +0300 (0:00:00.046)       0:05:33.497 ****** 
2023-07-10 16:04:25,153 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:25 +0300 (0:00:00.050)       0:05:33.548 ****** 
2023-07-10 16:04:25,742 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Install calicoctl wrapper script] *********************************************************************************************************************
2023-07-10 16:04:25,742 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "80849706cc7fd83e5d38364f1f00cd0ce675dab4", "dest": "/usr/local/bin/calicoctl.sh", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/usr/local/bin/calicoctl.sh", "size": 135, "state": "file", "uid": 0}
2023-07-10 16:04:25,756 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:25 +0300 (0:00:00.602)       0:05:34.151 ****** 
2023-07-10 16:04:25,799 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:25 +0300 (0:00:00.043)       0:05:34.194 ****** 
2023-07-10 16:04:26,196 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Check if calico network pool has already been configured] *********************************************************************************************
2023-07-10 16:04:26,197 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": "/usr/local/bin/calicoctl.sh get ippool | grep -w \"10.233.64.0/18\" | wc -l\n", "delta": "0:00:00.072794", "end": "2023-07-10 13:04:26.168018", "msg": "", "rc": 0, "start": "2023-07-10 13:04:26.095224", "stderr": "", "stderr_lines": [], "stdout": "1", "stdout_lines": ["1"]}
2023-07-10 16:04:26,215 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.415)       0:05:34.610 ****** 
2023-07-10 16:04:26,273 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.058)       0:05:34.668 ****** 
2023-07-10 16:04:26,333 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.059)       0:05:34.728 ****** 
2023-07-10 16:04:26,413 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.079)       0:05:34.808 ****** 
2023-07-10 16:04:26,781 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Check if extra directory is needed] *******************************************************************************************************************
2023-07-10 16:04:26,781 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688990435.1600134, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "binary", "ctime": 1688990003.8480892, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 393281, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "inode/directory", "mode": "0755", "mtime": 1680306051.0, "nlink": 2, "path": "/tmp/releases/calico-v3.25.1-kdd-crds/crd", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "3392280377", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 16:04:26,800 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.387)       0:05:35.195 ****** 
2023-07-10 16:04:26,862 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.062)       0:05:35.257 ****** 
2023-07-10 16:04:26,969 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kdd path when calico > v3.22.2] *******************************************************************************************************************
2023-07-10 16:04:26,970 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"calico_kdd_path": "/tmp/releases/calico-v3.25.1-kdd-crds/crd"}, "changed": false}
2023-07-10 16:04:26,990 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:26 +0300 (0:00:00.127)       0:05:35.385 ****** 
2023-07-10 16:04:27,575 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create calico manifests for kdd] **********************************************************************************************************************
2023-07-10 16:04:27,576 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "f73078ee458ec8f3f5419c9077bc95a1d2ac072d", "dest": "/etc/kubernetes/kdd-crds.yml", "gid": 0, "group": "root", "md5sum": "23787fd3852984600dc2041ad8065dbf", "mode": "0644", "msg": "OK", "owner": "root", "size": 214511, "src": "/tmp/releases/calico-v3.25.1-kdd-crds/crd", "state": "file", "uid": 0}
2023-07-10 16:04:27,588 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:27 +0300 (0:00:00.598)       0:05:35.983 ****** 
2023-07-10 16:04:28,196 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create Calico Kubernetes datastore resources] *********************************************************************************************************
2023-07-10 16:04:28,196 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "msg": "success: customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org configured customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org configured"}
2023-07-10 16:04:28,205 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:28 +0300 (0:00:00.616)       0:05:36.600 ****** 
2023-07-10 16:04:28,408 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Get existing FelixConfiguration] **********************************************************************************************************************
2023-07-10 16:04:28,409 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "felixconfig", "default", "-o", "json"], "delta": "0:00:00.033718", "end": "2023-07-10 13:04:28.399843", "msg": "", "rc": 0, "start": "2023-07-10 13:04:28.366125", "stderr": "", "stderr_lines": [], "stdout": "{\n  \"kind\": \"FelixConfiguration\",\n  \"apiVersion\": \"projectcalico.org/v3\",\n  \"metadata\": {\n    \"name\": \"default\",\n    \"uid\": \"9d374b09-ded7-4cc3-8780-a0e69e342468\",\n    \"resourceVersion\": \"410\",\n    \"creationTimestamp\": \"2023-07-10T12:14:27Z\"\n  },\n  \"spec\": {\n    \"logSeverityScreen\": \"Info\",\n    \"ipipEnabled\": false,\n    \"vxlanEnabled\": true,\n    \"reportingInterval\": \"0s\",\n    \"bpfEnabled\": false,\n    \"bpfLogLevel\": \"\",\n    \"bpfExternalServiceMode\": \"Tunnel\",\n    \"wireguardEnabled\": false,\n    \"floatingIPs\": \"Disabled\"\n  }\n}", "stdout_lines": ["{", "  \"kind\": \"FelixConfiguration\",", "  \"apiVersion\": \"projectcalico.org/v3\",", "  \"metadata\": {", "    \"name\": \"default\",", "    \"uid\": \"9d374b09-ded7-4cc3-8780-a0e69e342468\",", "    \"resourceVersion\": \"410\",", "    \"creationTimestamp\": \"2023-07-10T12:14:27Z\"", "  },", "  \"spec\": {", "    \"logSeverityScreen\": \"Info\",", "    \"ipipEnabled\": false,", "    \"vxlanEnabled\": true,", "    \"reportingInterval\": \"0s\",", "    \"bpfEnabled\": false,", "    \"bpfLogLevel\": \"\",", "    \"bpfExternalServiceMode\": \"Tunnel\",", "    \"wireguardEnabled\": false,", "    \"floatingIPs\": \"Disabled\"", "  }", "}"]}
2023-07-10 16:04:28,417 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:28 +0300 (0:00:00.212)       0:05:36.812 ****** 
2023-07-10 16:04:28,458 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kubespray FelixConfiguration] *********************************************************************************************************************
2023-07-10 16:04:28,458 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_felix_config": {"apiVersion": "projectcalico.org/v3", "kind": "FelixConfiguration", "metadata": {"name": "default"}, "spec": {"bpfEnabled": false, "bpfExternalServiceMode": "Tunnel", "bpfLogLevel": "", "featureDetectOverride": "", "floatingIPs": "Disabled", "ipipEnabled": false, "logSeverityScreen": "Info", "reportingInterval": "0s", "vxlanEnabled": true, "wireguardEnabled": false}}}, "changed": false}
2023-07-10 16:04:28,467 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:28 +0300 (0:00:00.049)       0:05:36.862 ****** 
2023-07-10 16:04:28,509 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Process FelixConfiguration] ***************************************************************************************************************************
2023-07-10 16:04:28,509 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_felix_config": {"apiVersion": "projectcalico.org/v3", "kind": "FelixConfiguration", "metadata": {"creationTimestamp": "2023-07-10T12:14:27Z", "name": "default", "resourceVersion": "410", "uid": "9d374b09-ded7-4cc3-8780-a0e69e342468"}, "spec": {"bpfEnabled": false, "bpfExternalServiceMode": "Tunnel", "bpfLogLevel": "", "featureDetectOverride": "", "floatingIPs": "Disabled", "ipipEnabled": false, "logSeverityScreen": "Info", "reportingInterval": "0s", "vxlanEnabled": true, "wireguardEnabled": false}}}, "changed": false}
2023-07-10 16:04:28,518 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:28 +0300 (0:00:00.051)       0:05:36.913 ****** 
2023-07-10 16:04:28,738 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Configure calico FelixConfiguration] ******************************************************************************************************************
2023-07-10 16:04:28,739 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "apply", "-f", "-"], "delta": "0:00:00.047759", "end": "2023-07-10 13:04:28.729811", "msg": "", "rc": 0, "start": "2023-07-10 13:04:28.682052", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'FelixConfiguration' resource(s)", "stdout_lines": ["Successfully applied 1 'FelixConfiguration' resource(s)"]}
2023-07-10 16:04:28,747 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:28 +0300 (0:00:00.228)       0:05:37.142 ****** 
2023-07-10 16:04:29,021 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Get existing calico network pool] *********************************************************************************************************************
2023-07-10 16:04:29,022 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ippool", "default-pool", "-o", "json"], "delta": "0:00:00.077541", "end": "2023-07-10 13:04:28.999151", "msg": "", "rc": 0, "start": "2023-07-10 13:04:28.921610", "stderr": "", "stderr_lines": [], "stdout": "{\n  \"kind\": \"IPPool\",\n  \"apiVersion\": \"projectcalico.org/v3\",\n  \"metadata\": {\n    \"name\": \"default-pool\",\n    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",\n    \"resourceVersion\": \"414\",\n    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"\n  },\n  \"spec\": {\n    \"cidr\": \"10.233.64.0/18\",\n    \"vxlanMode\": \"Always\",\n    \"ipipMode\": \"Never\",\n    \"natOutgoing\": true,\n    \"blockSize\": 26,\n    \"nodeSelector\": \"all()\",\n    \"allowedUses\": [\n      \"Workload\",\n      \"Tunnel\"\n    ]\n  }\n}", "stdout_lines": ["{", "  \"kind\": \"IPPool\",", "  \"apiVersion\": \"projectcalico.org/v3\",", "  \"metadata\": {", "    \"name\": \"default-pool\",", "    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",", "    \"resourceVersion\": \"414\",", "    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"", "  },", "  \"spec\": {", "    \"cidr\": \"10.233.64.0/18\",", "    \"vxlanMode\": \"Always\",", "    \"ipipMode\": \"Never\",", "    \"natOutgoing\": true,", "    \"blockSize\": 26,", "    \"nodeSelector\": \"all()\",", "    \"allowedUses\": [", "      \"Workload\",", "      \"Tunnel\"", "    ]", "  }", "}"]}
2023-07-10 16:04:29,031 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.283)       0:05:37.426 ****** 
2023-07-10 16:04:29,083 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kubespray calico network pool] ********************************************************************************************************************
2023-07-10 16:04:29,084 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_calico_pool": {"apiVersion": "projectcalico.org/v3", "kind": "IPPool", "metadata": {"name": "default-pool"}, "spec": {"blockSize": 26, "cidr": "10.233.64.0/18", "ipipMode": "Never", "natOutgoing": true, "vxlanMode": "Always"}}}, "changed": false}
2023-07-10 16:04:29,094 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.063)       0:05:37.489 ****** 
2023-07-10 16:04:29,136 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Process calico network pool] **************************************************************************************************************************
2023-07-10 16:04:29,136 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_calico_pool": {"apiVersion": "projectcalico.org/v3", "kind": "IPPool", "metadata": {"creationTimestamp": "2023-07-10T12:14:30Z", "name": "default-pool", "resourceVersion": "414", "uid": "650dc92c-8e47-48ea-83aa-10436adf420a"}, "spec": {"allowedUses": ["Workload", "Tunnel"], "blockSize": 26, "cidr": "10.233.64.0/18", "ipipMode": "Never", "natOutgoing": true, "nodeSelector": "all()", "vxlanMode": "Always"}}}, "changed": false}
2023-07-10 16:04:29,146 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.051)       0:05:37.541 ****** 
2023-07-10 16:04:29,391 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Configure calico network pool] ************************************************************************************************************************
2023-07-10 16:04:29,391 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "apply", "-f", "-"], "delta": "0:00:00.064736", "end": "2023-07-10 13:04:29.380199", "msg": "", "rc": 0, "start": "2023-07-10 13:04:29.315463", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'IPPool' resource(s)", "stdout_lines": ["Successfully applied 1 'IPPool' resource(s)"]}
2023-07-10 16:04:29,401 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.255)       0:05:37.796 ****** 
2023-07-10 16:04:29,433 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.031)       0:05:37.828 ****** 
2023-07-10 16:04:29,464 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.031)       0:05:37.860 ****** 
2023-07-10 16:04:29,497 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.032)       0:05:37.892 ****** 
2023-07-10 16:04:29,529 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.032)       0:05:37.924 ****** 
2023-07-10 16:04:29,557 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.028)       0:05:37.952 ****** 
2023-07-10 16:04:29,583 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.025)       0:05:37.978 ****** 
2023-07-10 16:04:29,634 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.051)       0:05:38.029 ****** 
2023-07-10 16:04:29,862 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Get existing BGP Configuration] ***********************************************************************************************************************
2023-07-10 16:04:29,862 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "bgpconfig", "default", "-o", "json"], "delta": "0:00:00.052402", "end": "2023-07-10 13:04:29.854134", "msg": "", "rc": 0, "start": "2023-07-10 13:04:29.801732", "stderr": "", "stderr_lines": [], "stdout": "{\n  \"kind\": \"BGPConfiguration\",\n  \"apiVersion\": \"projectcalico.org/v3\",\n  \"metadata\": {\n    \"name\": \"default\",\n    \"uid\": \"fecbed8c-c25d-44ce-9ca3-466135b9f72c\",\n    \"resourceVersion\": \"415\",\n    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"\n  },\n  \"spec\": {\n    \"logSeverityScreen\": \"Info\",\n    \"nodeToNodeMeshEnabled\": true,\n    \"asNumber\": 64512,\n    \"listenPort\": 179\n  }\n}", "stdout_lines": ["{", "  \"kind\": \"BGPConfiguration\",", "  \"apiVersion\": \"projectcalico.org/v3\",", "  \"metadata\": {", "    \"name\": \"default\",", "    \"uid\": \"fecbed8c-c25d-44ce-9ca3-466135b9f72c\",", "    \"resourceVersion\": \"415\",", "    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"", "  },", "  \"spec\": {", "    \"logSeverityScreen\": \"Info\",", "    \"nodeToNodeMeshEnabled\": true,", "    \"asNumber\": 64512,", "    \"listenPort\": 179", "  }", "}"]}
2023-07-10 16:04:29,871 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.237)       0:05:38.267 ****** 
2023-07-10 16:04:29,936 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set kubespray BGP Configuration] **********************************************************************************************************************
2023-07-10 16:04:29,936 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_bgp_config": {"apiVersion": "projectcalico.org/v3", "kind": "BGPConfiguration", "metadata": {"name": "default"}, "spec": {"asNumber": 64512, "listenPort": 179, "logSeverityScreen": "Info", "nodeToNodeMeshEnabled": true, "serviceExternalIPs": []}}}, "changed": false}
2023-07-10 16:04:29,946 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.074)       0:05:38.341 ****** 
2023-07-10 16:04:29,988 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Process BGP Configuration] ****************************************************************************************************************************
2023-07-10 16:04:29,989 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"_bgp_config": {"apiVersion": "projectcalico.org/v3", "kind": "BGPConfiguration", "metadata": {"creationTimestamp": "2023-07-10T12:14:30Z", "name": "default", "resourceVersion": "415", "uid": "fecbed8c-c25d-44ce-9ca3-466135b9f72c"}, "spec": {"asNumber": 64512, "listenPort": 179, "logSeverityScreen": "Info", "nodeToNodeMeshEnabled": true, "serviceExternalIPs": []}}}, "changed": false}
2023-07-10 16:04:29,998 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:29 +0300 (0:00:00.051)       0:05:38.393 ****** 
2023-07-10 16:04:30,219 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Set up BGP Configuration] *****************************************************************************************************************************
2023-07-10 16:04:30,220 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "apply", "-f", "-"], "delta": "0:00:00.045921", "end": "2023-07-10 13:04:30.211369", "msg": "", "rc": 0, "start": "2023-07-10 13:04:30.165448", "stderr": "", "stderr_lines": [], "stdout": "Successfully applied 1 'BGPConfiguration' resource(s)", "stdout_lines": ["Successfully applied 1 'BGPConfiguration' resource(s)"]}
2023-07-10 16:04:30,228 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:30 +0300 (0:00:00.230)       0:05:38.623 ****** 
2023-07-10 16:04:30,674 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create calico manifests] ******************************************************************************************************************************
2023-07-10 16:04:30,675 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico-config', 'file': 'calico-config.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "c665a33330ebee474eebe35c10a28d91c8535cd8", "dest": "/etc/kubernetes/calico-config.yml", "gid": 0, "group": "root", "item": {"file": "calico-config.yml", "name": "calico-config", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-config.yml", "size": 1290, "state": "file", "uid": 0}
2023-07-10 16:04:31,066 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico-node', 'file': 'calico-node.yml', 'type': 'ds'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "4b4f2b7440bcce08026d388a931dd3c98e19f805", "dest": "/etc/kubernetes/calico-node.yml", "gid": 0, "group": "root", "item": {"file": "calico-node.yml", "name": "calico-node", "type": "ds"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-node.yml", "size": 11092, "state": "file", "uid": 0}
2023-07-10 16:04:31,411 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico', 'file': 'calico-node-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "a0486f717ae24476c480c8d36d7a739feb82a979", "dest": "/etc/kubernetes/calico-node-sa.yml", "gid": 0, "group": "root", "item": {"file": "calico-node-sa.yml", "name": "calico", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-node-sa.yml", "size": 95, "state": "file", "uid": 0}
2023-07-10 16:04:31,737 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico', 'file': 'calico-cr.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "28de303dfe4af1f78570be095b5a713fe078eeee", "dest": "/etc/kubernetes/calico-cr.yml", "gid": 0, "group": "root", "item": {"file": "calico-cr.yml", "name": "calico", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-cr.yml", "size": 3625, "state": "file", "uid": 0}
2023-07-10 16:04:32,265 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico', 'file': 'calico-crb.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "f7cf2e3bcd232f0a5ef12f1f47b7c70af7c9f5c1", "dest": "/etc/kubernetes/calico-crb.yml", "gid": 0, "group": "root", "item": {"file": "calico-crb.yml", "name": "calico", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-crb.yml", "size": 265, "state": "file", "uid": 0}
2023-07-10 16:04:33,034 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'kubernetes-services-endpoint', 'file': 'kubernetes-services-endpoint.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "9f82492c750fb008b548336fad4f5bad3020aa07", "dest": "/etc/kubernetes/kubernetes-services-endpoint.yml", "gid": 0, "group": "root", "item": {"file": "kubernetes-services-endpoint.yml", "name": "kubernetes-services-endpoint", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/kubernetes-services-endpoint.yml", "size": 113, "state": "file", "uid": 0}
2023-07-10 16:04:33,063 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:33 +0300 (0:00:02.835)       0:05:41.459 ****** 
2023-07-10 16:04:33,141 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:33 +0300 (0:00:00.077)       0:05:41.536 ****** 
2023-07-10 16:04:33,210 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:33 +0300 (0:00:00.068)       0:05:41.605 ****** 
2023-07-10 16:04:33,278 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:33 +0300 (0:00:00.068)       0:05:41.673 ****** 
2023-07-10 16:04:33,356 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:33 +0300 (0:00:00.077)       0:05:41.751 ****** 
2023-07-10 16:04:34,029 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Start Calico resources] ****************************************************************************************************************************************
2023-07-10 16:04:34,030 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-config.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "c665a33330ebee474eebe35c10a28d91c8535cd8", "dest": "/etc/kubernetes/calico-config.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-config.yml"}, "before": {"path": "/etc/kubernetes/calico-config.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-config.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-config.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-config.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-config.yml", "name": "calico-config", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-config.yml", "size": 1290, "state": "file", "uid": 0}, "msg": "success: configmap/calico-config unchanged"}
2023-07-10 16:04:34,529 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-node.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "4b4f2b7440bcce08026d388a931dd3c98e19f805", "dest": "/etc/kubernetes/calico-node.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-node.yml"}, "before": {"path": "/etc/kubernetes/calico-node.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-node.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-node.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-node.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-node.yml", "name": "calico-node", "type": "ds"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-node.yml", "size": 11092, "state": "file", "uid": 0}, "msg": "success: daemonset.apps/calico-node configured"}
2023-07-10 16:04:35,071 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-node-sa.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "a0486f717ae24476c480c8d36d7a739feb82a979", "dest": "/etc/kubernetes/calico-node-sa.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-node-sa.yml"}, "before": {"path": "/etc/kubernetes/calico-node-sa.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-node-sa.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-node-sa.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-node-sa.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-node-sa.yml", "name": "calico", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-node-sa.yml", "size": 95, "state": "file", "uid": 0}, "msg": "success: serviceaccount/calico-node unchanged"}
2023-07-10 16:04:35,596 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-cr.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "28de303dfe4af1f78570be095b5a713fe078eeee", "dest": "/etc/kubernetes/calico-cr.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-cr.yml"}, "before": {"path": "/etc/kubernetes/calico-cr.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-cr.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-cr.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-cr.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-cr.yml", "name": "calico", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-cr.yml", "size": 3625, "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/calico-node unchanged"}
2023-07-10 16:04:36,088 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-crb.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "f7cf2e3bcd232f0a5ef12f1f47b7c70af7c9f5c1", "dest": "/etc/kubernetes/calico-crb.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-crb.yml"}, "before": {"path": "/etc/kubernetes/calico-crb.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-crb.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-crb.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-crb.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-crb.yml", "name": "calico", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-crb.yml", "size": 265, "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/calico-node unchanged"}
2023-07-10 16:04:36,375 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=kubernetes-services-endpoint.yml) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "9f82492c750fb008b548336fad4f5bad3020aa07", "dest": "/etc/kubernetes/kubernetes-services-endpoint.yml", "diff": {"after": {"path": "/etc/kubernetes/kubernetes-services-endpoint.yml"}, "before": {"path": "/etc/kubernetes/kubernetes-services-endpoint.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "kubernetes-services-endpoint.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/kubernetes-services-endpoint.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/kubernetes-services-endpoint.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "kubernetes-services-endpoint.yml", "name": "kubernetes-services-endpoint", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/kubernetes-services-endpoint.yml", "size": 113, "state": "file", "uid": 0}, "msg": "success: configmap/kubernetes-services-endpoint configured"}
2023-07-10 16:04:36,388 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:36 +0300 (0:00:03.032)       0:05:44.783 ****** 
2023-07-10 16:04:36,425 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:36 +0300 (0:00:00.036)       0:05:44.820 ****** 
2023-07-10 16:04:36,453 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:36 +0300 (0:00:00.028)       0:05:44.848 ****** 
2023-07-10 16:04:36,801 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create Calico ipam manifests] *************************************************************************************************************************
2023-07-10 16:04:36,801 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico', 'file': 'calico-ipamconfig.yml', 'type': 'ipam'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "c896a85b4dd7f3b156122af21e4f600852040cbc", "dest": "/etc/kubernetes/calico-ipamconfig.yml", "gid": 0, "group": "root", "item": {"file": "calico-ipamconfig.yml", "name": "calico", "type": "ipam"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-ipamconfig.yml", "size": 159, "state": "file", "uid": 0}
2023-07-10 16:04:36,814 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:36 +0300 (0:00:00.360)       0:05:45.209 ****** 
2023-07-10 16:04:37,120 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Calico | Create ipamconfig resources] **************************************************************************************************************************
2023-07-10 16:04:37,120 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "msg": "success: ipamconfig.crd.projectcalico.org/default unchanged"}
2023-07-10 16:04:37,129 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.315)       0:05:45.524 ****** 
2023-07-10 16:04:37,169 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.040)       0:05:45.564 ****** 
2023-07-10 16:04:37,212 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.042)       0:05:45.607 ****** 
2023-07-10 16:04:37,239 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.027)       0:05:45.634 ****** 
2023-07-10 16:04:37,289 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.049)       0:05:45.684 ****** 
2023-07-10 16:04:37,316 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.026)       0:05:45.711 ****** 
2023-07-10 16:04:37,358 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.042)       0:05:45.753 ****** 
2023-07-10 16:04:37,385 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.026)       0:05:45.780 ****** 
2023-07-10 16:04:37,411 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.025)       0:05:45.806 ****** 
2023-07-10 16:04:37,439 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.028)       0:05:45.834 ****** 
2023-07-10 16:04:37,465 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.025)       0:05:45.860 ****** 
2023-07-10 16:04:37,493 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.027)       0:05:45.888 ****** 
2023-07-10 16:04:37,545 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.051)       0:05:45.940 ****** 
2023-07-10 16:04:37,571 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.025)       0:05:45.966 ****** 
2023-07-10 16:04:37,616 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.044)       0:05:46.011 ****** 
2023-07-10 16:04:37,642 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.026)       0:05:46.037 ****** 
2023-07-10 16:04:37,677 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.035)       0:05:46.072 ****** 
2023-07-10 16:04:37,718 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.040)       0:05:46.113 ****** 
2023-07-10 16:04:37,745 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.027)       0:05:46.140 ****** 
2023-07-10 16:04:37,771 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.026)       0:05:46.166 ****** 
2023-07-10 16:04:37,806 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.034)       0:05:46.201 ****** 
2023-07-10 16:04:37,836 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.030)       0:05:46.231 ****** 
2023-07-10 16:04:37,889 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.052)       0:05:46.284 ****** 
2023-07-10 16:04:37,918 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.028)       0:05:46.313 ****** 
2023-07-10 16:04:37,947 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.028)       0:05:46.342 ****** 
2023-07-10 16:04:37,987 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:37 +0300 (0:00:00.040)       0:05:46.382 ****** 
2023-07-10 16:04:38,016 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.029)       0:05:46.411 ****** 
2023-07-10 16:04:38,044 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.027)       0:05:46.439 ****** 
2023-07-10 16:04:38,071 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.027)       0:05:46.466 ****** 
2023-07-10 16:04:38,098 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.027)       0:05:46.493 ****** 
2023-07-10 16:04:38,124 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.025)       0:05:46.519 ****** 
2023-07-10 16:04:38,152 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.027)       0:05:46.547 ****** 
2023-07-10 16:04:38,191 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.039)       0:05:46.586 ****** 
2023-07-10 16:04:38,231 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.039)       0:05:46.626 ****** 
2023-07-10 16:04:38,258 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.026)       0:05:46.653 ****** 
2023-07-10 16:04:38,281 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.023)       0:05:46.676 ****** 
2023-07-10 16:04:38,313 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.031)       0:05:46.708 ****** 
2023-07-10 16:04:38,367 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.053)       0:05:46.762 ****** 
2023-07-10 16:04:38,410 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.044)       0:05:46.806 ****** 
2023-07-10 16:04:38,468 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.058)       0:05:46.864 ****** 
2023-07-10 16:04:38,550 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.081)       0:05:46.945 ****** 
2023-07-10 16:04:38,579 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.029)       0:05:46.974 ****** 
2023-07-10 16:04:38,607 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.028)       0:05:47.003 ****** 
2023-07-10 16:04:38,637 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.029)       0:05:47.032 ****** 
2023-07-10 16:04:38,665 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.028)       0:05:47.060 ****** 
2023-07-10 16:04:38,693 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.027)       0:05:47.088 ****** 
2023-07-10 16:04:38,729 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.036)       0:05:47.124 ****** 
2023-07-10 16:04:38,765 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.035)       0:05:47.160 ****** 
2023-07-10 16:04:38,800 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.035)       0:05:47.195 ****** 
2023-07-10 16:04:38,827 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.027)       0:05:47.223 ****** 
2023-07-10 16:04:38,899 p=24624 u=kubernetmachine n=ansible | PLAY [calico_rr] *****************************************************************************************************************************************************************************
2023-07-10 16:04:38,899 p=24624 u=kubernetmachine n=ansible | skipping: no hosts matched
2023-07-10 16:04:38,900 p=24624 u=kubernetmachine n=ansible | PLAY [kube_control_plane[0]] *****************************************************************************************************************************************************************
2023-07-10 16:04:38,936 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.108)       0:05:47.331 ****** 
2023-07-10 16:04:38,974 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:38 +0300 (0:00:00.038)       0:05:47.369 ****** 
2023-07-10 16:04:39,011 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.037)       0:05:47.407 ****** 
2023-07-10 16:04:39,045 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.033)       0:05:47.440 ****** 
2023-07-10 16:04:39,079 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.034)       0:05:47.475 ****** 
2023-07-10 16:04:39,114 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.034)       0:05:47.509 ****** 
2023-07-10 16:04:39,149 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.035)       0:05:47.544 ****** 
2023-07-10 16:04:39,186 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.036)       0:05:47.581 ****** 
2023-07-10 16:04:39,222 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.036)       0:05:47.617 ****** 
2023-07-10 16:04:39,271 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:39 +0300 (0:00:00.048)       0:05:47.666 ****** 
2023-07-10 16:04:41,144 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:01.873)       0:05:49.539 ****** 
2023-07-10 16:04:41,183 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:04:41,184 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:04:41,226 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.081)       0:05:49.621 ****** 
2023-07-10 16:04:41,268 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.042)       0:05:49.663 ****** 
2023-07-10 16:04:41,304 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.035)       0:05:49.699 ****** 
2023-07-10 16:04:41,341 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.037)       0:05:49.736 ****** 
2023-07-10 16:04:41,381 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.039)       0:05:49.776 ****** 
2023-07-10 16:04:41,419 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.037)       0:05:49.814 ****** 
2023-07-10 16:04:41,457 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.038)       0:05:49.852 ****** 
2023-07-10 16:04:41,676 p=24624 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : Ensure that user manifests directory exists] **************************************************************************************************************
2023-07-10 16:04:41,676 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/root/kube-manifests/kubernetes", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:04:41,692 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:41 +0300 (0:00:00.234)       0:05:50.087 ****** 
2023-07-10 16:04:42,038 p=24624 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : Check current nodeselector for kube-proxy daemonset] ******************************************************************************************************
2023-07-10 16:04:42,039 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "ds", "kube-proxy", "--namespace=kube-system", "-o", "jsonpath={.spec.template.spec.nodeSelector.kubernetes.io/os}"], "delta": "0:00:00.075926", "end": "2023-07-10 13:04:42.022013", "msg": "", "rc": 0, "start": "2023-07-10 13:04:41.946087", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:04:42,050 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.357)       0:05:50.445 ****** 
2023-07-10 16:04:42,401 p=24624 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : Apply nodeselector patch for kube-proxy daemonset] ********************************************************************************************************
2023-07-10 16:04:42,402 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"changed": true, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "patch", "ds", "kube-proxy", "--namespace=kube-system", "--type=strategic", "-p", "{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"} }}}}"], "delta": "0:00:00.081647", "end": "2023-07-10 13:04:42.385959", "msg": "", "rc": 0, "start": "2023-07-10 13:04:42.304312", "stderr": "", "stderr_lines": [], "stdout": "daemonset.apps/kube-proxy patched (no change)", "stdout_lines": ["daemonset.apps/kube-proxy patched (no change)"]}
2023-07-10 16:04:42,415 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.364)       0:05:50.810 ****** 
2023-07-10 16:04:42,498 p=24624 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : debug] ****************************************************************************************************************************************************
2023-07-10 16:04:42,499 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": [
        "daemonset.apps/kube-proxy patched (no change)"
    ]
}
2023-07-10 16:04:42,509 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.094)       0:05:50.904 ****** 
2023-07-10 16:04:42,586 p=24624 u=kubernetmachine n=ansible | TASK [win_nodes/kubernetes_patch : debug] ****************************************************************************************************************************************************
2023-07-10 16:04:42,587 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": []
}
2023-07-10 16:04:42,627 p=24624 u=kubernetmachine n=ansible | PLAY [kube_control_plane] ********************************************************************************************************************************************************************
2023-07-10 16:04:42,761 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.251)       0:05:51.156 ****** 
2023-07-10 16:04:42,801 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.040)       0:05:51.196 ****** 
2023-07-10 16:04:42,843 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.041)       0:05:51.238 ****** 
2023-07-10 16:04:42,881 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.038)       0:05:51.276 ****** 
2023-07-10 16:04:42,922 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.040)       0:05:51.317 ****** 
2023-07-10 16:04:42,962 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.039)       0:05:51.357 ****** 
2023-07-10 16:04:43,001 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:42 +0300 (0:00:00.038)       0:05:51.396 ****** 
2023-07-10 16:04:43,042 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:43 +0300 (0:00:00.041)       0:05:51.437 ****** 
2023-07-10 16:04:43,080 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:43 +0300 (0:00:00.038)       0:05:51.475 ****** 
2023-07-10 16:04:43,117 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:43 +0300 (0:00:00.036)       0:05:51.512 ****** 
2023-07-10 16:04:45,062 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:01.945)       0:05:53.457 ****** 
2023-07-10 16:04:45,101 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:04:45,101 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:04:45,151 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.089)       0:05:53.547 ****** 
2023-07-10 16:04:45,201 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.049)       0:05:53.596 ****** 
2023-07-10 16:04:45,236 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.034)       0:05:53.631 ****** 
2023-07-10 16:04:45,274 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.037)       0:05:53.669 ****** 
2023-07-10 16:04:45,310 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.036)       0:05:53.705 ****** 
2023-07-10 16:04:45,348 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.038)       0:05:53.744 ****** 
2023-07-10 16:04:45,388 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.039)       0:05:53.783 ****** 
2023-07-10 16:04:45,418 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.030)       0:05:53.813 ****** 
2023-07-10 16:04:45,448 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.030)       0:05:53.843 ****** 
2023-07-10 16:04:45,479 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.030)       0:05:53.874 ****** 
2023-07-10 16:04:45,534 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.055)       0:05:53.929 ****** 
2023-07-10 16:04:45,599 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.064)       0:05:53.994 ****** 
2023-07-10 16:04:45,628 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.029)       0:05:54.024 ****** 
2023-07-10 16:04:45,671 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.042)       0:05:54.066 ****** 
2023-07-10 16:04:45,735 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.063)       0:05:54.130 ****** 
2023-07-10 16:04:45,768 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.032)       0:05:54.163 ****** 
2023-07-10 16:04:45,799 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.030)       0:05:54.194 ****** 
2023-07-10 16:04:45,865 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.066)       0:05:54.260 ****** 
2023-07-10 16:04:45,898 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.032)       0:05:54.293 ****** 
2023-07-10 16:04:45,955 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.057)       0:05:54.350 ****** 
2023-07-10 16:04:45,996 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:45 +0300 (0:00:00.041)       0:05:54.391 ****** 
2023-07-10 16:04:46,037 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.040)       0:05:54.432 ****** 
2023-07-10 16:04:46,092 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.054)       0:05:54.487 ****** 
2023-07-10 16:04:46,121 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.028)       0:05:54.516 ****** 
2023-07-10 16:04:46,169 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.047)       0:05:54.564 ****** 
2023-07-10 16:04:46,216 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.047)       0:05:54.612 ****** 
2023-07-10 16:04:46,335 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.118)       0:05:54.730 ****** 
2023-07-10 16:04:46,415 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:46 +0300 (0:00:00.080)       0:05:54.810 ****** 
2023-07-10 16:04:46,863 p=24624 u=kubernetmachine n=ansible | TASK [policy_controller/calico : Create calico-kube-controllers manifests] *******************************************************************************************************************
2023-07-10 16:04:46,863 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-controllers.yml', 'type': 'deployment'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "d2db5b321f4dac41d1edf44660b6dfceacd1bb80", "dest": "/etc/kubernetes/calico-kube-controllers.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-controllers.yml", "name": "calico-kube-controllers", "type": "deployment"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-controllers.yml", "size": 1656, "state": "file", "uid": 0}
2023-07-10 16:04:47,198 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "468d0809606571a9cf437d6f6e15f9ee1b372940", "dest": "/etc/kubernetes/calico-kube-sa.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-sa.yml", "name": "calico-kube-controllers", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-sa.yml", "size": 107, "state": "file", "uid": 0}
2023-07-10 16:04:47,572 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-cr.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "7e05b7fa4c9e581eb01e485bb6d3cae327031abf", "dest": "/etc/kubernetes/calico-kube-cr.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-cr.yml", "name": "calico-kube-controllers", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-cr.yml", "size": 1733, "state": "file", "uid": 0}
2023-07-10 16:04:47,907 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'calico-kube-controllers', 'file': 'calico-kube-crb.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "c53baef2dd6c15731acf1f9cb1a61f3d51cd7335", "dest": "/etc/kubernetes/calico-kube-crb.yml", "gid": 0, "group": "root", "item": {"file": "calico-kube-crb.yml", "name": "calico-kube-controllers", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-crb.yml", "size": 301, "state": "file", "uid": 0}
2023-07-10 16:04:47,918 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:47 +0300 (0:00:01.503)       0:05:56.313 ****** 
2023-07-10 16:04:48,300 p=24624 u=kubernetmachine n=ansible | TASK [policy_controller/calico : Start of Calico kube controllers] ***************************************************************************************************************************
2023-07-10 16:04:48,301 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-controllers.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "d2db5b321f4dac41d1edf44660b6dfceacd1bb80", "dest": "/etc/kubernetes/calico-kube-controllers.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-kube-controllers.yml"}, "before": {"path": "/etc/kubernetes/calico-kube-controllers.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-kube-controllers.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-kube-controllers.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-kube-controllers.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-kube-controllers.yml", "name": "calico-kube-controllers", "type": "deployment"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-controllers.yml", "size": 1656, "state": "file", "uid": 0}, "msg": "success: deployment.apps/calico-kube-controllers configured"}
2023-07-10 16:04:48,605 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "468d0809606571a9cf437d6f6e15f9ee1b372940", "dest": "/etc/kubernetes/calico-kube-sa.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-kube-sa.yml"}, "before": {"path": "/etc/kubernetes/calico-kube-sa.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-kube-sa.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-kube-sa.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-kube-sa.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-kube-sa.yml", "name": "calico-kube-controllers", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-sa.yml", "size": 107, "state": "file", "uid": 0}, "msg": "success: serviceaccount/calico-kube-controllers unchanged"}
2023-07-10 16:04:48,924 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-cr.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "7e05b7fa4c9e581eb01e485bb6d3cae327031abf", "dest": "/etc/kubernetes/calico-kube-cr.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-kube-cr.yml"}, "before": {"path": "/etc/kubernetes/calico-kube-cr.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-kube-cr.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-kube-cr.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-kube-cr.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-kube-cr.yml", "name": "calico-kube-controllers", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-cr.yml", "size": 1733, "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/calico-kube-controllers unchanged"}
2023-07-10 16:04:49,239 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=calico-kube-crb.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "c53baef2dd6c15731acf1f9cb1a61f3d51cd7335", "dest": "/etc/kubernetes/calico-kube-crb.yml", "diff": {"after": {"path": "/etc/kubernetes/calico-kube-crb.yml"}, "before": {"path": "/etc/kubernetes/calico-kube-crb.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "calico-kube-crb.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/calico-kube-crb.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/calico-kube-crb.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "calico-kube-crb.yml", "name": "calico-kube-controllers", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/calico-kube-crb.yml", "size": 301, "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers unchanged"}
2023-07-10 16:04:49,268 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:49 +0300 (0:00:01.349)       0:05:57.663 ****** 
2023-07-10 16:04:49,453 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create addon dir] ****************************************************************************************
2023-07-10 16:04:49,454 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:04:49,464 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:49 +0300 (0:00:00.195)       0:05:57.859 ****** 
2023-07-10 16:04:49,506 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Templates list] ******************************************************************************************
2023-07-10 16:04:49,507 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"ingress_nginx_templates": [{"file": "00-namespace.yml", "name": "00-namespace", "type": "ns"}, {"file": "cm-ingress-nginx.yml", "name": "cm-ingress-nginx", "type": "cm"}, {"file": "cm-tcp-services.yml", "name": "cm-tcp-services", "type": "cm"}, {"file": "cm-udp-services.yml", "name": "cm-udp-services", "type": "cm"}, {"file": "sa-ingress-nginx.yml", "name": "sa-ingress-nginx", "type": "sa"}, {"file": "clusterrole-ingress-nginx.yml", "name": "clusterrole-ingress-nginx", "type": "clusterrole"}, {"file": "clusterrolebinding-ingress-nginx.yml", "name": "clusterrolebinding-ingress-nginx", "type": "clusterrolebinding"}, {"file": "role-ingress-nginx.yml", "name": "role-ingress-nginx", "type": "role"}, {"file": "rolebinding-ingress-nginx.yml", "name": "rolebinding-ingress-nginx", "type": "rolebinding"}, {"file": "ingressclass-nginx.yml", "name": "ingressclass-nginx", "type": "ingressclass"}, {"file": "ds-ingress-nginx-controller.yml", "name": "ds-ingress-nginx-controller", "type": "ds"}], "ingress_nginx_templates_for_webhook": [{"file": "admission-webhook-configuration.yml", "name": "admission-webhook-configuration", "type": "sa"}, {"file": "sa-admission-webhook.yml", "name": "sa-admission-webhook", "type": "sa"}, {"file": "clusterrole-admission-webhook.yml", "name": "clusterrole-admission-webhook", "type": "clusterrole"}, {"file": "clusterrolebinding-admission-webhook.yml", "name": "clusterrolebinding-admission-webhook", "type": "clusterrolebinding"}, {"file": "role-admission-webhook.yml", "name": "role-admission-webhook", "type": "role"}, {"file": "rolebinding-admission-webhook.yml", "name": "rolebinding-admission-webhook", "type": "rolebinding"}, {"file": "admission-webhook-job.yml", "name": "admission-webhook-job", "type": "job"}]}, "changed": false}
2023-07-10 16:04:49,518 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:49 +0300 (0:00:00.053)       0:05:57.913 ****** 
2023-07-10 16:04:49,549 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:49 +0300 (0:00:00.030)       0:05:57.944 ****** 
2023-07-10 16:04:49,923 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create manifests] ****************************************************************************************
2023-07-10 16:04:49,924 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': '00-namespace', 'file': '00-namespace.yml', 'type': 'ns'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "ec784415eedb3d4acdc596120302f03ba1597d6c", "dest": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "gid": 0, "group": "root", "item": {"file": "00-namespace.yml", "name": "00-namespace", "type": "ns"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "size": 101, "state": "file", "uid": 0}
2023-07-10 16:04:50,299 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'cm-ingress-nginx', 'file': 'cm-ingress-nginx.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "21abafe1642e803c0dc8f42d517ac042aacb8758", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "cm-ingress-nginx.yml", "name": "cm-ingress-nginx", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "size": 191, "state": "file", "uid": 0}
2023-07-10 16:04:50,630 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'cm-tcp-services', 'file': 'cm-tcp-services.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "73fadd9dc75443c74ec6fb32c3af0d6ee5e74725", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "gid": 0, "group": "root", "item": {"file": "cm-tcp-services.yml", "name": "cm-tcp-services", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "size": 190, "state": "file", "uid": 0}
2023-07-10 16:04:51,001 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'cm-udp-services', 'file': 'cm-udp-services.yml', 'type': 'cm'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "d27cbf4031b2499e503d3543f8686db88e6a7b89", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "gid": 0, "group": "root", "item": {"file": "cm-udp-services.yml", "name": "cm-udp-services", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "size": 190, "state": "file", "uid": 0}
2023-07-10 16:04:51,341 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'sa-ingress-nginx', 'file': 'sa-ingress-nginx.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "7dc36b670e034bcc62169c0235b180dbab4a29cc", "dest": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "sa-ingress-nginx.yml", "name": "sa-ingress-nginx", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "size": 196, "state": "file", "uid": 0}
2023-07-10 16:04:51,696 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'clusterrole-ingress-nginx', 'file': 'clusterrole-ingress-nginx.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "2d4cb86860884294a6f030640a68b0ce76dba4cc", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "clusterrole-ingress-nginx.yml", "name": "clusterrole-ingress-nginx", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "size": 1075, "state": "file", "uid": 0}
2023-07-10 16:04:52,027 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'clusterrolebinding-ingress-nginx', 'file': 'clusterrolebinding-ingress-nginx.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "b398b84183957c90a208c29444b00c4443aa282e", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "clusterrolebinding-ingress-nginx.yml", "name": "clusterrolebinding-ingress-nginx", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "size": 376, "state": "file", "uid": 0}
2023-07-10 16:04:52,361 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'role-ingress-nginx', 'file': 'role-ingress-nginx.yml', 'type': 'role'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "e6ed8e57add454469f73b46d916a2d57e08aae2c", "dest": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "role-ingress-nginx.yml", "name": "role-ingress-nginx", "type": "role"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "size": 1784, "state": "file", "uid": 0}
2023-07-10 16:04:52,691 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'rolebinding-ingress-nginx', 'file': 'rolebinding-ingress-nginx.yml', 'type': 'rolebinding'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "784d7187b8125dbe6750d2186613dd24343bdf8b", "dest": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "gid": 0, "group": "root", "item": {"file": "rolebinding-ingress-nginx.yml", "name": "rolebinding-ingress-nginx", "type": "rolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "size": 389, "state": "file", "uid": 0}
2023-07-10 16:04:53,041 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'ingressclass-nginx', 'file': 'ingressclass-nginx.yml', 'type': 'ingressclass'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "ec7007c44829fc7ff2e076db13f169e9bc1c370e", "dest": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "gid": 0, "group": "root", "item": {"file": "ingressclass-nginx.yml", "name": "ingressclass-nginx", "type": "ingressclass"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "size": 214, "state": "file", "uid": 0}
2023-07-10 16:04:53,452 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'ds-ingress-nginx-controller', 'file': 'ds-ingress-nginx-controller.yml', 'type': 'ds'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "26de85996a58c8109592bde7851552551ff46353", "dest": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "gid": 0, "group": "root", "item": {"file": "ds-ingress-nginx-controller.yml", "name": "ds-ingress-nginx-controller", "type": "ds"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "size": 2985, "state": "file", "uid": 0}
2023-07-10 16:04:53,473 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:53 +0300 (0:00:03.924)       0:06:01.868 ****** 
2023-07-10 16:04:54,042 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Apply manifests] *****************************************************************************************
2023-07-10 16:04:54,043 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 101, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml', '_original_basename': '00-namespace.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': 'ec784415eedb3d4acdc596120302f03ba1597d6c', 'dest': '/etc/kubernetes/addons/ingress_nginx/00-namespace.yml', 'failed': False, 'item': {'name': '00-namespace', 'file': '00-namespace.yml', 'type': 'ns'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "ec784415eedb3d4acdc596120302f03ba1597d6c", "dest": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "00-namespace.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "00-namespace.yml", "name": "00-namespace", "type": "ns"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/00-namespace.yml", "size": 101, "state": "file", "uid": 0}, "msg": "success: namespace/ingress-nginx unchanged"}
2023-07-10 16:04:54,512 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 191, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml', '_original_basename': 'cm-ingress-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': '21abafe1642e803c0dc8f42d517ac042aacb8758', 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml', 'failed': False, 'item': {'name': 'cm-ingress-nginx', 'file': 'cm-ingress-nginx.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "21abafe1642e803c0dc8f42d517ac042aacb8758", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "cm-ingress-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "cm-ingress-nginx.yml", "name": "cm-ingress-nginx", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/cm-ingress-nginx.yml", "size": 191, "state": "file", "uid": 0}, "msg": "success: configmap/ingress-nginx unchanged"}
2023-07-10 16:04:54,969 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 190, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml', '_original_basename': 'cm-tcp-services.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': '73fadd9dc75443c74ec6fb32c3af0d6ee5e74725', 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml', 'failed': False, 'item': {'name': 'cm-tcp-services', 'file': 'cm-tcp-services.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "73fadd9dc75443c74ec6fb32c3af0d6ee5e74725", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "cm-tcp-services.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "cm-tcp-services.yml", "name": "cm-tcp-services", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/cm-tcp-services.yml", "size": 190, "state": "file", "uid": 0}, "msg": "success: configmap/tcp-services unchanged"}
2023-07-10 16:04:55,436 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 190, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml', '_original_basename': 'cm-udp-services.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': 'd27cbf4031b2499e503d3543f8686db88e6a7b89', 'dest': '/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml', 'failed': False, 'item': {'name': 'cm-udp-services', 'file': 'cm-udp-services.yml', 'type': 'cm'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "d27cbf4031b2499e503d3543f8686db88e6a7b89", "dest": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "cm-udp-services.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "cm-udp-services.yml", "name": "cm-udp-services", "type": "cm"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/cm-udp-services.yml", "size": 190, "state": "file", "uid": 0}, "msg": "success: configmap/udp-services unchanged"}
2023-07-10 16:04:55,897 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 196, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml', '_original_basename': 'sa-ingress-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': '7dc36b670e034bcc62169c0235b180dbab4a29cc', 'dest': '/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml', 'failed': False, 'item': {'name': 'sa-ingress-nginx', 'file': 'sa-ingress-nginx.yml', 'type': 'sa'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "7dc36b670e034bcc62169c0235b180dbab4a29cc", "dest": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "sa-ingress-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "sa-ingress-nginx.yml", "name": "sa-ingress-nginx", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/sa-ingress-nginx.yml", "size": 196, "state": "file", "uid": 0}, "msg": "success: serviceaccount/ingress-nginx unchanged"}
2023-07-10 16:04:56,363 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 1075, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml', '_original_basename': 'clusterrole-ingress-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': '2d4cb86860884294a6f030640a68b0ce76dba4cc', 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml', 'failed': False, 'item': {'name': 'clusterrole-ingress-nginx', 'file': 'clusterrole-ingress-nginx.yml', 'type': 'clusterrole'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "2d4cb86860884294a6f030640a68b0ce76dba4cc", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "clusterrole-ingress-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "clusterrole-ingress-nginx.yml", "name": "clusterrole-ingress-nginx", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/clusterrole-ingress-nginx.yml", "size": 1075, "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/ingress-nginx unchanged"}
2023-07-10 16:04:56,846 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 376, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml', '_original_basename': 'clusterrolebinding-ingress-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': 'b398b84183957c90a208c29444b00c4443aa282e', 'dest': '/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml', 'failed': False, 'item': {'name': 'clusterrolebinding-ingress-nginx', 'file': 'clusterrolebinding-ingress-nginx.yml', 'type': 'clusterrolebinding'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "b398b84183957c90a208c29444b00c4443aa282e", "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "clusterrolebinding-ingress-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "clusterrolebinding-ingress-nginx.yml", "name": "clusterrolebinding-ingress-nginx", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/clusterrolebinding-ingress-nginx.yml", "size": 376, "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx unchanged"}
2023-07-10 16:04:57,317 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 1784, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml', '_original_basename': 'role-ingress-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': 'e6ed8e57add454469f73b46d916a2d57e08aae2c', 'dest': '/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml', 'failed': False, 'item': {'name': 'role-ingress-nginx', 'file': 'role-ingress-nginx.yml', 'type': 'role'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "e6ed8e57add454469f73b46d916a2d57e08aae2c", "dest": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "role-ingress-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "role-ingress-nginx.yml", "name": "role-ingress-nginx", "type": "role"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/role-ingress-nginx.yml", "size": 1784, "state": "file", "uid": 0}, "msg": "success: role.rbac.authorization.k8s.io/ingress-nginx unchanged"}
2023-07-10 16:04:57,716 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 389, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml', '_original_basename': 'rolebinding-ingress-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': '784d7187b8125dbe6750d2186613dd24343bdf8b', 'dest': '/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml', 'failed': False, 'item': {'name': 'rolebinding-ingress-nginx', 'file': 'rolebinding-ingress-nginx.yml', 'type': 'rolebinding'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "784d7187b8125dbe6750d2186613dd24343bdf8b", "dest": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "rolebinding-ingress-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "rolebinding-ingress-nginx.yml", "name": "rolebinding-ingress-nginx", "type": "rolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/rolebinding-ingress-nginx.yml", "size": 389, "state": "file", "uid": 0}, "msg": "success: rolebinding.rbac.authorization.k8s.io/ingress-nginx unchanged"}
2023-07-10 16:04:58,001 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 214, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml', '_original_basename': 'ingressclass-nginx.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': 'ec7007c44829fc7ff2e076db13f169e9bc1c370e', 'dest': '/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml', 'failed': False, 'item': {'name': 'ingressclass-nginx', 'file': 'ingressclass-nginx.yml', 'type': 'ingressclass'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "ec7007c44829fc7ff2e076db13f169e9bc1c370e", "dest": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "ingressclass-nginx.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "ingressclass-nginx.yml", "name": "ingressclass-nginx", "type": "ingressclass"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/ingressclass-nginx.yml", "size": 214, "state": "file", "uid": 0}, "msg": "success: ingressclass.networking.k8s.io/nginx unchanged"}
2023-07-10 16:04:58,277 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml'}, 'after': {'path': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml'}}, 'path': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 2985, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml', '_original_basename': 'ds-ingress-nginx-controller.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': '26de85996a58c8109592bde7851552551ff46353', 'dest': '/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml', 'failed': False, 'item': {'name': 'ds-ingress-nginx-controller', 'file': 'ds-ingress-nginx-controller.yml', 'type': 'ds'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "26de85996a58c8109592bde7851552551ff46353", "dest": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "diff": {"after": {"path": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml"}, "before": {"path": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "ds-ingress-nginx-controller.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "ds-ingress-nginx-controller.yml", "name": "ds-ingress-nginx-controller", "type": "ds"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/addons/ingress_nginx/ds-ingress-nginx-controller.yml", "size": 2985, "state": "file", "uid": 0}, "msg": "success: daemonset.apps/ingress-nginx-controller unchanged"}
2023-07-10 16:04:58,300 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:04.826)       0:06:06.695 ****** 
2023-07-10 16:04:58,328 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.028)       0:06:06.724 ****** 
2023-07-10 16:04:58,358 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.029)       0:06:06.753 ****** 
2023-07-10 16:04:58,385 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.027)       0:06:06.780 ****** 
2023-07-10 16:04:58,414 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.028)       0:06:06.809 ****** 
2023-07-10 16:04:58,443 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.028)       0:06:06.838 ****** 
2023-07-10 16:04:58,480 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.037)       0:06:06.875 ****** 
2023-07-10 16:04:58,509 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.029)       0:06:06.904 ****** 
2023-07-10 16:04:58,568 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.058)       0:06:06.963 ****** 
2023-07-10 16:04:58,640 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.072)       0:06:07.036 ****** 
2023-07-10 16:04:58,693 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.052)       0:06:07.088 ****** 
2023-07-10 16:04:58,724 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.030)       0:06:07.119 ****** 
2023-07-10 16:04:58,753 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.029)       0:06:07.148 ****** 
2023-07-10 16:04:58,784 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.030)       0:06:07.179 ****** 
2023-07-10 16:04:58,821 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.037)       0:06:07.216 ****** 
2023-07-10 16:04:58,861 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.039)       0:06:07.256 ****** 
2023-07-10 16:04:58,892 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.031)       0:06:07.287 ****** 
2023-07-10 16:04:58,927 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.034)       0:06:07.322 ****** 
2023-07-10 16:04:58,955 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.027)       0:06:07.350 ****** 
2023-07-10 16:04:58,981 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:58 +0300 (0:00:00.026)       0:06:07.376 ****** 
2023-07-10 16:04:59,009 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.027)       0:06:07.404 ****** 
2023-07-10 16:04:59,037 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.027)       0:06:07.432 ****** 
2023-07-10 16:04:59,073 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.036)       0:06:07.468 ****** 
2023-07-10 16:04:59,100 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.027)       0:06:07.495 ****** 
2023-07-10 16:04:59,127 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.026)       0:06:07.522 ****** 
2023-07-10 16:04:59,153 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.025)       0:06:07.548 ****** 
2023-07-10 16:04:59,180 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.026)       0:06:07.575 ****** 
2023-07-10 16:04:59,206 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.026)       0:06:07.601 ****** 
2023-07-10 16:04:59,234 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.028)       0:06:07.630 ****** 
2023-07-10 16:04:59,264 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.029)       0:06:07.659 ****** 
2023-07-10 16:04:59,299 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.035)       0:06:07.694 ****** 
2023-07-10 16:04:59,328 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.028)       0:06:07.723 ****** 
2023-07-10 16:04:59,356 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.028)       0:06:07.751 ****** 
2023-07-10 16:04:59,384 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.027)       0:06:07.779 ****** 
2023-07-10 16:04:59,414 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.030)       0:06:07.809 ****** 
2023-07-10 16:04:59,459 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.044)       0:06:07.854 ****** 
2023-07-10 16:04:59,822 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Wait for kube-apiserver] *******************************************************************************************************************
2023-07-10 16:04:59,823 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "audit_id": "31e061ad-91f1-440b-b7f2-33261457b3c0", "cache_control": "no-cache, private", "changed": false, "connection": "close", "content_length": "2", "content_type": "text/plain; charset=utf-8", "cookies": {}, "cookies_string": "", "date": "Mon, 10 Jul 2023 13:04:59 GMT", "elapsed": 0, "msg": "OK (2 bytes)", "redirected": false, "status": 200, "url": "https://127.0.0.1:6443/healthz", "x_content_type_options": "nosniff", "x_kubernetes_pf_flowschema_uid": "b2bb7542-a842-48d8-8935-af9c3241f79c", "x_kubernetes_pf_prioritylevel_uid": "f73741c8-acd0-4803-9dbd-a44b332c6f0a"}
2023-07-10 16:04:59,833 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:04:59 +0300 (0:00:00.374)       0:06:08.229 ****** 
2023-07-10 16:05:00,090 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns deployment annotation `createdby`] ****************************************************************************************
2023-07-10 16:05:00,091 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "deploy", "-n", "kube-system", "coredns", "-o", "jsonpath={ .spec.template.metadata.annotations.createdby }"], "delta": "0:00:00.049717", "end": "2023-07-10 13:05:00.047522", "msg": "", "rc": 0, "start": "2023-07-10 13:04:59.997805", "stderr": "", "stderr_lines": [], "stdout": "kubespray", "stdout_lines": ["kubespray"]}
2023-07-10 16:05:00,098 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:00 +0300 (0:00:00.265)       0:06:08.494 ****** 
2023-07-10 16:05:00,318 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Register coredns service annotation `createdby`] *******************************************************************************************
2023-07-10 16:05:00,319 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/kubectl", "--kubeconfig", "/etc/kubernetes/admin.conf", "get", "svc", "-n", "kube-system", "coredns", "-o", "jsonpath={ .metadata.annotations.createdby }"], "delta": "0:00:00.045576", "end": "2023-07-10 13:05:00.309485", "msg": "", "rc": 0, "start": "2023-07-10 13:05:00.263909", "stderr": "", "stderr_lines": [], "stdout": "kubespray", "stdout_lines": ["kubespray"]}
2023-07-10 16:05:00,329 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:00 +0300 (0:00:00.230)       0:06:08.724 ****** 
2023-07-10 16:05:00,361 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:00 +0300 (0:00:00.032)       0:06:08.756 ****** 
2023-07-10 16:05:00,393 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:00 +0300 (0:00:00.031)       0:06:08.788 ****** 
2023-07-10 16:05:00,761 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates] ****************************************************************************************************************
2023-07-10 16:05:00,762 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'coredns', 'file': 'coredns-clusterrole.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "b1698aff8f99fbfc39b032e3efdd719d548f70d4", "dest": "/etc/kubernetes/coredns-clusterrole.yml", "gid": 0, "group": "root", "item": {"file": "coredns-clusterrole.yml", "name": "coredns", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-clusterrole.yml", "size": 473, "state": "file", "uid": 0}
2023-07-10 16:05:01,092 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'coredns', 'file': 'coredns-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "gid": 0, "group": "root", "item": {"file": "coredns-clusterrolebinding.yml", "name": "coredns", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-clusterrolebinding.yml", "size": 451, "state": "file", "uid": 0}
2023-07-10 16:05:01,511 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'coredns', 'file': 'coredns-config.yml', 'type': 'configmap'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "520a258c6c8d35c736550e241e69f6ae1b088aee", "dest": "/etc/kubernetes/coredns-config.yml", "gid": 0, "group": "root", "item": {"file": "coredns-config.yml", "name": "coredns", "type": "configmap"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-config.yml", "size": 600, "state": "file", "uid": 0}
2023-07-10 16:05:01,872 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'coredns', 'file': 'coredns-deployment.yml', 'type': 'deployment'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "a9db7c571600267aaa3d7fcfa3f97603b8feef0d", "dest": "/etc/kubernetes/coredns-deployment.yml", "gid": 0, "group": "root", "item": {"file": "coredns-deployment.yml", "name": "coredns", "type": "deployment"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-deployment.yml", "size": 3180, "state": "file", "uid": 0}
2023-07-10 16:05:02,439 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'coredns', 'file': 'coredns-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "dest": "/etc/kubernetes/coredns-sa.yml", "gid": 0, "group": "root", "item": {"file": "coredns-sa.yml", "name": "coredns", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-sa.yml", "size": 190, "state": "file", "uid": 0}
2023-07-10 16:05:03,041 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'coredns', 'file': 'coredns-svc.yml', 'type': 'svc'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "ea37b9ad1ce7b47e440c8f51a388de782761adae", "dest": "/etc/kubernetes/coredns-svc.yml", "gid": 0, "group": "root", "item": {"file": "coredns-svc.yml", "name": "coredns", "type": "svc"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-svc.yml", "size": 539, "state": "file", "uid": 0}
2023-07-10 16:05:03,672 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler.yml', 'type': 'deployment'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "37802726cb2ae4a3db5b47ead4b5b2322b3b2fa6", "dest": "/etc/kubernetes/dns-autoscaler.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler.yml", "name": "dns-autoscaler", "type": "deployment"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler.yml", "size": 2645, "state": "file", "uid": 0}
2023-07-10 16:05:04,218 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrole.yml', 'type': 'clusterrole'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-clusterrole.yml", "name": "dns-autoscaler", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "size": 1150, "state": "file", "uid": 0}
2023-07-10 16:05:04,754 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-clusterrolebinding.yml', 'type': 'clusterrolebinding'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-clusterrolebinding.yml", "name": "dns-autoscaler", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "size": 959, "state": "file", "uid": 0}
2023-07-10 16:05:05,313 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'dns-autoscaler', 'file': 'dns-autoscaler-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "gid": 0, "group": "root", "item": {"file": "dns-autoscaler-sa.yml", "name": "dns-autoscaler", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler-sa.yml", "size": 763, "state": "file", "uid": 0}
2023-07-10 16:05:05,334 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:05 +0300 (0:00:04.940)       0:06:13.729 ****** 
2023-07-10 16:05:05,436 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:05 +0300 (0:00:00.102)       0:06:13.831 ****** 
2023-07-10 16:05:05,585 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | set up necessary nodelocaldns parameters] **************************************************************************************************
2023-07-10 16:05:05,585 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"primaryClusterIP": "10.233.0.3", "secondaryclusterIP": "10.233.0.4"}, "changed": false}
2023-07-10 16:05:05,601 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:05 +0300 (0:00:00.165)       0:06:13.996 ****** 
2023-07-10 16:05:06,317 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay Down nodelocaldns Template] ************************************************************************************************************
2023-07-10 16:05:06,317 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-config.yml', 'type': 'configmap'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "d6970b2754f07a30a3610552262bda2887c0f05a", "dest": "/etc/kubernetes/nodelocaldns-config.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-config.yml", "name": "nodelocaldns", "type": "configmap"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/nodelocaldns-config.yml", "size": 1038, "state": "file", "uid": 0}
2023-07-10 16:05:06,655 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-sa.yml', 'type': 'sa'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "aa80f91dc256a7e0812b32e5dbeb5fe895e554e6", "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-sa.yml", "name": "nodelocaldns", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/nodelocaldns-sa.yml", "size": 149, "state": "file", "uid": 0}
2023-07-10 16:05:07,008 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'name': 'nodelocaldns', 'file': 'nodelocaldns-daemonset.yml', 'type': 'daemonset'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "bf53df275949fa0dccf23d985e43f462c2d92cf7", "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "gid": 0, "group": "root", "item": {"file": "nodelocaldns-daemonset.yml", "name": "nodelocaldns", "type": "daemonset"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/nodelocaldns-daemonset.yml", "size": 2661, "state": "file", "uid": 0}
2023-07-10 16:05:07,019 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:07 +0300 (0:00:01.418)       0:06:15.414 ****** 
2023-07-10 16:05:07,068 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:07 +0300 (0:00:00.048)       0:06:15.463 ****** 
2023-07-10 16:05:07,404 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Start Resources] ***************************************************************************************************************************
2023-07-10 16:05:07,405 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-clusterrole.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "b1698aff8f99fbfc39b032e3efdd719d548f70d4", "dest": "/etc/kubernetes/coredns-clusterrole.yml", "diff": {"after": {"path": "/etc/kubernetes/coredns-clusterrole.yml"}, "before": {"path": "/etc/kubernetes/coredns-clusterrole.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "coredns-clusterrole.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/coredns-clusterrole.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/coredns-clusterrole.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "coredns-clusterrole.yml", "name": "coredns", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-clusterrole.yml", "size": 473, "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:coredns unchanged"}
2023-07-10 16:05:07,685 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-clusterrolebinding.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "27b881209cb41225b20ab14bc9bdca6e45c45750", "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "diff": {"after": {"path": "/etc/kubernetes/coredns-clusterrolebinding.yml"}, "before": {"path": "/etc/kubernetes/coredns-clusterrolebinding.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "coredns-clusterrolebinding.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/coredns-clusterrolebinding.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/coredns-clusterrolebinding.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "coredns-clusterrolebinding.yml", "name": "coredns", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-clusterrolebinding.yml", "size": 451, "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:coredns unchanged"}
2023-07-10 16:05:07,972 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-config.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "520a258c6c8d35c736550e241e69f6ae1b088aee", "dest": "/etc/kubernetes/coredns-config.yml", "diff": {"after": {"path": "/etc/kubernetes/coredns-config.yml"}, "before": {"path": "/etc/kubernetes/coredns-config.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "coredns-config.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/coredns-config.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/coredns-config.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "coredns-config.yml", "name": "coredns", "type": "configmap"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-config.yml", "size": 600, "state": "file", "uid": 0}, "msg": "success: configmap/coredns unchanged"}
2023-07-10 16:05:08,247 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-deployment.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "a9db7c571600267aaa3d7fcfa3f97603b8feef0d", "dest": "/etc/kubernetes/coredns-deployment.yml", "diff": {"after": {"path": "/etc/kubernetes/coredns-deployment.yml"}, "before": {"path": "/etc/kubernetes/coredns-deployment.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "coredns-deployment.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/coredns-deployment.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/coredns-deployment.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "coredns-deployment.yml", "name": "coredns", "type": "deployment"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-deployment.yml", "size": 3180, "state": "file", "uid": 0}, "msg": "success: deployment.apps/coredns unchanged"}
2023-07-10 16:05:08,531 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "120a7b2f1f1e14e639ff7b5daa4ed21a980d80f7", "dest": "/etc/kubernetes/coredns-sa.yml", "diff": {"after": {"path": "/etc/kubernetes/coredns-sa.yml"}, "before": {"path": "/etc/kubernetes/coredns-sa.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "coredns-sa.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/coredns-sa.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/coredns-sa.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "coredns-sa.yml", "name": "coredns", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-sa.yml", "size": 190, "state": "file", "uid": 0}, "msg": "success: serviceaccount/coredns unchanged"}
2023-07-10 16:05:08,803 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=coredns-svc.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "ea37b9ad1ce7b47e440c8f51a388de782761adae", "dest": "/etc/kubernetes/coredns-svc.yml", "diff": {"after": {"path": "/etc/kubernetes/coredns-svc.yml"}, "before": {"path": "/etc/kubernetes/coredns-svc.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "coredns-svc.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/coredns-svc.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/coredns-svc.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "coredns-svc.yml", "name": "coredns", "type": "svc"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/coredns-svc.yml", "size": 539, "state": "file", "uid": 0}, "msg": "success: service/coredns unchanged"}
2023-07-10 16:05:09,132 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "37802726cb2ae4a3db5b47ead4b5b2322b3b2fa6", "dest": "/etc/kubernetes/dns-autoscaler.yml", "diff": {"after": {"path": "/etc/kubernetes/dns-autoscaler.yml"}, "before": {"path": "/etc/kubernetes/dns-autoscaler.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "dns-autoscaler.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/dns-autoscaler.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/dns-autoscaler.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "dns-autoscaler.yml", "name": "dns-autoscaler", "type": "deployment"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler.yml", "size": 2645, "state": "file", "uid": 0}, "msg": "success: deployment.apps/dns-autoscaler configured"}
2023-07-10 16:05:09,432 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler-clusterrole.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "f5047c80df26d815fbc5873fc47b9d7c31a0aa0f", "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "diff": {"after": {"path": "/etc/kubernetes/dns-autoscaler-clusterrole.yml"}, "before": {"path": "/etc/kubernetes/dns-autoscaler-clusterrole.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "dns-autoscaler-clusterrole.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "dns-autoscaler-clusterrole.yml", "name": "dns-autoscaler", "type": "clusterrole"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler-clusterrole.yml", "size": 1150, "state": "file", "uid": 0}, "msg": "success: clusterrole.rbac.authorization.k8s.io/system:dns-autoscaler unchanged"}
2023-07-10 16:05:09,791 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler-clusterrolebinding.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "5c5b302e4cd73c2ec5ceb5262b2bd608173faccc", "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "diff": {"after": {"path": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml"}, "before": {"path": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "dns-autoscaler-clusterrolebinding.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "dns-autoscaler-clusterrolebinding.yml", "name": "dns-autoscaler", "type": "clusterrolebinding"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler-clusterrolebinding.yml", "size": 959, "state": "file", "uid": 0}, "msg": "success: clusterrolebinding.rbac.authorization.k8s.io/system:dns-autoscaler unchanged"}
2023-07-10 16:05:10,098 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=dns-autoscaler-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "9d96dcf2256bb4968a45d09e9232666384e83f2e", "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "diff": {"after": {"path": "/etc/kubernetes/dns-autoscaler-sa.yml"}, "before": {"path": "/etc/kubernetes/dns-autoscaler-sa.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "dns-autoscaler-sa.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/dns-autoscaler-sa.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/dns-autoscaler-sa.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "dns-autoscaler-sa.yml", "name": "dns-autoscaler", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dns-autoscaler-sa.yml", "size": 763, "state": "file", "uid": 0}, "msg": "success: serviceaccount/dns-autoscaler unchanged"}
2023-07-10 16:05:10,410 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=nodelocaldns-config.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "d6970b2754f07a30a3610552262bda2887c0f05a", "dest": "/etc/kubernetes/nodelocaldns-config.yml", "diff": {"after": {"path": "/etc/kubernetes/nodelocaldns-config.yml"}, "before": {"path": "/etc/kubernetes/nodelocaldns-config.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "nodelocaldns-config.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/nodelocaldns-config.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/nodelocaldns-config.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "nodelocaldns-config.yml", "name": "nodelocaldns", "type": "configmap"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/nodelocaldns-config.yml", "size": 1038, "state": "file", "uid": 0}, "msg": "success: configmap/nodelocaldns unchanged"}
2023-07-10 16:05:10,722 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=nodelocaldns-sa.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "aa80f91dc256a7e0812b32e5dbeb5fe895e554e6", "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "diff": {"after": {"path": "/etc/kubernetes/nodelocaldns-sa.yml"}, "before": {"path": "/etc/kubernetes/nodelocaldns-sa.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "nodelocaldns-sa.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/nodelocaldns-sa.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/nodelocaldns-sa.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "nodelocaldns-sa.yml", "name": "nodelocaldns", "type": "sa"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/nodelocaldns-sa.yml", "size": 149, "state": "file", "uid": 0}, "msg": "success: serviceaccount/nodelocaldns unchanged"}
2023-07-10 16:05:11,017 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=nodelocaldns-daemonset.yml) => {"ansible_loop_var": "item", "attempts": 1, "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "bf53df275949fa0dccf23d985e43f462c2d92cf7", "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "diff": {"after": {"path": "/etc/kubernetes/nodelocaldns-daemonset.yml"}, "before": {"path": "/etc/kubernetes/nodelocaldns-daemonset.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "nodelocaldns-daemonset.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/nodelocaldns-daemonset.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/nodelocaldns-daemonset.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "nodelocaldns-daemonset.yml", "name": "nodelocaldns", "type": "daemonset"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/nodelocaldns-daemonset.yml", "size": 2661, "state": "file", "uid": 0}, "msg": "success: daemonset.apps/nodelocaldns unchanged"}
2023-07-10 16:05:11,039 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:03.970)       0:06:19.434 ****** 
2023-07-10 16:05:11,093 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.053)       0:06:19.488 ****** 
2023-07-10 16:05:11,147 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.054)       0:06:19.542 ****** 
2023-07-10 16:05:11,176 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.028)       0:06:19.571 ****** 
2023-07-10 16:05:11,209 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.032)       0:06:19.604 ****** 
2023-07-10 16:05:11,238 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.029)       0:06:19.633 ****** 
2023-07-10 16:05:11,268 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.030)       0:06:19.663 ****** 
2023-07-10 16:05:11,300 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.031)       0:06:19.695 ****** 
2023-07-10 16:05:11,332 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.031)       0:06:19.727 ****** 
2023-07-10 16:05:11,713 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Lay down dashboard template] ***************************************************************************************************************
2023-07-10 16:05:11,714 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}) => {"ansible_loop_var": "item", "changed": false, "checksum": "fd85ef539f936e6d67342d1fff153b2c4f38c011", "dest": "/etc/kubernetes/dashboard.yml", "gid": 0, "group": "root", "item": {"file": "dashboard.yml", "name": "kubernetes-dashboard", "type": "deploy"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dashboard.yml", "size": 8427, "state": "file", "uid": 0}
2023-07-10 16:05:11,725 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:11 +0300 (0:00:00.393)       0:06:20.120 ****** 
2023-07-10 16:05:12,104 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/ansible : Kubernetes Apps | Start dashboard] ***************************************************************************************************************************
2023-07-10 16:05:12,105 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'diff': {'before': {'path': '/etc/kubernetes/dashboard.yml'}, 'after': {'path': '/etc/kubernetes/dashboard.yml'}}, 'path': '/etc/kubernetes/dashboard.yml', 'changed': False, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 8427, 'invocation': {'module_args': {'mode': 420, 'dest': '/etc/kubernetes/dashboard.yml', '_original_basename': 'dashboard.yml.j2', 'recurse': False, 'state': 'file', 'path': '/etc/kubernetes/dashboard.yml', 'force': False, 'follow': True, 'modification_time_format': '%Y%m%d%H%M.%S', 'access_time_format': '%Y%m%d%H%M.%S', 'unsafe_writes': False, '_diff_peek': None, 'src': None, 'modification_time': None, 'access_time': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'checksum': 'fd85ef539f936e6d67342d1fff153b2c4f38c011', 'dest': '/etc/kubernetes/dashboard.yml', 'failed': False, 'item': {'file': 'dashboard.yml', 'type': 'deploy', 'name': 'kubernetes-dashboard'}, 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "checksum": "fd85ef539f936e6d67342d1fff153b2c4f38c011", "dest": "/etc/kubernetes/dashboard.yml", "diff": {"after": {"path": "/etc/kubernetes/dashboard.yml"}, "before": {"path": "/etc/kubernetes/dashboard.yml"}}, "failed": false, "gid": 0, "group": "root", "invocation": {"module_args": {"_diff_peek": null, "_original_basename": "dashboard.yml.j2", "access_time": null, "access_time_format": "%Y%m%d%H%M.%S", "attributes": null, "dest": "/etc/kubernetes/dashboard.yml", "follow": true, "force": false, "group": null, "mode": 420, "modification_time": null, "modification_time_format": "%Y%m%d%H%M.%S", "owner": null, "path": "/etc/kubernetes/dashboard.yml", "recurse": false, "selevel": null, "serole": null, "setype": null, "seuser": null, "src": null, "state": "file", "unsafe_writes": false}}, "item": {"file": "dashboard.yml", "name": "kubernetes-dashboard", "type": "deploy"}, "mode": "0644", "owner": "root", "path": "/etc/kubernetes/dashboard.yml", "size": 8427, "state": "file", "uid": 0}, "msg": "success: secret/kubernetes-dashboard-certs unchanged secret/kubernetes-dashboard-csrf configured secret/kubernetes-dashboard-key-holder configured configmap/kubernetes-dashboard-settings unchanged serviceaccount/kubernetes-dashboard unchanged role.rbac.authorization.k8s.io/kubernetes-dashboard unchanged rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard unchanged clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard unchanged deployment.apps/kubernetes-dashboard unchanged service/kubernetes-dashboard unchanged clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard unchanged service/dashboard-metrics-scraper unchanged deployment.apps/kubernetes-metrics-scraper unchanged"}
2023-07-10 16:05:12,123 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:12 +0300 (0:00:00.398)       0:06:20.519 ****** 
2023-07-10 16:05:12,220 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Gather os specific variables] ****************************************************************************************************************************
2023-07-10 16:05:12,220 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/vars/../vars/ubuntu.yml) => {"ansible_facts": {"pyyaml_package": "python3-yaml"}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/vars/../vars/ubuntu.yml"}
2023-07-10 16:05:12,235 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:12 +0300 (0:00:00.111)       0:06:20.630 ****** 
2023-07-10 16:05:12,931 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Install PyYaml] ******************************************************************************************************************************************
2023-07-10 16:05:12,932 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"cache_update_time": 1688993956, "cache_updated": false, "changed": false}
2023-07-10 16:05:12,944 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:12 +0300 (0:00:00.708)       0:06:21.339 ****** 
2023-07-10 16:05:12,978 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:12 +0300 (0:00:00.034)       0:06:21.373 ****** 
2023-07-10 16:05:12,997 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Download helm] *******************************************************************************************************************************************
2023-07-10 16:05:13,018 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/kubernetes-apps/helm/tasks/../../../download/tasks/download_file.yml for node1
2023-07-10 16:05:13,033 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:13 +0300 (0:00:00.054)       0:06:21.428 ****** 
2023-07-10 16:05:13,078 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : prep_download | Set a few facts] ********************************************************************************************************************************
2023-07-10 16:05:13,079 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"download_force_cache": false}, "changed": false}
2023-07-10 16:05:13,091 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:13 +0300 (0:00:00.057)       0:06:21.486 ****** 
2023-07-10 16:05:14,118 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Starting download of file] **********************************************************************************************************************
2023-07-10 16:05:14,119 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"
}
2023-07-10 16:05:14,129 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:14 +0300 (0:00:01.037)       0:06:22.524 ****** 
2023-07-10 16:05:15,078 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Set pathname of cached file] ********************************************************************************************************************
2023-07-10 16:05:15,079 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"file_path_cached": "/tmp/kubespray_cache/helm-v3.12.1-linux-amd64.tar.gz"}, "changed": false}
2023-07-10 16:05:15,095 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:15 +0300 (0:00:00.965)       0:06:23.490 ****** 
2023-07-10 16:05:18,173 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Create dest directory on node] ******************************************************************************************************************
2023-07-10 16:05:18,174 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/tmp/releases/helm-v3.12.1", "size": 4096, "state": "directory", "uid": 0}
2023-07-10 16:05:18,194 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:18 +0300 (0:00:03.099)       0:06:26.590 ****** 
2023-07-10 16:05:18,256 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:18 +0300 (0:00:00.061)       0:06:26.651 ****** 
2023-07-10 16:05:19,485 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:19 +0300 (0:00:01.228)       0:06:27.880 ****** 
2023-07-10 16:05:23,229 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Validate mirrors] *******************************************************************************************************************************
2023-07-10 16:05:23,230 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=None) => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:05:23,234 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> {{ download_delegate if download_force_cache else inventory_hostname }}] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:05:23,252 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:23 +0300 (0:00:03.767)       0:06:31.648 ****** 
2023-07-10 16:05:23,317 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Get the list of working mirrors] ****************************************************************************************************************
2023-07-10 16:05:23,317 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"valid_mirror_urls": ["https://get.helm.sh/helm-v3.12.1-linux-amd64.tar.gz"]}, "changed": false}
2023-07-10 16:05:23,339 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:23 +0300 (0:00:00.086)       0:06:31.734 ****** 
2023-07-10 16:05:31,454 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Download item] **********************************************************************************************************************************
2023-07-10 16:05:31,454 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"attempts": 1, "censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}
2023-07-10 16:05:31,464 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:31 +0300 (0:00:08.124)       0:06:39.859 ****** 
2023-07-10 16:05:31,495 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:31 +0300 (0:00:00.030)       0:06:39.890 ****** 
2023-07-10 16:05:31,525 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:31 +0300 (0:00:00.030)       0:06:39.920 ****** 
2023-07-10 16:05:31,556 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:31 +0300 (0:00:00.030)       0:06:39.951 ****** 
2023-07-10 16:05:31,575 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : download_file | Extract file archives] **************************************************************************************************************************
2023-07-10 16:05:31,586 p=24624 u=kubernetmachine n=ansible | included: /home/kubernetmachine/kubespray/roles/download/tasks/extract_file.yml for node1
2023-07-10 16:05:31,599 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:31 +0300 (0:00:00.043)       0:06:39.994 ****** 
2023-07-10 16:05:39,287 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : extract_file | Unpacking archive] *******************************************************************************************************************************
2023-07-10 16:05:39,288 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "dest": "/tmp/releases/helm-v3.12.1", "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0755", "owner": "root", "size": 4096, "src": "/tmp/releases/helm-v3.12.1/helm-v3.12.1-linux-amd64.tar.gz", "state": "directory", "uid": 0}
2023-07-10 16:05:39,301 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:39 +0300 (0:00:07.701)       0:06:47.696 ****** 
2023-07-10 16:05:40,007 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Copy helm binary from download dir] **********************************************************************************************************************
2023-07-10 16:05:40,007 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "8f183db9c99b59289b75353d1447da581049592f", "dest": "/usr/local/bin/helm", "gid": 0, "group": "root", "md5sum": "6b3df101de720886f2dda3a66e81d5aa", "mode": "0755", "owner": "root", "size": 50606080, "src": "/tmp/releases/helm-v3.12.1/linux-amd64/helm", "state": "file", "uid": 0}
2023-07-10 16:05:40,022 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.721)       0:06:48.417 ****** 
2023-07-10 16:05:40,357 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Get helm completion] *************************************************************************************************************************************
2023-07-10 16:05:40,358 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/helm", "completion", "bash"], "delta": "0:00:00.060066", "end": "2023-07-10 13:05:40.332713", "msg": "", "rc": 0, "start": "2023-07-10 13:05:40.272647", "stderr": "", "stderr_lines": [], "stdout": "# bash completion V2 for helm                                 -*- shell-script -*-\n\n__helm_debug()\n{\n    if [[ -n ${BASH_COMP_DEBUG_FILE:-} ]]; then\n        echo \"$*\" >> \"${BASH_COMP_DEBUG_FILE}\"\n    fi\n}\n\n# Macs have bash3 for which the bash-completion package doesn't include\n# _init_completion. This is a minimal version of that function.\n__helm_init_completion()\n{\n    COMPREPLY=()\n    _get_comp_words_by_ref \"$@\" cur prev words cword\n}\n\n# This function calls the helm program to obtain the completion\n# results and the directive.  It fills the 'out' and 'directive' vars.\n__helm_get_completion_results() {\n    local requestComp lastParam lastChar args\n\n    # Prepare the command to request completions for the program.\n    # Calling ${words[0]} instead of directly helm allows to handle aliases\n    args=(\"${words[@]:1}\")\n    requestComp=\"${words[0]} __complete ${args[*]}\"\n\n    lastParam=${words[$((${#words[@]}-1))]}\n    lastChar=${lastParam:$((${#lastParam}-1)):1}\n    __helm_debug \"lastParam ${lastParam}, lastChar ${lastChar}\"\n\n    if [ -z \"${cur}\" ] && [ \"${lastChar}\" != \"=\" ]; then\n        # If the last parameter is complete (there is a space following it)\n        # We add an extra empty parameter so we can indicate this to the go method.\n        __helm_debug \"Adding extra empty parameter\"\n        requestComp=\"${requestComp} ''\"\n    fi\n\n    # When completing a flag with an = (e.g., helm -n=<TAB>)\n    # bash focuses on the part after the =, so we need to remove\n    # the flag part from $cur\n    if [[ \"${cur}\" == -*=* ]]; then\n        cur=\"${cur#*=}\"\n    fi\n\n    __helm_debug \"Calling ${requestComp}\"\n    # Use eval to handle any environment variables and such\n    out=$(eval \"${requestComp}\" 2>/dev/null)\n\n    # Extract the directive integer at the very end of the output following a colon (:)\n    directive=${out##*:}\n    # Remove the directive\n    out=${out%:*}\n    if [ \"${directive}\" = \"${out}\" ]; then\n        # There is not directive specified\n        directive=0\n    fi\n    __helm_debug \"The completion directive is: ${directive}\"\n    __helm_debug \"The completions are: ${out}\"\n}\n\n__helm_process_completion_results() {\n    local shellCompDirectiveError=1\n    local shellCompDirectiveNoSpace=2\n    local shellCompDirectiveNoFileComp=4\n    local shellCompDirectiveFilterFileExt=8\n    local shellCompDirectiveFilterDirs=16\n\n    if [ $((directive & shellCompDirectiveError)) -ne 0 ]; then\n        # Error code.  No completion.\n        __helm_debug \"Received error from custom completion go code\"\n        return\n    else\n        if [ $((directive & shellCompDirectiveNoSpace)) -ne 0 ]; then\n            if [[ $(type -t compopt) = \"builtin\" ]]; then\n                __helm_debug \"Activating no space\"\n                compopt -o nospace\n            else\n                __helm_debug \"No space directive not supported in this version of bash\"\n            fi\n        fi\n        if [ $((directive & shellCompDirectiveNoFileComp)) -ne 0 ]; then\n            if [[ $(type -t compopt) = \"builtin\" ]]; then\n                __helm_debug \"Activating no file completion\"\n                compopt +o default\n            else\n                __helm_debug \"No file completion directive not supported in this version of bash\"\n            fi\n        fi\n    fi\n\n    # Separate activeHelp from normal completions\n    local completions=()\n    local activeHelp=()\n    __helm_extract_activeHelp\n\n    if [ $((directive & shellCompDirectiveFilterFileExt)) -ne 0 ]; then\n        # File extension filtering\n        local fullFilter filter filteringCmd\n\n        # Do not use quotes around the $completions variable or else newline\n        # characters will be kept.\n        for filter in ${completions[*]}; do\n            fullFilter+=\"$filter|\"\n        done\n\n        filteringCmd=\"_filedir $fullFilter\"\n        __helm_debug \"File filtering command: $filteringCmd\"\n        $filteringCmd\n    elif [ $((directive & shellCompDirectiveFilterDirs)) -ne 0 ]; then\n        # File completion for directories only\n\n        # Use printf to strip any trailing newline\n        local subdir\n        subdir=$(printf \"%s\" \"${completions[0]}\")\n        if [ -n \"$subdir\" ]; then\n            __helm_debug \"Listing directories in $subdir\"\n            pushd \"$subdir\" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1 || return\n        else\n            __helm_debug \"Listing directories in .\"\n            _filedir -d\n        fi\n    else\n        __helm_handle_completion_types\n    fi\n\n    __helm_handle_special_char \"$cur\" :\n    __helm_handle_special_char \"$cur\" =\n\n    # Print the activeHelp statements before we finish\n    if [ ${#activeHelp[*]} -ne 0 ]; then\n        printf \"\\n\";\n        printf \"%s\\n\" \"${activeHelp[@]}\"\n        printf \"\\n\"\n\n        # The prompt format is only available from bash 4.4.\n        # We test if it is available before using it.\n        if (x=${PS1@P}) 2> /dev/null; then\n            printf \"%s\" \"${PS1@P}${COMP_LINE[@]}\"\n        else\n            # Can't print the prompt.  Just print the\n            # text the user had typed, it is workable enough.\n            printf \"%s\" \"${COMP_LINE[@]}\"\n        fi\n    fi\n}\n\n# Separate activeHelp lines from real completions.\n# Fills the $activeHelp and $completions arrays.\n__helm_extract_activeHelp() {\n    local activeHelpMarker=\"_activeHelp_ \"\n    local endIndex=${#activeHelpMarker}\n\n    while IFS='' read -r comp; do\n        if [ \"${comp:0:endIndex}\" = \"$activeHelpMarker\" ]; then\n            comp=${comp:endIndex}\n            __helm_debug \"ActiveHelp found: $comp\"\n            if [ -n \"$comp\" ]; then\n                activeHelp+=(\"$comp\")\n            fi\n        else\n            # Not an activeHelp line but a normal completion\n            completions+=(\"$comp\")\n        fi\n    done < <(printf \"%s\\n\" \"${out}\")\n}\n\n__helm_handle_completion_types() {\n    __helm_debug \"__helm_handle_completion_types: COMP_TYPE is $COMP_TYPE\"\n\n    case $COMP_TYPE in\n    37|42)\n        # Type: menu-complete/menu-complete-backward and insert-completions\n        # If the user requested inserting one completion at a time, or all\n        # completions at once on the command-line we must remove the descriptions.\n        # https://github.com/spf13/cobra/issues/1508\n        local tab=$'\\t' comp\n        while IFS='' read -r comp; do\n            [[ -z $comp ]] && continue\n            # Strip any description\n            comp=${comp%%$tab*}\n            # Only consider the completions that match\n            if [[ $comp == \"$cur\"* ]]; then\n                COMPREPLY+=(\"$comp\")\n            fi\n        done < <(printf \"%s\\n\" \"${completions[@]}\")\n        ;;\n\n    *)\n        # Type: complete (normal completion)\n        __helm_handle_standard_completion_case\n        ;;\n    esac\n}\n\n__helm_handle_standard_completion_case() {\n    local tab=$'\\t' comp\n\n    # Short circuit to optimize if we don't have descriptions\n    if [[ \"${completions[*]}\" != *$tab* ]]; then\n        IFS=$'\\n' read -ra COMPREPLY -d '' < <(compgen -W \"${completions[*]}\" -- \"$cur\")\n        return 0\n    fi\n\n    local longest=0\n    local compline\n    # Look for the longest completion so that we can format things nicely\n    while IFS='' read -r compline; do\n        [[ -z $compline ]] && continue\n        # Strip any description before checking the length\n        comp=${compline%%$tab*}\n        # Only consider the completions that match\n        [[ $comp == \"$cur\"* ]] || continue\n        COMPREPLY+=(\"$compline\")\n        if ((${#comp}>longest)); then\n            longest=${#comp}\n        fi\n    done < <(printf \"%s\\n\" \"${completions[@]}\")\n\n    # If there is a single completion left, remove the description text\n    if [ ${#COMPREPLY[*]} -eq 1 ]; then\n        __helm_debug \"COMPREPLY[0]: ${COMPREPLY[0]}\"\n        comp=\"${COMPREPLY[0]%%$tab*}\"\n        __helm_debug \"Removed description from single completion, which is now: ${comp}\"\n        COMPREPLY[0]=$comp\n    else # Format the descriptions\n        __helm_format_comp_descriptions $longest\n    fi\n}\n\n__helm_handle_special_char()\n{\n    local comp=\"$1\"\n    local char=$2\n    if [[ \"$comp\" == *${char}* && \"$COMP_WORDBREAKS\" == *${char}* ]]; then\n        local word=${comp%\"${comp##*${char}}\"}\n        local idx=${#COMPREPLY[*]}\n        while [[ $((--idx)) -ge 0 ]]; do\n            COMPREPLY[$idx]=${COMPREPLY[$idx]#\"$word\"}\n        done\n    fi\n}\n\n__helm_format_comp_descriptions()\n{\n    local tab=$'\\t'\n    local comp desc maxdesclength\n    local longest=$1\n\n    local i ci\n    for ci in ${!COMPREPLY[*]}; do\n        comp=${COMPREPLY[ci]}\n        # Properly format the description string which follows a tab character if there is one\n        if [[ \"$comp\" == *$tab* ]]; then\n            __helm_debug \"Original comp: $comp\"\n            desc=${comp#*$tab}\n            comp=${comp%%$tab*}\n\n            # $COLUMNS stores the current shell width.\n            # Remove an extra 4 because we add 2 spaces and 2 parentheses.\n            maxdesclength=$(( COLUMNS - longest - 4 ))\n\n            # Make sure we can fit a description of at least 8 characters\n            # if we are to align the descriptions.\n            if [[ $maxdesclength -gt 8 ]]; then\n                # Add the proper number of spaces to align the descriptions\n                for ((i = ${#comp} ; i < longest ; i++)); do\n                    comp+=\" \"\n                done\n            else\n                # Don't pad the descriptions so we can fit more text after the completion\n                maxdesclength=$(( COLUMNS - ${#comp} - 4 ))\n            fi\n\n            # If there is enough space for any description text,\n            # truncate the descriptions that are too long for the shell width\n            if [ $maxdesclength -gt 0 ]; then\n                if [ ${#desc} -gt $maxdesclength ]; then\n                    desc=${desc:0:$(( maxdesclength - 1 ))}\n                    desc+=\"…\"\n                fi\n                comp+=\"  ($desc)\"\n            fi\n            COMPREPLY[ci]=$comp\n            __helm_debug \"Final comp: $comp\"\n        fi\n    done\n}\n\n__start_helm()\n{\n    local cur prev words cword split\n\n    COMPREPLY=()\n\n    # Call _init_completion from the bash-completion package\n    # to prepare the arguments properly\n    if declare -F _init_completion >/dev/null 2>&1; then\n        _init_completion -n \"=:\" || return\n    else\n        __helm_init_completion -n \"=:\" || return\n    fi\n\n    __helm_debug\n    __helm_debug \"========= starting completion logic ==========\"\n    __helm_debug \"cur is ${cur}, words[*] is ${words[*]}, #words[@] is ${#words[@]}, cword is $cword\"\n\n    # The user could have moved the cursor backwards on the command-line.\n    # We need to trigger completion from the $cword location, so we need\n    # to truncate the command-line ($words) up to the $cword location.\n    words=(\"${words[@]:0:$cword+1}\")\n    __helm_debug \"Truncated words[*]: ${words[*]},\"\n\n    local out directive\n    __helm_get_completion_results\n    __helm_process_completion_results\n}\n\nif [[ $(type -t compopt) = \"builtin\" ]]; then\n    complete -o default -F __start_helm helm\nelse\n    complete -o default -o nospace -F __start_helm helm\nfi\n\n# ex: ts=4 sw=4 et filetype=sh", "stdout_lines": ["# bash completion V2 for helm                                 -*- shell-script -*-", "", "__helm_debug()", "{", "    if [[ -n ${BASH_COMP_DEBUG_FILE:-} ]]; then", "        echo \"$*\" >> \"${BASH_COMP_DEBUG_FILE}\"", "    fi", "}", "", "# Macs have bash3 for which the bash-completion package doesn't include", "# _init_completion. This is a minimal version of that function.", "__helm_init_completion()", "{", "    COMPREPLY=()", "    _get_comp_words_by_ref \"$@\" cur prev words cword", "}", "", "# This function calls the helm program to obtain the completion", "# results and the directive.  It fills the 'out' and 'directive' vars.", "__helm_get_completion_results() {", "    local requestComp lastParam lastChar args", "", "    # Prepare the command to request completions for the program.", "    # Calling ${words[0]} instead of directly helm allows to handle aliases", "    args=(\"${words[@]:1}\")", "    requestComp=\"${words[0]} __complete ${args[*]}\"", "", "    lastParam=${words[$((${#words[@]}-1))]}", "    lastChar=${lastParam:$((${#lastParam}-1)):1}", "    __helm_debug \"lastParam ${lastParam}, lastChar ${lastChar}\"", "", "    if [ -z \"${cur}\" ] && [ \"${lastChar}\" != \"=\" ]; then", "        # If the last parameter is complete (there is a space following it)", "        # We add an extra empty parameter so we can indicate this to the go method.", "        __helm_debug \"Adding extra empty parameter\"", "        requestComp=\"${requestComp} ''\"", "    fi", "", "    # When completing a flag with an = (e.g., helm -n=<TAB>)", "    # bash focuses on the part after the =, so we need to remove", "    # the flag part from $cur", "    if [[ \"${cur}\" == -*=* ]]; then", "        cur=\"${cur#*=}\"", "    fi", "", "    __helm_debug \"Calling ${requestComp}\"", "    # Use eval to handle any environment variables and such", "    out=$(eval \"${requestComp}\" 2>/dev/null)", "", "    # Extract the directive integer at the very end of the output following a colon (:)", "    directive=${out##*:}", "    # Remove the directive", "    out=${out%:*}", "    if [ \"${directive}\" = \"${out}\" ]; then", "        # There is not directive specified", "        directive=0", "    fi", "    __helm_debug \"The completion directive is: ${directive}\"", "    __helm_debug \"The completions are: ${out}\"", "}", "", "__helm_process_completion_results() {", "    local shellCompDirectiveError=1", "    local shellCompDirectiveNoSpace=2", "    local shellCompDirectiveNoFileComp=4", "    local shellCompDirectiveFilterFileExt=8", "    local shellCompDirectiveFilterDirs=16", "", "    if [ $((directive & shellCompDirectiveError)) -ne 0 ]; then", "        # Error code.  No completion.", "        __helm_debug \"Received error from custom completion go code\"", "        return", "    else", "        if [ $((directive & shellCompDirectiveNoSpace)) -ne 0 ]; then", "            if [[ $(type -t compopt) = \"builtin\" ]]; then", "                __helm_debug \"Activating no space\"", "                compopt -o nospace", "            else", "                __helm_debug \"No space directive not supported in this version of bash\"", "            fi", "        fi", "        if [ $((directive & shellCompDirectiveNoFileComp)) -ne 0 ]; then", "            if [[ $(type -t compopt) = \"builtin\" ]]; then", "                __helm_debug \"Activating no file completion\"", "                compopt +o default", "            else", "                __helm_debug \"No file completion directive not supported in this version of bash\"", "            fi", "        fi", "    fi", "", "    # Separate activeHelp from normal completions", "    local completions=()", "    local activeHelp=()", "    __helm_extract_activeHelp", "", "    if [ $((directive & shellCompDirectiveFilterFileExt)) -ne 0 ]; then", "        # File extension filtering", "        local fullFilter filter filteringCmd", "", "        # Do not use quotes around the $completions variable or else newline", "        # characters will be kept.", "        for filter in ${completions[*]}; do", "            fullFilter+=\"$filter|\"", "        done", "", "        filteringCmd=\"_filedir $fullFilter\"", "        __helm_debug \"File filtering command: $filteringCmd\"", "        $filteringCmd", "    elif [ $((directive & shellCompDirectiveFilterDirs)) -ne 0 ]; then", "        # File completion for directories only", "", "        # Use printf to strip any trailing newline", "        local subdir", "        subdir=$(printf \"%s\" \"${completions[0]}\")", "        if [ -n \"$subdir\" ]; then", "            __helm_debug \"Listing directories in $subdir\"", "            pushd \"$subdir\" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1 || return", "        else", "            __helm_debug \"Listing directories in .\"", "            _filedir -d", "        fi", "    else", "        __helm_handle_completion_types", "    fi", "", "    __helm_handle_special_char \"$cur\" :", "    __helm_handle_special_char \"$cur\" =", "", "    # Print the activeHelp statements before we finish", "    if [ ${#activeHelp[*]} -ne 0 ]; then", "        printf \"\\n\";", "        printf \"%s\\n\" \"${activeHelp[@]}\"", "        printf \"\\n\"", "", "        # The prompt format is only available from bash 4.4.", "        # We test if it is available before using it.", "        if (x=${PS1@P}) 2> /dev/null; then", "            printf \"%s\" \"${PS1@P}${COMP_LINE[@]}\"", "        else", "            # Can't print the prompt.  Just print the", "            # text the user had typed, it is workable enough.", "            printf \"%s\" \"${COMP_LINE[@]}\"", "        fi", "    fi", "}", "", "# Separate activeHelp lines from real completions.", "# Fills the $activeHelp and $completions arrays.", "__helm_extract_activeHelp() {", "    local activeHelpMarker=\"_activeHelp_ \"", "    local endIndex=${#activeHelpMarker}", "", "    while IFS='' read -r comp; do", "        if [ \"${comp:0:endIndex}\" = \"$activeHelpMarker\" ]; then", "            comp=${comp:endIndex}", "            __helm_debug \"ActiveHelp found: $comp\"", "            if [ -n \"$comp\" ]; then", "                activeHelp+=(\"$comp\")", "            fi", "        else", "            # Not an activeHelp line but a normal completion", "            completions+=(\"$comp\")", "        fi", "    done < <(printf \"%s\\n\" \"${out}\")", "}", "", "__helm_handle_completion_types() {", "    __helm_debug \"__helm_handle_completion_types: COMP_TYPE is $COMP_TYPE\"", "", "    case $COMP_TYPE in", "    37|42)", "        # Type: menu-complete/menu-complete-backward and insert-completions", "        # If the user requested inserting one completion at a time, or all", "        # completions at once on the command-line we must remove the descriptions.", "        # https://github.com/spf13/cobra/issues/1508", "        local tab=$'\\t' comp", "        while IFS='' read -r comp; do", "            [[ -z $comp ]] && continue", "            # Strip any description", "            comp=${comp%%$tab*}", "            # Only consider the completions that match", "            if [[ $comp == \"$cur\"* ]]; then", "                COMPREPLY+=(\"$comp\")", "            fi", "        done < <(printf \"%s\\n\" \"${completions[@]}\")", "        ;;", "", "    *)", "        # Type: complete (normal completion)", "        __helm_handle_standard_completion_case", "        ;;", "    esac", "}", "", "__helm_handle_standard_completion_case() {", "    local tab=$'\\t' comp", "", "    # Short circuit to optimize if we don't have descriptions", "    if [[ \"${completions[*]}\" != *$tab* ]]; then", "        IFS=$'\\n' read -ra COMPREPLY -d '' < <(compgen -W \"${completions[*]}\" -- \"$cur\")", "        return 0", "    fi", "", "    local longest=0", "    local compline", "    # Look for the longest completion so that we can format things nicely", "    while IFS='' read -r compline; do", "        [[ -z $compline ]] && continue", "        # Strip any description before checking the length", "        comp=${compline%%$tab*}", "        # Only consider the completions that match", "        [[ $comp == \"$cur\"* ]] || continue", "        COMPREPLY+=(\"$compline\")", "        if ((${#comp}>longest)); then", "            longest=${#comp}", "        fi", "    done < <(printf \"%s\\n\" \"${completions[@]}\")", "", "    # If there is a single completion left, remove the description text", "    if [ ${#COMPREPLY[*]} -eq 1 ]; then", "        __helm_debug \"COMPREPLY[0]: ${COMPREPLY[0]}\"", "        comp=\"${COMPREPLY[0]%%$tab*}\"", "        __helm_debug \"Removed description from single completion, which is now: ${comp}\"", "        COMPREPLY[0]=$comp", "    else # Format the descriptions", "        __helm_format_comp_descriptions $longest", "    fi", "}", "", "__helm_handle_special_char()", "{", "    local comp=\"$1\"", "    local char=$2", "    if [[ \"$comp\" == *${char}* && \"$COMP_WORDBREAKS\" == *${char}* ]]; then", "        local word=${comp%\"${comp##*${char}}\"}", "        local idx=${#COMPREPLY[*]}", "        while [[ $((--idx)) -ge 0 ]]; do", "            COMPREPLY[$idx]=${COMPREPLY[$idx]#\"$word\"}", "        done", "    fi", "}", "", "__helm_format_comp_descriptions()", "{", "    local tab=$'\\t'", "    local comp desc maxdesclength", "    local longest=$1", "", "    local i ci", "    for ci in ${!COMPREPLY[*]}; do", "        comp=${COMPREPLY[ci]}", "        # Properly format the description string which follows a tab character if there is one", "        if [[ \"$comp\" == *$tab* ]]; then", "            __helm_debug \"Original comp: $comp\"", "            desc=${comp#*$tab}", "            comp=${comp%%$tab*}", "", "            # $COLUMNS stores the current shell width.", "            # Remove an extra 4 because we add 2 spaces and 2 parentheses.", "            maxdesclength=$(( COLUMNS - longest - 4 ))", "", "            # Make sure we can fit a description of at least 8 characters", "            # if we are to align the descriptions.", "            if [[ $maxdesclength -gt 8 ]]; then", "                # Add the proper number of spaces to align the descriptions", "                for ((i = ${#comp} ; i < longest ; i++)); do", "                    comp+=\" \"", "                done", "            else", "                # Don't pad the descriptions so we can fit more text after the completion", "                maxdesclength=$(( COLUMNS - ${#comp} - 4 ))", "            fi", "", "            # If there is enough space for any description text,", "            # truncate the descriptions that are too long for the shell width", "            if [ $maxdesclength -gt 0 ]; then", "                if [ ${#desc} -gt $maxdesclength ]; then", "                    desc=${desc:0:$(( maxdesclength - 1 ))}", "                    desc+=\"…\"", "                fi", "                comp+=\"  ($desc)\"", "            fi", "            COMPREPLY[ci]=$comp", "            __helm_debug \"Final comp: $comp\"", "        fi", "    done", "}", "", "__start_helm()", "{", "    local cur prev words cword split", "", "    COMPREPLY=()", "", "    # Call _init_completion from the bash-completion package", "    # to prepare the arguments properly", "    if declare -F _init_completion >/dev/null 2>&1; then", "        _init_completion -n \"=:\" || return", "    else", "        __helm_init_completion -n \"=:\" || return", "    fi", "", "    __helm_debug", "    __helm_debug \"========= starting completion logic ==========\"", "    __helm_debug \"cur is ${cur}, words[*] is ${words[*]}, #words[@] is ${#words[@]}, cword is $cword\"", "", "    # The user could have moved the cursor backwards on the command-line.", "    # We need to trigger completion from the $cword location, so we need", "    # to truncate the command-line ($words) up to the $cword location.", "    words=(\"${words[@]:0:$cword+1}\")", "    __helm_debug \"Truncated words[*]: ${words[*]},\"", "", "    local out directive", "    __helm_get_completion_results", "    __helm_process_completion_results", "}", "", "if [[ $(type -t compopt) = \"builtin\" ]]; then", "    complete -o default -F __start_helm helm", "else", "    complete -o default -o nospace -F __start_helm helm", "fi", "", "# ex: ts=4 sw=4 et filetype=sh"]}
2023-07-10 16:05:40,375 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.352)       0:06:48.770 ****** 
2023-07-10 16:05:40,840 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes-apps/helm : Helm | Install helm completion] *********************************************************************************************************************************
2023-07-10 16:05:40,840 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "fc9ea4f663fa40b5144874864a3eda5d458b5615", "dest": "/etc/bash_completion.d/helm.sh", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/bash_completion.d/helm.sh", "size": 11093, "state": "file", "uid": 0}
2023-07-10 16:05:40,858 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.483)       0:06:49.253 ****** 
2023-07-10 16:05:40,889 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.030)       0:06:49.284 ****** 
2023-07-10 16:05:40,920 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.030)       0:06:49.315 ****** 
2023-07-10 16:05:40,964 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.043)       0:06:49.359 ****** 
2023-07-10 16:05:40,999 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:40 +0300 (0:00:00.035)       0:06:49.394 ****** 
2023-07-10 16:05:41,029 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.030)       0:06:49.424 ****** 
2023-07-10 16:05:41,062 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.033)       0:06:49.457 ****** 
2023-07-10 16:05:41,094 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.032)       0:06:49.489 ****** 
2023-07-10 16:05:41,127 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.032)       0:06:49.522 ****** 
2023-07-10 16:05:41,158 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.031)       0:06:49.553 ****** 
2023-07-10 16:05:41,189 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.031)       0:06:49.585 ****** 
2023-07-10 16:05:41,222 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.032)       0:06:49.617 ****** 
2023-07-10 16:05:41,260 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.037)       0:06:49.655 ****** 
2023-07-10 16:05:41,288 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:49.683 ****** 
2023-07-10 16:05:41,315 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.026)       0:06:49.710 ****** 
2023-07-10 16:05:41,341 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.026)       0:06:49.736 ****** 
2023-07-10 16:05:41,369 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:49.764 ****** 
2023-07-10 16:05:41,398 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.029)       0:06:49.793 ****** 
2023-07-10 16:05:41,426 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:49.821 ****** 
2023-07-10 16:05:41,452 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.026)       0:06:49.847 ****** 
2023-07-10 16:05:41,484 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.031)       0:06:49.879 ****** 
2023-07-10 16:05:41,512 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:49.907 ****** 
2023-07-10 16:05:41,539 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:49.934 ****** 
2023-07-10 16:05:41,573 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.034)       0:06:49.968 ****** 
2023-07-10 16:05:41,613 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.039)       0:06:50.008 ****** 
2023-07-10 16:05:41,640 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:50.036 ****** 
2023-07-10 16:05:41,668 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:50.063 ****** 
2023-07-10 16:05:41,695 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.026)       0:06:50.090 ****** 
2023-07-10 16:05:41,724 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.029)       0:06:50.119 ****** 
2023-07-10 16:05:41,751 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.027)       0:06:50.146 ****** 
2023-07-10 16:05:41,789 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.037)       0:06:50.184 ****** 
2023-07-10 16:05:41,831 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.042)       0:06:50.227 ****** 
2023-07-10 16:05:41,882 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.050)       0:06:50.277 ****** 
2023-07-10 16:05:41,911 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.029)       0:06:50.306 ****** 
2023-07-10 16:05:41,943 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.032)       0:06:50.338 ****** 
2023-07-10 16:05:41,972 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:41 +0300 (0:00:00.028)       0:06:50.367 ****** 
2023-07-10 16:05:42,007 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.035)       0:06:50.402 ****** 
2023-07-10 16:05:42,087 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.079)       0:06:50.482 ****** 
2023-07-10 16:05:42,164 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.077)       0:06:50.559 ****** 
2023-07-10 16:05:42,219 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.055)       0:06:50.614 ****** 
2023-07-10 16:05:42,282 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.062)       0:06:50.677 ****** 
2023-07-10 16:05:42,310 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.028)       0:06:50.705 ****** 
2023-07-10 16:05:42,344 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.033)       0:06:50.739 ****** 
2023-07-10 16:05:42,374 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.030)       0:06:50.769 ****** 
2023-07-10 16:05:42,436 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.062)       0:06:50.831 ****** 
2023-07-10 16:05:42,504 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.067)       0:06:50.899 ****** 
2023-07-10 16:05:42,533 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.028)       0:06:50.928 ****** 
2023-07-10 16:05:42,629 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.096)       0:06:51.024 ****** 
2023-07-10 16:05:42,657 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.027)       0:06:51.052 ****** 
2023-07-10 16:05:42,725 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.067)       0:06:51.120 ****** 
2023-07-10 16:05:42,792 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.067)       0:06:51.187 ****** 
2023-07-10 16:05:42,821 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.029)       0:06:51.216 ****** 
2023-07-10 16:05:42,851 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.030)       0:06:51.246 ****** 
2023-07-10 16:05:42,908 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.056)       0:06:51.303 ****** 
2023-07-10 16:05:42,972 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.064)       0:06:51.367 ****** 
2023-07-10 16:05:42,998 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:42 +0300 (0:00:00.026)       0:06:51.393 ****** 
2023-07-10 16:05:43,033 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.034)       0:06:51.428 ****** 
2023-07-10 16:05:43,100 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.067)       0:06:51.495 ****** 
2023-07-10 16:05:43,175 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.075)       0:06:51.570 ****** 
2023-07-10 16:05:43,204 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.028)       0:06:51.599 ****** 
2023-07-10 16:05:43,245 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.041)       0:06:51.641 ****** 
2023-07-10 16:05:43,277 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.031)       0:06:51.672 ****** 
2023-07-10 16:05:43,316 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.038)       0:06:51.711 ****** 
2023-07-10 16:05:43,348 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.032)       0:06:51.743 ****** 
2023-07-10 16:05:43,385 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.037)       0:06:51.780 ****** 
2023-07-10 16:05:43,416 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.031)       0:06:51.812 ****** 
2023-07-10 16:05:43,455 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.038)       0:06:51.850 ****** 
2023-07-10 16:05:43,481 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.026)       0:06:51.876 ****** 
2023-07-10 16:05:43,519 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.037)       0:06:51.914 ****** 
2023-07-10 16:05:43,549 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.028)       0:06:51.943 ****** 
2023-07-10 16:05:43,593 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.044)       0:06:51.988 ****** 
2023-07-10 16:05:43,621 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.028)       0:06:52.016 ****** 
2023-07-10 16:05:43,668 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.047)       0:06:52.063 ****** 
2023-07-10 16:05:43,703 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.034)       0:06:52.098 ****** 
2023-07-10 16:05:43,756 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.053)       0:06:52.151 ****** 
2023-07-10 16:05:43,815 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.058)       0:06:52.210 ****** 
2023-07-10 16:05:43,845 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.029)       0:06:52.240 ****** 
2023-07-10 16:05:43,902 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.057)       0:06:52.297 ****** 
2023-07-10 16:05:43,935 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.031)       0:06:52.329 ****** 
2023-07-10 16:05:43,969 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.034)       0:06:52.364 ****** 
2023-07-10 16:05:44,005 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:43 +0300 (0:00:00.036)       0:06:52.400 ****** 
2023-07-10 16:05:44,053 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.048)       0:06:52.448 ****** 
2023-07-10 16:05:44,092 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.038)       0:06:52.487 ****** 
2023-07-10 16:05:44,131 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.039)       0:06:52.526 ****** 
2023-07-10 16:05:44,170 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.039)       0:06:52.565 ****** 
2023-07-10 16:05:44,215 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.045)       0:06:52.611 ****** 
2023-07-10 16:05:44,252 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.036)       0:06:52.647 ****** 
2023-07-10 16:05:44,294 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.042)       0:06:52.689 ****** 
2023-07-10 16:05:44,327 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.032)       0:06:52.722 ****** 
2023-07-10 16:05:44,377 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.050)       0:06:52.772 ****** 
2023-07-10 16:05:44,460 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.082)       0:06:52.855 ****** 
2023-07-10 16:05:44,489 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.028)       0:06:52.884 ****** 
2023-07-10 16:05:44,521 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.032)       0:06:52.916 ****** 
2023-07-10 16:05:44,553 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.032)       0:06:52.948 ****** 
2023-07-10 16:05:44,599 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.045)       0:06:52.994 ****** 
2023-07-10 16:05:44,663 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.063)       0:06:53.058 ****** 
2023-07-10 16:05:44,702 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.039)       0:06:53.097 ****** 
2023-07-10 16:05:44,740 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.037)       0:06:53.135 ****** 
2023-07-10 16:05:44,779 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.038)       0:06:53.174 ****** 
2023-07-10 16:05:44,819 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.040)       0:06:53.214 ****** 
2023-07-10 16:05:44,855 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.036)       0:06:53.250 ****** 
2023-07-10 16:05:44,894 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.038)       0:06:53.289 ****** 
2023-07-10 16:05:44,934 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.040)       0:06:53.329 ****** 
2023-07-10 16:05:44,975 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:44 +0300 (0:00:00.041)       0:06:53.370 ****** 
2023-07-10 16:05:45,011 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.035)       0:06:53.406 ****** 
2023-07-10 16:05:45,050 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.038)       0:06:53.445 ****** 
2023-07-10 16:05:45,085 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.035)       0:06:53.480 ****** 
2023-07-10 16:05:45,122 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.036)       0:06:53.517 ****** 
2023-07-10 16:05:45,157 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.035)       0:06:53.552 ****** 
2023-07-10 16:05:45,191 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.033)       0:06:53.586 ****** 
2023-07-10 16:05:45,235 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.044)       0:06:53.630 ****** 
2023-07-10 16:05:45,265 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.030)       0:06:53.660 ****** 
2023-07-10 16:05:45,293 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.028)       0:06:53.688 ****** 
2023-07-10 16:05:45,324 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.030)       0:06:53.719 ****** 
2023-07-10 16:05:45,355 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.031)       0:06:53.750 ****** 
2023-07-10 16:05:45,387 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.031)       0:06:53.782 ****** 
2023-07-10 16:05:45,415 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.027)       0:06:53.810 ****** 
2023-07-10 16:05:45,448 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.032)       0:06:53.843 ****** 
2023-07-10 16:05:45,481 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.032)       0:06:53.876 ****** 
2023-07-10 16:05:45,513 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.032)       0:06:53.908 ****** 
2023-07-10 16:05:45,543 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.030)       0:06:53.938 ****** 
2023-07-10 16:05:45,577 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.034)       0:06:53.972 ****** 
2023-07-10 16:05:45,609 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.031)       0:06:54.004 ****** 
2023-07-10 16:05:45,638 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.029)       0:06:54.033 ****** 
2023-07-10 16:05:45,678 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.040)       0:06:54.074 ****** 
2023-07-10 16:05:45,720 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.041)       0:06:54.115 ****** 
2023-07-10 16:05:45,750 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.029)       0:06:54.145 ****** 
2023-07-10 16:05:45,779 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.029)       0:06:54.174 ****** 
2023-07-10 16:05:45,854 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.074)       0:06:54.249 ****** 
2023-07-10 16:05:45,890 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.035)       0:06:54.285 ****** 
2023-07-10 16:05:45,939 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.048)       0:06:54.334 ****** 
2023-07-10 16:05:45,986 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:45 +0300 (0:00:00.046)       0:06:54.381 ****** 
2023-07-10 16:05:46,018 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.032)       0:06:54.413 ****** 
2023-07-10 16:05:46,100 p=24624 u=kubernetmachine n=ansible | PLAY [Apply resolv.conf changes now that cluster DNS is up] **********************************************************************************************************************************
2023-07-10 16:05:46,224 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.206)       0:06:54.619 ****** 
2023-07-10 16:05:46,267 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.042)       0:06:54.662 ****** 
2023-07-10 16:05:46,312 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.045)       0:06:54.707 ****** 
2023-07-10 16:05:46,353 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.040)       0:06:54.748 ****** 
2023-07-10 16:05:46,394 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.041)       0:06:54.789 ****** 
2023-07-10 16:05:46,438 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.043)       0:06:54.833 ****** 
2023-07-10 16:05:46,481 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.042)       0:06:54.876 ****** 
2023-07-10 16:05:46,528 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.047)       0:06:54.923 ****** 
2023-07-10 16:05:46,569 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.040)       0:06:54.964 ****** 
2023-07-10 16:05:46,609 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:46 +0300 (0:00:00.040)       0:06:55.004 ****** 
2023-07-10 16:05:48,321 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:01.711)       0:06:56.716 ****** 
2023-07-10 16:05:48,365 p=24624 u=kubernetmachine n=ansible | TASK [kubespray-defaults : Configure defaults] ***********************************************************************************************************************************************
2023-07-10 16:05:48,365 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}
2023-07-10 16:05:48,412 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.090)       0:06:56.807 ****** 
2023-07-10 16:05:48,460 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.047)       0:06:56.855 ****** 
2023-07-10 16:05:48,504 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.043)       0:06:56.899 ****** 
2023-07-10 16:05:48,543 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.039)       0:06:56.938 ****** 
2023-07-10 16:05:48,582 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.039)       0:06:56.977 ****** 
2023-07-10 16:05:48,623 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.040)       0:06:57.018 ****** 
2023-07-10 16:05:48,663 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.039)       0:06:57.058 ****** 
2023-07-10 16:05:48,855 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User Group] ****************************************************************************************************************************************************
2023-07-10 16:05:48,855 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "gid": 999, "name": "kube-cert", "state": "present", "system": true}
2023-07-10 16:05:48,864 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:48 +0300 (0:00:00.201)       0:06:57.259 ****** 
2023-07-10 16:05:49,143 p=24624 u=kubernetmachine n=ansible | TASK [adduser : User | Create User] **********************************************************************************************************************************************************
2023-07-10 16:05:49,144 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"append": false, "changed": false, "comment": "Kubernetes user", "group": 999, "home": "/home/kube", "move_home": false, "name": "kube", "shell": "/sbin/nologin", "state": "present", "uid": 998}
2023-07-10 16:05:49,160 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.296)       0:06:57.555 ****** 
2023-07-10 16:05:49,202 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.041)       0:06:57.597 ****** 
2023-07-10 16:05:49,233 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.030)       0:06:57.628 ****** 
2023-07-10 16:05:49,263 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.030)       0:06:57.658 ****** 
2023-07-10 16:05:49,297 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.033)       0:06:57.692 ****** 
2023-07-10 16:05:49,329 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.032)       0:06:57.724 ****** 
2023-07-10 16:05:49,364 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.035)       0:06:57.759 ****** 
2023-07-10 16:05:49,398 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.033)       0:06:57.793 ****** 
2023-07-10 16:05:49,588 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if booted with ostree] ***********************************************************************************************************************************
2023-07-10 16:05:49,589 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 16:05:49,598 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.199)       0:06:57.993 ****** 
2023-07-10 16:05:49,790 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 16:05:49,791 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"backup": "", "changed": false, "msg": "line added"}
2023-07-10 16:05:49,799 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.201)       0:06:58.194 ****** 
2023-07-10 16:05:49,847 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set is_fedora_coreos] ******************************************************************************************************************************************
2023-07-10 16:05:49,847 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"is_fedora_coreos": false}, "changed": false}
2023-07-10 16:05:49,856 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:49 +0300 (0:00:00.056)       0:06:58.251 ****** 
2023-07-10 16:05:50,033 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check resolvconf] **********************************************************************************************************************************************
2023-07-10 16:05:50,033 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["which", "resolvconf"], "delta": "0:00:00.002247", "end": "2023-07-10 13:05:50.024272", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2023-07-10 13:05:50.022025", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:05:50,042 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.185)       0:06:58.437 ****** 
2023-07-10 16:05:50,228 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check existence of /etc/resolvconf/resolv.conf.d] **************************************************************************************************************
2023-07-10 16:05:50,229 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"exists": false}}
2023-07-10 16:05:50,237 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.195)       0:06:58.632 ****** 
2023-07-10 16:05:50,419 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check status of /etc/resolv.conf] ******************************************************************************************************************************
2023-07-10 16:05:50,419 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "failed_when_result": false, "stat": {"atime": 1688975455.956, "block_size": 4096, "blocks": 0, "ctime": 1688975247.0605757, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 131079, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": true, "isreg": false, "issock": false, "isuid": false, "lnk_source": "/run/systemd/resolve/stub-resolv.conf", "lnk_target": "../run/systemd/resolve/stub-resolv.conf", "mode": "0777", "mtime": 1676654584.0, "nlink": 1, "path": "/etc/resolv.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 39, "uid": 0, "wgrp": true, "woth": true, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 16:05:50,429 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.191)       0:06:58.824 ****** 
2023-07-10 16:05:50,608 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get content of /etc/resolv.conf] *******************************************************************************************************************************
2023-07-10 16:05:50,609 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "IyBUaGlzIGlzIC9ydW4vc3lzdGVtZC9yZXNvbHZlL3N0dWItcmVzb2x2LmNvbmYgbWFuYWdlZCBieSBtYW46c3lzdGVtZC1yZXNvbHZlZCg4KS4KIyBEbyBub3QgZWRpdC4KIwojIFRoaXMgZmlsZSBtaWdodCBiZSBzeW1saW5rZWQgYXMgL2V0Yy9yZXNvbHYuY29uZi4gSWYgeW91J3JlIGxvb2tpbmcgYXQKIyAvZXRjL3Jlc29sdi5jb25mIGFuZCBzZWVpbmcgdGhpcyB0ZXh0LCB5b3UgaGF2ZSBmb2xsb3dlZCB0aGUgc3ltbGluay4KIwojIFRoaXMgaXMgYSBkeW5hbWljIHJlc29sdi5jb25mIGZpbGUgZm9yIGNvbm5lY3RpbmcgbG9jYWwgY2xpZW50cyB0byB0aGUKIyBpbnRlcm5hbCBETlMgc3R1YiByZXNvbHZlciBvZiBzeXN0ZW1kLXJlc29sdmVkLiBUaGlzIGZpbGUgbGlzdHMgYWxsCiMgY29uZmlndXJlZCBzZWFyY2ggZG9tYWlucy4KIwojIFJ1biAicmVzb2x2ZWN0bCBzdGF0dXMiIHRvIHNlZSBkZXRhaWxzIGFib3V0IHRoZSB1cGxpbmsgRE5TIHNlcnZlcnMKIyBjdXJyZW50bHkgaW4gdXNlLgojCiMgVGhpcmQgcGFydHkgcHJvZ3JhbXMgc2hvdWxkIHR5cGljYWxseSBub3QgYWNjZXNzIHRoaXMgZmlsZSBkaXJlY3RseSwgYnV0IG9ubHkKIyB0aHJvdWdoIHRoZSBzeW1saW5rIGF0IC9ldGMvcmVzb2x2LmNvbmYuIFRvIG1hbmFnZSBtYW46cmVzb2x2LmNvbmYoNSkgaW4gYQojIGRpZmZlcmVudCB3YXksIHJlcGxhY2UgdGhpcyBzeW1saW5rIGJ5IGEgc3RhdGljIGZpbGUgb3IgYSBkaWZmZXJlbnQgc3ltbGluay4KIwojIFNlZSBtYW46c3lzdGVtZC1yZXNvbHZlZC5zZXJ2aWNlKDgpIGZvciBkZXRhaWxzIGFib3V0IHRoZSBzdXBwb3J0ZWQgbW9kZXMgb2YKIyBvcGVyYXRpb24gZm9yIC9ldGMvcmVzb2x2LmNvbmYuCgpuYW1lc2VydmVyIDEyNy4wLjAuNTMKb3B0aW9ucyBlZG5zMCB0cnVzdC1hZApzZWFyY2ggLgo=", "encoding": "base64", "source": "/etc/resolv.conf"}
2023-07-10 16:05:50,617 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.188)       0:06:59.013 ****** 
2023-07-10 16:05:50,708 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : get currently configured nameservers] **************************************************************************************************************************
2023-07-10 16:05:50,709 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"configured_nameservers": ["127.0.0.53"]}, "changed": false}
2023-07-10 16:05:50,719 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.101)       0:06:59.114 ****** 
2023-07-10 16:05:50,799 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Stop if /etc/resolv.conf not configured nameservers] ***********************************************************************************************************
2023-07-10 16:05:50,800 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:05:50,808 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.089)       0:06:59.204 ****** 
2023-07-10 16:05:50,992 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] *************************************************************************************************************
2023-07-10 16:05:50,993 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "--quiet", "NetworkManager.service"], "delta": "0:00:00.004217", "end": "2023-07-10 13:05:50.977867", "failed_when_result": false, "msg": "non-zero return code", "rc": 3, "start": "2023-07-10 13:05:50.973650", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2023-07-10 16:05:51,003 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:50 +0300 (0:00:00.193)       0:06:59.398 ****** 
2023-07-10 16:05:51,181 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check systemd-resolved] ****************************************************************************************************************************************
2023-07-10 16:05:51,181 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["systemctl", "is-active", "systemd-resolved"], "delta": "0:00:00.003936", "end": "2023-07-10 13:05:51.172018", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 13:05:51.168082", "stderr": "", "stderr_lines": [], "stdout": "active", "stdout_lines": ["active"]}
2023-07-10 16:05:51,190 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.187)       0:06:59.585 ****** 
2023-07-10 16:05:51,286 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set default dns if remove_default_searchdomains is false] ******************************************************************************************************
2023-07-10 16:05:51,287 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"default_searchdomains": ["default.svc.linuxtechi.local", "svc.linuxtechi.local"]}, "changed": false}
2023-07-10 16:05:51,296 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.105)       0:06:59.691 ****** 
2023-07-10 16:05:51,371 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : set dns facts] *************************************************************************************************************************************************
2023-07-10 16:05:51,371 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"bogus_domains": "linuxtechi.local.default.svc.linuxtechi.local./default.svc.linuxtechi.local.default.svc.linuxtechi.local./com.default.svc.linuxtechi.local./linuxtechi.local.svc.linuxtechi.local./svc.linuxtechi.local.svc.linuxtechi.local./com.svc.linuxtechi.local./", "cloud_resolver": [], "resolvconf": false}, "changed": false}
2023-07-10 16:05:51,380 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.084)       0:06:59.775 ****** 
2023-07-10 16:05:51,554 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if kubelet is configured] ********************************************************************************************************************************
2023-07-10 16:05:51,554 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991217.020318, "block_size": 4096, "blocks": 8, "ctime": 1688991215.0763168, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 286894, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1688991214.9523168, "nlink": 1, "path": "/etc/kubernetes/kubelet.env", "pw_name": "root", "readable": true, "rgrp": true, "roth": false, "rusr": true, "size": 521, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 16:05:51,562 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.182)       0:06:59.958 ****** 
2023-07-10 16:05:51,605 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if early DNS configuration stage] ************************************************************************************************************************
2023-07-10 16:05:51,606 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dns_early": false}, "changed": false}
2023-07-10 16:05:51,615 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.052)       0:07:00.010 ****** 
2023-07-10 16:05:51,663 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target resolv.conf files] **************************************************************************************************************************************
2023-07-10 16:05:51,664 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"base": "", "head": "", "resolvconffile": "/etc/resolv.conf"}, "changed": false}
2023-07-10 16:05:51,673 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.057)       0:07:00.068 ****** 
2023-07-10 16:05:51,705 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.032)       0:07:00.100 ****** 
2023-07-10 16:05:51,885 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhclient.conf exists] ****************************************************************************************************************************
2023-07-10 16:05:51,886 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"exists": false}}
2023-07-10 16:05:51,896 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.190)       0:07:00.291 ****** 
2023-07-10 16:05:51,997 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:51 +0300 (0:00:00.100)       0:07:00.392 ****** 
2023-07-10 16:05:52,172 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check if /etc/dhcp/dhclient.conf exists] ***********************************************************************************************************************
2023-07-10 16:05:52,172 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688993963.3806772, "block_size": 4096, "blocks": 8, "ctime": 1688991363.6163988, "dev": 64768, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 262569, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1688991363.6163988, "nlink": 1, "path": "/etc/dhcp/dhclient.conf", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1948, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}
2023-07-10 16:05:52,181 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.183)       0:07:00.576 ****** 
2023-07-10 16:05:52,224 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient conf file for /etc/dhcp/dhclient.conf] *********************************************************************************************************
2023-07-10 16:05:52,225 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclientconffile": "/etc/dhcp/dhclient.conf"}, "changed": false}
2023-07-10 16:05:52,237 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.056)       0:07:00.632 ****** 
2023-07-10 16:05:52,269 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.032)       0:07:00.664 ****** 
2023-07-10 16:05:52,315 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : target dhclient hook file for Debian family] *******************************************************************************************************************
2023-07-10 16:05:52,315 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"dhclienthookfile": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate"}, "changed": false}
2023-07-10 16:05:52,324 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.055)       0:07:00.719 ****** 
2023-07-10 16:05:52,421 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate search domains to resolvconf] *************************************************************************************************************************
2023-07-10 16:05:52,422 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"domainentry": "domain linuxtechi.local", "searchentries": "search default.svc.linuxtechi.local svc.linuxtechi.local", "supersede_domain": "supersede domain-name \"linuxtechi.local\";", "supersede_search": "supersede domain-search \"default.svc.linuxtechi.local\", \"svc.linuxtechi.local\";"}, "changed": false}
2023-07-10 16:05:52,432 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.107)       0:07:00.827 ****** 
2023-07-10 16:05:52,527 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : pick coredns cluster IP or default resolver] *******************************************************************************************************************
2023-07-10 16:05:52,527 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"coredns_server": ["10.233.0.3"]}, "changed": false}
2023-07-10 16:05:52,536 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.104)       0:07:00.931 ****** 
2023-07-10 16:05:52,680 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : generate nameservers for resolvconf, including cluster DNS] ****************************************************************************************************
2023-07-10 16:05:52,681 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"nameserverentries": "169.254.25.10,127.0.0.53", "supersede_nameserver": "supersede domain-name-servers 169.254.25.10;"}, "changed": false}
2023-07-10 16:05:52,694 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.158)       0:07:01.090 ****** 
2023-07-10 16:05:52,731 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.036)       0:07:01.126 ****** 
2023-07-10 16:05:52,837 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : gather os specific variables] **********************************************************************************************************************************
2023-07-10 16:05:52,837 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml) => {"ansible_facts": {"required_pkgs": ["python3-apt", "apt-transport-https", "software-properties-common", "conntrack", "apparmor", "libseccomp2"]}, "ansible_included_var_files": ["/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/ubuntu.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/kubernetmachine/kubespray/roles/kubernetes/preinstall/vars/../vars/ubuntu.yml"}
2023-07-10 16:05:52,848 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.117)       0:07:01.243 ****** 
2023-07-10 16:05:52,884 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:52 +0300 (0:00:00.035)       0:07:01.279 ****** 
2023-07-10 16:05:53,062 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : check /usr readonly] *******************************************************************************************************************************************
2023-07-10 16:05:53,063 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688975492.532943, "block_size": 4096, "blocks": 8, "ctime": 1688974668.1671398, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 524292, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mode": "0755", "mtime": 1676654380.0, "nlink": 14, "path": "/usr", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 16:05:53,073 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.189)       0:07:01.468 ****** 
2023-07-10 16:05:53,105 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.500 ****** 
2023-07-10 16:05:53,149 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.043)       0:07:01.544 ****** 
2023-07-10 16:05:53,180 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.576 ****** 
2023-07-10 16:05:53,213 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:01.608 ****** 
2023-07-10 16:05:53,245 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.640 ****** 
2023-07-10 16:05:53,277 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:01.672 ****** 
2023-07-10 16:05:53,309 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.704 ****** 
2023-07-10 16:05:53,371 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.061)       0:07:01.766 ****** 
2023-07-10 16:05:53,402 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.797 ****** 
2023-07-10 16:05:53,435 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:01.830 ****** 
2023-07-10 16:05:53,467 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:01.862 ****** 
2023-07-10 16:05:53,501 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.033)       0:07:01.896 ****** 
2023-07-10 16:05:53,532 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.927 ****** 
2023-07-10 16:05:53,564 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:01.959 ****** 
2023-07-10 16:05:53,595 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.030)       0:07:01.990 ****** 
2023-07-10 16:05:53,627 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:02.022 ****** 
2023-07-10 16:05:53,658 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:02.054 ****** 
2023-07-10 16:05:53,695 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.036)       0:07:02.090 ****** 
2023-07-10 16:05:53,727 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:02.122 ****** 
2023-07-10 16:05:53,759 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:02.154 ****** 
2023-07-10 16:05:53,793 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.033)       0:07:02.188 ****** 
2023-07-10 16:05:53,824 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:02.219 ****** 
2023-07-10 16:05:53,859 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.034)       0:07:02.254 ****** 
2023-07-10 16:05:53,896 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.036)       0:07:02.291 ****** 
2023-07-10 16:05:53,929 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.032)       0:07:02.324 ****** 
2023-07-10 16:05:53,959 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.030)       0:07:02.354 ****** 
2023-07-10 16:05:53,991 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:53 +0300 (0:00:00.031)       0:07:02.386 ****** 
2023-07-10 16:05:54,021 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.030)       0:07:02.417 ****** 
2023-07-10 16:05:54,053 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.031)       0:07:02.448 ****** 
2023-07-10 16:05:54,085 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.032)       0:07:02.481 ****** 
2023-07-10 16:05:54,117 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.031)       0:07:02.512 ****** 
2023-07-10 16:05:54,150 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.032)       0:07:02.545 ****** 
2023-07-10 16:05:54,182 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.031)       0:07:02.577 ****** 
2023-07-10 16:05:54,214 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.031)       0:07:02.609 ****** 
2023-07-10 16:05:54,245 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.031)       0:07:02.640 ****** 
2023-07-10 16:05:54,277 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.031)       0:07:02.672 ****** 
2023-07-10 16:05:54,307 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.030)       0:07:02.702 ****** 
2023-07-10 16:05:54,337 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.029)       0:07:02.732 ****** 
2023-07-10 16:05:54,368 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.030)       0:07:02.763 ****** 
2023-07-10 16:05:54,401 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.032)       0:07:02.796 ****** 
2023-07-10 16:05:54,433 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.032)       0:07:02.828 ****** 
2023-07-10 16:05:54,493 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.060)       0:07:02.889 ****** 
2023-07-10 16:05:54,537 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.043)       0:07:02.932 ****** 
2023-07-10 16:05:54,569 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.032)       0:07:02.964 ****** 
2023-07-10 16:05:54,600 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.030)       0:07:02.995 ****** 
2023-07-10 16:05:54,642 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.042)       0:07:03.038 ****** 
2023-07-10 16:05:54,678 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.035)       0:07:03.073 ****** 
2023-07-10 16:05:54,733 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.055)       0:07:03.128 ****** 
2023-07-10 16:05:54,767 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.033)       0:07:03.162 ****** 
2023-07-10 16:05:54,800 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.033)       0:07:03.196 ****** 
2023-07-10 16:05:54,880 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.079)       0:07:03.275 ****** 
2023-07-10 16:05:54,959 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.079)       0:07:03.354 ****** 
2023-07-10 16:05:54,992 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:54 +0300 (0:00:00.032)       0:07:03.387 ****** 
2023-07-10 16:05:55,025 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.032)       0:07:03.420 ****** 
2023-07-10 16:05:55,508 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Write resolved.conf] *******************************************************************************************************************************************
2023-07-10 16:05:55,509 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "9a78babd29d4e2749f09460b635e9de854bfa856", "dest": "/etc/systemd/resolved.conf", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/systemd/resolved.conf", "size": 126, "state": "file", "uid": 0}
2023-07-10 16:05:55,517 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.491)       0:07:03.912 ****** 
2023-07-10 16:05:55,548 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.030)       0:07:03.943 ****** 
2023-07-10 16:05:55,579 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.031)       0:07:03.974 ****** 
2023-07-10 16:05:55,610 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.030)       0:07:04.005 ****** 
2023-07-10 16:05:55,642 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.031)       0:07:04.037 ****** 
2023-07-10 16:05:55,675 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.032)       0:07:04.070 ****** 
2023-07-10 16:05:55,712 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.036)       0:07:04.107 ****** 
2023-07-10 16:05:55,747 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.035)       0:07:04.142 ****** 
2023-07-10 16:05:55,779 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.032)       0:07:04.174 ****** 
2023-07-10 16:05:55,811 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.032)       0:07:04.206 ****** 
2023-07-10 16:05:55,844 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.032)       0:07:04.239 ****** 
2023-07-10 16:05:55,877 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.033)       0:07:04.272 ****** 
2023-07-10 16:05:55,912 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.035)       0:07:04.307 ****** 
2023-07-10 16:05:55,945 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.032)       0:07:04.340 ****** 
2023-07-10 16:05:55,975 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:55 +0300 (0:00:00.030)       0:07:04.371 ****** 
2023-07-10 16:05:56,008 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.403 ****** 
2023-07-10 16:05:56,040 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.435 ****** 
2023-07-10 16:05:56,070 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.030)       0:07:04.465 ****** 
2023-07-10 16:05:56,106 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.036)       0:07:04.501 ****** 
2023-07-10 16:05:56,139 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.534 ****** 
2023-07-10 16:05:56,170 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.031)       0:07:04.565 ****** 
2023-07-10 16:05:56,214 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.043)       0:07:04.609 ****** 
2023-07-10 16:05:56,246 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.641 ****** 
2023-07-10 16:05:56,277 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.031)       0:07:04.673 ****** 
2023-07-10 16:05:56,311 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.033)       0:07:04.706 ****** 
2023-07-10 16:05:56,343 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.738 ****** 
2023-07-10 16:05:56,375 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.770 ****** 
2023-07-10 16:05:56,406 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.030)       0:07:04.801 ****** 
2023-07-10 16:05:56,438 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.833 ****** 
2023-07-10 16:05:56,506 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.067)       0:07:04.901 ****** 
2023-07-10 16:05:56,538 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:04.933 ****** 
2023-07-10 16:05:56,565 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.026)       0:07:04.960 ****** 
2023-07-10 16:05:56,596 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.031)       0:07:04.991 ****** 
2023-07-10 16:05:56,628 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.031)       0:07:05.023 ****** 
2023-07-10 16:05:56,659 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.031)       0:07:05.055 ****** 
2023-07-10 16:05:56,692 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:05.088 ****** 
2023-07-10 16:05:56,727 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.034)       0:07:05.122 ****** 
2023-07-10 16:05:56,758 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.031)       0:07:05.153 ****** 
2023-07-10 16:05:56,792 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.033)       0:07:05.187 ****** 
2023-07-10 16:05:56,824 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.032)       0:07:05.220 ****** 
2023-07-10 16:05:56,858 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.033)       0:07:05.253 ****** 
2023-07-10 16:05:56,893 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.035)       0:07:05.288 ****** 
2023-07-10 16:05:56,991 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | create list from inventory] ****************************************************************************************************************************
2023-07-10 16:05:56,991 p=24624 u=kubernetmachine n=ansible | ok: [node1 -> localhost] => {"ansible_facts": {"etc_hosts_inventory_block": "192.168.122.29 node1.linuxtechi.local node1 \n"}, "changed": false}
2023-07-10 16:05:57,000 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:56 +0300 (0:00:00.106)       0:07:05.395 ****** 
2023-07-10 16:05:57,184 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | populate inventory into hosts file] ********************************************************************************************************************
2023-07-10 16:05:57,184 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 16:05:57,194 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:57 +0300 (0:00:00.193)       0:07:05.589 ****** 
2023-07-10 16:05:57,232 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:57 +0300 (0:00:00.038)       0:07:05.627 ****** 
2023-07-10 16:05:57,422 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Retrieve hosts file content] ***************************************************************************************************************************
2023-07-10 16:05:57,423 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "content": "MTI3LjAuMC4xIGxvY2FsaG9zdCBsb2NhbGhvc3QubG9jYWxkb21haW4KMTI3LjAuMS4xIGt1YmVybmV0bWFjaGluZXR3bwoKIyBUaGUgZm9sbG93aW5nIGxpbmVzIGFyZSBkZXNpcmFibGUgZm9yIElQdjYgY2FwYWJsZSBob3N0cwo6OjEgaXA2LWxvY2FsaG9zdCBpcDYtbG9vcGJhY2sgbG9jYWxob3N0NiBsb2NhbGhvc3Q2LmxvY2FsZG9tYWluCmZlMDA6OjAgaXA2LWxvY2FsbmV0CmZmMDA6OjAgaXA2LW1jYXN0cHJlZml4CmZmMDI6OjEgaXA2LWFsbG5vZGVzCmZmMDI6OjIgaXA2LWFsbHJvdXRlcnMKIyBBbnNpYmxlIGludmVudG9yeSBob3N0cyBCRUdJTgoxOTIuMTY4LjEyMi4yOSBub2RlMS5saW51eHRlY2hpLmxvY2FsIG5vZGUxIAojIEFuc2libGUgaW52ZW50b3J5IGhvc3RzIEVORAo=", "encoding": "base64", "source": "/etc/hosts"}
2023-07-10 16:05:57,432 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:57 +0300 (0:00:00.200)       0:07:05.827 ****** 
2023-07-10 16:05:57,515 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Extract existing entries for localhost from hosts file] ************************************************************************************************
2023-07-10 16:05:57,515 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=127.0.0.1 localhost localhost.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "127.0.0.1 localhost localhost.localdomain"}
2023-07-10 16:05:57,604 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item=::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain) => {"ansible_facts": {"etc_hosts_localhosts_dict": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": "::1 ip6-localhost ip6-loopback localhost6 localhost6.localdomain"}
2023-07-10 16:05:57,708 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:57 +0300 (0:00:00.275)       0:07:06.103 ****** 
2023-07-10 16:05:57,782 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update target hosts file entries dict with required entries] *******************************************************************************************
2023-07-10 16:05:57,783 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': {'expected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "127.0.0.1", "value": {"expected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 16:05:57,830 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': {'expected': ['localhost6', 'localhost6.localdomain'], 'unexpected': ['localhost', 'localhost.localdomain']}}) => {"ansible_facts": {"etc_hosts_localhosts_dict_target": {"127.0.0.1": ["localhost", "localhost.localdomain"], "::1": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}}, "ansible_loop_var": "item", "changed": false, "item": {"key": "::1", "value": {"expected": ["localhost6", "localhost6.localdomain"], "unexpected": ["localhost", "localhost.localdomain"]}}}
2023-07-10 16:05:57,846 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:57 +0300 (0:00:00.138)       0:07:06.241 ****** 
2023-07-10 16:05:58,083 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Hosts | Update (if necessary) hosts file] **********************************************************************************************************************
2023-07-10 16:05:58,084 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '127.0.0.1', 'value': ['localhost', 'localhost.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "127.0.0.1", "value": ["localhost", "localhost.localdomain"]}, "msg": ""}
2023-07-10 16:05:58,253 p=24624 u=kubernetmachine n=ansible | ok: [node1] => (item={'key': '::1', 'value': ['ip6-localhost', 'ip6-loopback', 'localhost6', 'localhost6.localdomain']}) => {"ansible_loop_var": "item", "backup": "", "changed": false, "item": {"key": "::1", "value": ["ip6-localhost", "ip6-loopback", "localhost6", "localhost6.localdomain"]}, "msg": ""}
2023-07-10 16:05:58,263 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.417)       0:07:06.659 ****** 
2023-07-10 16:05:58,295 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.031)       0:07:06.690 ****** 
2023-07-10 16:05:58,478 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] *****************************************************************************************************
2023-07-10 16:05:58,479 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "msg": ""}
2023-07-10 16:05:58,488 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.192)       0:07:06.883 ****** 
2023-07-10 16:05:58,858 p=24624 u=kubernetmachine n=ansible | TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] *************************************************************************************************************
2023-07-10 16:05:58,858 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "checksum": "42487a7578c70a6e24da7b9a3ead98a3374e71ad", "dest": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/dhcp/dhclient-exit-hooks.d/zdnsupdate", "size": 456, "state": "file", "uid": 0}
2023-07-10 16:05:58,867 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.379)       0:07:07.262 ****** 
2023-07-10 16:05:58,905 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.038)       0:07:07.300 ****** 
2023-07-10 16:05:58,939 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.033)       0:07:07.334 ****** 
2023-07-10 16:05:58,974 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.034)       0:07:07.369 ****** 
2023-07-10 16:05:58,995 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:58 +0300 (0:00:00.021)       0:07:07.390 ****** 
2023-07-10 16:05:59,028 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.033)       0:07:07.423 ****** 
2023-07-10 16:05:59,059 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.031)       0:07:07.454 ****** 
2023-07-10 16:05:59,092 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.033)       0:07:07.487 ****** 
2023-07-10 16:05:59,124 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.032)       0:07:07.520 ****** 
2023-07-10 16:05:59,157 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.032)       0:07:07.552 ****** 
2023-07-10 16:05:59,191 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.034)       0:07:07.586 ****** 
2023-07-10 16:05:59,225 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.034)       0:07:07.621 ****** 
2023-07-10 16:05:59,258 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.032)       0:07:07.653 ****** 
2023-07-10 16:05:59,279 p=24624 u=kubernetmachine n=ansible | TASK [Run calico checks] *********************************************************************************************************************************************************************
2023-07-10 16:05:59,444 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.186)       0:07:07.839 ****** 
2023-07-10 16:05:59,492 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ****************************************************************************************************
2023-07-10 16:05:59,493 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:05:59,510 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.065)       0:07:07.905 ****** 
2023-07-10 16:05:59,568 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***********************************************************************************************
2023-07-10 16:05:59,569 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:05:59,586 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.076)       0:07:07.981 ****** 
2023-07-10 16:05:59,638 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] **************************************************************************
2023-07-10 16:05:59,639 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:05:59,656 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.069)       0:07:08.051 ****** 
2023-07-10 16:05:59,771 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.114)       0:07:08.166 ****** 
2023-07-10 16:05:59,818 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Stop if supported Calico versions] *****************************************************************************************************************************
2023-07-10 16:05:59,819 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:05:59,837 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:05:59 +0300 (0:00:00.065)       0:07:08.232 ****** 
2023-07-10 16:06:00,028 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calicoctl.sh exists] **********************************************************************************************************************************
2023-07-10 16:06:00,029 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "stat": {"atime": 1688991265.0523465, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "80849706cc7fd83e5d38364f1f00cd0ce675dab4", "ctime": 1688991264.6803463, "dev": 64768, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 287028, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/x-shellscript", "mode": "0755", "mtime": 1688991264.468346, "nlink": 1, "path": "/usr/local/bin/calicoctl.sh", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 135, "uid": 0, "version": "2961686142", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}
2023-07-10 16:06:00,044 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.207)       0:07:08.439 ****** 
2023-07-10 16:06:00,257 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if calico ready] *****************************************************************************************************************************************
2023-07-10 16:06:00,258 p=24624 u=kubernetmachine n=ansible | changed: [node1] => {"attempts": 1, "changed": true, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ClusterInformation", "default"], "delta": "0:00:00.038372", "end": "2023-07-10 13:06:00.246258", "msg": "", "rc": 0, "start": "2023-07-10 13:06:00.207886", "stderr": "", "stderr_lines": [], "stdout": "NAME      CLUSTERGUID                        CLUSTERTYPE                 CALICOVERSION   DATASTOREREADY   \ndefault   cd4a57747119425babcb1a8c3bc95303   kubespray,kubeadm,kdd,k8s   v3.25.1         true             ", "stdout_lines": ["NAME      CLUSTERGUID                        CLUSTERTYPE                 CALICOVERSION   DATASTOREREADY   ", "default   cd4a57747119425babcb1a8c3bc95303   kubespray,kubeadm,kdd,k8s   v3.25.1         true             "]}
2023-07-10 16:06:00,273 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.228)       0:07:08.668 ****** 
2023-07-10 16:06:00,497 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get current calico version] ************************************************************************************************************************************
2023-07-10 16:06:00,497 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": "set -o pipefail && /usr/local/bin/calicoctl.sh version | grep 'Client Version:' | awk '{ print $3}'", "delta": "0:00:00.037547", "end": "2023-07-10 13:06:00.486187", "msg": "", "rc": 0, "start": "2023-07-10 13:06:00.448640", "stderr": "", "stderr_lines": [], "stdout": "v3.25.1", "stdout_lines": ["v3.25.1"]}
2023-07-10 16:06:00,513 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.240)       0:07:08.908 ****** 
2023-07-10 16:06:00,560 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Assert that current calico version is enough for upgrade] ******************************************************************************************************
2023-07-10 16:06:00,561 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:06:00,578 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.064)       0:07:08.973 ****** 
2023-07-10 16:06:00,625 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.047)       0:07:09.021 ****** 
2023-07-10 16:06:00,665 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.039)       0:07:09.060 ****** 
2023-07-10 16:06:00,714 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check vars defined correctly] **********************************************************************************************************************************
2023-07-10 16:06:00,714 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:06:00,731 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.065)       0:07:09.126 ****** 
2023-07-10 16:06:00,774 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check calico network backend defined correctly] ****************************************************************************************************************
2023-07-10 16:06:00,775 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:06:00,790 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.059)       0:07:09.185 ****** 
2023-07-10 16:06:00,836 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *******************************************************************************************************************
2023-07-10 16:06:00,836 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:06:00,854 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.063)       0:07:09.249 ****** 
2023-07-10 16:06:00,893 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.039)       0:07:09.289 ****** 
2023-07-10 16:06:00,939 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***********************************************************************************************************
2023-07-10 16:06:00,940 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:06:00,957 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:00 +0300 (0:00:00.063)       0:07:09.352 ****** 
2023-07-10 16:06:01,179 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Get Calico default-pool configuration] *************************************************************************************************************************
2023-07-10 16:06:01,180 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"changed": false, "cmd": ["/usr/local/bin/calicoctl.sh", "get", "ipPool", "default-pool", "-o", "json"], "delta": "0:00:00.036224", "end": "2023-07-10 13:06:01.169691", "failed_when_result": false, "msg": "", "rc": 0, "start": "2023-07-10 13:06:01.133467", "stderr": "", "stderr_lines": [], "stdout": "{\n  \"kind\": \"IPPool\",\n  \"apiVersion\": \"projectcalico.org/v3\",\n  \"metadata\": {\n    \"name\": \"default-pool\",\n    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",\n    \"resourceVersion\": \"5010\",\n    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"\n  },\n  \"spec\": {\n    \"cidr\": \"10.233.64.0/18\",\n    \"vxlanMode\": \"Always\",\n    \"ipipMode\": \"Never\",\n    \"natOutgoing\": true,\n    \"blockSize\": 26,\n    \"nodeSelector\": \"all()\",\n    \"allowedUses\": [\n      \"Workload\",\n      \"Tunnel\"\n    ]\n  }\n}", "stdout_lines": ["{", "  \"kind\": \"IPPool\",", "  \"apiVersion\": \"projectcalico.org/v3\",", "  \"metadata\": {", "    \"name\": \"default-pool\",", "    \"uid\": \"650dc92c-8e47-48ea-83aa-10436adf420a\",", "    \"resourceVersion\": \"5010\",", "    \"creationTimestamp\": \"2023-07-10T12:14:30Z\"", "  },", "  \"spec\": {", "    \"cidr\": \"10.233.64.0/18\",", "    \"vxlanMode\": \"Always\",", "    \"ipipMode\": \"Never\",", "    \"natOutgoing\": true,", "    \"blockSize\": 26,", "    \"nodeSelector\": \"all()\",", "    \"allowedUses\": [", "      \"Workload\",", "      \"Tunnel\"", "    ]", "  }", "}"]}
2023-07-10 16:06:01,196 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:01 +0300 (0:00:00.238)       0:07:09.591 ****** 
2023-07-10 16:06:01,245 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Set calico_pool_conf] ******************************************************************************************************************************************
2023-07-10 16:06:01,246 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {"ansible_facts": {"calico_pool_conf": {"apiVersion": "projectcalico.org/v3", "kind": "IPPool", "metadata": {"creationTimestamp": "2023-07-10T12:14:30Z", "name": "default-pool", "resourceVersion": "5010", "uid": "650dc92c-8e47-48ea-83aa-10436adf420a"}, "spec": {"allowedUses": ["Workload", "Tunnel"], "blockSize": 26, "cidr": "10.233.64.0/18", "ipipMode": "Never", "natOutgoing": true, "nodeSelector": "all()", "vxlanMode": "Always"}}}, "changed": false}
2023-07-10 16:06:01,266 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:01 +0300 (0:00:00.069)       0:07:09.661 ****** 
2023-07-10 16:06:01,354 p=24624 u=kubernetmachine n=ansible | TASK [network_plugin/calico : Check if inventory match current cluster configuration] ********************************************************************************************************
2023-07-10 16:06:01,355 p=24624 u=kubernetmachine n=ansible | ok: [node1] => {
    "changed": false,
    "msg": "All assertions passed"
}
2023-07-10 16:06:01,372 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:01 +0300 (0:00:00.106)       0:07:09.767 ****** 
2023-07-10 16:06:01,412 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:01 +0300 (0:00:00.040)       0:07:09.807 ****** 
2023-07-10 16:06:01,458 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:01 +0300 (0:00:00.045)       0:07:09.853 ****** 
2023-07-10 16:06:01,542 p=24624 u=kubernetmachine n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2023-07-10 16:06:01,542 p=24624 u=kubernetmachine n=ansible | localhost                  : ok=3    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2023-07-10 16:06:01,543 p=24624 u=kubernetmachine n=ansible | node1                      : ok=810  changed=18   unreachable=0    failed=0    skipped=1329 rescued=0    ignored=1   
2023-07-10 16:06:01,543 p=24624 u=kubernetmachine n=ansible | Pazartesi 10 Temmuz 2023  16:06:01 +0300 (0:00:00.085)       0:07:09.938 ****** 
2023-07-10 16:06:01,543 p=24624 u=kubernetmachine n=ansible | =============================================================================== 
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | download : download_container | Download image if required --------------------------------------------------------------------------------------------------------------------------- 10.67s
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | download : download_file | Download item ---------------------------------------------------------------------------------------------------------------------------------------------- 9.09s
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | container-engine/crictl : download_file | Download item ------------------------------------------------------------------------------------------------------------------------------- 8.86s
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/helm : download_file | Download item ---------------------------------------------------------------------------------------------------------------------------------- 8.12s
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | container-engine/nerdctl : download_file | Download item ------------------------------------------------------------------------------------------------------------------------------ 7.96s
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/helm : extract_file | Unpacking archive ------------------------------------------------------------------------------------------------------------------------------- 7.70s
2023-07-10 16:06:01,548 p=24624 u=kubernetmachine n=ansible | container-engine/containerd : download_file | Download item --------------------------------------------------------------------------------------------------------------------------- 7.53s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | container-engine/runc : download_file | Download item --------------------------------------------------------------------------------------------------------------------------------- 7.08s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | container-engine/nerdctl : extract_file | Unpacking archive --------------------------------------------------------------------------------------------------------------------------- 6.34s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | container-engine/crictl : extract_file | Unpacking archive ---------------------------------------------------------------------------------------------------------------------------- 6.08s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | container-engine/runc : download_file | Validate mirrors ------------------------------------------------------------------------------------------------------------------------------ 5.58s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | container-engine/containerd : download_file | Validate mirrors ------------------------------------------------------------------------------------------------------------------------ 5.02s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/ansible : Kubernetes Apps | Lay Down CoreDNS templates ---------------------------------------------------------------------------------------------------------------- 4.94s
2023-07-10 16:06:01,549 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Apply manifests ----------------------------------------------------------------------------------------- 4.83s
2023-07-10 16:06:01,550 p=24624 u=kubernetmachine n=ansible | container-engine/nerdctl : download_file | Validate mirrors --------------------------------------------------------------------------------------------------------------------------- 4.66s
2023-07-10 16:06:01,550 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/ansible : Kubernetes Apps | Start Resources --------------------------------------------------------------------------------------------------------------------------- 3.97s
2023-07-10 16:06:01,550 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/ingress_controller/ingress_nginx : NGINX Ingress Controller | Create manifests ---------------------------------------------------------------------------------------- 3.92s
2023-07-10 16:06:01,550 p=24624 u=kubernetmachine n=ansible | kubernetes-apps/helm : download_file | Validate mirrors ------------------------------------------------------------------------------------------------------------------------------- 3.77s
2023-07-10 16:06:01,550 p=24624 u=kubernetmachine n=ansible | container-engine/crictl : download_file | Validate mirrors ---------------------------------------------------------------------------------------------------------------------------- 3.76s
2023-07-10 16:06:01,550 p=24624 u=kubernetmachine n=ansible | container-engine/containerd : containerd | Unpack containerd archive ------------------------------------------------------------------------------------------------------------------ 3.72s
